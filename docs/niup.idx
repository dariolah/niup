Open	niup.html#Open,bool,bool	niup: Open(utf8Mode: bool = false; imageLib: bool = false)	
AnimatedLabel_t	niup.html#AnimatedLabel_t	niup: AnimatedLabel_t	
BackgroundBox_t	niup.html#BackgroundBox_t	niup: BackgroundBox_t	
Button_t	niup.html#Button_t	niup: Button_t	
Calendar_t	niup.html#Calendar_t	niup: Calendar_t	
Canvas_t	niup.html#Canvas_t	niup: Canvas_t	
Cbox_t	niup.html#Cbox_t	niup: Cbox_t	
Clipboard_t	niup.html#Clipboard_t	niup: Clipboard_t	
Colorbar_t	niup.html#Colorbar_t	niup: Colorbar_t	
ColorBrowser_t	niup.html#ColorBrowser_t	niup: ColorBrowser_t	
ColorDlg_t	niup.html#ColorDlg_t	niup: ColorDlg_t	
DatePick_t	niup.html#DatePick_t	niup: DatePick_t	
DetachBox_t	niup.html#DetachBox_t	niup: DetachBox_t	
Dial_t	niup.html#Dial_t	niup: Dial_t	
Dialog_t	niup.html#Dialog_t	niup: Dialog_t	
DropButton_t	niup.html#DropButton_t	niup: DropButton_t	
Expander_t	niup.html#Expander_t	niup: Expander_t	
FileDlg_t	niup.html#FileDlg_t	niup: FileDlg_t	
Fill_t	niup.html#Fill_t	niup: Fill_t	
FlatButton_t	niup.html#FlatButton_t	niup: FlatButton_t	
FlatFrame_t	niup.html#FlatFrame_t	niup: FlatFrame_t	
FlatLabel_t	niup.html#FlatLabel_t	niup: FlatLabel_t	
FlatList_t	niup.html#FlatList_t	niup: FlatList_t	
FlatScrollBox_t	niup.html#FlatScrollBox_t	niup: FlatScrollBox_t	
FlatSeparator_t	niup.html#FlatSeparator_t	niup: FlatSeparator_t	
FlatTabs_t	niup.html#FlatTabs_t	niup: FlatTabs_t	
FlatToggle_t	niup.html#FlatToggle_t	niup: FlatToggle_t	
FlatTree_t	niup.html#FlatTree_t	niup: FlatTree_t	
FlatVal_t	niup.html#FlatVal_t	niup: FlatVal_t	
FontDlg_t	niup.html#FontDlg_t	niup: FontDlg_t	
Frame_t	niup.html#Frame_t	niup: Frame_t	
Gauge_t	niup.html#Gauge_t	niup: Gauge_t	
GridBox_t	niup.html#GridBox_t	niup: GridBox_t	
Hbox_t	niup.html#Hbox_t	niup: Hbox_t	
Image_t	niup.html#Image_t	niup: Image_t	
ImageRGB_t	niup.html#ImageRGB_t	niup: ImageRGB_t	
ImageRGBA_t	niup.html#ImageRGBA_t	niup: ImageRGBA_t	
Item_t	niup.html#Item_t	niup: Item_t	
Label_t	niup.html#Label_t	niup: Label_t	
Link_t	niup.html#Link_t	niup: Link_t	
List_t	niup.html#List_t	niup: List_t	
Menu_t	niup.html#Menu_t	niup: Menu_t	
MessageDlg_t	niup.html#MessageDlg_t	niup: MessageDlg_t	
MultiBox_t	niup.html#MultiBox_t	niup: MultiBox_t	
MultiLine_t	niup.html#MultiLine_t	niup: MultiLine_t	
Normalizer_t	niup.html#Normalizer_t	niup: Normalizer_t	
Param_t	niup.html#Param_t	niup: Param_t	
ParamBox_t	niup.html#ParamBox_t	niup: ParamBox_t	
ProgressBar_t	niup.html#ProgressBar_t	niup: ProgressBar_t	
ProgressDlg_t	niup.html#ProgressDlg_t	niup: ProgressDlg_t	
Radio_t	niup.html#Radio_t	niup: Radio_t	
Sbox_t	niup.html#Sbox_t	niup: Sbox_t	
ScrollBox_t	niup.html#ScrollBox_t	niup: ScrollBox_t	
Separator_t	niup.html#Separator_t	niup: Separator_t	
Space_t	niup.html#Space_t	niup: Space_t	
Spin_t	niup.html#Spin_t	niup: Spin_t	
Spinbox_t	niup.html#Spinbox_t	niup: Spinbox_t	
Split_t	niup.html#Split_t	niup: Split_t	
Submenu_t	niup.html#Submenu_t	niup: Submenu_t	
Tabs_t	niup.html#Tabs_t	niup: Tabs_t	
Text_t	niup.html#Text_t	niup: Text_t	
Thread_t	niup.html#Thread_t	niup: Thread_t	
Timer_t	niup.html#Timer_t	niup: Timer_t	
Toggle_t	niup.html#Toggle_t	niup: Toggle_t	
Tree_t	niup.html#Tree_t	niup: Tree_t	
User_t	niup.html#User_t	niup: User_t	
Val_t	niup.html#Val_t	niup: Val_t	
Vbox_t	niup.html#Vbox_t	niup: Vbox_t	
Zbox_t	niup.html#Zbox_t	niup: Zbox_t	
IUPhandle_t	niup.html#IUPhandle_t	niup: IUPhandle_t	
AnimatedLabel	niup.html#AnimatedLabel,IUPhandle_t	niup: AnimatedLabel(animation: IUPhandle_t): AnimatedLabel_t	
active=	niup.html#active=,AnimatedLabel_t,string	niup: active=(ih: AnimatedLabel_t; value: string)	
active	niup.html#active,AnimatedLabel_t,string	niup: active(ih: AnimatedLabel_t; value: string)	
active=	niup.html#active=,AnimatedLabel_t,bool	niup: active=(ih: AnimatedLabel_t; yes: bool)	
active	niup.html#active,AnimatedLabel_t,bool	niup: active(ih: AnimatedLabel_t; yes: bool)	
active	niup.html#active,AnimatedLabel_t	niup: active(ih: AnimatedLabel_t): bool	
alignment=	niup.html#alignment=,AnimatedLabel_t,string	niup: alignment=(ih: AnimatedLabel_t; value: string)	
alignment	niup.html#alignment,AnimatedLabel_t,string	niup: alignment(ih: AnimatedLabel_t; value: string)	
alignment	niup.html#alignment,AnimatedLabel_t	niup: alignment(ih: AnimatedLabel_t): string	
animation=	niup.html#animation=,AnimatedLabel_t,User_t	niup: animation=(ih: AnimatedLabel_t; handle: User_t)	
animation	niup.html#animation,AnimatedLabel_t,User_t	niup: animation(ih: AnimatedLabel_t; handle: User_t)	
animation	niup.html#animation,AnimatedLabel_t	niup: animation(ih: AnimatedLabel_t): string	
animation_handle	niup.html#animation_handle,AnimatedLabel_t	niup: animation_handle(ih: AnimatedLabel_t): string	
bgcolor=	niup.html#bgcolor=,AnimatedLabel_t,string	niup: bgcolor=(ih: AnimatedLabel_t; value: string)	
bgcolor	niup.html#bgcolor,AnimatedLabel_t,string	niup: bgcolor(ih: AnimatedLabel_t; value: string)	
bgcolor=	niup.html#bgcolor=,AnimatedLabel_t,int,int,int,int	niup: bgcolor=(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,AnimatedLabel_t,int,int,int,int	niup: bgcolor(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,AnimatedLabel_t	niup: bgcolor(ih: AnimatedLabel_t): string	
canfocus=	niup.html#canfocus=,AnimatedLabel_t,string	niup: canfocus=(ih: AnimatedLabel_t; value: string)	
canfocus	niup.html#canfocus,AnimatedLabel_t,string	niup: canfocus(ih: AnimatedLabel_t; value: string)	
canfocus=	niup.html#canfocus=,AnimatedLabel_t,bool	niup: canfocus=(ih: AnimatedLabel_t; yes: bool)	
canfocus	niup.html#canfocus,AnimatedLabel_t,bool	niup: canfocus(ih: AnimatedLabel_t; yes: bool)	
canfocus	niup.html#canfocus,AnimatedLabel_t	niup: canfocus(ih: AnimatedLabel_t): bool	
charsize	niup.html#charsize,AnimatedLabel_t	niup: charsize(ih: AnimatedLabel_t): string	
cpadding=	niup.html#cpadding=,AnimatedLabel_t,string	niup: cpadding=(ih: AnimatedLabel_t; value: string)	
cpadding	niup.html#cpadding,AnimatedLabel_t,string	niup: cpadding(ih: AnimatedLabel_t; value: string)	
cpadding=	niup.html#cpadding=,AnimatedLabel_t,int,int	niup: cpadding=(ih: AnimatedLabel_t; width, height: int)	
cpadding	niup.html#cpadding,AnimatedLabel_t,int,int	niup: cpadding(ih: AnimatedLabel_t; width, height: int)	
cpadding	niup.html#cpadding,AnimatedLabel_t	niup: cpadding(ih: AnimatedLabel_t): string	
dragdrop=	niup.html#dragdrop=,AnimatedLabel_t,string	niup: dragdrop=(ih: AnimatedLabel_t; value: string)	
dragdrop	niup.html#dragdrop,AnimatedLabel_t,string	niup: dragdrop(ih: AnimatedLabel_t; value: string)	
dragdrop=	niup.html#dragdrop=,AnimatedLabel_t,bool	niup: dragdrop=(ih: AnimatedLabel_t; yes: bool)	
dragdrop	niup.html#dragdrop,AnimatedLabel_t,bool	niup: dragdrop(ih: AnimatedLabel_t; yes: bool)	
dragdrop	niup.html#dragdrop,AnimatedLabel_t	niup: dragdrop(ih: AnimatedLabel_t): bool	
dragsource=	niup.html#dragsource=,AnimatedLabel_t,string	niup: dragsource=(ih: AnimatedLabel_t; value: string)	
dragsource	niup.html#dragsource,AnimatedLabel_t,string	niup: dragsource(ih: AnimatedLabel_t; value: string)	
dragsource=	niup.html#dragsource=,AnimatedLabel_t,bool	niup: dragsource=(ih: AnimatedLabel_t; yes: bool)	
dragsource	niup.html#dragsource,AnimatedLabel_t,bool	niup: dragsource(ih: AnimatedLabel_t; yes: bool)	
dragsource	niup.html#dragsource,AnimatedLabel_t	niup: dragsource(ih: AnimatedLabel_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,AnimatedLabel_t,string	niup: dragsourcemove=(ih: AnimatedLabel_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,AnimatedLabel_t,string	niup: dragsourcemove(ih: AnimatedLabel_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,AnimatedLabel_t,bool	niup: dragsourcemove=(ih: AnimatedLabel_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,AnimatedLabel_t,bool	niup: dragsourcemove(ih: AnimatedLabel_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,AnimatedLabel_t	niup: dragsourcemove(ih: AnimatedLabel_t): bool	
dragtypes=	niup.html#dragtypes=,AnimatedLabel_t,string	niup: dragtypes=(ih: AnimatedLabel_t; value: string)	
dragtypes	niup.html#dragtypes,AnimatedLabel_t,string	niup: dragtypes(ih: AnimatedLabel_t; value: string)	
dragtypes	niup.html#dragtypes,AnimatedLabel_t	niup: dragtypes(ih: AnimatedLabel_t): string	
dropfilestarget=	niup.html#dropfilestarget=,AnimatedLabel_t,string	niup: dropfilestarget=(ih: AnimatedLabel_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,AnimatedLabel_t,string	niup: dropfilestarget(ih: AnimatedLabel_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,AnimatedLabel_t,bool	niup: dropfilestarget=(ih: AnimatedLabel_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,AnimatedLabel_t,bool	niup: dropfilestarget(ih: AnimatedLabel_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,AnimatedLabel_t	niup: dropfilestarget(ih: AnimatedLabel_t): bool	
droptarget=	niup.html#droptarget=,AnimatedLabel_t,string	niup: droptarget=(ih: AnimatedLabel_t; value: string)	
droptarget	niup.html#droptarget,AnimatedLabel_t,string	niup: droptarget(ih: AnimatedLabel_t; value: string)	
droptarget=	niup.html#droptarget=,AnimatedLabel_t,bool	niup: droptarget=(ih: AnimatedLabel_t; yes: bool)	
droptarget	niup.html#droptarget,AnimatedLabel_t,bool	niup: droptarget(ih: AnimatedLabel_t; yes: bool)	
droptarget	niup.html#droptarget,AnimatedLabel_t	niup: droptarget(ih: AnimatedLabel_t): bool	
droptypes=	niup.html#droptypes=,AnimatedLabel_t,string	niup: droptypes=(ih: AnimatedLabel_t; value: string)	
droptypes	niup.html#droptypes,AnimatedLabel_t,string	niup: droptypes(ih: AnimatedLabel_t; value: string)	
droptypes	niup.html#droptypes,AnimatedLabel_t	niup: droptypes(ih: AnimatedLabel_t): string	
ellipsis=	niup.html#ellipsis=,AnimatedLabel_t,string	niup: ellipsis=(ih: AnimatedLabel_t; value: string)	
ellipsis	niup.html#ellipsis,AnimatedLabel_t,string	niup: ellipsis(ih: AnimatedLabel_t; value: string)	
ellipsis=	niup.html#ellipsis=,AnimatedLabel_t,bool	niup: ellipsis=(ih: AnimatedLabel_t; yes: bool)	
ellipsis	niup.html#ellipsis,AnimatedLabel_t,bool	niup: ellipsis(ih: AnimatedLabel_t; yes: bool)	
ellipsis	niup.html#ellipsis,AnimatedLabel_t	niup: ellipsis(ih: AnimatedLabel_t): bool	
expand=	niup.html#expand=,AnimatedLabel_t,string	niup: expand=(ih: AnimatedLabel_t; value: string)	
expand	niup.html#expand,AnimatedLabel_t,string	niup: expand(ih: AnimatedLabel_t; value: string)	
expand	niup.html#expand,AnimatedLabel_t	niup: expand(ih: AnimatedLabel_t): string	
expandweight=	niup.html#expandweight=,AnimatedLabel_t,string	niup: expandweight=(ih: AnimatedLabel_t; value: string)	
expandweight	niup.html#expandweight,AnimatedLabel_t,string	niup: expandweight(ih: AnimatedLabel_t; value: string)	
expandweight=	niup.html#expandweight=,AnimatedLabel_t,int64	niup: expandweight=(ih: AnimatedLabel_t; x: int64)	
expandweight	niup.html#expandweight,AnimatedLabel_t,int64	niup: expandweight(ih: AnimatedLabel_t; x: int64)	
expandweight	niup.html#expandweight,AnimatedLabel_t	niup: expandweight(ih: AnimatedLabel_t): string	
fgcolor=	niup.html#fgcolor=,AnimatedLabel_t,string	niup: fgcolor=(ih: AnimatedLabel_t; value: string)	
fgcolor	niup.html#fgcolor,AnimatedLabel_t,string	niup: fgcolor(ih: AnimatedLabel_t; value: string)	
fgcolor=	niup.html#fgcolor=,AnimatedLabel_t,int,int,int,int	niup: fgcolor=(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,AnimatedLabel_t,int,int,int,int	niup: fgcolor(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,AnimatedLabel_t	niup: fgcolor(ih: AnimatedLabel_t): string	
first_control_handle	niup.html#first_control_handle,AnimatedLabel_t	niup: first_control_handle(ih: AnimatedLabel_t): string	
floating=	niup.html#floating=,AnimatedLabel_t,string	niup: floating=(ih: AnimatedLabel_t; value: string)	
floating	niup.html#floating,AnimatedLabel_t,string	niup: floating(ih: AnimatedLabel_t; value: string)	
floating	niup.html#floating,AnimatedLabel_t	niup: floating(ih: AnimatedLabel_t): string	
font=	niup.html#font=,AnimatedLabel_t,string	niup: font=(ih: AnimatedLabel_t; value: string)	
font	niup.html#font,AnimatedLabel_t,string	niup: font(ih: AnimatedLabel_t; value: string)	
font	niup.html#font,AnimatedLabel_t	niup: font(ih: AnimatedLabel_t): string	
fontface=	niup.html#fontface=,AnimatedLabel_t,string	niup: fontface=(ih: AnimatedLabel_t; value: string)	
fontface	niup.html#fontface,AnimatedLabel_t,string	niup: fontface(ih: AnimatedLabel_t; value: string)	
fontface	niup.html#fontface,AnimatedLabel_t	niup: fontface(ih: AnimatedLabel_t): string	
fontsize=	niup.html#fontsize=,AnimatedLabel_t,string	niup: fontsize=(ih: AnimatedLabel_t; value: string)	
fontsize	niup.html#fontsize,AnimatedLabel_t,string	niup: fontsize(ih: AnimatedLabel_t; value: string)	
fontsize=	niup.html#fontsize=,AnimatedLabel_t,int	niup: fontsize=(ih: AnimatedLabel_t; x: int)	
fontsize	niup.html#fontsize,AnimatedLabel_t,int	niup: fontsize(ih: AnimatedLabel_t; x: int)	
fontsize	niup.html#fontsize,AnimatedLabel_t	niup: fontsize(ih: AnimatedLabel_t): string	
fontstyle=	niup.html#fontstyle=,AnimatedLabel_t,string	niup: fontstyle=(ih: AnimatedLabel_t; value: string)	
fontstyle	niup.html#fontstyle,AnimatedLabel_t,string	niup: fontstyle(ih: AnimatedLabel_t; value: string)	
fontstyle	niup.html#fontstyle,AnimatedLabel_t	niup: fontstyle(ih: AnimatedLabel_t): string	
framecount	niup.html#framecount,AnimatedLabel_t	niup: framecount(ih: AnimatedLabel_t): string	
frametime=	niup.html#frametime=,AnimatedLabel_t,string	niup: frametime=(ih: AnimatedLabel_t; value: string)	
frametime	niup.html#frametime,AnimatedLabel_t,string	niup: frametime(ih: AnimatedLabel_t; value: string)	
frametime	niup.html#frametime,AnimatedLabel_t	niup: frametime(ih: AnimatedLabel_t): string	
handlename=	niup.html#handlename=,AnimatedLabel_t,string	niup: handlename=(ih: AnimatedLabel_t; value: string)	
handlename	niup.html#handlename,AnimatedLabel_t,string	niup: handlename(ih: AnimatedLabel_t; value: string)	
handlename	niup.html#handlename,AnimatedLabel_t	niup: handlename(ih: AnimatedLabel_t): string	
image=	niup.html#image=,AnimatedLabel_t,	niup: image=(ih: AnimatedLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,AnimatedLabel_t,	niup: image(ih: AnimatedLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,AnimatedLabel_t	niup: image(ih: AnimatedLabel_t): string	
iminactive=	niup.html#iminactive=,AnimatedLabel_t,	niup: iminactive=(ih: AnimatedLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,AnimatedLabel_t,	niup: iminactive(ih: AnimatedLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,AnimatedLabel_t	niup: iminactive(ih: AnimatedLabel_t): string	
markup=	niup.html#markup=,AnimatedLabel_t,string	niup: markup=(ih: AnimatedLabel_t; value: string)	
markup	niup.html#markup,AnimatedLabel_t,string	niup: markup(ih: AnimatedLabel_t; value: string)	
markup=	niup.html#markup=,AnimatedLabel_t,bool	niup: markup=(ih: AnimatedLabel_t; yes: bool)	
markup	niup.html#markup,AnimatedLabel_t,bool	niup: markup(ih: AnimatedLabel_t; yes: bool)	
markup	niup.html#markup,AnimatedLabel_t	niup: markup(ih: AnimatedLabel_t): bool	
maxsize=	niup.html#maxsize=,AnimatedLabel_t,string	niup: maxsize=(ih: AnimatedLabel_t; value: string)	
maxsize	niup.html#maxsize,AnimatedLabel_t,string	niup: maxsize(ih: AnimatedLabel_t; value: string)	
maxsize=	niup.html#maxsize=,AnimatedLabel_t,int,int	niup: maxsize=(ih: AnimatedLabel_t; width, height: int)	
maxsize	niup.html#maxsize,AnimatedLabel_t,int,int	niup: maxsize(ih: AnimatedLabel_t; width, height: int)	
maxsize	niup.html#maxsize,AnimatedLabel_t	niup: maxsize(ih: AnimatedLabel_t): string	
minsize=	niup.html#minsize=,AnimatedLabel_t,string	niup: minsize=(ih: AnimatedLabel_t; value: string)	
minsize	niup.html#minsize,AnimatedLabel_t,string	niup: minsize(ih: AnimatedLabel_t; value: string)	
minsize=	niup.html#minsize=,AnimatedLabel_t,int,int	niup: minsize=(ih: AnimatedLabel_t; width, height: int)	
minsize	niup.html#minsize,AnimatedLabel_t,int,int	niup: minsize(ih: AnimatedLabel_t; width, height: int)	
minsize	niup.html#minsize,AnimatedLabel_t	niup: minsize(ih: AnimatedLabel_t): string	
name=	niup.html#name=,AnimatedLabel_t,string	niup: name=(ih: AnimatedLabel_t; value: string)	
name	niup.html#name,AnimatedLabel_t,string	niup: name(ih: AnimatedLabel_t; value: string)	
name	niup.html#name,AnimatedLabel_t	niup: name(ih: AnimatedLabel_t): string	
naturalsize	niup.html#naturalsize,AnimatedLabel_t	niup: naturalsize(ih: AnimatedLabel_t): string	
next_control_handle	niup.html#next_control_handle,AnimatedLabel_t	niup: next_control_handle(ih: AnimatedLabel_t): string	
normalizergroup=	niup.html#normalizergroup=,AnimatedLabel_t,string	niup: normalizergroup=(ih: AnimatedLabel_t; value: string)	
normalizergroup	niup.html#normalizergroup,AnimatedLabel_t,string	niup: normalizergroup(ih: AnimatedLabel_t; value: string)	
normalizergroup	niup.html#normalizergroup,AnimatedLabel_t	niup: normalizergroup(ih: AnimatedLabel_t): string	
ntheme=	niup.html#ntheme=,AnimatedLabel_t,string	niup: ntheme=(ih: AnimatedLabel_t; value: string)	
ntheme	niup.html#ntheme,AnimatedLabel_t,string	niup: ntheme(ih: AnimatedLabel_t; value: string)	
ntheme	niup.html#ntheme,AnimatedLabel_t	niup: ntheme(ih: AnimatedLabel_t): string	
padding=	niup.html#padding=,AnimatedLabel_t,string	niup: padding=(ih: AnimatedLabel_t; value: string)	
padding	niup.html#padding,AnimatedLabel_t,string	niup: padding(ih: AnimatedLabel_t; value: string)	
padding=	niup.html#padding=,AnimatedLabel_t,int,int	niup: padding=(ih: AnimatedLabel_t; width, height: int)	
padding	niup.html#padding,AnimatedLabel_t,int,int	niup: padding(ih: AnimatedLabel_t; width, height: int)	
padding	niup.html#padding,AnimatedLabel_t	niup: padding(ih: AnimatedLabel_t): string	
pangofontdesc	niup.html#pangofontdesc,AnimatedLabel_t	niup: pangofontdesc(ih: AnimatedLabel_t): string	
pangolayout	niup.html#pangolayout,AnimatedLabel_t	niup: pangolayout(ih: AnimatedLabel_t): string	
position=	niup.html#position=,AnimatedLabel_t,string	niup: position=(ih: AnimatedLabel_t; value: string)	
position	niup.html#position,AnimatedLabel_t,string	niup: position(ih: AnimatedLabel_t; value: string)	
position=	niup.html#position=,AnimatedLabel_t,int,int	niup: position=(ih: AnimatedLabel_t; x, y: int)	
position	niup.html#position,AnimatedLabel_t,int,int	niup: position(ih: AnimatedLabel_t; x, y: int)	
position	niup.html#position,AnimatedLabel_t	niup: position(ih: AnimatedLabel_t): string	
propagatefocus=	niup.html#propagatefocus=,AnimatedLabel_t,string	niup: propagatefocus=(ih: AnimatedLabel_t; value: string)	
propagatefocus	niup.html#propagatefocus,AnimatedLabel_t,string	niup: propagatefocus(ih: AnimatedLabel_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,AnimatedLabel_t,bool	niup: propagatefocus=(ih: AnimatedLabel_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,AnimatedLabel_t,bool	niup: propagatefocus(ih: AnimatedLabel_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,AnimatedLabel_t	niup: propagatefocus(ih: AnimatedLabel_t): bool	
rastersize=	niup.html#rastersize=,AnimatedLabel_t,string	niup: rastersize=(ih: AnimatedLabel_t; value: string)	
rastersize	niup.html#rastersize,AnimatedLabel_t,string	niup: rastersize(ih: AnimatedLabel_t; value: string)	
rastersize=	niup.html#rastersize=,AnimatedLabel_t,int,int	niup: rastersize=(ih: AnimatedLabel_t; width, height: int)	
rastersize	niup.html#rastersize,AnimatedLabel_t,int,int	niup: rastersize(ih: AnimatedLabel_t; width, height: int)	
rastersize	niup.html#rastersize,AnimatedLabel_t	niup: rastersize(ih: AnimatedLabel_t): string	
running	niup.html#running,AnimatedLabel_t	niup: running(ih: AnimatedLabel_t): string	
screenposition	niup.html#screenposition,AnimatedLabel_t	niup: screenposition(ih: AnimatedLabel_t): string	
separator=	niup.html#separator=,AnimatedLabel_t,string	niup: separator=(ih: AnimatedLabel_t; value: string)	
separator	niup.html#separator,AnimatedLabel_t,string	niup: separator(ih: AnimatedLabel_t; value: string)	
separator	niup.html#separator,AnimatedLabel_t	niup: separator(ih: AnimatedLabel_t): string	
size=	niup.html#size=,AnimatedLabel_t,string	niup: size=(ih: AnimatedLabel_t; value: string)	
size	niup.html#size,AnimatedLabel_t,string	niup: size(ih: AnimatedLabel_t; value: string)	
size=	niup.html#size=,AnimatedLabel_t,int,int	niup: size=(ih: AnimatedLabel_t; width, height: int)	
size	niup.html#size,AnimatedLabel_t,int,int	niup: size(ih: AnimatedLabel_t; width, height: int)	
size	niup.html#size,AnimatedLabel_t	niup: size(ih: AnimatedLabel_t): string	
start=	niup.html#start=,AnimatedLabel_t	niup: start=(ih: AnimatedLabel_t)	
start	niup.html#start,AnimatedLabel_t	niup: start(ih: AnimatedLabel_t)	
stopwhenhidden	niup.html#stopwhenhidden,AnimatedLabel_t	niup: stopwhenhidden(ih: AnimatedLabel_t): string	
theme=	niup.html#theme=,AnimatedLabel_t,string	niup: theme=(ih: AnimatedLabel_t; value: string)	
theme	niup.html#theme,AnimatedLabel_t,string	niup: theme(ih: AnimatedLabel_t; value: string)	
theme	niup.html#theme,AnimatedLabel_t	niup: theme(ih: AnimatedLabel_t): string	
tip=	niup.html#tip=,AnimatedLabel_t,string	niup: tip=(ih: AnimatedLabel_t; value: string)	
tip	niup.html#tip,AnimatedLabel_t,string	niup: tip(ih: AnimatedLabel_t; value: string)	
tip	niup.html#tip,AnimatedLabel_t	niup: tip(ih: AnimatedLabel_t): string	
tipbgcolor=	niup.html#tipbgcolor=,AnimatedLabel_t,string	niup: tipbgcolor=(ih: AnimatedLabel_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,AnimatedLabel_t,string	niup: tipbgcolor(ih: AnimatedLabel_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,AnimatedLabel_t,int,int,int,int	niup: tipbgcolor=(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,AnimatedLabel_t,int,int,int,int	niup: tipbgcolor(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,AnimatedLabel_t	niup: tipbgcolor(ih: AnimatedLabel_t): string	
tipdelay=	niup.html#tipdelay=,AnimatedLabel_t,string	niup: tipdelay=(ih: AnimatedLabel_t; value: string)	
tipdelay	niup.html#tipdelay,AnimatedLabel_t,string	niup: tipdelay(ih: AnimatedLabel_t; value: string)	
tipdelay=	niup.html#tipdelay=,AnimatedLabel_t,int	niup: tipdelay=(ih: AnimatedLabel_t; x: int)	
tipdelay	niup.html#tipdelay,AnimatedLabel_t,int	niup: tipdelay(ih: AnimatedLabel_t; x: int)	
tipdelay	niup.html#tipdelay,AnimatedLabel_t	niup: tipdelay(ih: AnimatedLabel_t): string	
tipfgcolor=	niup.html#tipfgcolor=,AnimatedLabel_t,string	niup: tipfgcolor=(ih: AnimatedLabel_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,AnimatedLabel_t,string	niup: tipfgcolor(ih: AnimatedLabel_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,AnimatedLabel_t,int,int,int,int	niup: tipfgcolor=(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,AnimatedLabel_t,int,int,int,int	niup: tipfgcolor(ih: AnimatedLabel_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,AnimatedLabel_t	niup: tipfgcolor(ih: AnimatedLabel_t): string	
tipicon=	niup.html#tipicon=,AnimatedLabel_t,string	niup: tipicon=(ih: AnimatedLabel_t; value: string)	
tipicon	niup.html#tipicon,AnimatedLabel_t,string	niup: tipicon(ih: AnimatedLabel_t; value: string)	
tipicon	niup.html#tipicon,AnimatedLabel_t	niup: tipicon(ih: AnimatedLabel_t): string	
tipmarkup=	niup.html#tipmarkup=,AnimatedLabel_t,string	niup: tipmarkup=(ih: AnimatedLabel_t; value: string)	
tipmarkup	niup.html#tipmarkup,AnimatedLabel_t,string	niup: tipmarkup(ih: AnimatedLabel_t; value: string)	
tipmarkup	niup.html#tipmarkup,AnimatedLabel_t	niup: tipmarkup(ih: AnimatedLabel_t): string	
tiprect=	niup.html#tiprect=,AnimatedLabel_t,string	niup: tiprect=(ih: AnimatedLabel_t; value: string)	
tiprect	niup.html#tiprect,AnimatedLabel_t,string	niup: tiprect(ih: AnimatedLabel_t; value: string)	
tiprect=	niup.html#tiprect=,AnimatedLabel_t,int,int,int,int	niup: tiprect=(ih: AnimatedLabel_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,AnimatedLabel_t,int,int,int,int	niup: tiprect(ih: AnimatedLabel_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,AnimatedLabel_t	niup: tiprect(ih: AnimatedLabel_t): string	
tipvisible=	niup.html#tipvisible=,AnimatedLabel_t,string	niup: tipvisible=(ih: AnimatedLabel_t; value: string)	
tipvisible	niup.html#tipvisible,AnimatedLabel_t,string	niup: tipvisible(ih: AnimatedLabel_t; value: string)	
tipvisible=	niup.html#tipvisible=,AnimatedLabel_t,bool	niup: tipvisible=(ih: AnimatedLabel_t; yes: bool)	
tipvisible	niup.html#tipvisible,AnimatedLabel_t,bool	niup: tipvisible(ih: AnimatedLabel_t; yes: bool)	
tipvisible	niup.html#tipvisible,AnimatedLabel_t	niup: tipvisible(ih: AnimatedLabel_t): bool	
title=	niup.html#title=,AnimatedLabel_t,string	niup: title=(ih: AnimatedLabel_t; value: string)	
title	niup.html#title,AnimatedLabel_t,string	niup: title(ih: AnimatedLabel_t; value: string)	
title	niup.html#title,AnimatedLabel_t	niup: title(ih: AnimatedLabel_t): string	
usersize=	niup.html#usersize=,AnimatedLabel_t,string	niup: usersize=(ih: AnimatedLabel_t; value: string)	
usersize	niup.html#usersize,AnimatedLabel_t,string	niup: usersize(ih: AnimatedLabel_t; value: string)	
usersize=	niup.html#usersize=,AnimatedLabel_t,int,int	niup: usersize=(ih: AnimatedLabel_t; width, height: int)	
usersize	niup.html#usersize,AnimatedLabel_t,int,int	niup: usersize(ih: AnimatedLabel_t; width, height: int)	
usersize	niup.html#usersize,AnimatedLabel_t	niup: usersize(ih: AnimatedLabel_t): string	
visible=	niup.html#visible=,AnimatedLabel_t,string	niup: visible=(ih: AnimatedLabel_t; value: string)	
visible	niup.html#visible,AnimatedLabel_t,string	niup: visible(ih: AnimatedLabel_t; value: string)	
visible=	niup.html#visible=,AnimatedLabel_t,bool	niup: visible=(ih: AnimatedLabel_t; yes: bool)	
visible	niup.html#visible,AnimatedLabel_t,bool	niup: visible(ih: AnimatedLabel_t; yes: bool)	
visible	niup.html#visible,AnimatedLabel_t	niup: visible(ih: AnimatedLabel_t): bool	
wid	niup.html#wid,AnimatedLabel_t	niup: wid(ih: AnimatedLabel_t): string	
wordwrap=	niup.html#wordwrap=,AnimatedLabel_t,string	niup: wordwrap=(ih: AnimatedLabel_t; value: string)	
wordwrap	niup.html#wordwrap,AnimatedLabel_t,string	niup: wordwrap(ih: AnimatedLabel_t; value: string)	
wordwrap=	niup.html#wordwrap=,AnimatedLabel_t,bool	niup: wordwrap=(ih: AnimatedLabel_t; yes: bool)	
wordwrap	niup.html#wordwrap,AnimatedLabel_t,bool	niup: wordwrap(ih: AnimatedLabel_t; yes: bool)	
wordwrap	niup.html#wordwrap,AnimatedLabel_t	niup: wordwrap(ih: AnimatedLabel_t): bool	
x	niup.html#x,AnimatedLabel_t	niup: x(ih: AnimatedLabel_t): string	
xfontid	niup.html#xfontid,AnimatedLabel_t	niup: xfontid(ih: AnimatedLabel_t): string	
y	niup.html#y,AnimatedLabel_t	niup: y(ih: AnimatedLabel_t): string	
zorder=	niup.html#zorder=,AnimatedLabel_t,string	niup: zorder=(ih: AnimatedLabel_t; value: string)	
zorder	niup.html#zorder,AnimatedLabel_t,string	niup: zorder(ih: AnimatedLabel_t; value: string)	
button_cb=	niup.html#button_cb=,AnimatedLabel_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,AnimatedLabel_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,AnimatedLabel_t	niup: button_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,AnimatedLabel_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: AnimatedLabel_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,AnimatedLabel_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: AnimatedLabel_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,AnimatedLabel_t	niup: dragbegin_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,AnimatedLabel_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: AnimatedLabel_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,AnimatedLabel_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: AnimatedLabel_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,AnimatedLabel_t	niup: dragdatasize_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,AnimatedLabel_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,AnimatedLabel_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,AnimatedLabel_t	niup: dragdata_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,AnimatedLabel_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: AnimatedLabel_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,AnimatedLabel_t,proc(PIhandle,cint)	niup: dragend_cb(ih: AnimatedLabel_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,AnimatedLabel_t	niup: dragend_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,AnimatedLabel_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,AnimatedLabel_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,AnimatedLabel_t	niup: dropdata_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,AnimatedLabel_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: AnimatedLabel_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,AnimatedLabel_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: AnimatedLabel_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,AnimatedLabel_t	niup: dropfiles_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,AnimatedLabel_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,AnimatedLabel_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,AnimatedLabel_t	niup: dropmotion_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,AnimatedLabel_t,proc(PIhandle)	niup: enterwindow_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,AnimatedLabel_t,proc(PIhandle)	niup: enterwindow_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,AnimatedLabel_t	niup: enterwindow_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,AnimatedLabel_t,proc(PIhandle)	niup: leavewindow_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,AnimatedLabel_t,proc(PIhandle)	niup: leavewindow_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,AnimatedLabel_t	niup: leavewindow_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,AnimatedLabel_t,proc(PIhandle)	niup: map_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,AnimatedLabel_t,proc(PIhandle)	niup: map_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,AnimatedLabel_t	niup: map_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,AnimatedLabel_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: AnimatedLabel_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,AnimatedLabel_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: AnimatedLabel_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,AnimatedLabel_t	niup: motion_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,AnimatedLabel_t,proc(PIhandle)	niup: unmap_cb=(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,AnimatedLabel_t,proc(PIhandle)	niup: unmap_cb(ih: AnimatedLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,AnimatedLabel_t	niup: unmap_cb(ih: AnimatedLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
BackgroundBox	niup.html#BackgroundBox,IUPhandle_t	niup: BackgroundBox(child: IUPhandle_t): BackgroundBox_t	
active=	niup.html#active=,BackgroundBox_t,string	niup: active=(ih: BackgroundBox_t; value: string)	
active	niup.html#active,BackgroundBox_t,string	niup: active(ih: BackgroundBox_t; value: string)	
active=	niup.html#active=,BackgroundBox_t,bool	niup: active=(ih: BackgroundBox_t; yes: bool)	
active	niup.html#active,BackgroundBox_t,bool	niup: active(ih: BackgroundBox_t; yes: bool)	
active	niup.html#active,BackgroundBox_t	niup: active(ih: BackgroundBox_t): bool	
backcolor=	niup.html#backcolor=,BackgroundBox_t,string	niup: backcolor=(ih: BackgroundBox_t; value: string)	
backcolor	niup.html#backcolor,BackgroundBox_t,string	niup: backcolor(ih: BackgroundBox_t; value: string)	
backcolor=	niup.html#backcolor=,BackgroundBox_t,int,int,int,int	niup: backcolor=(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,BackgroundBox_t,int,int,int,int	niup: backcolor(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,BackgroundBox_t	niup: backcolor(ih: BackgroundBox_t): string	
backimage=	niup.html#backimage=,BackgroundBox_t,	niup: backimage=(ih: BackgroundBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,BackgroundBox_t,	niup: backimage(ih: BackgroundBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,BackgroundBox_t	niup: backimage(ih: BackgroundBox_t): string	
backimagezoom=	niup.html#backimagezoom=,BackgroundBox_t,string	niup: backimagezoom=(ih: BackgroundBox_t; value: string)	
backimagezoom	niup.html#backimagezoom,BackgroundBox_t,string	niup: backimagezoom(ih: BackgroundBox_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,BackgroundBox_t,bool	niup: backimagezoom=(ih: BackgroundBox_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,BackgroundBox_t,bool	niup: backimagezoom(ih: BackgroundBox_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,BackgroundBox_t	niup: backimagezoom(ih: BackgroundBox_t): bool	
backingstore=	niup.html#backingstore=,BackgroundBox_t,string	niup: backingstore=(ih: BackgroundBox_t; value: string)	
backingstore	niup.html#backingstore,BackgroundBox_t,string	niup: backingstore(ih: BackgroundBox_t; value: string)	
backingstore=	niup.html#backingstore=,BackgroundBox_t,bool	niup: backingstore=(ih: BackgroundBox_t; yes: bool)	
backingstore	niup.html#backingstore,BackgroundBox_t,bool	niup: backingstore(ih: BackgroundBox_t; yes: bool)	
backingstore	niup.html#backingstore,BackgroundBox_t	niup: backingstore(ih: BackgroundBox_t): bool	
bgcolor=	niup.html#bgcolor=,BackgroundBox_t,string	niup: bgcolor=(ih: BackgroundBox_t; value: string)	
bgcolor	niup.html#bgcolor,BackgroundBox_t,string	niup: bgcolor(ih: BackgroundBox_t; value: string)	
bgcolor=	niup.html#bgcolor=,BackgroundBox_t,int,int,int,int	niup: bgcolor=(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,BackgroundBox_t,int,int,int,int	niup: bgcolor(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,BackgroundBox_t	niup: bgcolor(ih: BackgroundBox_t): string	
border=	niup.html#border=,BackgroundBox_t,string	niup: border=(ih: BackgroundBox_t; value: string)	
border	niup.html#border,BackgroundBox_t,string	niup: border(ih: BackgroundBox_t; value: string)	
border=	niup.html#border=,BackgroundBox_t,bool	niup: border=(ih: BackgroundBox_t; yes: bool)	
border	niup.html#border,BackgroundBox_t,bool	niup: border(ih: BackgroundBox_t; yes: bool)	
border	niup.html#border,BackgroundBox_t	niup: border(ih: BackgroundBox_t): bool	
canfocus=	niup.html#canfocus=,BackgroundBox_t,string	niup: canfocus=(ih: BackgroundBox_t; value: string)	
canfocus	niup.html#canfocus,BackgroundBox_t,string	niup: canfocus(ih: BackgroundBox_t; value: string)	
canfocus=	niup.html#canfocus=,BackgroundBox_t,bool	niup: canfocus=(ih: BackgroundBox_t; yes: bool)	
canfocus	niup.html#canfocus,BackgroundBox_t,bool	niup: canfocus(ih: BackgroundBox_t; yes: bool)	
canfocus	niup.html#canfocus,BackgroundBox_t	niup: canfocus(ih: BackgroundBox_t): bool	
canvasbox=	niup.html#canvasbox=,BackgroundBox_t,string	niup: canvasbox=(ih: BackgroundBox_t; value: string)	
canvasbox	niup.html#canvasbox,BackgroundBox_t,string	niup: canvasbox(ih: BackgroundBox_t; value: string)	
canvasbox=	niup.html#canvasbox=,BackgroundBox_t,bool	niup: canvasbox=(ih: BackgroundBox_t; yes: bool)	
canvasbox	niup.html#canvasbox,BackgroundBox_t,bool	niup: canvasbox(ih: BackgroundBox_t; yes: bool)	
canvasbox	niup.html#canvasbox,BackgroundBox_t	niup: canvasbox(ih: BackgroundBox_t): bool	
charsize	niup.html#charsize,BackgroundBox_t	niup: charsize(ih: BackgroundBox_t): string	
childoffset=	niup.html#childoffset=,BackgroundBox_t,string	niup: childoffset=(ih: BackgroundBox_t; value: string)	
childoffset	niup.html#childoffset,BackgroundBox_t,string	niup: childoffset(ih: BackgroundBox_t; value: string)	
childoffset=	niup.html#childoffset=,BackgroundBox_t,int,int	niup: childoffset=(ih: BackgroundBox_t; width, height: int)	
childoffset	niup.html#childoffset,BackgroundBox_t,int,int	niup: childoffset(ih: BackgroundBox_t; width, height: int)	
childoffset	niup.html#childoffset,BackgroundBox_t	niup: childoffset(ih: BackgroundBox_t): string	
clientoffset	niup.html#clientoffset,BackgroundBox_t	niup: clientoffset(ih: BackgroundBox_t): string	
clientsize	niup.html#clientsize,BackgroundBox_t	niup: clientsize(ih: BackgroundBox_t): string	
cursor=	niup.html#cursor=,BackgroundBox_t,	niup: cursor=(ih: BackgroundBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,BackgroundBox_t,	niup: cursor(ih: BackgroundBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,BackgroundBox_t	niup: cursor(ih: BackgroundBox_t): string	
decoration=	niup.html#decoration=,BackgroundBox_t,string	niup: decoration=(ih: BackgroundBox_t; value: string)	
decoration	niup.html#decoration,BackgroundBox_t,string	niup: decoration(ih: BackgroundBox_t; value: string)	
decoration=	niup.html#decoration=,BackgroundBox_t,bool	niup: decoration=(ih: BackgroundBox_t; yes: bool)	
decoration	niup.html#decoration,BackgroundBox_t,bool	niup: decoration(ih: BackgroundBox_t; yes: bool)	
decoration	niup.html#decoration,BackgroundBox_t	niup: decoration(ih: BackgroundBox_t): bool	
decoroffset=	niup.html#decoroffset=,BackgroundBox_t,string	niup: decoroffset=(ih: BackgroundBox_t; value: string)	
decoroffset	niup.html#decoroffset,BackgroundBox_t,string	niup: decoroffset(ih: BackgroundBox_t; value: string)	
decoroffset=	niup.html#decoroffset=,BackgroundBox_t,int,int	niup: decoroffset=(ih: BackgroundBox_t; width, height: int)	
decoroffset	niup.html#decoroffset,BackgroundBox_t,int,int	niup: decoroffset(ih: BackgroundBox_t; width, height: int)	
decoroffset	niup.html#decoroffset,BackgroundBox_t	niup: decoroffset(ih: BackgroundBox_t): string	
decorsize=	niup.html#decorsize=,BackgroundBox_t,string	niup: decorsize=(ih: BackgroundBox_t; value: string)	
decorsize	niup.html#decorsize,BackgroundBox_t,string	niup: decorsize(ih: BackgroundBox_t; value: string)	
decorsize=	niup.html#decorsize=,BackgroundBox_t,int,int	niup: decorsize=(ih: BackgroundBox_t; width, height: int)	
decorsize	niup.html#decorsize,BackgroundBox_t,int,int	niup: decorsize(ih: BackgroundBox_t; width, height: int)	
decorsize	niup.html#decorsize,BackgroundBox_t	niup: decorsize(ih: BackgroundBox_t): string	
dragdrop=	niup.html#dragdrop=,BackgroundBox_t,string	niup: dragdrop=(ih: BackgroundBox_t; value: string)	
dragdrop	niup.html#dragdrop,BackgroundBox_t,string	niup: dragdrop(ih: BackgroundBox_t; value: string)	
dragdrop=	niup.html#dragdrop=,BackgroundBox_t,bool	niup: dragdrop=(ih: BackgroundBox_t; yes: bool)	
dragdrop	niup.html#dragdrop,BackgroundBox_t,bool	niup: dragdrop(ih: BackgroundBox_t; yes: bool)	
dragdrop	niup.html#dragdrop,BackgroundBox_t	niup: dragdrop(ih: BackgroundBox_t): bool	
dragsource=	niup.html#dragsource=,BackgroundBox_t,string	niup: dragsource=(ih: BackgroundBox_t; value: string)	
dragsource	niup.html#dragsource,BackgroundBox_t,string	niup: dragsource(ih: BackgroundBox_t; value: string)	
dragsource=	niup.html#dragsource=,BackgroundBox_t,bool	niup: dragsource=(ih: BackgroundBox_t; yes: bool)	
dragsource	niup.html#dragsource,BackgroundBox_t,bool	niup: dragsource(ih: BackgroundBox_t; yes: bool)	
dragsource	niup.html#dragsource,BackgroundBox_t	niup: dragsource(ih: BackgroundBox_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,BackgroundBox_t,string	niup: dragsourcemove=(ih: BackgroundBox_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,BackgroundBox_t,string	niup: dragsourcemove(ih: BackgroundBox_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,BackgroundBox_t,bool	niup: dragsourcemove=(ih: BackgroundBox_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,BackgroundBox_t,bool	niup: dragsourcemove(ih: BackgroundBox_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,BackgroundBox_t	niup: dragsourcemove(ih: BackgroundBox_t): bool	
dragtypes=	niup.html#dragtypes=,BackgroundBox_t,string	niup: dragtypes=(ih: BackgroundBox_t; value: string)	
dragtypes	niup.html#dragtypes,BackgroundBox_t,string	niup: dragtypes(ih: BackgroundBox_t; value: string)	
dragtypes	niup.html#dragtypes,BackgroundBox_t	niup: dragtypes(ih: BackgroundBox_t): string	
drawable	niup.html#drawable,BackgroundBox_t	niup: drawable(ih: BackgroundBox_t): string	
drawbgcolor=	niup.html#drawbgcolor=,BackgroundBox_t,string	niup: drawbgcolor=(ih: BackgroundBox_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,BackgroundBox_t,string	niup: drawbgcolor(ih: BackgroundBox_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,BackgroundBox_t,int,int,int,int	niup: drawbgcolor=(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,BackgroundBox_t,int,int,int,int	niup: drawbgcolor(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,BackgroundBox_t	niup: drawbgcolor(ih: BackgroundBox_t): string	
drawcolor=	niup.html#drawcolor=,BackgroundBox_t,string	niup: drawcolor=(ih: BackgroundBox_t; value: string)	
drawcolor	niup.html#drawcolor,BackgroundBox_t,string	niup: drawcolor(ih: BackgroundBox_t; value: string)	
drawcolor=	niup.html#drawcolor=,BackgroundBox_t,int,int,int,int	niup: drawcolor=(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,BackgroundBox_t,int,int,int,int	niup: drawcolor(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,BackgroundBox_t	niup: drawcolor(ih: BackgroundBox_t): string	
drawdriver	niup.html#drawdriver,BackgroundBox_t	niup: drawdriver(ih: BackgroundBox_t): string	
drawfont=	niup.html#drawfont=,BackgroundBox_t,string	niup: drawfont=(ih: BackgroundBox_t; value: string)	
drawfont	niup.html#drawfont,BackgroundBox_t,string	niup: drawfont(ih: BackgroundBox_t; value: string)	
drawfont	niup.html#drawfont,BackgroundBox_t	niup: drawfont(ih: BackgroundBox_t): string	
drawlinewidth=	niup.html#drawlinewidth=,BackgroundBox_t,string	niup: drawlinewidth=(ih: BackgroundBox_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,BackgroundBox_t,string	niup: drawlinewidth(ih: BackgroundBox_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,BackgroundBox_t,int	niup: drawlinewidth=(ih: BackgroundBox_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,BackgroundBox_t,int	niup: drawlinewidth(ih: BackgroundBox_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,BackgroundBox_t	niup: drawlinewidth(ih: BackgroundBox_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,BackgroundBox_t,string	niup: drawmakeinactive=(ih: BackgroundBox_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,BackgroundBox_t,string	niup: drawmakeinactive(ih: BackgroundBox_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,BackgroundBox_t,bool	niup: drawmakeinactive=(ih: BackgroundBox_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,BackgroundBox_t,bool	niup: drawmakeinactive(ih: BackgroundBox_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,BackgroundBox_t	niup: drawmakeinactive(ih: BackgroundBox_t): bool	
drawsize	niup.html#drawsize,BackgroundBox_t	niup: drawsize(ih: BackgroundBox_t): string	
drawstyle=	niup.html#drawstyle=,BackgroundBox_t,string	niup: drawstyle=(ih: BackgroundBox_t; value: string)	
drawstyle	niup.html#drawstyle,BackgroundBox_t,string	niup: drawstyle(ih: BackgroundBox_t; value: string)	
drawstyle	niup.html#drawstyle,BackgroundBox_t	niup: drawstyle(ih: BackgroundBox_t): string	
drawtextalignment=	niup.html#drawtextalignment=,BackgroundBox_t,string	niup: drawtextalignment=(ih: BackgroundBox_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,BackgroundBox_t,string	niup: drawtextalignment(ih: BackgroundBox_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,BackgroundBox_t	niup: drawtextalignment(ih: BackgroundBox_t): string	
drawtextclip=	niup.html#drawtextclip=,BackgroundBox_t,string	niup: drawtextclip=(ih: BackgroundBox_t; value: string)	
drawtextclip	niup.html#drawtextclip,BackgroundBox_t,string	niup: drawtextclip(ih: BackgroundBox_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,BackgroundBox_t,bool	niup: drawtextclip=(ih: BackgroundBox_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,BackgroundBox_t,bool	niup: drawtextclip(ih: BackgroundBox_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,BackgroundBox_t	niup: drawtextclip(ih: BackgroundBox_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,BackgroundBox_t,string	niup: drawtextellipsis=(ih: BackgroundBox_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,BackgroundBox_t,string	niup: drawtextellipsis(ih: BackgroundBox_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,BackgroundBox_t,bool	niup: drawtextellipsis=(ih: BackgroundBox_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,BackgroundBox_t,bool	niup: drawtextellipsis(ih: BackgroundBox_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,BackgroundBox_t	niup: drawtextellipsis(ih: BackgroundBox_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,BackgroundBox_t,string	niup: drawtextlayoutcenter=(ih: BackgroundBox_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,BackgroundBox_t,string	niup: drawtextlayoutcenter(ih: BackgroundBox_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,BackgroundBox_t,bool	niup: drawtextlayoutcenter=(ih: BackgroundBox_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,BackgroundBox_t,bool	niup: drawtextlayoutcenter(ih: BackgroundBox_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,BackgroundBox_t	niup: drawtextlayoutcenter(ih: BackgroundBox_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,BackgroundBox_t,string	niup: drawtextorientation=(ih: BackgroundBox_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,BackgroundBox_t,string	niup: drawtextorientation(ih: BackgroundBox_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,BackgroundBox_t,int64	niup: drawtextorientation=(ih: BackgroundBox_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,BackgroundBox_t,int64	niup: drawtextorientation(ih: BackgroundBox_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,BackgroundBox_t	niup: drawtextorientation(ih: BackgroundBox_t): string	
drawtextwrap=	niup.html#drawtextwrap=,BackgroundBox_t,string	niup: drawtextwrap=(ih: BackgroundBox_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,BackgroundBox_t,string	niup: drawtextwrap(ih: BackgroundBox_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,BackgroundBox_t,bool	niup: drawtextwrap=(ih: BackgroundBox_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,BackgroundBox_t,bool	niup: drawtextwrap(ih: BackgroundBox_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,BackgroundBox_t	niup: drawtextwrap(ih: BackgroundBox_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,BackgroundBox_t,string	niup: dropfilestarget=(ih: BackgroundBox_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,BackgroundBox_t,string	niup: dropfilestarget(ih: BackgroundBox_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,BackgroundBox_t,bool	niup: dropfilestarget=(ih: BackgroundBox_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,BackgroundBox_t,bool	niup: dropfilestarget(ih: BackgroundBox_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,BackgroundBox_t	niup: dropfilestarget(ih: BackgroundBox_t): bool	
droptarget=	niup.html#droptarget=,BackgroundBox_t,string	niup: droptarget=(ih: BackgroundBox_t; value: string)	
droptarget	niup.html#droptarget,BackgroundBox_t,string	niup: droptarget(ih: BackgroundBox_t; value: string)	
droptarget=	niup.html#droptarget=,BackgroundBox_t,bool	niup: droptarget=(ih: BackgroundBox_t; yes: bool)	
droptarget	niup.html#droptarget,BackgroundBox_t,bool	niup: droptarget(ih: BackgroundBox_t; yes: bool)	
droptarget	niup.html#droptarget,BackgroundBox_t	niup: droptarget(ih: BackgroundBox_t): bool	
droptypes=	niup.html#droptypes=,BackgroundBox_t,string	niup: droptypes=(ih: BackgroundBox_t; value: string)	
droptypes	niup.html#droptypes,BackgroundBox_t,string	niup: droptypes(ih: BackgroundBox_t; value: string)	
droptypes	niup.html#droptypes,BackgroundBox_t	niup: droptypes(ih: BackgroundBox_t): string	
dx=	niup.html#dx=,BackgroundBox_t,string	niup: dx=(ih: BackgroundBox_t; value: string)	
dx	niup.html#dx,BackgroundBox_t,string	niup: dx(ih: BackgroundBox_t; value: string)	
dx=	niup.html#dx=,BackgroundBox_t,int64	niup: dx=(ih: BackgroundBox_t; x: int64)	
dx	niup.html#dx,BackgroundBox_t,int64	niup: dx(ih: BackgroundBox_t; x: int64)	
dx	niup.html#dx,BackgroundBox_t	niup: dx(ih: BackgroundBox_t): string	
dy=	niup.html#dy=,BackgroundBox_t,string	niup: dy=(ih: BackgroundBox_t; value: string)	
dy	niup.html#dy,BackgroundBox_t,string	niup: dy(ih: BackgroundBox_t; value: string)	
dy=	niup.html#dy=,BackgroundBox_t,int64	niup: dy=(ih: BackgroundBox_t; x: int64)	
dy	niup.html#dy,BackgroundBox_t,int64	niup: dy(ih: BackgroundBox_t; x: int64)	
dy	niup.html#dy,BackgroundBox_t	niup: dy(ih: BackgroundBox_t): string	
expand=	niup.html#expand=,BackgroundBox_t,string	niup: expand=(ih: BackgroundBox_t; value: string)	
expand	niup.html#expand,BackgroundBox_t,string	niup: expand(ih: BackgroundBox_t; value: string)	
expand	niup.html#expand,BackgroundBox_t	niup: expand(ih: BackgroundBox_t): string	
expandweight=	niup.html#expandweight=,BackgroundBox_t,string	niup: expandweight=(ih: BackgroundBox_t; value: string)	
expandweight	niup.html#expandweight,BackgroundBox_t,string	niup: expandweight(ih: BackgroundBox_t; value: string)	
expandweight=	niup.html#expandweight=,BackgroundBox_t,int64	niup: expandweight=(ih: BackgroundBox_t; x: int64)	
expandweight	niup.html#expandweight,BackgroundBox_t,int64	niup: expandweight(ih: BackgroundBox_t; x: int64)	
expandweight	niup.html#expandweight,BackgroundBox_t	niup: expandweight(ih: BackgroundBox_t): string	
floating=	niup.html#floating=,BackgroundBox_t,string	niup: floating=(ih: BackgroundBox_t; value: string)	
floating	niup.html#floating,BackgroundBox_t,string	niup: floating(ih: BackgroundBox_t; value: string)	
floating	niup.html#floating,BackgroundBox_t	niup: floating(ih: BackgroundBox_t): string	
font=	niup.html#font=,BackgroundBox_t,string	niup: font=(ih: BackgroundBox_t; value: string)	
font	niup.html#font,BackgroundBox_t,string	niup: font(ih: BackgroundBox_t; value: string)	
font	niup.html#font,BackgroundBox_t	niup: font(ih: BackgroundBox_t): string	
fontface=	niup.html#fontface=,BackgroundBox_t,string	niup: fontface=(ih: BackgroundBox_t; value: string)	
fontface	niup.html#fontface,BackgroundBox_t,string	niup: fontface(ih: BackgroundBox_t; value: string)	
fontface	niup.html#fontface,BackgroundBox_t	niup: fontface(ih: BackgroundBox_t): string	
fontsize=	niup.html#fontsize=,BackgroundBox_t,string	niup: fontsize=(ih: BackgroundBox_t; value: string)	
fontsize	niup.html#fontsize,BackgroundBox_t,string	niup: fontsize(ih: BackgroundBox_t; value: string)	
fontsize=	niup.html#fontsize=,BackgroundBox_t,int	niup: fontsize=(ih: BackgroundBox_t; x: int)	
fontsize	niup.html#fontsize,BackgroundBox_t,int	niup: fontsize(ih: BackgroundBox_t; x: int)	
fontsize	niup.html#fontsize,BackgroundBox_t	niup: fontsize(ih: BackgroundBox_t): string	
fontstyle=	niup.html#fontstyle=,BackgroundBox_t,string	niup: fontstyle=(ih: BackgroundBox_t; value: string)	
fontstyle	niup.html#fontstyle,BackgroundBox_t,string	niup: fontstyle(ih: BackgroundBox_t; value: string)	
fontstyle	niup.html#fontstyle,BackgroundBox_t	niup: fontstyle(ih: BackgroundBox_t): string	
handlename=	niup.html#handlename=,BackgroundBox_t,string	niup: handlename=(ih: BackgroundBox_t; value: string)	
handlename	niup.html#handlename,BackgroundBox_t,string	niup: handlename(ih: BackgroundBox_t; value: string)	
handlename	niup.html#handlename,BackgroundBox_t	niup: handlename(ih: BackgroundBox_t): string	
linex=	niup.html#linex=,BackgroundBox_t,string	niup: linex=(ih: BackgroundBox_t; value: string)	
linex	niup.html#linex,BackgroundBox_t,string	niup: linex(ih: BackgroundBox_t; value: string)	
linex=	niup.html#linex=,BackgroundBox_t,int64	niup: linex=(ih: BackgroundBox_t; x: int64)	
linex	niup.html#linex,BackgroundBox_t,int64	niup: linex(ih: BackgroundBox_t; x: int64)	
linex	niup.html#linex,BackgroundBox_t	niup: linex(ih: BackgroundBox_t): string	
liney=	niup.html#liney=,BackgroundBox_t,string	niup: liney=(ih: BackgroundBox_t; value: string)	
liney	niup.html#liney,BackgroundBox_t,string	niup: liney(ih: BackgroundBox_t; value: string)	
liney=	niup.html#liney=,BackgroundBox_t,int64	niup: liney=(ih: BackgroundBox_t; x: int64)	
liney	niup.html#liney,BackgroundBox_t,int64	niup: liney(ih: BackgroundBox_t; x: int64)	
liney	niup.html#liney,BackgroundBox_t	niup: liney(ih: BackgroundBox_t): string	
maxsize=	niup.html#maxsize=,BackgroundBox_t,string	niup: maxsize=(ih: BackgroundBox_t; value: string)	
maxsize	niup.html#maxsize,BackgroundBox_t,string	niup: maxsize(ih: BackgroundBox_t; value: string)	
maxsize=	niup.html#maxsize=,BackgroundBox_t,int,int	niup: maxsize=(ih: BackgroundBox_t; width, height: int)	
maxsize	niup.html#maxsize,BackgroundBox_t,int,int	niup: maxsize(ih: BackgroundBox_t; width, height: int)	
maxsize	niup.html#maxsize,BackgroundBox_t	niup: maxsize(ih: BackgroundBox_t): string	
minsize=	niup.html#minsize=,BackgroundBox_t,string	niup: minsize=(ih: BackgroundBox_t; value: string)	
minsize	niup.html#minsize,BackgroundBox_t,string	niup: minsize(ih: BackgroundBox_t; value: string)	
minsize=	niup.html#minsize=,BackgroundBox_t,int,int	niup: minsize=(ih: BackgroundBox_t; width, height: int)	
minsize	niup.html#minsize,BackgroundBox_t,int,int	niup: minsize(ih: BackgroundBox_t; width, height: int)	
minsize	niup.html#minsize,BackgroundBox_t	niup: minsize(ih: BackgroundBox_t): string	
name=	niup.html#name=,BackgroundBox_t,string	niup: name=(ih: BackgroundBox_t; value: string)	
name	niup.html#name,BackgroundBox_t,string	niup: name(ih: BackgroundBox_t; value: string)	
name	niup.html#name,BackgroundBox_t	niup: name(ih: BackgroundBox_t): string	
naturalsize	niup.html#naturalsize,BackgroundBox_t	niup: naturalsize(ih: BackgroundBox_t): string	
normalizergroup=	niup.html#normalizergroup=,BackgroundBox_t,string	niup: normalizergroup=(ih: BackgroundBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,BackgroundBox_t,string	niup: normalizergroup(ih: BackgroundBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,BackgroundBox_t	niup: normalizergroup(ih: BackgroundBox_t): string	
ntheme=	niup.html#ntheme=,BackgroundBox_t,string	niup: ntheme=(ih: BackgroundBox_t; value: string)	
ntheme	niup.html#ntheme,BackgroundBox_t,string	niup: ntheme(ih: BackgroundBox_t; value: string)	
ntheme	niup.html#ntheme,BackgroundBox_t	niup: ntheme(ih: BackgroundBox_t): string	
pangofontdesc	niup.html#pangofontdesc,BackgroundBox_t	niup: pangofontdesc(ih: BackgroundBox_t): string	
pangolayout	niup.html#pangolayout,BackgroundBox_t	niup: pangolayout(ih: BackgroundBox_t): string	
position=	niup.html#position=,BackgroundBox_t,string	niup: position=(ih: BackgroundBox_t; value: string)	
position	niup.html#position,BackgroundBox_t,string	niup: position(ih: BackgroundBox_t; value: string)	
position=	niup.html#position=,BackgroundBox_t,int,int	niup: position=(ih: BackgroundBox_t; x, y: int)	
position	niup.html#position,BackgroundBox_t,int,int	niup: position(ih: BackgroundBox_t; x, y: int)	
position	niup.html#position,BackgroundBox_t	niup: position(ih: BackgroundBox_t): string	
posx=	niup.html#posx=,BackgroundBox_t,string	niup: posx=(ih: BackgroundBox_t; value: string)	
posx	niup.html#posx,BackgroundBox_t,string	niup: posx(ih: BackgroundBox_t; value: string)	
posx=	niup.html#posx=,BackgroundBox_t,int64	niup: posx=(ih: BackgroundBox_t; x: int64)	
posx	niup.html#posx,BackgroundBox_t,int64	niup: posx(ih: BackgroundBox_t; x: int64)	
posx	niup.html#posx,BackgroundBox_t	niup: posx(ih: BackgroundBox_t): string	
posy=	niup.html#posy=,BackgroundBox_t,string	niup: posy=(ih: BackgroundBox_t; value: string)	
posy	niup.html#posy,BackgroundBox_t,string	niup: posy(ih: BackgroundBox_t; value: string)	
posy=	niup.html#posy=,BackgroundBox_t,int64	niup: posy=(ih: BackgroundBox_t; x: int64)	
posy	niup.html#posy,BackgroundBox_t,int64	niup: posy(ih: BackgroundBox_t; x: int64)	
posy	niup.html#posy,BackgroundBox_t	niup: posy(ih: BackgroundBox_t): string	
propagatefocus=	niup.html#propagatefocus=,BackgroundBox_t,string	niup: propagatefocus=(ih: BackgroundBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,BackgroundBox_t,string	niup: propagatefocus(ih: BackgroundBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,BackgroundBox_t,bool	niup: propagatefocus=(ih: BackgroundBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,BackgroundBox_t,bool	niup: propagatefocus(ih: BackgroundBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,BackgroundBox_t	niup: propagatefocus(ih: BackgroundBox_t): bool	
rastersize=	niup.html#rastersize=,BackgroundBox_t,string	niup: rastersize=(ih: BackgroundBox_t; value: string)	
rastersize	niup.html#rastersize,BackgroundBox_t,string	niup: rastersize(ih: BackgroundBox_t; value: string)	
rastersize=	niup.html#rastersize=,BackgroundBox_t,int,int	niup: rastersize=(ih: BackgroundBox_t; width, height: int)	
rastersize	niup.html#rastersize,BackgroundBox_t,int,int	niup: rastersize(ih: BackgroundBox_t; width, height: int)	
rastersize	niup.html#rastersize,BackgroundBox_t	niup: rastersize(ih: BackgroundBox_t): string	
sb_resize	niup.html#sb_resize,BackgroundBox_t	niup: sb_resize(ih: BackgroundBox_t): string	
screenposition	niup.html#screenposition,BackgroundBox_t	niup: screenposition(ih: BackgroundBox_t): string	
scrollbar=	niup.html#scrollbar=,BackgroundBox_t,string	niup: scrollbar=(ih: BackgroundBox_t; value: string)	
scrollbar	niup.html#scrollbar,BackgroundBox_t,string	niup: scrollbar(ih: BackgroundBox_t; value: string)	
scrollbar=	niup.html#scrollbar=,BackgroundBox_t,bool	niup: scrollbar=(ih: BackgroundBox_t; yes: bool)	
scrollbar	niup.html#scrollbar,BackgroundBox_t,bool	niup: scrollbar(ih: BackgroundBox_t; yes: bool)	
scrollbar	niup.html#scrollbar,BackgroundBox_t	niup: scrollbar(ih: BackgroundBox_t): bool	
size=	niup.html#size=,BackgroundBox_t,string	niup: size=(ih: BackgroundBox_t; value: string)	
size	niup.html#size,BackgroundBox_t,string	niup: size(ih: BackgroundBox_t; value: string)	
size=	niup.html#size=,BackgroundBox_t,int,int	niup: size=(ih: BackgroundBox_t; width, height: int)	
size	niup.html#size,BackgroundBox_t,int,int	niup: size(ih: BackgroundBox_t; width, height: int)	
size	niup.html#size,BackgroundBox_t	niup: size(ih: BackgroundBox_t): string	
theme=	niup.html#theme=,BackgroundBox_t,string	niup: theme=(ih: BackgroundBox_t; value: string)	
theme	niup.html#theme,BackgroundBox_t,string	niup: theme(ih: BackgroundBox_t; value: string)	
theme	niup.html#theme,BackgroundBox_t	niup: theme(ih: BackgroundBox_t): string	
tip=	niup.html#tip=,BackgroundBox_t,string	niup: tip=(ih: BackgroundBox_t; value: string)	
tip	niup.html#tip,BackgroundBox_t,string	niup: tip(ih: BackgroundBox_t; value: string)	
tip	niup.html#tip,BackgroundBox_t	niup: tip(ih: BackgroundBox_t): string	
tipbgcolor=	niup.html#tipbgcolor=,BackgroundBox_t,string	niup: tipbgcolor=(ih: BackgroundBox_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,BackgroundBox_t,string	niup: tipbgcolor(ih: BackgroundBox_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,BackgroundBox_t,int,int,int,int	niup: tipbgcolor=(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,BackgroundBox_t,int,int,int,int	niup: tipbgcolor(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,BackgroundBox_t	niup: tipbgcolor(ih: BackgroundBox_t): string	
tipdelay=	niup.html#tipdelay=,BackgroundBox_t,string	niup: tipdelay=(ih: BackgroundBox_t; value: string)	
tipdelay	niup.html#tipdelay,BackgroundBox_t,string	niup: tipdelay(ih: BackgroundBox_t; value: string)	
tipdelay=	niup.html#tipdelay=,BackgroundBox_t,int	niup: tipdelay=(ih: BackgroundBox_t; x: int)	
tipdelay	niup.html#tipdelay,BackgroundBox_t,int	niup: tipdelay(ih: BackgroundBox_t; x: int)	
tipdelay	niup.html#tipdelay,BackgroundBox_t	niup: tipdelay(ih: BackgroundBox_t): string	
tipfgcolor=	niup.html#tipfgcolor=,BackgroundBox_t,string	niup: tipfgcolor=(ih: BackgroundBox_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,BackgroundBox_t,string	niup: tipfgcolor(ih: BackgroundBox_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,BackgroundBox_t,int,int,int,int	niup: tipfgcolor=(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,BackgroundBox_t,int,int,int,int	niup: tipfgcolor(ih: BackgroundBox_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,BackgroundBox_t	niup: tipfgcolor(ih: BackgroundBox_t): string	
tipicon=	niup.html#tipicon=,BackgroundBox_t,string	niup: tipicon=(ih: BackgroundBox_t; value: string)	
tipicon	niup.html#tipicon,BackgroundBox_t,string	niup: tipicon(ih: BackgroundBox_t; value: string)	
tipicon	niup.html#tipicon,BackgroundBox_t	niup: tipicon(ih: BackgroundBox_t): string	
tipmarkup=	niup.html#tipmarkup=,BackgroundBox_t,string	niup: tipmarkup=(ih: BackgroundBox_t; value: string)	
tipmarkup	niup.html#tipmarkup,BackgroundBox_t,string	niup: tipmarkup(ih: BackgroundBox_t; value: string)	
tipmarkup	niup.html#tipmarkup,BackgroundBox_t	niup: tipmarkup(ih: BackgroundBox_t): string	
tiprect=	niup.html#tiprect=,BackgroundBox_t,string	niup: tiprect=(ih: BackgroundBox_t; value: string)	
tiprect	niup.html#tiprect,BackgroundBox_t,string	niup: tiprect(ih: BackgroundBox_t; value: string)	
tiprect=	niup.html#tiprect=,BackgroundBox_t,int,int,int,int	niup: tiprect=(ih: BackgroundBox_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,BackgroundBox_t,int,int,int,int	niup: tiprect(ih: BackgroundBox_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,BackgroundBox_t	niup: tiprect(ih: BackgroundBox_t): string	
tipvisible=	niup.html#tipvisible=,BackgroundBox_t,string	niup: tipvisible=(ih: BackgroundBox_t; value: string)	
tipvisible	niup.html#tipvisible,BackgroundBox_t,string	niup: tipvisible(ih: BackgroundBox_t; value: string)	
tipvisible=	niup.html#tipvisible=,BackgroundBox_t,bool	niup: tipvisible=(ih: BackgroundBox_t; yes: bool)	
tipvisible	niup.html#tipvisible,BackgroundBox_t,bool	niup: tipvisible(ih: BackgroundBox_t; yes: bool)	
tipvisible	niup.html#tipvisible,BackgroundBox_t	niup: tipvisible(ih: BackgroundBox_t): bool	
touch=	niup.html#touch=,BackgroundBox_t,string	niup: touch=(ih: BackgroundBox_t; value: string)	
touch	niup.html#touch,BackgroundBox_t,string	niup: touch(ih: BackgroundBox_t; value: string)	
touch=	niup.html#touch=,BackgroundBox_t,bool	niup: touch=(ih: BackgroundBox_t; yes: bool)	
touch	niup.html#touch,BackgroundBox_t,bool	niup: touch(ih: BackgroundBox_t; yes: bool)	
touch	niup.html#touch,BackgroundBox_t	niup: touch(ih: BackgroundBox_t): bool	
usersize=	niup.html#usersize=,BackgroundBox_t,string	niup: usersize=(ih: BackgroundBox_t; value: string)	
usersize	niup.html#usersize,BackgroundBox_t,string	niup: usersize(ih: BackgroundBox_t; value: string)	
usersize=	niup.html#usersize=,BackgroundBox_t,int,int	niup: usersize=(ih: BackgroundBox_t; width, height: int)	
usersize	niup.html#usersize,BackgroundBox_t,int,int	niup: usersize(ih: BackgroundBox_t; width, height: int)	
usersize	niup.html#usersize,BackgroundBox_t	niup: usersize(ih: BackgroundBox_t): string	
visible=	niup.html#visible=,BackgroundBox_t,string	niup: visible=(ih: BackgroundBox_t; value: string)	
visible	niup.html#visible,BackgroundBox_t,string	niup: visible(ih: BackgroundBox_t; value: string)	
visible=	niup.html#visible=,BackgroundBox_t,bool	niup: visible=(ih: BackgroundBox_t; yes: bool)	
visible	niup.html#visible,BackgroundBox_t,bool	niup: visible(ih: BackgroundBox_t; yes: bool)	
visible	niup.html#visible,BackgroundBox_t	niup: visible(ih: BackgroundBox_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,BackgroundBox_t,string	niup: wheeldropfocus=(ih: BackgroundBox_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,BackgroundBox_t,string	niup: wheeldropfocus(ih: BackgroundBox_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,BackgroundBox_t,bool	niup: wheeldropfocus=(ih: BackgroundBox_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,BackgroundBox_t,bool	niup: wheeldropfocus(ih: BackgroundBox_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,BackgroundBox_t	niup: wheeldropfocus(ih: BackgroundBox_t): bool	
wid	niup.html#wid,BackgroundBox_t	niup: wid(ih: BackgroundBox_t): string	
x	niup.html#x,BackgroundBox_t	niup: x(ih: BackgroundBox_t): string	
xautohide=	niup.html#xautohide=,BackgroundBox_t,string	niup: xautohide=(ih: BackgroundBox_t; value: string)	
xautohide	niup.html#xautohide,BackgroundBox_t,string	niup: xautohide(ih: BackgroundBox_t; value: string)	
xautohide=	niup.html#xautohide=,BackgroundBox_t,bool	niup: xautohide=(ih: BackgroundBox_t; yes: bool)	
xautohide	niup.html#xautohide,BackgroundBox_t,bool	niup: xautohide(ih: BackgroundBox_t; yes: bool)	
xautohide	niup.html#xautohide,BackgroundBox_t	niup: xautohide(ih: BackgroundBox_t): bool	
xdisplay	niup.html#xdisplay,BackgroundBox_t	niup: xdisplay(ih: BackgroundBox_t): string	
xfontid	niup.html#xfontid,BackgroundBox_t	niup: xfontid(ih: BackgroundBox_t): string	
xhidden	niup.html#xhidden,BackgroundBox_t	niup: xhidden(ih: BackgroundBox_t): bool	
xmax=	niup.html#xmax=,BackgroundBox_t,string	niup: xmax=(ih: BackgroundBox_t; value: string)	
xmax	niup.html#xmax,BackgroundBox_t,string	niup: xmax(ih: BackgroundBox_t; value: string)	
xmax=	niup.html#xmax=,BackgroundBox_t,int	niup: xmax=(ih: BackgroundBox_t; x: int)	
xmax	niup.html#xmax,BackgroundBox_t,int	niup: xmax(ih: BackgroundBox_t; x: int)	
xmax	niup.html#xmax,BackgroundBox_t	niup: xmax(ih: BackgroundBox_t): string	
xmin=	niup.html#xmin=,BackgroundBox_t,string	niup: xmin=(ih: BackgroundBox_t; value: string)	
xmin	niup.html#xmin,BackgroundBox_t,string	niup: xmin(ih: BackgroundBox_t; value: string)	
xmin=	niup.html#xmin=,BackgroundBox_t,int	niup: xmin=(ih: BackgroundBox_t; x: int)	
xmin	niup.html#xmin,BackgroundBox_t,int	niup: xmin(ih: BackgroundBox_t; x: int)	
xmin	niup.html#xmin,BackgroundBox_t	niup: xmin(ih: BackgroundBox_t): string	
xwindow	niup.html#xwindow,BackgroundBox_t	niup: xwindow(ih: BackgroundBox_t): string	
y	niup.html#y,BackgroundBox_t	niup: y(ih: BackgroundBox_t): string	
yautohide=	niup.html#yautohide=,BackgroundBox_t,string	niup: yautohide=(ih: BackgroundBox_t; value: string)	
yautohide	niup.html#yautohide,BackgroundBox_t,string	niup: yautohide(ih: BackgroundBox_t; value: string)	
yautohide=	niup.html#yautohide=,BackgroundBox_t,bool	niup: yautohide=(ih: BackgroundBox_t; yes: bool)	
yautohide	niup.html#yautohide,BackgroundBox_t,bool	niup: yautohide(ih: BackgroundBox_t; yes: bool)	
yautohide	niup.html#yautohide,BackgroundBox_t	niup: yautohide(ih: BackgroundBox_t): bool	
yhidden	niup.html#yhidden,BackgroundBox_t	niup: yhidden(ih: BackgroundBox_t): bool	
ymax=	niup.html#ymax=,BackgroundBox_t,string	niup: ymax=(ih: BackgroundBox_t; value: string)	
ymax	niup.html#ymax,BackgroundBox_t,string	niup: ymax(ih: BackgroundBox_t; value: string)	
ymax=	niup.html#ymax=,BackgroundBox_t,int	niup: ymax=(ih: BackgroundBox_t; x: int)	
ymax	niup.html#ymax,BackgroundBox_t,int	niup: ymax(ih: BackgroundBox_t; x: int)	
ymax	niup.html#ymax,BackgroundBox_t	niup: ymax(ih: BackgroundBox_t): string	
ymin=	niup.html#ymin=,BackgroundBox_t,string	niup: ymin=(ih: BackgroundBox_t; value: string)	
ymin	niup.html#ymin,BackgroundBox_t,string	niup: ymin(ih: BackgroundBox_t; value: string)	
ymin=	niup.html#ymin=,BackgroundBox_t,int	niup: ymin=(ih: BackgroundBox_t; x: int)	
ymin	niup.html#ymin,BackgroundBox_t,int	niup: ymin(ih: BackgroundBox_t; x: int)	
ymin	niup.html#ymin,BackgroundBox_t	niup: ymin(ih: BackgroundBox_t): string	
zorder=	niup.html#zorder=,BackgroundBox_t,string	niup: zorder=(ih: BackgroundBox_t; value: string)	
zorder	niup.html#zorder,BackgroundBox_t,string	niup: zorder(ih: BackgroundBox_t; value: string)	
action=	niup.html#action=,BackgroundBox_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: BackgroundBox_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,BackgroundBox_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: BackgroundBox_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,BackgroundBox_t	niup: action(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,BackgroundBox_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,BackgroundBox_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,BackgroundBox_t	niup: button_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,BackgroundBox_t,proc(PIhandle)	niup: destroy_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,BackgroundBox_t,proc(PIhandle)	niup: destroy_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,BackgroundBox_t	niup: destroy_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,BackgroundBox_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: BackgroundBox_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,BackgroundBox_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: BackgroundBox_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,BackgroundBox_t	niup: dragbegin_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,BackgroundBox_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: BackgroundBox_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,BackgroundBox_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: BackgroundBox_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,BackgroundBox_t	niup: dragdatasize_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,BackgroundBox_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,BackgroundBox_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,BackgroundBox_t	niup: dragdata_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,BackgroundBox_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: BackgroundBox_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,BackgroundBox_t,proc(PIhandle,cint)	niup: dragend_cb(ih: BackgroundBox_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,BackgroundBox_t	niup: dragend_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,BackgroundBox_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,BackgroundBox_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,BackgroundBox_t	niup: dropdata_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,BackgroundBox_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: BackgroundBox_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,BackgroundBox_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: BackgroundBox_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,BackgroundBox_t	niup: dropfiles_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,BackgroundBox_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,BackgroundBox_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,BackgroundBox_t	niup: dropmotion_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,BackgroundBox_t,proc(PIhandle)	niup: enterwindow_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,BackgroundBox_t,proc(PIhandle)	niup: enterwindow_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,BackgroundBox_t	niup: enterwindow_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,BackgroundBox_t,proc(PIhandle,cint)	niup: focus_cb=(ih: BackgroundBox_t;\n          cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,BackgroundBox_t,proc(PIhandle,cint)	niup: focus_cb(ih: BackgroundBox_t;\n         cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,BackgroundBox_t	niup: focus_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,BackgroundBox_t,proc(PIhandle)	niup: getfocus_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,BackgroundBox_t,proc(PIhandle)	niup: getfocus_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,BackgroundBox_t	niup: getfocus_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,BackgroundBox_t,proc(PIhandle)	niup: help_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,BackgroundBox_t,proc(PIhandle)	niup: help_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,BackgroundBox_t	niup: help_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,BackgroundBox_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: BackgroundBox_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,BackgroundBox_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: BackgroundBox_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,BackgroundBox_t	niup: keypress_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,BackgroundBox_t,proc(PIhandle)	niup: killfocus_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,BackgroundBox_t,proc(PIhandle)	niup: killfocus_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,BackgroundBox_t	niup: killfocus_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,BackgroundBox_t,proc(PIhandle,cint)	niup: k_any=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,BackgroundBox_t,proc(PIhandle,cint)	niup: k_any(ih: BackgroundBox_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,BackgroundBox_t	niup: k_any(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,BackgroundBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,BackgroundBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,BackgroundBox_t	niup: ldestroy_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,BackgroundBox_t,proc(PIhandle)	niup: leavewindow_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,BackgroundBox_t,proc(PIhandle)	niup: leavewindow_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,BackgroundBox_t	niup: leavewindow_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,BackgroundBox_t,proc(PIhandle)	niup: map_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,BackgroundBox_t,proc(PIhandle)	niup: map_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,BackgroundBox_t	niup: map_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,BackgroundBox_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: BackgroundBox_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,BackgroundBox_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: BackgroundBox_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,BackgroundBox_t	niup: motion_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,BackgroundBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,BackgroundBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,BackgroundBox_t	niup: postmessage_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,BackgroundBox_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: BackgroundBox_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,BackgroundBox_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: BackgroundBox_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,BackgroundBox_t	niup: resize_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,BackgroundBox_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: BackgroundBox_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,BackgroundBox_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: BackgroundBox_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,BackgroundBox_t	niup: scroll_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,BackgroundBox_t,proc(PIhandle)	niup: unmap_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,BackgroundBox_t,proc(PIhandle)	niup: unmap_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,BackgroundBox_t	niup: unmap_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,BackgroundBox_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; delta: cfloat;\n    x, y: cint; status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,BackgroundBox_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,BackgroundBox_t	niup: wheel_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,BackgroundBox_t,proc(PIhandle,cint)	niup: wom_cb=(ih: BackgroundBox_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,BackgroundBox_t,proc(PIhandle,cint)	niup: wom_cb(ih: BackgroundBox_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,BackgroundBox_t	niup: wom_cb(ih: BackgroundBox_t): proc (ih: PIhandle): cint {.cdecl.}	
Button	niup.html#Button,string,string	niup: Button(title: string; action: string): Button_t	
Button	niup.html#Button,string	niup: Button(title: string): Button_t	
active=	niup.html#active=,Button_t,string	niup: active=(ih: Button_t; value: string)	
active	niup.html#active,Button_t,string	niup: active(ih: Button_t; value: string)	
active=	niup.html#active=,Button_t,bool	niup: active=(ih: Button_t; yes: bool)	
active	niup.html#active,Button_t,bool	niup: active(ih: Button_t; yes: bool)	
active	niup.html#active,Button_t	niup: active(ih: Button_t): bool	
alignment=	niup.html#alignment=,Button_t,string	niup: alignment=(ih: Button_t; value: string)	
alignment	niup.html#alignment,Button_t,string	niup: alignment(ih: Button_t; value: string)	
alignment	niup.html#alignment,Button_t	niup: alignment(ih: Button_t): string	
bgcolor=	niup.html#bgcolor=,Button_t,string	niup: bgcolor=(ih: Button_t; value: string)	
bgcolor	niup.html#bgcolor,Button_t,string	niup: bgcolor(ih: Button_t; value: string)	
bgcolor=	niup.html#bgcolor=,Button_t,int,int,int,int	niup: bgcolor=(ih: Button_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Button_t,int,int,int,int	niup: bgcolor(ih: Button_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Button_t	niup: bgcolor(ih: Button_t): string	
canfocus=	niup.html#canfocus=,Button_t,string	niup: canfocus=(ih: Button_t; value: string)	
canfocus	niup.html#canfocus,Button_t,string	niup: canfocus(ih: Button_t; value: string)	
canfocus=	niup.html#canfocus=,Button_t,bool	niup: canfocus=(ih: Button_t; yes: bool)	
canfocus	niup.html#canfocus,Button_t,bool	niup: canfocus(ih: Button_t; yes: bool)	
canfocus	niup.html#canfocus,Button_t	niup: canfocus(ih: Button_t): bool	
charsize	niup.html#charsize,Button_t	niup: charsize(ih: Button_t): string	
cpadding=	niup.html#cpadding=,Button_t,string	niup: cpadding=(ih: Button_t; value: string)	
cpadding	niup.html#cpadding,Button_t,string	niup: cpadding(ih: Button_t; value: string)	
cpadding=	niup.html#cpadding=,Button_t,int,int	niup: cpadding=(ih: Button_t; width, height: int)	
cpadding	niup.html#cpadding,Button_t,int,int	niup: cpadding(ih: Button_t; width, height: int)	
cpadding	niup.html#cpadding,Button_t	niup: cpadding(ih: Button_t): string	
cspacing=	niup.html#cspacing=,Button_t,string	niup: cspacing=(ih: Button_t; value: string)	
cspacing	niup.html#cspacing,Button_t,string	niup: cspacing(ih: Button_t; value: string)	
cspacing=	niup.html#cspacing=,Button_t,int	niup: cspacing=(ih: Button_t; x: int)	
cspacing	niup.html#cspacing,Button_t,int	niup: cspacing(ih: Button_t; x: int)	
cspacing	niup.html#cspacing,Button_t	niup: cspacing(ih: Button_t): string	
expand=	niup.html#expand=,Button_t,string	niup: expand=(ih: Button_t; value: string)	
expand	niup.html#expand,Button_t,string	niup: expand(ih: Button_t; value: string)	
expand	niup.html#expand,Button_t	niup: expand(ih: Button_t): string	
expandweight=	niup.html#expandweight=,Button_t,string	niup: expandweight=(ih: Button_t; value: string)	
expandweight	niup.html#expandweight,Button_t,string	niup: expandweight(ih: Button_t; value: string)	
expandweight=	niup.html#expandweight=,Button_t,int64	niup: expandweight=(ih: Button_t; x: int64)	
expandweight	niup.html#expandweight,Button_t,int64	niup: expandweight(ih: Button_t; x: int64)	
expandweight	niup.html#expandweight,Button_t	niup: expandweight(ih: Button_t): string	
fgcolor=	niup.html#fgcolor=,Button_t,string	niup: fgcolor=(ih: Button_t; value: string)	
fgcolor	niup.html#fgcolor,Button_t,string	niup: fgcolor(ih: Button_t; value: string)	
fgcolor=	niup.html#fgcolor=,Button_t,int,int,int,int	niup: fgcolor=(ih: Button_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Button_t,int,int,int,int	niup: fgcolor(ih: Button_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Button_t	niup: fgcolor(ih: Button_t): string	
flat=	niup.html#flat=,Button_t,string	niup: flat=(ih: Button_t; value: string)	
flat	niup.html#flat,Button_t,string	niup: flat(ih: Button_t; value: string)	
flat=	niup.html#flat=,Button_t,bool	niup: flat=(ih: Button_t; yes: bool)	
flat	niup.html#flat,Button_t,bool	niup: flat(ih: Button_t; yes: bool)	
flat	niup.html#flat,Button_t	niup: flat(ih: Button_t): bool	
floating=	niup.html#floating=,Button_t,string	niup: floating=(ih: Button_t; value: string)	
floating	niup.html#floating,Button_t,string	niup: floating(ih: Button_t; value: string)	
floating	niup.html#floating,Button_t	niup: floating(ih: Button_t): string	
focusonclick	niup.html#focusonclick,Button_t	niup: focusonclick(ih: Button_t): string	
font=	niup.html#font=,Button_t,string	niup: font=(ih: Button_t; value: string)	
font	niup.html#font,Button_t,string	niup: font(ih: Button_t; value: string)	
font	niup.html#font,Button_t	niup: font(ih: Button_t): string	
fontface=	niup.html#fontface=,Button_t,string	niup: fontface=(ih: Button_t; value: string)	
fontface	niup.html#fontface,Button_t,string	niup: fontface(ih: Button_t; value: string)	
fontface	niup.html#fontface,Button_t	niup: fontface(ih: Button_t): string	
fontsize=	niup.html#fontsize=,Button_t,string	niup: fontsize=(ih: Button_t; value: string)	
fontsize	niup.html#fontsize,Button_t,string	niup: fontsize(ih: Button_t; value: string)	
fontsize=	niup.html#fontsize=,Button_t,int	niup: fontsize=(ih: Button_t; x: int)	
fontsize	niup.html#fontsize,Button_t,int	niup: fontsize(ih: Button_t; x: int)	
fontsize	niup.html#fontsize,Button_t	niup: fontsize(ih: Button_t): string	
fontstyle=	niup.html#fontstyle=,Button_t,string	niup: fontstyle=(ih: Button_t; value: string)	
fontstyle	niup.html#fontstyle,Button_t,string	niup: fontstyle(ih: Button_t; value: string)	
fontstyle	niup.html#fontstyle,Button_t	niup: fontstyle(ih: Button_t): string	
handlename=	niup.html#handlename=,Button_t,string	niup: handlename=(ih: Button_t; value: string)	
handlename	niup.html#handlename,Button_t,string	niup: handlename(ih: Button_t; value: string)	
handlename	niup.html#handlename,Button_t	niup: handlename(ih: Button_t): string	
image=	niup.html#image=,Button_t,	niup: image=(ih: Button_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Button_t,	niup: image(ih: Button_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Button_t	niup: image(ih: Button_t): string	
imageposition=	niup.html#imageposition=,Button_t,string	niup: imageposition=(ih: Button_t; value: string)	
imageposition	niup.html#imageposition,Button_t,string	niup: imageposition(ih: Button_t; value: string)	
imageposition	niup.html#imageposition,Button_t	niup: imageposition(ih: Button_t): string	
iminactive=	niup.html#iminactive=,Button_t,	niup: iminactive=(ih: Button_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Button_t,	niup: iminactive(ih: Button_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Button_t	niup: iminactive(ih: Button_t): string	
impress=	niup.html#impress=,Button_t,	niup: impress=(ih: Button_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
impress	niup.html#impress,Button_t,	niup: impress(ih: Button_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
impress	niup.html#impress,Button_t	niup: impress(ih: Button_t): string	
impressborder	niup.html#impressborder,Button_t	niup: impressborder(ih: Button_t): string	
markup=	niup.html#markup=,Button_t,string	niup: markup=(ih: Button_t; value: string)	
markup	niup.html#markup,Button_t,string	niup: markup(ih: Button_t; value: string)	
markup=	niup.html#markup=,Button_t,bool	niup: markup=(ih: Button_t; yes: bool)	
markup	niup.html#markup,Button_t,bool	niup: markup(ih: Button_t; yes: bool)	
markup	niup.html#markup,Button_t	niup: markup(ih: Button_t): bool	
maxsize=	niup.html#maxsize=,Button_t,string	niup: maxsize=(ih: Button_t; value: string)	
maxsize	niup.html#maxsize,Button_t,string	niup: maxsize(ih: Button_t; value: string)	
maxsize=	niup.html#maxsize=,Button_t,int,int	niup: maxsize=(ih: Button_t; width, height: int)	
maxsize	niup.html#maxsize,Button_t,int,int	niup: maxsize(ih: Button_t; width, height: int)	
maxsize	niup.html#maxsize,Button_t	niup: maxsize(ih: Button_t): string	
minsize=	niup.html#minsize=,Button_t,string	niup: minsize=(ih: Button_t; value: string)	
minsize	niup.html#minsize,Button_t,string	niup: minsize(ih: Button_t; value: string)	
minsize=	niup.html#minsize=,Button_t,int,int	niup: minsize=(ih: Button_t; width, height: int)	
minsize	niup.html#minsize,Button_t,int,int	niup: minsize(ih: Button_t; width, height: int)	
minsize	niup.html#minsize,Button_t	niup: minsize(ih: Button_t): string	
name=	niup.html#name=,Button_t,string	niup: name=(ih: Button_t; value: string)	
name	niup.html#name,Button_t,string	niup: name(ih: Button_t; value: string)	
name	niup.html#name,Button_t	niup: name(ih: Button_t): string	
naturalsize	niup.html#naturalsize,Button_t	niup: naturalsize(ih: Button_t): string	
normalizergroup=	niup.html#normalizergroup=,Button_t,string	niup: normalizergroup=(ih: Button_t; value: string)	
normalizergroup	niup.html#normalizergroup,Button_t,string	niup: normalizergroup(ih: Button_t; value: string)	
normalizergroup	niup.html#normalizergroup,Button_t	niup: normalizergroup(ih: Button_t): string	
ntheme=	niup.html#ntheme=,Button_t,string	niup: ntheme=(ih: Button_t; value: string)	
ntheme	niup.html#ntheme,Button_t,string	niup: ntheme(ih: Button_t; value: string)	
ntheme	niup.html#ntheme,Button_t	niup: ntheme(ih: Button_t): string	
padding=	niup.html#padding=,Button_t,string	niup: padding=(ih: Button_t; value: string)	
padding	niup.html#padding,Button_t,string	niup: padding(ih: Button_t; value: string)	
padding=	niup.html#padding=,Button_t,int,int	niup: padding=(ih: Button_t; width, height: int)	
padding	niup.html#padding,Button_t,int,int	niup: padding(ih: Button_t; width, height: int)	
padding	niup.html#padding,Button_t	niup: padding(ih: Button_t): string	
pangofontdesc	niup.html#pangofontdesc,Button_t	niup: pangofontdesc(ih: Button_t): string	
pangolayout	niup.html#pangolayout,Button_t	niup: pangolayout(ih: Button_t): string	
position=	niup.html#position=,Button_t,string	niup: position=(ih: Button_t; value: string)	
position	niup.html#position,Button_t,string	niup: position(ih: Button_t; value: string)	
position=	niup.html#position=,Button_t,int,int	niup: position=(ih: Button_t; x, y: int)	
position	niup.html#position,Button_t,int,int	niup: position(ih: Button_t; x, y: int)	
position	niup.html#position,Button_t	niup: position(ih: Button_t): string	
propagatefocus=	niup.html#propagatefocus=,Button_t,string	niup: propagatefocus=(ih: Button_t; value: string)	
propagatefocus	niup.html#propagatefocus,Button_t,string	niup: propagatefocus(ih: Button_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Button_t,bool	niup: propagatefocus=(ih: Button_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Button_t,bool	niup: propagatefocus(ih: Button_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Button_t	niup: propagatefocus(ih: Button_t): bool	
rastersize=	niup.html#rastersize=,Button_t,string	niup: rastersize=(ih: Button_t; value: string)	
rastersize	niup.html#rastersize,Button_t,string	niup: rastersize(ih: Button_t; value: string)	
rastersize=	niup.html#rastersize=,Button_t,int,int	niup: rastersize=(ih: Button_t; width, height: int)	
rastersize	niup.html#rastersize,Button_t,int,int	niup: rastersize(ih: Button_t; width, height: int)	
rastersize	niup.html#rastersize,Button_t	niup: rastersize(ih: Button_t): string	
screenposition	niup.html#screenposition,Button_t	niup: screenposition(ih: Button_t): string	
size=	niup.html#size=,Button_t,string	niup: size=(ih: Button_t; value: string)	
size	niup.html#size,Button_t,string	niup: size(ih: Button_t; value: string)	
size=	niup.html#size=,Button_t,int,int	niup: size=(ih: Button_t; width, height: int)	
size	niup.html#size,Button_t,int,int	niup: size(ih: Button_t; width, height: int)	
size	niup.html#size,Button_t	niup: size(ih: Button_t): string	
spacing=	niup.html#spacing=,Button_t,string	niup: spacing=(ih: Button_t; value: string)	
spacing	niup.html#spacing,Button_t,string	niup: spacing(ih: Button_t; value: string)	
spacing=	niup.html#spacing=,Button_t,int	niup: spacing=(ih: Button_t; x: int)	
spacing	niup.html#spacing,Button_t,int	niup: spacing(ih: Button_t; x: int)	
spacing	niup.html#spacing,Button_t	niup: spacing(ih: Button_t): string	
theme=	niup.html#theme=,Button_t,string	niup: theme=(ih: Button_t; value: string)	
theme	niup.html#theme,Button_t,string	niup: theme(ih: Button_t; value: string)	
theme	niup.html#theme,Button_t	niup: theme(ih: Button_t): string	
tip=	niup.html#tip=,Button_t,string	niup: tip=(ih: Button_t; value: string)	
tip	niup.html#tip,Button_t,string	niup: tip(ih: Button_t; value: string)	
tip	niup.html#tip,Button_t	niup: tip(ih: Button_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Button_t,string	niup: tipbgcolor=(ih: Button_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Button_t,string	niup: tipbgcolor(ih: Button_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Button_t,int,int,int,int	niup: tipbgcolor=(ih: Button_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Button_t,int,int,int,int	niup: tipbgcolor(ih: Button_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Button_t	niup: tipbgcolor(ih: Button_t): string	
tipdelay=	niup.html#tipdelay=,Button_t,string	niup: tipdelay=(ih: Button_t; value: string)	
tipdelay	niup.html#tipdelay,Button_t,string	niup: tipdelay(ih: Button_t; value: string)	
tipdelay=	niup.html#tipdelay=,Button_t,int	niup: tipdelay=(ih: Button_t; x: int)	
tipdelay	niup.html#tipdelay,Button_t,int	niup: tipdelay(ih: Button_t; x: int)	
tipdelay	niup.html#tipdelay,Button_t	niup: tipdelay(ih: Button_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Button_t,string	niup: tipfgcolor=(ih: Button_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Button_t,string	niup: tipfgcolor(ih: Button_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Button_t,int,int,int,int	niup: tipfgcolor=(ih: Button_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Button_t,int,int,int,int	niup: tipfgcolor(ih: Button_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Button_t	niup: tipfgcolor(ih: Button_t): string	
tipicon=	niup.html#tipicon=,Button_t,string	niup: tipicon=(ih: Button_t; value: string)	
tipicon	niup.html#tipicon,Button_t,string	niup: tipicon(ih: Button_t; value: string)	
tipicon	niup.html#tipicon,Button_t	niup: tipicon(ih: Button_t): string	
tipmarkup=	niup.html#tipmarkup=,Button_t,string	niup: tipmarkup=(ih: Button_t; value: string)	
tipmarkup	niup.html#tipmarkup,Button_t,string	niup: tipmarkup(ih: Button_t; value: string)	
tipmarkup	niup.html#tipmarkup,Button_t	niup: tipmarkup(ih: Button_t): string	
tiprect=	niup.html#tiprect=,Button_t,string	niup: tiprect=(ih: Button_t; value: string)	
tiprect	niup.html#tiprect,Button_t,string	niup: tiprect(ih: Button_t; value: string)	
tiprect=	niup.html#tiprect=,Button_t,int,int,int,int	niup: tiprect=(ih: Button_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Button_t,int,int,int,int	niup: tiprect(ih: Button_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Button_t	niup: tiprect(ih: Button_t): string	
tipvisible=	niup.html#tipvisible=,Button_t,string	niup: tipvisible=(ih: Button_t; value: string)	
tipvisible	niup.html#tipvisible,Button_t,string	niup: tipvisible(ih: Button_t; value: string)	
tipvisible=	niup.html#tipvisible=,Button_t,bool	niup: tipvisible=(ih: Button_t; yes: bool)	
tipvisible	niup.html#tipvisible,Button_t,bool	niup: tipvisible(ih: Button_t; yes: bool)	
tipvisible	niup.html#tipvisible,Button_t	niup: tipvisible(ih: Button_t): bool	
title=	niup.html#title=,Button_t,string	niup: title=(ih: Button_t; value: string)	
title	niup.html#title,Button_t,string	niup: title(ih: Button_t; value: string)	
title	niup.html#title,Button_t	niup: title(ih: Button_t): string	
usersize=	niup.html#usersize=,Button_t,string	niup: usersize=(ih: Button_t; value: string)	
usersize	niup.html#usersize,Button_t,string	niup: usersize(ih: Button_t; value: string)	
usersize=	niup.html#usersize=,Button_t,int,int	niup: usersize=(ih: Button_t; width, height: int)	
usersize	niup.html#usersize,Button_t,int,int	niup: usersize(ih: Button_t; width, height: int)	
usersize	niup.html#usersize,Button_t	niup: usersize(ih: Button_t): string	
visible=	niup.html#visible=,Button_t,string	niup: visible=(ih: Button_t; value: string)	
visible	niup.html#visible,Button_t,string	niup: visible(ih: Button_t; value: string)	
visible=	niup.html#visible=,Button_t,bool	niup: visible=(ih: Button_t; yes: bool)	
visible	niup.html#visible,Button_t,bool	niup: visible(ih: Button_t; yes: bool)	
visible	niup.html#visible,Button_t	niup: visible(ih: Button_t): bool	
wid	niup.html#wid,Button_t	niup: wid(ih: Button_t): string	
x	niup.html#x,Button_t	niup: x(ih: Button_t): string	
xfontid	niup.html#xfontid,Button_t	niup: xfontid(ih: Button_t): string	
y	niup.html#y,Button_t	niup: y(ih: Button_t): string	
zorder=	niup.html#zorder=,Button_t,string	niup: zorder=(ih: Button_t; value: string)	
zorder	niup.html#zorder,Button_t,string	niup: zorder(ih: Button_t; value: string)	
action=	niup.html#action=,Button_t,proc(PIhandle)	niup: action=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action	niup.html#action,Button_t,proc(PIhandle)	niup: action(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action	niup.html#action,Button_t	niup: action(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Button_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Button_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                   arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Button_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Button_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                  arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Button_t	niup: button_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Button_t,proc(PIhandle)	niup: destroy_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Button_t,proc(PIhandle)	niup: destroy_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Button_t	niup: destroy_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Button_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Button_t,proc(PIhandle)	niup: enterwindow_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Button_t	niup: enterwindow_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Button_t,proc(PIhandle)	niup: getfocus_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Button_t,proc(PIhandle)	niup: getfocus_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Button_t	niup: getfocus_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Button_t,proc(PIhandle)	niup: help_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Button_t,proc(PIhandle)	niup: help_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Button_t	niup: help_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Button_t,proc(PIhandle)	niup: killfocus_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Button_t,proc(PIhandle)	niup: killfocus_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Button_t	niup: killfocus_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Button_t,proc(PIhandle,cint)	niup: k_any=(ih: Button_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Button_t,proc(PIhandle,cint)	niup: k_any(ih: Button_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Button_t	niup: k_any(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Button_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Button_t,proc(PIhandle)	niup: ldestroy_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Button_t	niup: ldestroy_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Button_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Button_t,proc(PIhandle)	niup: leavewindow_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Button_t	niup: leavewindow_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Button_t,proc(PIhandle)	niup: map_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Button_t,proc(PIhandle)	niup: map_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Button_t	niup: map_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Button_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Button_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Button_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Button_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Button_t	niup: postmessage_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Button_t,proc(PIhandle)	niup: unmap_cb=(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Button_t,proc(PIhandle)	niup: unmap_cb(ih: Button_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Button_t	niup: unmap_cb(ih: Button_t): proc (ih: PIhandle): cint {.cdecl.}	
Calendar	niup.html#Calendar_2	niup: Calendar(): Calendar_t	
active=	niup.html#active=,Calendar_t,string	niup: active=(ih: Calendar_t; value: string)	
active	niup.html#active,Calendar_t,string	niup: active(ih: Calendar_t; value: string)	
active=	niup.html#active=,Calendar_t,bool	niup: active=(ih: Calendar_t; yes: bool)	
active	niup.html#active,Calendar_t,bool	niup: active(ih: Calendar_t; yes: bool)	
active	niup.html#active,Calendar_t	niup: active(ih: Calendar_t): bool	
canfocus=	niup.html#canfocus=,Calendar_t,string	niup: canfocus=(ih: Calendar_t; value: string)	
canfocus	niup.html#canfocus,Calendar_t,string	niup: canfocus(ih: Calendar_t; value: string)	
canfocus=	niup.html#canfocus=,Calendar_t,bool	niup: canfocus=(ih: Calendar_t; yes: bool)	
canfocus	niup.html#canfocus,Calendar_t,bool	niup: canfocus(ih: Calendar_t; yes: bool)	
canfocus	niup.html#canfocus,Calendar_t	niup: canfocus(ih: Calendar_t): bool	
charsize	niup.html#charsize,Calendar_t	niup: charsize(ih: Calendar_t): string	
expand=	niup.html#expand=,Calendar_t,string	niup: expand=(ih: Calendar_t; value: string)	
expand	niup.html#expand,Calendar_t,string	niup: expand(ih: Calendar_t; value: string)	
expand	niup.html#expand,Calendar_t	niup: expand(ih: Calendar_t): string	
expandweight=	niup.html#expandweight=,Calendar_t,string	niup: expandweight=(ih: Calendar_t; value: string)	
expandweight	niup.html#expandweight,Calendar_t,string	niup: expandweight(ih: Calendar_t; value: string)	
expandweight=	niup.html#expandweight=,Calendar_t,int64	niup: expandweight=(ih: Calendar_t; x: int64)	
expandweight	niup.html#expandweight,Calendar_t,int64	niup: expandweight(ih: Calendar_t; x: int64)	
expandweight	niup.html#expandweight,Calendar_t	niup: expandweight(ih: Calendar_t): string	
floating=	niup.html#floating=,Calendar_t,string	niup: floating=(ih: Calendar_t; value: string)	
floating	niup.html#floating,Calendar_t,string	niup: floating(ih: Calendar_t; value: string)	
floating	niup.html#floating,Calendar_t	niup: floating(ih: Calendar_t): string	
font=	niup.html#font=,Calendar_t,string	niup: font=(ih: Calendar_t; value: string)	
font	niup.html#font,Calendar_t,string	niup: font(ih: Calendar_t; value: string)	
font	niup.html#font,Calendar_t	niup: font(ih: Calendar_t): string	
fontface=	niup.html#fontface=,Calendar_t,string	niup: fontface=(ih: Calendar_t; value: string)	
fontface	niup.html#fontface,Calendar_t,string	niup: fontface(ih: Calendar_t; value: string)	
fontface	niup.html#fontface,Calendar_t	niup: fontface(ih: Calendar_t): string	
fontsize=	niup.html#fontsize=,Calendar_t,string	niup: fontsize=(ih: Calendar_t; value: string)	
fontsize	niup.html#fontsize,Calendar_t,string	niup: fontsize(ih: Calendar_t; value: string)	
fontsize=	niup.html#fontsize=,Calendar_t,int	niup: fontsize=(ih: Calendar_t; x: int)	
fontsize	niup.html#fontsize,Calendar_t,int	niup: fontsize(ih: Calendar_t; x: int)	
fontsize	niup.html#fontsize,Calendar_t	niup: fontsize(ih: Calendar_t): string	
fontstyle=	niup.html#fontstyle=,Calendar_t,string	niup: fontstyle=(ih: Calendar_t; value: string)	
fontstyle	niup.html#fontstyle,Calendar_t,string	niup: fontstyle(ih: Calendar_t; value: string)	
fontstyle	niup.html#fontstyle,Calendar_t	niup: fontstyle(ih: Calendar_t): string	
handlename=	niup.html#handlename=,Calendar_t,string	niup: handlename=(ih: Calendar_t; value: string)	
handlename	niup.html#handlename,Calendar_t,string	niup: handlename(ih: Calendar_t; value: string)	
handlename	niup.html#handlename,Calendar_t	niup: handlename(ih: Calendar_t): string	
maxsize=	niup.html#maxsize=,Calendar_t,string	niup: maxsize=(ih: Calendar_t; value: string)	
maxsize	niup.html#maxsize,Calendar_t,string	niup: maxsize(ih: Calendar_t; value: string)	
maxsize=	niup.html#maxsize=,Calendar_t,int,int	niup: maxsize=(ih: Calendar_t; width, height: int)	
maxsize	niup.html#maxsize,Calendar_t,int,int	niup: maxsize(ih: Calendar_t; width, height: int)	
maxsize	niup.html#maxsize,Calendar_t	niup: maxsize(ih: Calendar_t): string	
minsize=	niup.html#minsize=,Calendar_t,string	niup: minsize=(ih: Calendar_t; value: string)	
minsize	niup.html#minsize,Calendar_t,string	niup: minsize(ih: Calendar_t; value: string)	
minsize=	niup.html#minsize=,Calendar_t,int,int	niup: minsize=(ih: Calendar_t; width, height: int)	
minsize	niup.html#minsize,Calendar_t,int,int	niup: minsize(ih: Calendar_t; width, height: int)	
minsize	niup.html#minsize,Calendar_t	niup: minsize(ih: Calendar_t): string	
name=	niup.html#name=,Calendar_t,string	niup: name=(ih: Calendar_t; value: string)	
name	niup.html#name,Calendar_t,string	niup: name(ih: Calendar_t; value: string)	
name	niup.html#name,Calendar_t	niup: name(ih: Calendar_t): string	
naturalsize	niup.html#naturalsize,Calendar_t	niup: naturalsize(ih: Calendar_t): string	
normalizergroup=	niup.html#normalizergroup=,Calendar_t,string	niup: normalizergroup=(ih: Calendar_t; value: string)	
normalizergroup	niup.html#normalizergroup,Calendar_t,string	niup: normalizergroup(ih: Calendar_t; value: string)	
normalizergroup	niup.html#normalizergroup,Calendar_t	niup: normalizergroup(ih: Calendar_t): string	
ntheme=	niup.html#ntheme=,Calendar_t,string	niup: ntheme=(ih: Calendar_t; value: string)	
ntheme	niup.html#ntheme,Calendar_t,string	niup: ntheme(ih: Calendar_t; value: string)	
ntheme	niup.html#ntheme,Calendar_t	niup: ntheme(ih: Calendar_t): string	
pangofontdesc	niup.html#pangofontdesc,Calendar_t	niup: pangofontdesc(ih: Calendar_t): string	
pangolayout	niup.html#pangolayout,Calendar_t	niup: pangolayout(ih: Calendar_t): string	
position=	niup.html#position=,Calendar_t,string	niup: position=(ih: Calendar_t; value: string)	
position	niup.html#position,Calendar_t,string	niup: position(ih: Calendar_t; value: string)	
position=	niup.html#position=,Calendar_t,int,int	niup: position=(ih: Calendar_t; x, y: int)	
position	niup.html#position,Calendar_t,int,int	niup: position(ih: Calendar_t; x, y: int)	
position	niup.html#position,Calendar_t	niup: position(ih: Calendar_t): string	
propagatefocus=	niup.html#propagatefocus=,Calendar_t,string	niup: propagatefocus=(ih: Calendar_t; value: string)	
propagatefocus	niup.html#propagatefocus,Calendar_t,string	niup: propagatefocus(ih: Calendar_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Calendar_t,bool	niup: propagatefocus=(ih: Calendar_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Calendar_t,bool	niup: propagatefocus(ih: Calendar_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Calendar_t	niup: propagatefocus(ih: Calendar_t): bool	
rastersize=	niup.html#rastersize=,Calendar_t,string	niup: rastersize=(ih: Calendar_t; value: string)	
rastersize	niup.html#rastersize,Calendar_t,string	niup: rastersize(ih: Calendar_t; value: string)	
rastersize=	niup.html#rastersize=,Calendar_t,int,int	niup: rastersize=(ih: Calendar_t; width, height: int)	
rastersize	niup.html#rastersize,Calendar_t,int,int	niup: rastersize(ih: Calendar_t; width, height: int)	
rastersize	niup.html#rastersize,Calendar_t	niup: rastersize(ih: Calendar_t): string	
screenposition	niup.html#screenposition,Calendar_t	niup: screenposition(ih: Calendar_t): string	
size=	niup.html#size=,Calendar_t,string	niup: size=(ih: Calendar_t; value: string)	
size	niup.html#size,Calendar_t,string	niup: size(ih: Calendar_t; value: string)	
size=	niup.html#size=,Calendar_t,int,int	niup: size=(ih: Calendar_t; width, height: int)	
size	niup.html#size,Calendar_t,int,int	niup: size(ih: Calendar_t; width, height: int)	
size	niup.html#size,Calendar_t	niup: size(ih: Calendar_t): string	
theme=	niup.html#theme=,Calendar_t,string	niup: theme=(ih: Calendar_t; value: string)	
theme	niup.html#theme,Calendar_t,string	niup: theme(ih: Calendar_t; value: string)	
theme	niup.html#theme,Calendar_t	niup: theme(ih: Calendar_t): string	
tip=	niup.html#tip=,Calendar_t,string	niup: tip=(ih: Calendar_t; value: string)	
tip	niup.html#tip,Calendar_t,string	niup: tip(ih: Calendar_t; value: string)	
tip	niup.html#tip,Calendar_t	niup: tip(ih: Calendar_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Calendar_t,string	niup: tipbgcolor=(ih: Calendar_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Calendar_t,string	niup: tipbgcolor(ih: Calendar_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Calendar_t,int,int,int,int	niup: tipbgcolor=(ih: Calendar_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Calendar_t,int,int,int,int	niup: tipbgcolor(ih: Calendar_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Calendar_t	niup: tipbgcolor(ih: Calendar_t): string	
tipdelay=	niup.html#tipdelay=,Calendar_t,string	niup: tipdelay=(ih: Calendar_t; value: string)	
tipdelay	niup.html#tipdelay,Calendar_t,string	niup: tipdelay(ih: Calendar_t; value: string)	
tipdelay=	niup.html#tipdelay=,Calendar_t,int	niup: tipdelay=(ih: Calendar_t; x: int)	
tipdelay	niup.html#tipdelay,Calendar_t,int	niup: tipdelay(ih: Calendar_t; x: int)	
tipdelay	niup.html#tipdelay,Calendar_t	niup: tipdelay(ih: Calendar_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Calendar_t,string	niup: tipfgcolor=(ih: Calendar_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Calendar_t,string	niup: tipfgcolor(ih: Calendar_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Calendar_t,int,int,int,int	niup: tipfgcolor=(ih: Calendar_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Calendar_t,int,int,int,int	niup: tipfgcolor(ih: Calendar_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Calendar_t	niup: tipfgcolor(ih: Calendar_t): string	
tipicon=	niup.html#tipicon=,Calendar_t,string	niup: tipicon=(ih: Calendar_t; value: string)	
tipicon	niup.html#tipicon,Calendar_t,string	niup: tipicon(ih: Calendar_t; value: string)	
tipicon	niup.html#tipicon,Calendar_t	niup: tipicon(ih: Calendar_t): string	
tipmarkup=	niup.html#tipmarkup=,Calendar_t,string	niup: tipmarkup=(ih: Calendar_t; value: string)	
tipmarkup	niup.html#tipmarkup,Calendar_t,string	niup: tipmarkup(ih: Calendar_t; value: string)	
tipmarkup	niup.html#tipmarkup,Calendar_t	niup: tipmarkup(ih: Calendar_t): string	
tiprect=	niup.html#tiprect=,Calendar_t,string	niup: tiprect=(ih: Calendar_t; value: string)	
tiprect	niup.html#tiprect,Calendar_t,string	niup: tiprect(ih: Calendar_t; value: string)	
tiprect=	niup.html#tiprect=,Calendar_t,int,int,int,int	niup: tiprect=(ih: Calendar_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Calendar_t,int,int,int,int	niup: tiprect(ih: Calendar_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Calendar_t	niup: tiprect(ih: Calendar_t): string	
tipvisible=	niup.html#tipvisible=,Calendar_t,string	niup: tipvisible=(ih: Calendar_t; value: string)	
tipvisible	niup.html#tipvisible,Calendar_t,string	niup: tipvisible(ih: Calendar_t; value: string)	
tipvisible=	niup.html#tipvisible=,Calendar_t,bool	niup: tipvisible=(ih: Calendar_t; yes: bool)	
tipvisible	niup.html#tipvisible,Calendar_t,bool	niup: tipvisible(ih: Calendar_t; yes: bool)	
tipvisible	niup.html#tipvisible,Calendar_t	niup: tipvisible(ih: Calendar_t): bool	
today	niup.html#today,Calendar_t	niup: today(ih: Calendar_t): string	
usersize=	niup.html#usersize=,Calendar_t,string	niup: usersize=(ih: Calendar_t; value: string)	
usersize	niup.html#usersize,Calendar_t,string	niup: usersize(ih: Calendar_t; value: string)	
usersize=	niup.html#usersize=,Calendar_t,int,int	niup: usersize=(ih: Calendar_t; width, height: int)	
usersize	niup.html#usersize,Calendar_t,int,int	niup: usersize(ih: Calendar_t; width, height: int)	
usersize	niup.html#usersize,Calendar_t	niup: usersize(ih: Calendar_t): string	
value=	niup.html#value=,Calendar_t,string	niup: value=(ih: Calendar_t; value: string)	
value	niup.html#value,Calendar_t,string	niup: value(ih: Calendar_t; value: string)	
value	niup.html#value,Calendar_t	niup: value(ih: Calendar_t): string	
visible=	niup.html#visible=,Calendar_t,string	niup: visible=(ih: Calendar_t; value: string)	
visible	niup.html#visible,Calendar_t,string	niup: visible(ih: Calendar_t; value: string)	
visible=	niup.html#visible=,Calendar_t,bool	niup: visible=(ih: Calendar_t; yes: bool)	
visible	niup.html#visible,Calendar_t,bool	niup: visible(ih: Calendar_t; yes: bool)	
visible	niup.html#visible,Calendar_t	niup: visible(ih: Calendar_t): bool	
weeknumbers	niup.html#weeknumbers,Calendar_t	niup: weeknumbers(ih: Calendar_t): string	
wid	niup.html#wid,Calendar_t	niup: wid(ih: Calendar_t): string	
x	niup.html#x,Calendar_t	niup: x(ih: Calendar_t): string	
xfontid	niup.html#xfontid,Calendar_t	niup: xfontid(ih: Calendar_t): string	
y	niup.html#y,Calendar_t	niup: y(ih: Calendar_t): string	
zorder=	niup.html#zorder=,Calendar_t,string	niup: zorder=(ih: Calendar_t; value: string)	
zorder	niup.html#zorder,Calendar_t,string	niup: zorder(ih: Calendar_t; value: string)	
destroy_cb=	niup.html#destroy_cb=,Calendar_t,proc(PIhandle)	niup: destroy_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Calendar_t,proc(PIhandle)	niup: destroy_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Calendar_t	niup: destroy_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Calendar_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Calendar_t,proc(PIhandle)	niup: enterwindow_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Calendar_t	niup: enterwindow_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Calendar_t,proc(PIhandle)	niup: getfocus_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Calendar_t,proc(PIhandle)	niup: getfocus_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Calendar_t	niup: getfocus_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Calendar_t,proc(PIhandle)	niup: help_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Calendar_t,proc(PIhandle)	niup: help_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Calendar_t	niup: help_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Calendar_t,proc(PIhandle)	niup: killfocus_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Calendar_t,proc(PIhandle)	niup: killfocus_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Calendar_t	niup: killfocus_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Calendar_t,proc(PIhandle,cint)	niup: k_any=(ih: Calendar_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Calendar_t,proc(PIhandle,cint)	niup: k_any(ih: Calendar_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Calendar_t	niup: k_any(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Calendar_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Calendar_t,proc(PIhandle)	niup: ldestroy_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Calendar_t	niup: ldestroy_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Calendar_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Calendar_t,proc(PIhandle)	niup: leavewindow_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Calendar_t	niup: leavewindow_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Calendar_t,proc(PIhandle)	niup: map_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Calendar_t,proc(PIhandle)	niup: map_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Calendar_t	niup: map_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Calendar_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Calendar_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Calendar_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Calendar_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Calendar_t	niup: postmessage_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Calendar_t,proc(PIhandle)	niup: unmap_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Calendar_t,proc(PIhandle)	niup: unmap_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Calendar_t	niup: unmap_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,Calendar_t,proc(PIhandle)	niup: valuechanged_cb=(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Calendar_t,proc(PIhandle)	niup: valuechanged_cb(ih: Calendar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Calendar_t	niup: valuechanged_cb(ih: Calendar_t): proc (ih: PIhandle): cint {.cdecl.}	
Canvas	niup.html#Canvas,string	niup: Canvas(action: string): Canvas_t	
Canvas	niup.html#Canvas	niup: Canvas(): Canvas_t	
active=	niup.html#active=,Canvas_t,string	niup: active=(ih: Canvas_t; value: string)	
active	niup.html#active,Canvas_t,string	niup: active(ih: Canvas_t; value: string)	
active=	niup.html#active=,Canvas_t,bool	niup: active=(ih: Canvas_t; yes: bool)	
active	niup.html#active,Canvas_t,bool	niup: active(ih: Canvas_t; yes: bool)	
active	niup.html#active,Canvas_t	niup: active(ih: Canvas_t): bool	
backingstore=	niup.html#backingstore=,Canvas_t,string	niup: backingstore=(ih: Canvas_t; value: string)	
backingstore	niup.html#backingstore,Canvas_t,string	niup: backingstore(ih: Canvas_t; value: string)	
backingstore=	niup.html#backingstore=,Canvas_t,bool	niup: backingstore=(ih: Canvas_t; yes: bool)	
backingstore	niup.html#backingstore,Canvas_t,bool	niup: backingstore(ih: Canvas_t; yes: bool)	
backingstore	niup.html#backingstore,Canvas_t	niup: backingstore(ih: Canvas_t): bool	
bgcolor=	niup.html#bgcolor=,Canvas_t,string	niup: bgcolor=(ih: Canvas_t; value: string)	
bgcolor	niup.html#bgcolor,Canvas_t,string	niup: bgcolor(ih: Canvas_t; value: string)	
bgcolor=	niup.html#bgcolor=,Canvas_t,int,int,int,int	niup: bgcolor=(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Canvas_t,int,int,int,int	niup: bgcolor(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Canvas_t	niup: bgcolor(ih: Canvas_t): string	
border=	niup.html#border=,Canvas_t,string	niup: border=(ih: Canvas_t; value: string)	
border	niup.html#border,Canvas_t,string	niup: border(ih: Canvas_t; value: string)	
border=	niup.html#border=,Canvas_t,bool	niup: border=(ih: Canvas_t; yes: bool)	
border	niup.html#border,Canvas_t,bool	niup: border(ih: Canvas_t; yes: bool)	
border	niup.html#border,Canvas_t	niup: border(ih: Canvas_t): bool	
canfocus=	niup.html#canfocus=,Canvas_t,string	niup: canfocus=(ih: Canvas_t; value: string)	
canfocus	niup.html#canfocus,Canvas_t,string	niup: canfocus(ih: Canvas_t; value: string)	
canfocus=	niup.html#canfocus=,Canvas_t,bool	niup: canfocus=(ih: Canvas_t; yes: bool)	
canfocus	niup.html#canfocus,Canvas_t,bool	niup: canfocus(ih: Canvas_t; yes: bool)	
canfocus	niup.html#canfocus,Canvas_t	niup: canfocus(ih: Canvas_t): bool	
charsize	niup.html#charsize,Canvas_t	niup: charsize(ih: Canvas_t): string	
cursor=	niup.html#cursor=,Canvas_t,	niup: cursor=(ih: Canvas_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Canvas_t,	niup: cursor(ih: Canvas_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Canvas_t	niup: cursor(ih: Canvas_t): string	
dragdrop=	niup.html#dragdrop=,Canvas_t,string	niup: dragdrop=(ih: Canvas_t; value: string)	
dragdrop	niup.html#dragdrop,Canvas_t,string	niup: dragdrop(ih: Canvas_t; value: string)	
dragdrop=	niup.html#dragdrop=,Canvas_t,bool	niup: dragdrop=(ih: Canvas_t; yes: bool)	
dragdrop	niup.html#dragdrop,Canvas_t,bool	niup: dragdrop(ih: Canvas_t; yes: bool)	
dragdrop	niup.html#dragdrop,Canvas_t	niup: dragdrop(ih: Canvas_t): bool	
dragsource=	niup.html#dragsource=,Canvas_t,string	niup: dragsource=(ih: Canvas_t; value: string)	
dragsource	niup.html#dragsource,Canvas_t,string	niup: dragsource(ih: Canvas_t; value: string)	
dragsource=	niup.html#dragsource=,Canvas_t,bool	niup: dragsource=(ih: Canvas_t; yes: bool)	
dragsource	niup.html#dragsource,Canvas_t,bool	niup: dragsource(ih: Canvas_t; yes: bool)	
dragsource	niup.html#dragsource,Canvas_t	niup: dragsource(ih: Canvas_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Canvas_t,string	niup: dragsourcemove=(ih: Canvas_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Canvas_t,string	niup: dragsourcemove(ih: Canvas_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Canvas_t,bool	niup: dragsourcemove=(ih: Canvas_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Canvas_t,bool	niup: dragsourcemove(ih: Canvas_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Canvas_t	niup: dragsourcemove(ih: Canvas_t): bool	
dragtypes=	niup.html#dragtypes=,Canvas_t,string	niup: dragtypes=(ih: Canvas_t; value: string)	
dragtypes	niup.html#dragtypes,Canvas_t,string	niup: dragtypes(ih: Canvas_t; value: string)	
dragtypes	niup.html#dragtypes,Canvas_t	niup: dragtypes(ih: Canvas_t): string	
drawable	niup.html#drawable,Canvas_t	niup: drawable(ih: Canvas_t): string	
drawbgcolor=	niup.html#drawbgcolor=,Canvas_t,string	niup: drawbgcolor=(ih: Canvas_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,Canvas_t,string	niup: drawbgcolor(ih: Canvas_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,Canvas_t,int,int,int,int	niup: drawbgcolor=(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Canvas_t,int,int,int,int	niup: drawbgcolor(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Canvas_t	niup: drawbgcolor(ih: Canvas_t): string	
drawcolor=	niup.html#drawcolor=,Canvas_t,string	niup: drawcolor=(ih: Canvas_t; value: string)	
drawcolor	niup.html#drawcolor,Canvas_t,string	niup: drawcolor(ih: Canvas_t; value: string)	
drawcolor=	niup.html#drawcolor=,Canvas_t,int,int,int,int	niup: drawcolor=(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Canvas_t,int,int,int,int	niup: drawcolor(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Canvas_t	niup: drawcolor(ih: Canvas_t): string	
drawdriver	niup.html#drawdriver,Canvas_t	niup: drawdriver(ih: Canvas_t): string	
drawfont=	niup.html#drawfont=,Canvas_t,string	niup: drawfont=(ih: Canvas_t; value: string)	
drawfont	niup.html#drawfont,Canvas_t,string	niup: drawfont(ih: Canvas_t; value: string)	
drawfont	niup.html#drawfont,Canvas_t	niup: drawfont(ih: Canvas_t): string	
drawlinewidth=	niup.html#drawlinewidth=,Canvas_t,string	niup: drawlinewidth=(ih: Canvas_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,Canvas_t,string	niup: drawlinewidth(ih: Canvas_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,Canvas_t,int	niup: drawlinewidth=(ih: Canvas_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Canvas_t,int	niup: drawlinewidth(ih: Canvas_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Canvas_t	niup: drawlinewidth(ih: Canvas_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,Canvas_t,string	niup: drawmakeinactive=(ih: Canvas_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,Canvas_t,string	niup: drawmakeinactive(ih: Canvas_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,Canvas_t,bool	niup: drawmakeinactive=(ih: Canvas_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Canvas_t,bool	niup: drawmakeinactive(ih: Canvas_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Canvas_t	niup: drawmakeinactive(ih: Canvas_t): bool	
drawsize	niup.html#drawsize,Canvas_t	niup: drawsize(ih: Canvas_t): string	
drawstyle=	niup.html#drawstyle=,Canvas_t,string	niup: drawstyle=(ih: Canvas_t; value: string)	
drawstyle	niup.html#drawstyle,Canvas_t,string	niup: drawstyle(ih: Canvas_t; value: string)	
drawstyle	niup.html#drawstyle,Canvas_t	niup: drawstyle(ih: Canvas_t): string	
drawtextalignment=	niup.html#drawtextalignment=,Canvas_t,string	niup: drawtextalignment=(ih: Canvas_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Canvas_t,string	niup: drawtextalignment(ih: Canvas_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Canvas_t	niup: drawtextalignment(ih: Canvas_t): string	
drawtextclip=	niup.html#drawtextclip=,Canvas_t,string	niup: drawtextclip=(ih: Canvas_t; value: string)	
drawtextclip	niup.html#drawtextclip,Canvas_t,string	niup: drawtextclip(ih: Canvas_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,Canvas_t,bool	niup: drawtextclip=(ih: Canvas_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Canvas_t,bool	niup: drawtextclip(ih: Canvas_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Canvas_t	niup: drawtextclip(ih: Canvas_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,Canvas_t,string	niup: drawtextellipsis=(ih: Canvas_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,Canvas_t,string	niup: drawtextellipsis(ih: Canvas_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,Canvas_t,bool	niup: drawtextellipsis=(ih: Canvas_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Canvas_t,bool	niup: drawtextellipsis(ih: Canvas_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Canvas_t	niup: drawtextellipsis(ih: Canvas_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Canvas_t,string	niup: drawtextlayoutcenter=(ih: Canvas_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Canvas_t,string	niup: drawtextlayoutcenter(ih: Canvas_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Canvas_t,bool	niup: drawtextlayoutcenter=(ih: Canvas_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Canvas_t,bool	niup: drawtextlayoutcenter(ih: Canvas_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Canvas_t	niup: drawtextlayoutcenter(ih: Canvas_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,Canvas_t,string	niup: drawtextorientation=(ih: Canvas_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,Canvas_t,string	niup: drawtextorientation(ih: Canvas_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,Canvas_t,int64	niup: drawtextorientation=(ih: Canvas_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Canvas_t,int64	niup: drawtextorientation(ih: Canvas_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Canvas_t	niup: drawtextorientation(ih: Canvas_t): string	
drawtextwrap=	niup.html#drawtextwrap=,Canvas_t,string	niup: drawtextwrap=(ih: Canvas_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,Canvas_t,string	niup: drawtextwrap(ih: Canvas_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,Canvas_t,bool	niup: drawtextwrap=(ih: Canvas_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Canvas_t,bool	niup: drawtextwrap(ih: Canvas_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Canvas_t	niup: drawtextwrap(ih: Canvas_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,Canvas_t,string	niup: dropfilestarget=(ih: Canvas_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Canvas_t,string	niup: dropfilestarget(ih: Canvas_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Canvas_t,bool	niup: dropfilestarget=(ih: Canvas_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Canvas_t,bool	niup: dropfilestarget(ih: Canvas_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Canvas_t	niup: dropfilestarget(ih: Canvas_t): bool	
droptarget=	niup.html#droptarget=,Canvas_t,string	niup: droptarget=(ih: Canvas_t; value: string)	
droptarget	niup.html#droptarget,Canvas_t,string	niup: droptarget(ih: Canvas_t; value: string)	
droptarget=	niup.html#droptarget=,Canvas_t,bool	niup: droptarget=(ih: Canvas_t; yes: bool)	
droptarget	niup.html#droptarget,Canvas_t,bool	niup: droptarget(ih: Canvas_t; yes: bool)	
droptarget	niup.html#droptarget,Canvas_t	niup: droptarget(ih: Canvas_t): bool	
droptypes=	niup.html#droptypes=,Canvas_t,string	niup: droptypes=(ih: Canvas_t; value: string)	
droptypes	niup.html#droptypes,Canvas_t,string	niup: droptypes(ih: Canvas_t; value: string)	
droptypes	niup.html#droptypes,Canvas_t	niup: droptypes(ih: Canvas_t): string	
dx=	niup.html#dx=,Canvas_t,string	niup: dx=(ih: Canvas_t; value: string)	
dx	niup.html#dx,Canvas_t,string	niup: dx(ih: Canvas_t; value: string)	
dx=	niup.html#dx=,Canvas_t,int64	niup: dx=(ih: Canvas_t; x: int64)	
dx	niup.html#dx,Canvas_t,int64	niup: dx(ih: Canvas_t; x: int64)	
dx	niup.html#dx,Canvas_t	niup: dx(ih: Canvas_t): string	
dy=	niup.html#dy=,Canvas_t,string	niup: dy=(ih: Canvas_t; value: string)	
dy	niup.html#dy,Canvas_t,string	niup: dy(ih: Canvas_t; value: string)	
dy=	niup.html#dy=,Canvas_t,int64	niup: dy=(ih: Canvas_t; x: int64)	
dy	niup.html#dy,Canvas_t,int64	niup: dy(ih: Canvas_t; x: int64)	
dy	niup.html#dy,Canvas_t	niup: dy(ih: Canvas_t): string	
expand=	niup.html#expand=,Canvas_t,string	niup: expand=(ih: Canvas_t; value: string)	
expand	niup.html#expand,Canvas_t,string	niup: expand(ih: Canvas_t; value: string)	
expand	niup.html#expand,Canvas_t	niup: expand(ih: Canvas_t): string	
expandweight=	niup.html#expandweight=,Canvas_t,string	niup: expandweight=(ih: Canvas_t; value: string)	
expandweight	niup.html#expandweight,Canvas_t,string	niup: expandweight(ih: Canvas_t; value: string)	
expandweight=	niup.html#expandweight=,Canvas_t,int64	niup: expandweight=(ih: Canvas_t; x: int64)	
expandweight	niup.html#expandweight,Canvas_t,int64	niup: expandweight(ih: Canvas_t; x: int64)	
expandweight	niup.html#expandweight,Canvas_t	niup: expandweight(ih: Canvas_t): string	
floating=	niup.html#floating=,Canvas_t,string	niup: floating=(ih: Canvas_t; value: string)	
floating	niup.html#floating,Canvas_t,string	niup: floating(ih: Canvas_t; value: string)	
floating	niup.html#floating,Canvas_t	niup: floating(ih: Canvas_t): string	
font=	niup.html#font=,Canvas_t,string	niup: font=(ih: Canvas_t; value: string)	
font	niup.html#font,Canvas_t,string	niup: font(ih: Canvas_t; value: string)	
font	niup.html#font,Canvas_t	niup: font(ih: Canvas_t): string	
fontface=	niup.html#fontface=,Canvas_t,string	niup: fontface=(ih: Canvas_t; value: string)	
fontface	niup.html#fontface,Canvas_t,string	niup: fontface(ih: Canvas_t; value: string)	
fontface	niup.html#fontface,Canvas_t	niup: fontface(ih: Canvas_t): string	
fontsize=	niup.html#fontsize=,Canvas_t,string	niup: fontsize=(ih: Canvas_t; value: string)	
fontsize	niup.html#fontsize,Canvas_t,string	niup: fontsize(ih: Canvas_t; value: string)	
fontsize=	niup.html#fontsize=,Canvas_t,int	niup: fontsize=(ih: Canvas_t; x: int)	
fontsize	niup.html#fontsize,Canvas_t,int	niup: fontsize(ih: Canvas_t; x: int)	
fontsize	niup.html#fontsize,Canvas_t	niup: fontsize(ih: Canvas_t): string	
fontstyle=	niup.html#fontstyle=,Canvas_t,string	niup: fontstyle=(ih: Canvas_t; value: string)	
fontstyle	niup.html#fontstyle,Canvas_t,string	niup: fontstyle(ih: Canvas_t; value: string)	
fontstyle	niup.html#fontstyle,Canvas_t	niup: fontstyle(ih: Canvas_t): string	
handlename=	niup.html#handlename=,Canvas_t,string	niup: handlename=(ih: Canvas_t; value: string)	
handlename	niup.html#handlename,Canvas_t,string	niup: handlename(ih: Canvas_t; value: string)	
handlename	niup.html#handlename,Canvas_t	niup: handlename(ih: Canvas_t): string	
linex=	niup.html#linex=,Canvas_t,string	niup: linex=(ih: Canvas_t; value: string)	
linex	niup.html#linex,Canvas_t,string	niup: linex(ih: Canvas_t; value: string)	
linex=	niup.html#linex=,Canvas_t,int64	niup: linex=(ih: Canvas_t; x: int64)	
linex	niup.html#linex,Canvas_t,int64	niup: linex(ih: Canvas_t; x: int64)	
linex	niup.html#linex,Canvas_t	niup: linex(ih: Canvas_t): string	
liney=	niup.html#liney=,Canvas_t,string	niup: liney=(ih: Canvas_t; value: string)	
liney	niup.html#liney,Canvas_t,string	niup: liney(ih: Canvas_t; value: string)	
liney=	niup.html#liney=,Canvas_t,int64	niup: liney=(ih: Canvas_t; x: int64)	
liney	niup.html#liney,Canvas_t,int64	niup: liney(ih: Canvas_t; x: int64)	
liney	niup.html#liney,Canvas_t	niup: liney(ih: Canvas_t): string	
maxsize=	niup.html#maxsize=,Canvas_t,string	niup: maxsize=(ih: Canvas_t; value: string)	
maxsize	niup.html#maxsize,Canvas_t,string	niup: maxsize(ih: Canvas_t; value: string)	
maxsize=	niup.html#maxsize=,Canvas_t,int,int	niup: maxsize=(ih: Canvas_t; width, height: int)	
maxsize	niup.html#maxsize,Canvas_t,int,int	niup: maxsize(ih: Canvas_t; width, height: int)	
maxsize	niup.html#maxsize,Canvas_t	niup: maxsize(ih: Canvas_t): string	
minsize=	niup.html#minsize=,Canvas_t,string	niup: minsize=(ih: Canvas_t; value: string)	
minsize	niup.html#minsize,Canvas_t,string	niup: minsize(ih: Canvas_t; value: string)	
minsize=	niup.html#minsize=,Canvas_t,int,int	niup: minsize=(ih: Canvas_t; width, height: int)	
minsize	niup.html#minsize,Canvas_t,int,int	niup: minsize(ih: Canvas_t; width, height: int)	
minsize	niup.html#minsize,Canvas_t	niup: minsize(ih: Canvas_t): string	
name=	niup.html#name=,Canvas_t,string	niup: name=(ih: Canvas_t; value: string)	
name	niup.html#name,Canvas_t,string	niup: name(ih: Canvas_t; value: string)	
name	niup.html#name,Canvas_t	niup: name(ih: Canvas_t): string	
naturalsize	niup.html#naturalsize,Canvas_t	niup: naturalsize(ih: Canvas_t): string	
normalizergroup=	niup.html#normalizergroup=,Canvas_t,string	niup: normalizergroup=(ih: Canvas_t; value: string)	
normalizergroup	niup.html#normalizergroup,Canvas_t,string	niup: normalizergroup(ih: Canvas_t; value: string)	
normalizergroup	niup.html#normalizergroup,Canvas_t	niup: normalizergroup(ih: Canvas_t): string	
ntheme=	niup.html#ntheme=,Canvas_t,string	niup: ntheme=(ih: Canvas_t; value: string)	
ntheme	niup.html#ntheme,Canvas_t,string	niup: ntheme(ih: Canvas_t; value: string)	
ntheme	niup.html#ntheme,Canvas_t	niup: ntheme(ih: Canvas_t): string	
pangofontdesc	niup.html#pangofontdesc,Canvas_t	niup: pangofontdesc(ih: Canvas_t): string	
pangolayout	niup.html#pangolayout,Canvas_t	niup: pangolayout(ih: Canvas_t): string	
position=	niup.html#position=,Canvas_t,string	niup: position=(ih: Canvas_t; value: string)	
position	niup.html#position,Canvas_t,string	niup: position(ih: Canvas_t; value: string)	
position=	niup.html#position=,Canvas_t,int,int	niup: position=(ih: Canvas_t; x, y: int)	
position	niup.html#position,Canvas_t,int,int	niup: position(ih: Canvas_t; x, y: int)	
position	niup.html#position,Canvas_t	niup: position(ih: Canvas_t): string	
posx=	niup.html#posx=,Canvas_t,string	niup: posx=(ih: Canvas_t; value: string)	
posx	niup.html#posx,Canvas_t,string	niup: posx(ih: Canvas_t; value: string)	
posx=	niup.html#posx=,Canvas_t,int64	niup: posx=(ih: Canvas_t; x: int64)	
posx	niup.html#posx,Canvas_t,int64	niup: posx(ih: Canvas_t; x: int64)	
posx	niup.html#posx,Canvas_t	niup: posx(ih: Canvas_t): string	
posy=	niup.html#posy=,Canvas_t,string	niup: posy=(ih: Canvas_t; value: string)	
posy	niup.html#posy,Canvas_t,string	niup: posy(ih: Canvas_t; value: string)	
posy=	niup.html#posy=,Canvas_t,int64	niup: posy=(ih: Canvas_t; x: int64)	
posy	niup.html#posy,Canvas_t,int64	niup: posy(ih: Canvas_t; x: int64)	
posy	niup.html#posy,Canvas_t	niup: posy(ih: Canvas_t): string	
propagatefocus=	niup.html#propagatefocus=,Canvas_t,string	niup: propagatefocus=(ih: Canvas_t; value: string)	
propagatefocus	niup.html#propagatefocus,Canvas_t,string	niup: propagatefocus(ih: Canvas_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Canvas_t,bool	niup: propagatefocus=(ih: Canvas_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Canvas_t,bool	niup: propagatefocus(ih: Canvas_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Canvas_t	niup: propagatefocus(ih: Canvas_t): bool	
rastersize=	niup.html#rastersize=,Canvas_t,string	niup: rastersize=(ih: Canvas_t; value: string)	
rastersize	niup.html#rastersize,Canvas_t,string	niup: rastersize(ih: Canvas_t; value: string)	
rastersize=	niup.html#rastersize=,Canvas_t,int,int	niup: rastersize=(ih: Canvas_t; width, height: int)	
rastersize	niup.html#rastersize,Canvas_t,int,int	niup: rastersize(ih: Canvas_t; width, height: int)	
rastersize	niup.html#rastersize,Canvas_t	niup: rastersize(ih: Canvas_t): string	
sb_resize	niup.html#sb_resize,Canvas_t	niup: sb_resize(ih: Canvas_t): string	
screenposition	niup.html#screenposition,Canvas_t	niup: screenposition(ih: Canvas_t): string	
scrollbar=	niup.html#scrollbar=,Canvas_t,string	niup: scrollbar=(ih: Canvas_t; value: string)	
scrollbar	niup.html#scrollbar,Canvas_t,string	niup: scrollbar(ih: Canvas_t; value: string)	
scrollbar=	niup.html#scrollbar=,Canvas_t,bool	niup: scrollbar=(ih: Canvas_t; yes: bool)	
scrollbar	niup.html#scrollbar,Canvas_t,bool	niup: scrollbar(ih: Canvas_t; yes: bool)	
scrollbar	niup.html#scrollbar,Canvas_t	niup: scrollbar(ih: Canvas_t): bool	
size=	niup.html#size=,Canvas_t,string	niup: size=(ih: Canvas_t; value: string)	
size	niup.html#size,Canvas_t,string	niup: size(ih: Canvas_t; value: string)	
size=	niup.html#size=,Canvas_t,int,int	niup: size=(ih: Canvas_t; width, height: int)	
size	niup.html#size,Canvas_t,int,int	niup: size(ih: Canvas_t; width, height: int)	
size	niup.html#size,Canvas_t	niup: size(ih: Canvas_t): string	
theme=	niup.html#theme=,Canvas_t,string	niup: theme=(ih: Canvas_t; value: string)	
theme	niup.html#theme,Canvas_t,string	niup: theme(ih: Canvas_t; value: string)	
theme	niup.html#theme,Canvas_t	niup: theme(ih: Canvas_t): string	
tip=	niup.html#tip=,Canvas_t,string	niup: tip=(ih: Canvas_t; value: string)	
tip	niup.html#tip,Canvas_t,string	niup: tip(ih: Canvas_t; value: string)	
tip	niup.html#tip,Canvas_t	niup: tip(ih: Canvas_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Canvas_t,string	niup: tipbgcolor=(ih: Canvas_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Canvas_t,string	niup: tipbgcolor(ih: Canvas_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Canvas_t,int,int,int,int	niup: tipbgcolor=(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Canvas_t,int,int,int,int	niup: tipbgcolor(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Canvas_t	niup: tipbgcolor(ih: Canvas_t): string	
tipdelay=	niup.html#tipdelay=,Canvas_t,string	niup: tipdelay=(ih: Canvas_t; value: string)	
tipdelay	niup.html#tipdelay,Canvas_t,string	niup: tipdelay(ih: Canvas_t; value: string)	
tipdelay=	niup.html#tipdelay=,Canvas_t,int	niup: tipdelay=(ih: Canvas_t; x: int)	
tipdelay	niup.html#tipdelay,Canvas_t,int	niup: tipdelay(ih: Canvas_t; x: int)	
tipdelay	niup.html#tipdelay,Canvas_t	niup: tipdelay(ih: Canvas_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Canvas_t,string	niup: tipfgcolor=(ih: Canvas_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Canvas_t,string	niup: tipfgcolor(ih: Canvas_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Canvas_t,int,int,int,int	niup: tipfgcolor=(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Canvas_t,int,int,int,int	niup: tipfgcolor(ih: Canvas_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Canvas_t	niup: tipfgcolor(ih: Canvas_t): string	
tipicon=	niup.html#tipicon=,Canvas_t,string	niup: tipicon=(ih: Canvas_t; value: string)	
tipicon	niup.html#tipicon,Canvas_t,string	niup: tipicon(ih: Canvas_t; value: string)	
tipicon	niup.html#tipicon,Canvas_t	niup: tipicon(ih: Canvas_t): string	
tipmarkup=	niup.html#tipmarkup=,Canvas_t,string	niup: tipmarkup=(ih: Canvas_t; value: string)	
tipmarkup	niup.html#tipmarkup,Canvas_t,string	niup: tipmarkup(ih: Canvas_t; value: string)	
tipmarkup	niup.html#tipmarkup,Canvas_t	niup: tipmarkup(ih: Canvas_t): string	
tiprect=	niup.html#tiprect=,Canvas_t,string	niup: tiprect=(ih: Canvas_t; value: string)	
tiprect	niup.html#tiprect,Canvas_t,string	niup: tiprect(ih: Canvas_t; value: string)	
tiprect=	niup.html#tiprect=,Canvas_t,int,int,int,int	niup: tiprect=(ih: Canvas_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Canvas_t,int,int,int,int	niup: tiprect(ih: Canvas_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Canvas_t	niup: tiprect(ih: Canvas_t): string	
tipvisible=	niup.html#tipvisible=,Canvas_t,string	niup: tipvisible=(ih: Canvas_t; value: string)	
tipvisible	niup.html#tipvisible,Canvas_t,string	niup: tipvisible(ih: Canvas_t; value: string)	
tipvisible=	niup.html#tipvisible=,Canvas_t,bool	niup: tipvisible=(ih: Canvas_t; yes: bool)	
tipvisible	niup.html#tipvisible,Canvas_t,bool	niup: tipvisible(ih: Canvas_t; yes: bool)	
tipvisible	niup.html#tipvisible,Canvas_t	niup: tipvisible(ih: Canvas_t): bool	
touch=	niup.html#touch=,Canvas_t,string	niup: touch=(ih: Canvas_t; value: string)	
touch	niup.html#touch,Canvas_t,string	niup: touch(ih: Canvas_t; value: string)	
touch=	niup.html#touch=,Canvas_t,bool	niup: touch=(ih: Canvas_t; yes: bool)	
touch	niup.html#touch,Canvas_t,bool	niup: touch(ih: Canvas_t; yes: bool)	
touch	niup.html#touch,Canvas_t	niup: touch(ih: Canvas_t): bool	
usersize=	niup.html#usersize=,Canvas_t,string	niup: usersize=(ih: Canvas_t; value: string)	
usersize	niup.html#usersize,Canvas_t,string	niup: usersize(ih: Canvas_t; value: string)	
usersize=	niup.html#usersize=,Canvas_t,int,int	niup: usersize=(ih: Canvas_t; width, height: int)	
usersize	niup.html#usersize,Canvas_t,int,int	niup: usersize(ih: Canvas_t; width, height: int)	
usersize	niup.html#usersize,Canvas_t	niup: usersize(ih: Canvas_t): string	
visible=	niup.html#visible=,Canvas_t,string	niup: visible=(ih: Canvas_t; value: string)	
visible	niup.html#visible,Canvas_t,string	niup: visible(ih: Canvas_t; value: string)	
visible=	niup.html#visible=,Canvas_t,bool	niup: visible=(ih: Canvas_t; yes: bool)	
visible	niup.html#visible,Canvas_t,bool	niup: visible(ih: Canvas_t; yes: bool)	
visible	niup.html#visible,Canvas_t	niup: visible(ih: Canvas_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,Canvas_t,string	niup: wheeldropfocus=(ih: Canvas_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,Canvas_t,string	niup: wheeldropfocus(ih: Canvas_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,Canvas_t,bool	niup: wheeldropfocus=(ih: Canvas_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Canvas_t,bool	niup: wheeldropfocus(ih: Canvas_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Canvas_t	niup: wheeldropfocus(ih: Canvas_t): bool	
wid	niup.html#wid,Canvas_t	niup: wid(ih: Canvas_t): string	
x	niup.html#x,Canvas_t	niup: x(ih: Canvas_t): string	
xautohide=	niup.html#xautohide=,Canvas_t,string	niup: xautohide=(ih: Canvas_t; value: string)	
xautohide	niup.html#xautohide,Canvas_t,string	niup: xautohide(ih: Canvas_t; value: string)	
xautohide=	niup.html#xautohide=,Canvas_t,bool	niup: xautohide=(ih: Canvas_t; yes: bool)	
xautohide	niup.html#xautohide,Canvas_t,bool	niup: xautohide(ih: Canvas_t; yes: bool)	
xautohide	niup.html#xautohide,Canvas_t	niup: xautohide(ih: Canvas_t): bool	
xdisplay	niup.html#xdisplay,Canvas_t	niup: xdisplay(ih: Canvas_t): string	
xfontid	niup.html#xfontid,Canvas_t	niup: xfontid(ih: Canvas_t): string	
xhidden	niup.html#xhidden,Canvas_t	niup: xhidden(ih: Canvas_t): bool	
xmax=	niup.html#xmax=,Canvas_t,string	niup: xmax=(ih: Canvas_t; value: string)	
xmax	niup.html#xmax,Canvas_t,string	niup: xmax(ih: Canvas_t; value: string)	
xmax=	niup.html#xmax=,Canvas_t,int	niup: xmax=(ih: Canvas_t; x: int)	
xmax	niup.html#xmax,Canvas_t,int	niup: xmax(ih: Canvas_t; x: int)	
xmax	niup.html#xmax,Canvas_t	niup: xmax(ih: Canvas_t): string	
xmin=	niup.html#xmin=,Canvas_t,string	niup: xmin=(ih: Canvas_t; value: string)	
xmin	niup.html#xmin,Canvas_t,string	niup: xmin(ih: Canvas_t; value: string)	
xmin=	niup.html#xmin=,Canvas_t,int	niup: xmin=(ih: Canvas_t; x: int)	
xmin	niup.html#xmin,Canvas_t,int	niup: xmin(ih: Canvas_t; x: int)	
xmin	niup.html#xmin,Canvas_t	niup: xmin(ih: Canvas_t): string	
xwindow	niup.html#xwindow,Canvas_t	niup: xwindow(ih: Canvas_t): string	
y	niup.html#y,Canvas_t	niup: y(ih: Canvas_t): string	
yautohide=	niup.html#yautohide=,Canvas_t,string	niup: yautohide=(ih: Canvas_t; value: string)	
yautohide	niup.html#yautohide,Canvas_t,string	niup: yautohide(ih: Canvas_t; value: string)	
yautohide=	niup.html#yautohide=,Canvas_t,bool	niup: yautohide=(ih: Canvas_t; yes: bool)	
yautohide	niup.html#yautohide,Canvas_t,bool	niup: yautohide(ih: Canvas_t; yes: bool)	
yautohide	niup.html#yautohide,Canvas_t	niup: yautohide(ih: Canvas_t): bool	
yhidden	niup.html#yhidden,Canvas_t	niup: yhidden(ih: Canvas_t): bool	
ymax=	niup.html#ymax=,Canvas_t,string	niup: ymax=(ih: Canvas_t; value: string)	
ymax	niup.html#ymax,Canvas_t,string	niup: ymax(ih: Canvas_t; value: string)	
ymax=	niup.html#ymax=,Canvas_t,int	niup: ymax=(ih: Canvas_t; x: int)	
ymax	niup.html#ymax,Canvas_t,int	niup: ymax(ih: Canvas_t; x: int)	
ymax	niup.html#ymax,Canvas_t	niup: ymax(ih: Canvas_t): string	
ymin=	niup.html#ymin=,Canvas_t,string	niup: ymin=(ih: Canvas_t; value: string)	
ymin	niup.html#ymin,Canvas_t,string	niup: ymin(ih: Canvas_t; value: string)	
ymin=	niup.html#ymin=,Canvas_t,int	niup: ymin=(ih: Canvas_t; x: int)	
ymin	niup.html#ymin,Canvas_t,int	niup: ymin(ih: Canvas_t; x: int)	
ymin	niup.html#ymin,Canvas_t	niup: ymin(ih: Canvas_t): string	
zorder=	niup.html#zorder=,Canvas_t,string	niup: zorder=(ih: Canvas_t; value: string)	
zorder	niup.html#zorder,Canvas_t,string	niup: zorder(ih: Canvas_t; value: string)	
action=	niup.html#action=,Canvas_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: Canvas_t; cb: proc (ih: PIhandle; posx, posy: cfloat): cint {.cdecl.})	
action	niup.html#action,Canvas_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: Canvas_t; cb: proc (ih: PIhandle; posx, posy: cfloat): cint {.cdecl.})	
action	niup.html#action,Canvas_t	niup: action(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Canvas_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                   arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Canvas_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Canvas_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                  arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Canvas_t	niup: button_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Canvas_t,proc(PIhandle)	niup: destroy_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Canvas_t,proc(PIhandle)	niup: destroy_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Canvas_t	niup: destroy_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Canvas_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Canvas_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Canvas_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Canvas_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Canvas_t	niup: dragbegin_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Canvas_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Canvas_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Canvas_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Canvas_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Canvas_t	niup: dragdatasize_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Canvas_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Canvas_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Canvas_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Canvas_t	niup: dragdata_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Canvas_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Canvas_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Canvas_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Canvas_t	niup: dragend_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Canvas_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Canvas_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Canvas_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Canvas_t	niup: dropdata_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Canvas_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Canvas_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                      num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Canvas_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Canvas_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                     num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Canvas_t	niup: dropfiles_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Canvas_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Canvas_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Canvas_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Canvas_t	niup: dropmotion_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Canvas_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Canvas_t,proc(PIhandle)	niup: enterwindow_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Canvas_t	niup: enterwindow_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,Canvas_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Canvas_t,proc(PIhandle,cint)	niup: focus_cb(ih: Canvas_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Canvas_t	niup: focus_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Canvas_t,proc(PIhandle)	niup: getfocus_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Canvas_t,proc(PIhandle)	niup: getfocus_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Canvas_t	niup: getfocus_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Canvas_t,proc(PIhandle)	niup: help_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Canvas_t,proc(PIhandle)	niup: help_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Canvas_t	niup: help_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,Canvas_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: Canvas_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Canvas_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: Canvas_t; cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Canvas_t	niup: keypress_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Canvas_t,proc(PIhandle)	niup: killfocus_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Canvas_t,proc(PIhandle)	niup: killfocus_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Canvas_t	niup: killfocus_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Canvas_t,proc(PIhandle,cint)	niup: k_any=(ih: Canvas_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Canvas_t,proc(PIhandle,cint)	niup: k_any(ih: Canvas_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Canvas_t	niup: k_any(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Canvas_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Canvas_t,proc(PIhandle)	niup: ldestroy_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Canvas_t	niup: ldestroy_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Canvas_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Canvas_t,proc(PIhandle)	niup: leavewindow_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Canvas_t	niup: leavewindow_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Canvas_t,proc(PIhandle)	niup: map_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Canvas_t,proc(PIhandle)	niup: map_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Canvas_t	niup: map_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Canvas_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Canvas_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Canvas_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Canvas_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Canvas_t	niup: motion_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Canvas_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Canvas_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Canvas_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Canvas_t	niup: postmessage_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,Canvas_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: Canvas_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Canvas_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: Canvas_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Canvas_t	niup: resize_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,Canvas_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: Canvas_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Canvas_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: Canvas_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Canvas_t	niup: scroll_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Canvas_t,proc(PIhandle)	niup: unmap_cb=(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Canvas_t,proc(PIhandle)	niup: unmap_cb(ih: Canvas_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Canvas_t	niup: unmap_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,Canvas_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                  status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Canvas_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: Canvas_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                 status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Canvas_t	niup: wheel_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,Canvas_t,proc(PIhandle,cint)	niup: wom_cb=(ih: Canvas_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Canvas_t,proc(PIhandle,cint)	niup: wom_cb(ih: Canvas_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Canvas_t	niup: wom_cb(ih: Canvas_t): proc (ih: PIhandle): cint {.cdecl.}	
Cbox	niup.html#Cbox.m,varargs[untyped]	niup: Cbox(args: varargs[untyped]): Cbox_t	
active=	niup.html#active=,Cbox_t,string	niup: active=(ih: Cbox_t; value: string)	
active	niup.html#active,Cbox_t,string	niup: active(ih: Cbox_t; value: string)	
active=	niup.html#active=,Cbox_t,bool	niup: active=(ih: Cbox_t; yes: bool)	
active	niup.html#active,Cbox_t,bool	niup: active(ih: Cbox_t; yes: bool)	
active	niup.html#active,Cbox_t	niup: active(ih: Cbox_t): bool	
canfocus=	niup.html#canfocus=,Cbox_t,string	niup: canfocus=(ih: Cbox_t; value: string)	
canfocus	niup.html#canfocus,Cbox_t,string	niup: canfocus(ih: Cbox_t; value: string)	
canfocus=	niup.html#canfocus=,Cbox_t,bool	niup: canfocus=(ih: Cbox_t; yes: bool)	
canfocus	niup.html#canfocus,Cbox_t,bool	niup: canfocus(ih: Cbox_t; yes: bool)	
canfocus	niup.html#canfocus,Cbox_t	niup: canfocus(ih: Cbox_t): bool	
charsize	niup.html#charsize,Cbox_t	niup: charsize(ih: Cbox_t): string	
clientoffset	niup.html#clientoffset,Cbox_t	niup: clientoffset(ih: Cbox_t): string	
clientsize	niup.html#clientsize,Cbox_t	niup: clientsize(ih: Cbox_t): string	
expand=	niup.html#expand=,Cbox_t,string	niup: expand=(ih: Cbox_t; value: string)	
expand	niup.html#expand,Cbox_t,string	niup: expand(ih: Cbox_t; value: string)	
expand	niup.html#expand,Cbox_t	niup: expand(ih: Cbox_t): string	
expandweight=	niup.html#expandweight=,Cbox_t,string	niup: expandweight=(ih: Cbox_t; value: string)	
expandweight	niup.html#expandweight,Cbox_t,string	niup: expandweight(ih: Cbox_t; value: string)	
expandweight=	niup.html#expandweight=,Cbox_t,int64	niup: expandweight=(ih: Cbox_t; x: int64)	
expandweight	niup.html#expandweight,Cbox_t,int64	niup: expandweight(ih: Cbox_t; x: int64)	
expandweight	niup.html#expandweight,Cbox_t	niup: expandweight(ih: Cbox_t): string	
floating=	niup.html#floating=,Cbox_t,string	niup: floating=(ih: Cbox_t; value: string)	
floating	niup.html#floating,Cbox_t,string	niup: floating(ih: Cbox_t; value: string)	
floating	niup.html#floating,Cbox_t	niup: floating(ih: Cbox_t): string	
font=	niup.html#font=,Cbox_t,string	niup: font=(ih: Cbox_t; value: string)	
font	niup.html#font,Cbox_t,string	niup: font(ih: Cbox_t; value: string)	
font	niup.html#font,Cbox_t	niup: font(ih: Cbox_t): string	
fontface=	niup.html#fontface=,Cbox_t,string	niup: fontface=(ih: Cbox_t; value: string)	
fontface	niup.html#fontface,Cbox_t,string	niup: fontface(ih: Cbox_t; value: string)	
fontface	niup.html#fontface,Cbox_t	niup: fontface(ih: Cbox_t): string	
fontsize=	niup.html#fontsize=,Cbox_t,string	niup: fontsize=(ih: Cbox_t; value: string)	
fontsize	niup.html#fontsize,Cbox_t,string	niup: fontsize(ih: Cbox_t; value: string)	
fontsize=	niup.html#fontsize=,Cbox_t,int	niup: fontsize=(ih: Cbox_t; x: int)	
fontsize	niup.html#fontsize,Cbox_t,int	niup: fontsize(ih: Cbox_t; x: int)	
fontsize	niup.html#fontsize,Cbox_t	niup: fontsize(ih: Cbox_t): string	
fontstyle=	niup.html#fontstyle=,Cbox_t,string	niup: fontstyle=(ih: Cbox_t; value: string)	
fontstyle	niup.html#fontstyle,Cbox_t,string	niup: fontstyle(ih: Cbox_t; value: string)	
fontstyle	niup.html#fontstyle,Cbox_t	niup: fontstyle(ih: Cbox_t): string	
handlename=	niup.html#handlename=,Cbox_t,string	niup: handlename=(ih: Cbox_t; value: string)	
handlename	niup.html#handlename,Cbox_t,string	niup: handlename(ih: Cbox_t; value: string)	
handlename	niup.html#handlename,Cbox_t	niup: handlename(ih: Cbox_t): string	
maxsize=	niup.html#maxsize=,Cbox_t,string	niup: maxsize=(ih: Cbox_t; value: string)	
maxsize	niup.html#maxsize,Cbox_t,string	niup: maxsize(ih: Cbox_t; value: string)	
maxsize=	niup.html#maxsize=,Cbox_t,int,int	niup: maxsize=(ih: Cbox_t; width, height: int)	
maxsize	niup.html#maxsize,Cbox_t,int,int	niup: maxsize(ih: Cbox_t; width, height: int)	
maxsize	niup.html#maxsize,Cbox_t	niup: maxsize(ih: Cbox_t): string	
minsize=	niup.html#minsize=,Cbox_t,string	niup: minsize=(ih: Cbox_t; value: string)	
minsize	niup.html#minsize,Cbox_t,string	niup: minsize(ih: Cbox_t; value: string)	
minsize=	niup.html#minsize=,Cbox_t,int,int	niup: minsize=(ih: Cbox_t; width, height: int)	
minsize	niup.html#minsize,Cbox_t,int,int	niup: minsize(ih: Cbox_t; width, height: int)	
minsize	niup.html#minsize,Cbox_t	niup: minsize(ih: Cbox_t): string	
name=	niup.html#name=,Cbox_t,string	niup: name=(ih: Cbox_t; value: string)	
name	niup.html#name,Cbox_t,string	niup: name(ih: Cbox_t; value: string)	
name	niup.html#name,Cbox_t	niup: name(ih: Cbox_t): string	
naturalsize	niup.html#naturalsize,Cbox_t	niup: naturalsize(ih: Cbox_t): string	
normalizergroup=	niup.html#normalizergroup=,Cbox_t,string	niup: normalizergroup=(ih: Cbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Cbox_t,string	niup: normalizergroup(ih: Cbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Cbox_t	niup: normalizergroup(ih: Cbox_t): string	
ntheme=	niup.html#ntheme=,Cbox_t,string	niup: ntheme=(ih: Cbox_t; value: string)	
ntheme	niup.html#ntheme,Cbox_t,string	niup: ntheme(ih: Cbox_t; value: string)	
ntheme	niup.html#ntheme,Cbox_t	niup: ntheme(ih: Cbox_t): string	
pangofontdesc	niup.html#pangofontdesc,Cbox_t	niup: pangofontdesc(ih: Cbox_t): string	
pangolayout	niup.html#pangolayout,Cbox_t	niup: pangolayout(ih: Cbox_t): string	
position=	niup.html#position=,Cbox_t,string	niup: position=(ih: Cbox_t; value: string)	
position	niup.html#position,Cbox_t,string	niup: position(ih: Cbox_t; value: string)	
position=	niup.html#position=,Cbox_t,int,int	niup: position=(ih: Cbox_t; x, y: int)	
position	niup.html#position,Cbox_t,int,int	niup: position(ih: Cbox_t; x, y: int)	
position	niup.html#position,Cbox_t	niup: position(ih: Cbox_t): string	
propagatefocus=	niup.html#propagatefocus=,Cbox_t,string	niup: propagatefocus=(ih: Cbox_t; value: string)	
propagatefocus	niup.html#propagatefocus,Cbox_t,string	niup: propagatefocus(ih: Cbox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Cbox_t,bool	niup: propagatefocus=(ih: Cbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Cbox_t,bool	niup: propagatefocus(ih: Cbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Cbox_t	niup: propagatefocus(ih: Cbox_t): bool	
rastersize=	niup.html#rastersize=,Cbox_t,string	niup: rastersize=(ih: Cbox_t; value: string)	
rastersize	niup.html#rastersize,Cbox_t,string	niup: rastersize(ih: Cbox_t; value: string)	
rastersize=	niup.html#rastersize=,Cbox_t,int,int	niup: rastersize=(ih: Cbox_t; width, height: int)	
rastersize	niup.html#rastersize,Cbox_t,int,int	niup: rastersize(ih: Cbox_t; width, height: int)	
rastersize	niup.html#rastersize,Cbox_t	niup: rastersize(ih: Cbox_t): string	
size=	niup.html#size=,Cbox_t,string	niup: size=(ih: Cbox_t; value: string)	
size	niup.html#size,Cbox_t,string	niup: size(ih: Cbox_t; value: string)	
size=	niup.html#size=,Cbox_t,int,int	niup: size=(ih: Cbox_t; width, height: int)	
size	niup.html#size,Cbox_t,int,int	niup: size(ih: Cbox_t; width, height: int)	
size	niup.html#size,Cbox_t	niup: size(ih: Cbox_t): string	
theme=	niup.html#theme=,Cbox_t,string	niup: theme=(ih: Cbox_t; value: string)	
theme	niup.html#theme,Cbox_t,string	niup: theme(ih: Cbox_t; value: string)	
theme	niup.html#theme,Cbox_t	niup: theme(ih: Cbox_t): string	
usersize=	niup.html#usersize=,Cbox_t,string	niup: usersize=(ih: Cbox_t; value: string)	
usersize	niup.html#usersize,Cbox_t,string	niup: usersize(ih: Cbox_t; value: string)	
usersize=	niup.html#usersize=,Cbox_t,int,int	niup: usersize=(ih: Cbox_t; width, height: int)	
usersize	niup.html#usersize,Cbox_t,int,int	niup: usersize(ih: Cbox_t; width, height: int)	
usersize	niup.html#usersize,Cbox_t	niup: usersize(ih: Cbox_t): string	
visible=	niup.html#visible=,Cbox_t,string	niup: visible=(ih: Cbox_t; value: string)	
visible	niup.html#visible,Cbox_t,string	niup: visible(ih: Cbox_t; value: string)	
visible=	niup.html#visible=,Cbox_t,bool	niup: visible=(ih: Cbox_t; yes: bool)	
visible	niup.html#visible,Cbox_t,bool	niup: visible(ih: Cbox_t; yes: bool)	
visible	niup.html#visible,Cbox_t	niup: visible(ih: Cbox_t): bool	
wid	niup.html#wid,Cbox_t	niup: wid(ih: Cbox_t): string	
xfontid	niup.html#xfontid,Cbox_t	niup: xfontid(ih: Cbox_t): string	
destroy_cb=	niup.html#destroy_cb=,Cbox_t,proc(PIhandle)	niup: destroy_cb=(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Cbox_t,proc(PIhandle)	niup: destroy_cb(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Cbox_t	niup: destroy_cb(ih: Cbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Cbox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Cbox_t,proc(PIhandle)	niup: ldestroy_cb(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Cbox_t	niup: ldestroy_cb(ih: Cbox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Cbox_t,proc(PIhandle)	niup: map_cb=(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Cbox_t,proc(PIhandle)	niup: map_cb(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Cbox_t	niup: map_cb(ih: Cbox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Cbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Cbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Cbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Cbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Cbox_t	niup: postmessage_cb(ih: Cbox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Cbox_t,proc(PIhandle)	niup: unmap_cb=(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Cbox_t,proc(PIhandle)	niup: unmap_cb(ih: Cbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Cbox_t	niup: unmap_cb(ih: Cbox_t): proc (ih: PIhandle): cint {.cdecl.}	
Clipboard	niup.html#Clipboard_2	niup: Clipboard(): Clipboard_t	
format=	niup.html#format=,Clipboard_t,string	niup: format=(ih: Clipboard_t; value: string)	
format	niup.html#format,Clipboard_t,string	niup: format(ih: Clipboard_t; value: string)	
format	niup.html#format,Clipboard_t	niup: format(ih: Clipboard_t): string	
formatavailable	niup.html#formatavailable,Clipboard_t	niup: formatavailable(ih: Clipboard_t): string	
formatdata	niup.html#formatdata,Clipboard_t	niup: formatdata(ih: Clipboard_t): string	
formatdatasize	niup.html#formatdatasize,Clipboard_t	niup: formatdatasize(ih: Clipboard_t): string	
formatdatastring	niup.html#formatdatastring,Clipboard_t	niup: formatdatastring(ih: Clipboard_t): string	
image=	niup.html#image=,Clipboard_t,	niup: image=(ih: Clipboard_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Clipboard_t,	niup: image(ih: Clipboard_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageavailable	niup.html#imageavailable,Clipboard_t	niup: imageavailable(ih: Clipboard_t): string	
nativeimage	niup.html#nativeimage,Clipboard_t	niup: nativeimage(ih: Clipboard_t): string	
text=	niup.html#text=,Clipboard_t,string	niup: text=(ih: Clipboard_t; value: string)	
text	niup.html#text,Clipboard_t,string	niup: text(ih: Clipboard_t; value: string)	
text	niup.html#text,Clipboard_t	niup: text(ih: Clipboard_t): string	
textavailable	niup.html#textavailable,Clipboard_t	niup: textavailable(ih: Clipboard_t): string	
Colorbar	niup.html#Colorbar_2	niup: Colorbar(): Colorbar_t	
active=	niup.html#active=,Colorbar_t,string	niup: active=(ih: Colorbar_t; value: string)	
active	niup.html#active,Colorbar_t,string	niup: active(ih: Colorbar_t; value: string)	
active=	niup.html#active=,Colorbar_t,bool	niup: active=(ih: Colorbar_t; yes: bool)	
active	niup.html#active,Colorbar_t,bool	niup: active(ih: Colorbar_t; yes: bool)	
active	niup.html#active,Colorbar_t	niup: active(ih: Colorbar_t): bool	
backingstore=	niup.html#backingstore=,Colorbar_t,string	niup: backingstore=(ih: Colorbar_t; value: string)	
backingstore	niup.html#backingstore,Colorbar_t,string	niup: backingstore(ih: Colorbar_t; value: string)	
backingstore=	niup.html#backingstore=,Colorbar_t,bool	niup: backingstore=(ih: Colorbar_t; yes: bool)	
backingstore	niup.html#backingstore,Colorbar_t,bool	niup: backingstore(ih: Colorbar_t; yes: bool)	
backingstore	niup.html#backingstore,Colorbar_t	niup: backingstore(ih: Colorbar_t): bool	
bgcolor=	niup.html#bgcolor=,Colorbar_t,string	niup: bgcolor=(ih: Colorbar_t; value: string)	
bgcolor	niup.html#bgcolor,Colorbar_t,string	niup: bgcolor(ih: Colorbar_t; value: string)	
bgcolor=	niup.html#bgcolor=,Colorbar_t,int,int,int,int	niup: bgcolor=(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Colorbar_t,int,int,int,int	niup: bgcolor(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Colorbar_t	niup: bgcolor(ih: Colorbar_t): string	
border	niup.html#border,Colorbar_t	niup: border(ih: Colorbar_t): bool	
canfocus=	niup.html#canfocus=,Colorbar_t,string	niup: canfocus=(ih: Colorbar_t; value: string)	
canfocus	niup.html#canfocus,Colorbar_t,string	niup: canfocus(ih: Colorbar_t; value: string)	
canfocus=	niup.html#canfocus=,Colorbar_t,bool	niup: canfocus=(ih: Colorbar_t; yes: bool)	
canfocus	niup.html#canfocus,Colorbar_t,bool	niup: canfocus(ih: Colorbar_t; yes: bool)	
canfocus	niup.html#canfocus,Colorbar_t	niup: canfocus(ih: Colorbar_t): bool	
charsize	niup.html#charsize,Colorbar_t	niup: charsize(ih: Colorbar_t): string	
count	niup.html#count,Colorbar_t	niup: count(ih: Colorbar_t): string	
cursor=	niup.html#cursor=,Colorbar_t,	niup: cursor=(ih: Colorbar_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Colorbar_t,	niup: cursor(ih: Colorbar_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Colorbar_t	niup: cursor(ih: Colorbar_t): string	
dragdrop=	niup.html#dragdrop=,Colorbar_t,string	niup: dragdrop=(ih: Colorbar_t; value: string)	
dragdrop	niup.html#dragdrop,Colorbar_t,string	niup: dragdrop(ih: Colorbar_t; value: string)	
dragdrop=	niup.html#dragdrop=,Colorbar_t,bool	niup: dragdrop=(ih: Colorbar_t; yes: bool)	
dragdrop	niup.html#dragdrop,Colorbar_t,bool	niup: dragdrop(ih: Colorbar_t; yes: bool)	
dragdrop	niup.html#dragdrop,Colorbar_t	niup: dragdrop(ih: Colorbar_t): bool	
dragsource=	niup.html#dragsource=,Colorbar_t,string	niup: dragsource=(ih: Colorbar_t; value: string)	
dragsource	niup.html#dragsource,Colorbar_t,string	niup: dragsource(ih: Colorbar_t; value: string)	
dragsource=	niup.html#dragsource=,Colorbar_t,bool	niup: dragsource=(ih: Colorbar_t; yes: bool)	
dragsource	niup.html#dragsource,Colorbar_t,bool	niup: dragsource(ih: Colorbar_t; yes: bool)	
dragsource	niup.html#dragsource,Colorbar_t	niup: dragsource(ih: Colorbar_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Colorbar_t,string	niup: dragsourcemove=(ih: Colorbar_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Colorbar_t,string	niup: dragsourcemove(ih: Colorbar_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Colorbar_t,bool	niup: dragsourcemove=(ih: Colorbar_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Colorbar_t,bool	niup: dragsourcemove(ih: Colorbar_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Colorbar_t	niup: dragsourcemove(ih: Colorbar_t): bool	
dragtypes=	niup.html#dragtypes=,Colorbar_t,string	niup: dragtypes=(ih: Colorbar_t; value: string)	
dragtypes	niup.html#dragtypes,Colorbar_t,string	niup: dragtypes(ih: Colorbar_t; value: string)	
dragtypes	niup.html#dragtypes,Colorbar_t	niup: dragtypes(ih: Colorbar_t): string	
drawable	niup.html#drawable,Colorbar_t	niup: drawable(ih: Colorbar_t): string	
drawbgcolor=	niup.html#drawbgcolor=,Colorbar_t,string	niup: drawbgcolor=(ih: Colorbar_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,Colorbar_t,string	niup: drawbgcolor(ih: Colorbar_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,Colorbar_t,int,int,int,int	niup: drawbgcolor=(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Colorbar_t,int,int,int,int	niup: drawbgcolor(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Colorbar_t	niup: drawbgcolor(ih: Colorbar_t): string	
drawcolor=	niup.html#drawcolor=,Colorbar_t,string	niup: drawcolor=(ih: Colorbar_t; value: string)	
drawcolor	niup.html#drawcolor,Colorbar_t,string	niup: drawcolor(ih: Colorbar_t; value: string)	
drawcolor=	niup.html#drawcolor=,Colorbar_t,int,int,int,int	niup: drawcolor=(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Colorbar_t,int,int,int,int	niup: drawcolor(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Colorbar_t	niup: drawcolor(ih: Colorbar_t): string	
drawdriver	niup.html#drawdriver,Colorbar_t	niup: drawdriver(ih: Colorbar_t): string	
drawfont=	niup.html#drawfont=,Colorbar_t,string	niup: drawfont=(ih: Colorbar_t; value: string)	
drawfont	niup.html#drawfont,Colorbar_t,string	niup: drawfont(ih: Colorbar_t; value: string)	
drawfont	niup.html#drawfont,Colorbar_t	niup: drawfont(ih: Colorbar_t): string	
drawlinewidth=	niup.html#drawlinewidth=,Colorbar_t,string	niup: drawlinewidth=(ih: Colorbar_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,Colorbar_t,string	niup: drawlinewidth(ih: Colorbar_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,Colorbar_t,int	niup: drawlinewidth=(ih: Colorbar_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Colorbar_t,int	niup: drawlinewidth(ih: Colorbar_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Colorbar_t	niup: drawlinewidth(ih: Colorbar_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,Colorbar_t,string	niup: drawmakeinactive=(ih: Colorbar_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,Colorbar_t,string	niup: drawmakeinactive(ih: Colorbar_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,Colorbar_t,bool	niup: drawmakeinactive=(ih: Colorbar_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Colorbar_t,bool	niup: drawmakeinactive(ih: Colorbar_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Colorbar_t	niup: drawmakeinactive(ih: Colorbar_t): bool	
drawsize	niup.html#drawsize,Colorbar_t	niup: drawsize(ih: Colorbar_t): string	
drawstyle=	niup.html#drawstyle=,Colorbar_t,string	niup: drawstyle=(ih: Colorbar_t; value: string)	
drawstyle	niup.html#drawstyle,Colorbar_t,string	niup: drawstyle(ih: Colorbar_t; value: string)	
drawstyle	niup.html#drawstyle,Colorbar_t	niup: drawstyle(ih: Colorbar_t): string	
drawtextalignment=	niup.html#drawtextalignment=,Colorbar_t,string	niup: drawtextalignment=(ih: Colorbar_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Colorbar_t,string	niup: drawtextalignment(ih: Colorbar_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Colorbar_t	niup: drawtextalignment(ih: Colorbar_t): string	
drawtextclip=	niup.html#drawtextclip=,Colorbar_t,string	niup: drawtextclip=(ih: Colorbar_t; value: string)	
drawtextclip	niup.html#drawtextclip,Colorbar_t,string	niup: drawtextclip(ih: Colorbar_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,Colorbar_t,bool	niup: drawtextclip=(ih: Colorbar_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Colorbar_t,bool	niup: drawtextclip(ih: Colorbar_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Colorbar_t	niup: drawtextclip(ih: Colorbar_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,Colorbar_t,string	niup: drawtextellipsis=(ih: Colorbar_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,Colorbar_t,string	niup: drawtextellipsis(ih: Colorbar_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,Colorbar_t,bool	niup: drawtextellipsis=(ih: Colorbar_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Colorbar_t,bool	niup: drawtextellipsis(ih: Colorbar_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Colorbar_t	niup: drawtextellipsis(ih: Colorbar_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Colorbar_t,string	niup: drawtextlayoutcenter=(ih: Colorbar_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Colorbar_t,string	niup: drawtextlayoutcenter(ih: Colorbar_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Colorbar_t,bool	niup: drawtextlayoutcenter=(ih: Colorbar_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Colorbar_t,bool	niup: drawtextlayoutcenter(ih: Colorbar_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Colorbar_t	niup: drawtextlayoutcenter(ih: Colorbar_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,Colorbar_t,string	niup: drawtextorientation=(ih: Colorbar_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,Colorbar_t,string	niup: drawtextorientation(ih: Colorbar_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,Colorbar_t,int64	niup: drawtextorientation=(ih: Colorbar_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Colorbar_t,int64	niup: drawtextorientation(ih: Colorbar_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Colorbar_t	niup: drawtextorientation(ih: Colorbar_t): string	
drawtextwrap=	niup.html#drawtextwrap=,Colorbar_t,string	niup: drawtextwrap=(ih: Colorbar_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,Colorbar_t,string	niup: drawtextwrap(ih: Colorbar_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,Colorbar_t,bool	niup: drawtextwrap=(ih: Colorbar_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Colorbar_t,bool	niup: drawtextwrap(ih: Colorbar_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Colorbar_t	niup: drawtextwrap(ih: Colorbar_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,Colorbar_t,string	niup: dropfilestarget=(ih: Colorbar_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Colorbar_t,string	niup: dropfilestarget(ih: Colorbar_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Colorbar_t,bool	niup: dropfilestarget=(ih: Colorbar_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Colorbar_t,bool	niup: dropfilestarget(ih: Colorbar_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Colorbar_t	niup: dropfilestarget(ih: Colorbar_t): bool	
droptarget=	niup.html#droptarget=,Colorbar_t,string	niup: droptarget=(ih: Colorbar_t; value: string)	
droptarget	niup.html#droptarget,Colorbar_t,string	niup: droptarget(ih: Colorbar_t; value: string)	
droptarget=	niup.html#droptarget=,Colorbar_t,bool	niup: droptarget=(ih: Colorbar_t; yes: bool)	
droptarget	niup.html#droptarget,Colorbar_t,bool	niup: droptarget(ih: Colorbar_t; yes: bool)	
droptarget	niup.html#droptarget,Colorbar_t	niup: droptarget(ih: Colorbar_t): bool	
droptypes=	niup.html#droptypes=,Colorbar_t,string	niup: droptypes=(ih: Colorbar_t; value: string)	
droptypes	niup.html#droptypes,Colorbar_t,string	niup: droptypes(ih: Colorbar_t; value: string)	
droptypes	niup.html#droptypes,Colorbar_t	niup: droptypes(ih: Colorbar_t): string	
dx=	niup.html#dx=,Colorbar_t,string	niup: dx=(ih: Colorbar_t; value: string)	
dx	niup.html#dx,Colorbar_t,string	niup: dx(ih: Colorbar_t; value: string)	
dx=	niup.html#dx=,Colorbar_t,int64	niup: dx=(ih: Colorbar_t; x: int64)	
dx	niup.html#dx,Colorbar_t,int64	niup: dx(ih: Colorbar_t; x: int64)	
dx	niup.html#dx,Colorbar_t	niup: dx(ih: Colorbar_t): string	
dy=	niup.html#dy=,Colorbar_t,string	niup: dy=(ih: Colorbar_t; value: string)	
dy	niup.html#dy,Colorbar_t,string	niup: dy(ih: Colorbar_t; value: string)	
dy=	niup.html#dy=,Colorbar_t,int64	niup: dy=(ih: Colorbar_t; x: int64)	
dy	niup.html#dy,Colorbar_t,int64	niup: dy(ih: Colorbar_t; x: int64)	
dy	niup.html#dy,Colorbar_t	niup: dy(ih: Colorbar_t): string	
expand=	niup.html#expand=,Colorbar_t,string	niup: expand=(ih: Colorbar_t; value: string)	
expand	niup.html#expand,Colorbar_t,string	niup: expand(ih: Colorbar_t; value: string)	
expand	niup.html#expand,Colorbar_t	niup: expand(ih: Colorbar_t): string	
expandweight=	niup.html#expandweight=,Colorbar_t,string	niup: expandweight=(ih: Colorbar_t; value: string)	
expandweight	niup.html#expandweight,Colorbar_t,string	niup: expandweight(ih: Colorbar_t; value: string)	
expandweight=	niup.html#expandweight=,Colorbar_t,int64	niup: expandweight=(ih: Colorbar_t; x: int64)	
expandweight	niup.html#expandweight,Colorbar_t,int64	niup: expandweight(ih: Colorbar_t; x: int64)	
expandweight	niup.html#expandweight,Colorbar_t	niup: expandweight(ih: Colorbar_t): string	
flat=	niup.html#flat=,Colorbar_t,string	niup: flat=(ih: Colorbar_t; value: string)	
flat	niup.html#flat,Colorbar_t,string	niup: flat(ih: Colorbar_t; value: string)	
flat=	niup.html#flat=,Colorbar_t,bool	niup: flat=(ih: Colorbar_t; yes: bool)	
flat	niup.html#flat,Colorbar_t,bool	niup: flat(ih: Colorbar_t; yes: bool)	
flat	niup.html#flat,Colorbar_t	niup: flat(ih: Colorbar_t): bool	
flatcolor=	niup.html#flatcolor=,Colorbar_t,string	niup: flatcolor=(ih: Colorbar_t; value: string)	
flatcolor	niup.html#flatcolor,Colorbar_t,string	niup: flatcolor(ih: Colorbar_t; value: string)	
flatcolor=	niup.html#flatcolor=,Colorbar_t,int,int,int,int	niup: flatcolor=(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
flatcolor	niup.html#flatcolor,Colorbar_t,int,int,int,int	niup: flatcolor(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
flatcolor	niup.html#flatcolor,Colorbar_t	niup: flatcolor(ih: Colorbar_t): string	
floating=	niup.html#floating=,Colorbar_t,string	niup: floating=(ih: Colorbar_t; value: string)	
floating	niup.html#floating,Colorbar_t,string	niup: floating(ih: Colorbar_t; value: string)	
floating	niup.html#floating,Colorbar_t	niup: floating(ih: Colorbar_t): string	
focusselect	niup.html#focusselect,Colorbar_t	niup: focusselect(ih: Colorbar_t): string	
font=	niup.html#font=,Colorbar_t,string	niup: font=(ih: Colorbar_t; value: string)	
font	niup.html#font,Colorbar_t,string	niup: font(ih: Colorbar_t; value: string)	
font	niup.html#font,Colorbar_t	niup: font(ih: Colorbar_t): string	
fontface=	niup.html#fontface=,Colorbar_t,string	niup: fontface=(ih: Colorbar_t; value: string)	
fontface	niup.html#fontface,Colorbar_t,string	niup: fontface(ih: Colorbar_t; value: string)	
fontface	niup.html#fontface,Colorbar_t	niup: fontface(ih: Colorbar_t): string	
fontsize=	niup.html#fontsize=,Colorbar_t,string	niup: fontsize=(ih: Colorbar_t; value: string)	
fontsize	niup.html#fontsize,Colorbar_t,string	niup: fontsize(ih: Colorbar_t; value: string)	
fontsize=	niup.html#fontsize=,Colorbar_t,int	niup: fontsize=(ih: Colorbar_t; x: int)	
fontsize	niup.html#fontsize,Colorbar_t,int	niup: fontsize(ih: Colorbar_t; x: int)	
fontsize	niup.html#fontsize,Colorbar_t	niup: fontsize(ih: Colorbar_t): string	
fontstyle=	niup.html#fontstyle=,Colorbar_t,string	niup: fontstyle=(ih: Colorbar_t; value: string)	
fontstyle	niup.html#fontstyle,Colorbar_t,string	niup: fontstyle(ih: Colorbar_t; value: string)	
fontstyle	niup.html#fontstyle,Colorbar_t	niup: fontstyle(ih: Colorbar_t): string	
handlename=	niup.html#handlename=,Colorbar_t,string	niup: handlename=(ih: Colorbar_t; value: string)	
handlename	niup.html#handlename,Colorbar_t,string	niup: handlename(ih: Colorbar_t; value: string)	
handlename	niup.html#handlename,Colorbar_t	niup: handlename(ih: Colorbar_t): string	
linex=	niup.html#linex=,Colorbar_t,string	niup: linex=(ih: Colorbar_t; value: string)	
linex	niup.html#linex,Colorbar_t,string	niup: linex(ih: Colorbar_t; value: string)	
linex=	niup.html#linex=,Colorbar_t,int64	niup: linex=(ih: Colorbar_t; x: int64)	
linex	niup.html#linex,Colorbar_t,int64	niup: linex(ih: Colorbar_t; x: int64)	
linex	niup.html#linex,Colorbar_t	niup: linex(ih: Colorbar_t): string	
liney=	niup.html#liney=,Colorbar_t,string	niup: liney=(ih: Colorbar_t; value: string)	
liney	niup.html#liney,Colorbar_t,string	niup: liney(ih: Colorbar_t; value: string)	
liney=	niup.html#liney=,Colorbar_t,int64	niup: liney=(ih: Colorbar_t; x: int64)	
liney	niup.html#liney,Colorbar_t,int64	niup: liney(ih: Colorbar_t; x: int64)	
liney	niup.html#liney,Colorbar_t	niup: liney(ih: Colorbar_t): string	
maxsize=	niup.html#maxsize=,Colorbar_t,string	niup: maxsize=(ih: Colorbar_t; value: string)	
maxsize	niup.html#maxsize,Colorbar_t,string	niup: maxsize(ih: Colorbar_t; value: string)	
maxsize=	niup.html#maxsize=,Colorbar_t,int,int	niup: maxsize=(ih: Colorbar_t; width, height: int)	
maxsize	niup.html#maxsize,Colorbar_t,int,int	niup: maxsize(ih: Colorbar_t; width, height: int)	
maxsize	niup.html#maxsize,Colorbar_t	niup: maxsize(ih: Colorbar_t): string	
minsize=	niup.html#minsize=,Colorbar_t,string	niup: minsize=(ih: Colorbar_t; value: string)	
minsize	niup.html#minsize,Colorbar_t,string	niup: minsize(ih: Colorbar_t; value: string)	
minsize=	niup.html#minsize=,Colorbar_t,int,int	niup: minsize=(ih: Colorbar_t; width, height: int)	
minsize	niup.html#minsize,Colorbar_t,int,int	niup: minsize(ih: Colorbar_t; width, height: int)	
minsize	niup.html#minsize,Colorbar_t	niup: minsize(ih: Colorbar_t): string	
name=	niup.html#name=,Colorbar_t,string	niup: name=(ih: Colorbar_t; value: string)	
name	niup.html#name,Colorbar_t,string	niup: name(ih: Colorbar_t; value: string)	
name	niup.html#name,Colorbar_t	niup: name(ih: Colorbar_t): string	
naturalsize	niup.html#naturalsize,Colorbar_t	niup: naturalsize(ih: Colorbar_t): string	
normalizergroup=	niup.html#normalizergroup=,Colorbar_t,string	niup: normalizergroup=(ih: Colorbar_t; value: string)	
normalizergroup	niup.html#normalizergroup,Colorbar_t,string	niup: normalizergroup(ih: Colorbar_t; value: string)	
normalizergroup	niup.html#normalizergroup,Colorbar_t	niup: normalizergroup(ih: Colorbar_t): string	
ntheme=	niup.html#ntheme=,Colorbar_t,string	niup: ntheme=(ih: Colorbar_t; value: string)	
ntheme	niup.html#ntheme,Colorbar_t,string	niup: ntheme(ih: Colorbar_t; value: string)	
ntheme	niup.html#ntheme,Colorbar_t	niup: ntheme(ih: Colorbar_t): string	
num_cells	niup.html#num_cells,Colorbar_t	niup: num_cells(ih: Colorbar_t): string	
num_parts	niup.html#num_parts,Colorbar_t	niup: num_parts(ih: Colorbar_t): string	
orientation=	niup.html#orientation=,Colorbar_t,string	niup: orientation=(ih: Colorbar_t; value: string)	
orientation	niup.html#orientation,Colorbar_t,string	niup: orientation(ih: Colorbar_t; value: string)	
orientation	niup.html#orientation,Colorbar_t	niup: orientation(ih: Colorbar_t): string	
pangofontdesc	niup.html#pangofontdesc,Colorbar_t	niup: pangofontdesc(ih: Colorbar_t): string	
pangolayout	niup.html#pangolayout,Colorbar_t	niup: pangolayout(ih: Colorbar_t): string	
position=	niup.html#position=,Colorbar_t,string	niup: position=(ih: Colorbar_t; value: string)	
position	niup.html#position,Colorbar_t,string	niup: position(ih: Colorbar_t; value: string)	
position=	niup.html#position=,Colorbar_t,int,int	niup: position=(ih: Colorbar_t; x, y: int)	
position	niup.html#position,Colorbar_t,int,int	niup: position(ih: Colorbar_t; x, y: int)	
position	niup.html#position,Colorbar_t	niup: position(ih: Colorbar_t): string	
posx=	niup.html#posx=,Colorbar_t,string	niup: posx=(ih: Colorbar_t; value: string)	
posx	niup.html#posx,Colorbar_t,string	niup: posx(ih: Colorbar_t; value: string)	
posx=	niup.html#posx=,Colorbar_t,int64	niup: posx=(ih: Colorbar_t; x: int64)	
posx	niup.html#posx,Colorbar_t,int64	niup: posx(ih: Colorbar_t; x: int64)	
posx	niup.html#posx,Colorbar_t	niup: posx(ih: Colorbar_t): string	
posy=	niup.html#posy=,Colorbar_t,string	niup: posy=(ih: Colorbar_t; value: string)	
posy	niup.html#posy,Colorbar_t,string	niup: posy(ih: Colorbar_t; value: string)	
posy=	niup.html#posy=,Colorbar_t,int64	niup: posy=(ih: Colorbar_t; x: int64)	
posy	niup.html#posy,Colorbar_t,int64	niup: posy(ih: Colorbar_t; x: int64)	
posy	niup.html#posy,Colorbar_t	niup: posy(ih: Colorbar_t): string	
preview_size	niup.html#preview_size,Colorbar_t	niup: preview_size(ih: Colorbar_t): string	
primary_cell	niup.html#primary_cell,Colorbar_t	niup: primary_cell(ih: Colorbar_t): string	
propagatefocus=	niup.html#propagatefocus=,Colorbar_t,string	niup: propagatefocus=(ih: Colorbar_t; value: string)	
propagatefocus	niup.html#propagatefocus,Colorbar_t,string	niup: propagatefocus(ih: Colorbar_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Colorbar_t,bool	niup: propagatefocus=(ih: Colorbar_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Colorbar_t,bool	niup: propagatefocus(ih: Colorbar_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Colorbar_t	niup: propagatefocus(ih: Colorbar_t): bool	
rastersize=	niup.html#rastersize=,Colorbar_t,string	niup: rastersize=(ih: Colorbar_t; value: string)	
rastersize	niup.html#rastersize,Colorbar_t,string	niup: rastersize(ih: Colorbar_t; value: string)	
rastersize=	niup.html#rastersize=,Colorbar_t,int,int	niup: rastersize=(ih: Colorbar_t; width, height: int)	
rastersize	niup.html#rastersize,Colorbar_t,int,int	niup: rastersize(ih: Colorbar_t; width, height: int)	
rastersize	niup.html#rastersize,Colorbar_t	niup: rastersize(ih: Colorbar_t): string	
sb_resize	niup.html#sb_resize,Colorbar_t	niup: sb_resize(ih: Colorbar_t): string	
screenposition	niup.html#screenposition,Colorbar_t	niup: screenposition(ih: Colorbar_t): string	
scrollbar=	niup.html#scrollbar=,Colorbar_t,string	niup: scrollbar=(ih: Colorbar_t; value: string)	
scrollbar	niup.html#scrollbar,Colorbar_t,string	niup: scrollbar(ih: Colorbar_t; value: string)	
scrollbar=	niup.html#scrollbar=,Colorbar_t,bool	niup: scrollbar=(ih: Colorbar_t; yes: bool)	
scrollbar	niup.html#scrollbar,Colorbar_t,bool	niup: scrollbar(ih: Colorbar_t; yes: bool)	
scrollbar	niup.html#scrollbar,Colorbar_t	niup: scrollbar(ih: Colorbar_t): bool	
secondary_cell	niup.html#secondary_cell,Colorbar_t	niup: secondary_cell(ih: Colorbar_t): string	
shadowed	niup.html#shadowed,Colorbar_t	niup: shadowed(ih: Colorbar_t): string	
show_preview=	niup.html#show_preview=,Colorbar_t,string	niup: show_preview=(ih: Colorbar_t; value: string)	
show_preview	niup.html#show_preview,Colorbar_t,string	niup: show_preview(ih: Colorbar_t; value: string)	
show_preview=	niup.html#show_preview=,Colorbar_t,bool	niup: show_preview=(ih: Colorbar_t; yes: bool)	
show_preview	niup.html#show_preview,Colorbar_t,bool	niup: show_preview(ih: Colorbar_t; yes: bool)	
show_preview	niup.html#show_preview,Colorbar_t	niup: show_preview(ih: Colorbar_t): bool	
show_secondary	niup.html#show_secondary,Colorbar_t	niup: show_secondary(ih: Colorbar_t): string	
size=	niup.html#size=,Colorbar_t,string	niup: size=(ih: Colorbar_t; value: string)	
size	niup.html#size,Colorbar_t,string	niup: size(ih: Colorbar_t; value: string)	
size=	niup.html#size=,Colorbar_t,int,int	niup: size=(ih: Colorbar_t; width, height: int)	
size	niup.html#size,Colorbar_t,int,int	niup: size(ih: Colorbar_t; width, height: int)	
size	niup.html#size,Colorbar_t	niup: size(ih: Colorbar_t): string	
squared	niup.html#squared,Colorbar_t	niup: squared(ih: Colorbar_t): string	
theme=	niup.html#theme=,Colorbar_t,string	niup: theme=(ih: Colorbar_t; value: string)	
theme	niup.html#theme,Colorbar_t,string	niup: theme(ih: Colorbar_t; value: string)	
theme	niup.html#theme,Colorbar_t	niup: theme(ih: Colorbar_t): string	
tip=	niup.html#tip=,Colorbar_t,string	niup: tip=(ih: Colorbar_t; value: string)	
tip	niup.html#tip,Colorbar_t,string	niup: tip(ih: Colorbar_t; value: string)	
tip	niup.html#tip,Colorbar_t	niup: tip(ih: Colorbar_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Colorbar_t,string	niup: tipbgcolor=(ih: Colorbar_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Colorbar_t,string	niup: tipbgcolor(ih: Colorbar_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Colorbar_t,int,int,int,int	niup: tipbgcolor=(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Colorbar_t,int,int,int,int	niup: tipbgcolor(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Colorbar_t	niup: tipbgcolor(ih: Colorbar_t): string	
tipdelay=	niup.html#tipdelay=,Colorbar_t,string	niup: tipdelay=(ih: Colorbar_t; value: string)	
tipdelay	niup.html#tipdelay,Colorbar_t,string	niup: tipdelay(ih: Colorbar_t; value: string)	
tipdelay=	niup.html#tipdelay=,Colorbar_t,int	niup: tipdelay=(ih: Colorbar_t; x: int)	
tipdelay	niup.html#tipdelay,Colorbar_t,int	niup: tipdelay(ih: Colorbar_t; x: int)	
tipdelay	niup.html#tipdelay,Colorbar_t	niup: tipdelay(ih: Colorbar_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Colorbar_t,string	niup: tipfgcolor=(ih: Colorbar_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Colorbar_t,string	niup: tipfgcolor(ih: Colorbar_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Colorbar_t,int,int,int,int	niup: tipfgcolor=(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Colorbar_t,int,int,int,int	niup: tipfgcolor(ih: Colorbar_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Colorbar_t	niup: tipfgcolor(ih: Colorbar_t): string	
tipicon=	niup.html#tipicon=,Colorbar_t,string	niup: tipicon=(ih: Colorbar_t; value: string)	
tipicon	niup.html#tipicon,Colorbar_t,string	niup: tipicon(ih: Colorbar_t; value: string)	
tipicon	niup.html#tipicon,Colorbar_t	niup: tipicon(ih: Colorbar_t): string	
tipmarkup=	niup.html#tipmarkup=,Colorbar_t,string	niup: tipmarkup=(ih: Colorbar_t; value: string)	
tipmarkup	niup.html#tipmarkup,Colorbar_t,string	niup: tipmarkup(ih: Colorbar_t; value: string)	
tipmarkup	niup.html#tipmarkup,Colorbar_t	niup: tipmarkup(ih: Colorbar_t): string	
tiprect=	niup.html#tiprect=,Colorbar_t,string	niup: tiprect=(ih: Colorbar_t; value: string)	
tiprect	niup.html#tiprect,Colorbar_t,string	niup: tiprect(ih: Colorbar_t; value: string)	
tiprect=	niup.html#tiprect=,Colorbar_t,int,int,int,int	niup: tiprect=(ih: Colorbar_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Colorbar_t,int,int,int,int	niup: tiprect(ih: Colorbar_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Colorbar_t	niup: tiprect(ih: Colorbar_t): string	
tipvisible=	niup.html#tipvisible=,Colorbar_t,string	niup: tipvisible=(ih: Colorbar_t; value: string)	
tipvisible	niup.html#tipvisible,Colorbar_t,string	niup: tipvisible(ih: Colorbar_t; value: string)	
tipvisible=	niup.html#tipvisible=,Colorbar_t,bool	niup: tipvisible=(ih: Colorbar_t; yes: bool)	
tipvisible	niup.html#tipvisible,Colorbar_t,bool	niup: tipvisible(ih: Colorbar_t; yes: bool)	
tipvisible	niup.html#tipvisible,Colorbar_t	niup: tipvisible(ih: Colorbar_t): bool	
touch=	niup.html#touch=,Colorbar_t,string	niup: touch=(ih: Colorbar_t; value: string)	
touch	niup.html#touch,Colorbar_t,string	niup: touch(ih: Colorbar_t; value: string)	
touch=	niup.html#touch=,Colorbar_t,bool	niup: touch=(ih: Colorbar_t; yes: bool)	
touch	niup.html#touch,Colorbar_t,bool	niup: touch(ih: Colorbar_t; yes: bool)	
touch	niup.html#touch,Colorbar_t	niup: touch(ih: Colorbar_t): bool	
transparency	niup.html#transparency,Colorbar_t	niup: transparency(ih: Colorbar_t): string	
usersize=	niup.html#usersize=,Colorbar_t,string	niup: usersize=(ih: Colorbar_t; value: string)	
usersize	niup.html#usersize,Colorbar_t,string	niup: usersize(ih: Colorbar_t; value: string)	
usersize=	niup.html#usersize=,Colorbar_t,int,int	niup: usersize=(ih: Colorbar_t; width, height: int)	
usersize	niup.html#usersize,Colorbar_t,int,int	niup: usersize(ih: Colorbar_t; width, height: int)	
usersize	niup.html#usersize,Colorbar_t	niup: usersize(ih: Colorbar_t): string	
visible=	niup.html#visible=,Colorbar_t,string	niup: visible=(ih: Colorbar_t; value: string)	
visible	niup.html#visible,Colorbar_t,string	niup: visible(ih: Colorbar_t; value: string)	
visible=	niup.html#visible=,Colorbar_t,bool	niup: visible=(ih: Colorbar_t; yes: bool)	
visible	niup.html#visible,Colorbar_t,bool	niup: visible(ih: Colorbar_t; yes: bool)	
visible	niup.html#visible,Colorbar_t	niup: visible(ih: Colorbar_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,Colorbar_t,string	niup: wheeldropfocus=(ih: Colorbar_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,Colorbar_t,string	niup: wheeldropfocus(ih: Colorbar_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,Colorbar_t,bool	niup: wheeldropfocus=(ih: Colorbar_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Colorbar_t,bool	niup: wheeldropfocus(ih: Colorbar_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Colorbar_t	niup: wheeldropfocus(ih: Colorbar_t): bool	
wid	niup.html#wid,Colorbar_t	niup: wid(ih: Colorbar_t): string	
x	niup.html#x,Colorbar_t	niup: x(ih: Colorbar_t): string	
xautohide=	niup.html#xautohide=,Colorbar_t,string	niup: xautohide=(ih: Colorbar_t; value: string)	
xautohide	niup.html#xautohide,Colorbar_t,string	niup: xautohide(ih: Colorbar_t; value: string)	
xautohide=	niup.html#xautohide=,Colorbar_t,bool	niup: xautohide=(ih: Colorbar_t; yes: bool)	
xautohide	niup.html#xautohide,Colorbar_t,bool	niup: xautohide(ih: Colorbar_t; yes: bool)	
xautohide	niup.html#xautohide,Colorbar_t	niup: xautohide(ih: Colorbar_t): bool	
xdisplay	niup.html#xdisplay,Colorbar_t	niup: xdisplay(ih: Colorbar_t): string	
xfontid	niup.html#xfontid,Colorbar_t	niup: xfontid(ih: Colorbar_t): string	
xhidden	niup.html#xhidden,Colorbar_t	niup: xhidden(ih: Colorbar_t): bool	
xmax=	niup.html#xmax=,Colorbar_t,string	niup: xmax=(ih: Colorbar_t; value: string)	
xmax	niup.html#xmax,Colorbar_t,string	niup: xmax(ih: Colorbar_t; value: string)	
xmax=	niup.html#xmax=,Colorbar_t,int	niup: xmax=(ih: Colorbar_t; x: int)	
xmax	niup.html#xmax,Colorbar_t,int	niup: xmax(ih: Colorbar_t; x: int)	
xmax	niup.html#xmax,Colorbar_t	niup: xmax(ih: Colorbar_t): string	
xmin=	niup.html#xmin=,Colorbar_t,string	niup: xmin=(ih: Colorbar_t; value: string)	
xmin	niup.html#xmin,Colorbar_t,string	niup: xmin(ih: Colorbar_t; value: string)	
xmin=	niup.html#xmin=,Colorbar_t,int	niup: xmin=(ih: Colorbar_t; x: int)	
xmin	niup.html#xmin,Colorbar_t,int	niup: xmin(ih: Colorbar_t; x: int)	
xmin	niup.html#xmin,Colorbar_t	niup: xmin(ih: Colorbar_t): string	
xwindow	niup.html#xwindow,Colorbar_t	niup: xwindow(ih: Colorbar_t): string	
y	niup.html#y,Colorbar_t	niup: y(ih: Colorbar_t): string	
yautohide=	niup.html#yautohide=,Colorbar_t,string	niup: yautohide=(ih: Colorbar_t; value: string)	
yautohide	niup.html#yautohide,Colorbar_t,string	niup: yautohide(ih: Colorbar_t; value: string)	
yautohide=	niup.html#yautohide=,Colorbar_t,bool	niup: yautohide=(ih: Colorbar_t; yes: bool)	
yautohide	niup.html#yautohide,Colorbar_t,bool	niup: yautohide(ih: Colorbar_t; yes: bool)	
yautohide	niup.html#yautohide,Colorbar_t	niup: yautohide(ih: Colorbar_t): bool	
yhidden	niup.html#yhidden,Colorbar_t	niup: yhidden(ih: Colorbar_t): bool	
ymax=	niup.html#ymax=,Colorbar_t,string	niup: ymax=(ih: Colorbar_t; value: string)	
ymax	niup.html#ymax,Colorbar_t,string	niup: ymax(ih: Colorbar_t; value: string)	
ymax=	niup.html#ymax=,Colorbar_t,int	niup: ymax=(ih: Colorbar_t; x: int)	
ymax	niup.html#ymax,Colorbar_t,int	niup: ymax(ih: Colorbar_t; x: int)	
ymax	niup.html#ymax,Colorbar_t	niup: ymax(ih: Colorbar_t): string	
ymin=	niup.html#ymin=,Colorbar_t,string	niup: ymin=(ih: Colorbar_t; value: string)	
ymin	niup.html#ymin,Colorbar_t,string	niup: ymin(ih: Colorbar_t; value: string)	
ymin=	niup.html#ymin=,Colorbar_t,int	niup: ymin=(ih: Colorbar_t; x: int)	
ymin	niup.html#ymin,Colorbar_t,int	niup: ymin(ih: Colorbar_t; x: int)	
ymin	niup.html#ymin,Colorbar_t	niup: ymin(ih: Colorbar_t): string	
zorder=	niup.html#zorder=,Colorbar_t,string	niup: zorder=(ih: Colorbar_t; value: string)	
zorder	niup.html#zorder,Colorbar_t,string	niup: zorder(ih: Colorbar_t; value: string)	
action=	niup.html#action=,Colorbar_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: Colorbar_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,Colorbar_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: Colorbar_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,Colorbar_t	niup: action(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Colorbar_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Colorbar_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                    arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Colorbar_t	niup: button_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
cell_cb=	niup.html#cell_cb=,Colorbar_t,proc(PIhandle,cint)	niup: cell_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
cell_cb	niup.html#cell_cb,Colorbar_t,proc(PIhandle,cint)	niup: cell_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
cell_cb	niup.html#cell_cb,Colorbar_t	niup: cell_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Colorbar_t,proc(PIhandle)	niup: destroy_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Colorbar_t,proc(PIhandle)	niup: destroy_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Colorbar_t	niup: destroy_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Colorbar_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Colorbar_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Colorbar_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Colorbar_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Colorbar_t	niup: dragbegin_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Colorbar_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Colorbar_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Colorbar_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Colorbar_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Colorbar_t	niup: dragdatasize_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Colorbar_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Colorbar_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Colorbar_t	niup: dragdata_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Colorbar_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Colorbar_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Colorbar_t	niup: dragend_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Colorbar_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Colorbar_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Colorbar_t	niup: dropdata_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Colorbar_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Colorbar_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Colorbar_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Colorbar_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Colorbar_t	niup: dropfiles_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Colorbar_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Colorbar_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Colorbar_t	niup: dropmotion_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Colorbar_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Colorbar_t,proc(PIhandle)	niup: enterwindow_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Colorbar_t	niup: enterwindow_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
extended_cb=	niup.html#extended_cb=,Colorbar_t,proc(PIhandle,cint)	niup: extended_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
extended_cb	niup.html#extended_cb,Colorbar_t,proc(PIhandle,cint)	niup: extended_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
extended_cb	niup.html#extended_cb,Colorbar_t	niup: extended_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,Colorbar_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Colorbar_t,proc(PIhandle,cint)	niup: focus_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Colorbar_t	niup: focus_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Colorbar_t,proc(PIhandle)	niup: getfocus_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Colorbar_t,proc(PIhandle)	niup: getfocus_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Colorbar_t	niup: getfocus_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Colorbar_t,proc(PIhandle)	niup: help_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Colorbar_t,proc(PIhandle)	niup: help_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Colorbar_t	niup: help_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,Colorbar_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: Colorbar_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Colorbar_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: Colorbar_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Colorbar_t	niup: keypress_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Colorbar_t,proc(PIhandle)	niup: killfocus_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Colorbar_t,proc(PIhandle)	niup: killfocus_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Colorbar_t	niup: killfocus_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Colorbar_t,proc(PIhandle,cint)	niup: k_any=(ih: Colorbar_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Colorbar_t,proc(PIhandle,cint)	niup: k_any(ih: Colorbar_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Colorbar_t	niup: k_any(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Colorbar_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Colorbar_t,proc(PIhandle)	niup: ldestroy_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Colorbar_t	niup: ldestroy_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Colorbar_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Colorbar_t,proc(PIhandle)	niup: leavewindow_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Colorbar_t	niup: leavewindow_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Colorbar_t,proc(PIhandle)	niup: map_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Colorbar_t,proc(PIhandle)	niup: map_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Colorbar_t	niup: map_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Colorbar_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Colorbar_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Colorbar_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Colorbar_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Colorbar_t	niup: motion_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Colorbar_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Colorbar_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Colorbar_t	niup: postmessage_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,Colorbar_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: Colorbar_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Colorbar_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: Colorbar_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Colorbar_t	niup: resize_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,Colorbar_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: Colorbar_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Colorbar_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: Colorbar_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Colorbar_t	niup: scroll_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
select_cb=	niup.html#select_cb=,Colorbar_t,proc(PIhandle,cint,cint)	niup: select_cb=(ih: Colorbar_t;\n           cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
select_cb	niup.html#select_cb,Colorbar_t,proc(PIhandle,cint,cint)	niup: select_cb(ih: Colorbar_t;\n          cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
select_cb	niup.html#select_cb,Colorbar_t	niup: select_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
switch_cb=	niup.html#switch_cb=,Colorbar_t,proc(PIhandle,cint,cint)	niup: switch_cb=(ih: Colorbar_t;\n           cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
switch_cb	niup.html#switch_cb,Colorbar_t,proc(PIhandle,cint,cint)	niup: switch_cb(ih: Colorbar_t;\n          cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
switch_cb	niup.html#switch_cb,Colorbar_t	niup: switch_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Colorbar_t,proc(PIhandle)	niup: unmap_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Colorbar_t,proc(PIhandle)	niup: unmap_cb(ih: Colorbar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Colorbar_t	niup: unmap_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,Colorbar_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Colorbar_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                   status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Colorbar_t	niup: wheel_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,Colorbar_t,proc(PIhandle,cint)	niup: wom_cb=(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Colorbar_t,proc(PIhandle,cint)	niup: wom_cb(ih: Colorbar_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Colorbar_t	niup: wom_cb(ih: Colorbar_t): proc (ih: PIhandle): cint {.cdecl.}	
ColorBrowser	niup.html#ColorBrowser_2	niup: ColorBrowser(): ColorBrowser_t	
active=	niup.html#active=,ColorBrowser_t,string	niup: active=(ih: ColorBrowser_t; value: string)	
active	niup.html#active,ColorBrowser_t,string	niup: active(ih: ColorBrowser_t; value: string)	
active=	niup.html#active=,ColorBrowser_t,bool	niup: active=(ih: ColorBrowser_t; yes: bool)	
active	niup.html#active,ColorBrowser_t,bool	niup: active(ih: ColorBrowser_t; yes: bool)	
active	niup.html#active,ColorBrowser_t	niup: active(ih: ColorBrowser_t): bool	
backingstore=	niup.html#backingstore=,ColorBrowser_t,string	niup: backingstore=(ih: ColorBrowser_t; value: string)	
backingstore	niup.html#backingstore,ColorBrowser_t,string	niup: backingstore(ih: ColorBrowser_t; value: string)	
backingstore=	niup.html#backingstore=,ColorBrowser_t,bool	niup: backingstore=(ih: ColorBrowser_t; yes: bool)	
backingstore	niup.html#backingstore,ColorBrowser_t,bool	niup: backingstore(ih: ColorBrowser_t; yes: bool)	
backingstore	niup.html#backingstore,ColorBrowser_t	niup: backingstore(ih: ColorBrowser_t): bool	
bgcolor=	niup.html#bgcolor=,ColorBrowser_t,string	niup: bgcolor=(ih: ColorBrowser_t; value: string)	
bgcolor	niup.html#bgcolor,ColorBrowser_t,string	niup: bgcolor(ih: ColorBrowser_t; value: string)	
bgcolor=	niup.html#bgcolor=,ColorBrowser_t,int,int,int,int	niup: bgcolor=(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ColorBrowser_t,int,int,int,int	niup: bgcolor(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ColorBrowser_t	niup: bgcolor(ih: ColorBrowser_t): string	
border	niup.html#border,ColorBrowser_t	niup: border(ih: ColorBrowser_t): bool	
canfocus=	niup.html#canfocus=,ColorBrowser_t,string	niup: canfocus=(ih: ColorBrowser_t; value: string)	
canfocus	niup.html#canfocus,ColorBrowser_t,string	niup: canfocus(ih: ColorBrowser_t; value: string)	
canfocus=	niup.html#canfocus=,ColorBrowser_t,bool	niup: canfocus=(ih: ColorBrowser_t; yes: bool)	
canfocus	niup.html#canfocus,ColorBrowser_t,bool	niup: canfocus(ih: ColorBrowser_t; yes: bool)	
canfocus	niup.html#canfocus,ColorBrowser_t	niup: canfocus(ih: ColorBrowser_t): bool	
charsize	niup.html#charsize,ColorBrowser_t	niup: charsize(ih: ColorBrowser_t): string	
cursor=	niup.html#cursor=,ColorBrowser_t,	niup: cursor=(ih: ColorBrowser_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ColorBrowser_t,	niup: cursor(ih: ColorBrowser_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ColorBrowser_t	niup: cursor(ih: ColorBrowser_t): string	
dragdrop=	niup.html#dragdrop=,ColorBrowser_t,string	niup: dragdrop=(ih: ColorBrowser_t; value: string)	
dragdrop	niup.html#dragdrop,ColorBrowser_t,string	niup: dragdrop(ih: ColorBrowser_t; value: string)	
dragdrop=	niup.html#dragdrop=,ColorBrowser_t,bool	niup: dragdrop=(ih: ColorBrowser_t; yes: bool)	
dragdrop	niup.html#dragdrop,ColorBrowser_t,bool	niup: dragdrop(ih: ColorBrowser_t; yes: bool)	
dragdrop	niup.html#dragdrop,ColorBrowser_t	niup: dragdrop(ih: ColorBrowser_t): bool	
dragsource=	niup.html#dragsource=,ColorBrowser_t,string	niup: dragsource=(ih: ColorBrowser_t; value: string)	
dragsource	niup.html#dragsource,ColorBrowser_t,string	niup: dragsource(ih: ColorBrowser_t; value: string)	
dragsource=	niup.html#dragsource=,ColorBrowser_t,bool	niup: dragsource=(ih: ColorBrowser_t; yes: bool)	
dragsource	niup.html#dragsource,ColorBrowser_t,bool	niup: dragsource(ih: ColorBrowser_t; yes: bool)	
dragsource	niup.html#dragsource,ColorBrowser_t	niup: dragsource(ih: ColorBrowser_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,ColorBrowser_t,string	niup: dragsourcemove=(ih: ColorBrowser_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,ColorBrowser_t,string	niup: dragsourcemove(ih: ColorBrowser_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,ColorBrowser_t,bool	niup: dragsourcemove=(ih: ColorBrowser_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ColorBrowser_t,bool	niup: dragsourcemove(ih: ColorBrowser_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ColorBrowser_t	niup: dragsourcemove(ih: ColorBrowser_t): bool	
dragtypes=	niup.html#dragtypes=,ColorBrowser_t,string	niup: dragtypes=(ih: ColorBrowser_t; value: string)	
dragtypes	niup.html#dragtypes,ColorBrowser_t,string	niup: dragtypes(ih: ColorBrowser_t; value: string)	
dragtypes	niup.html#dragtypes,ColorBrowser_t	niup: dragtypes(ih: ColorBrowser_t): string	
drawable	niup.html#drawable,ColorBrowser_t	niup: drawable(ih: ColorBrowser_t): string	
drawbgcolor=	niup.html#drawbgcolor=,ColorBrowser_t,string	niup: drawbgcolor=(ih: ColorBrowser_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,ColorBrowser_t,string	niup: drawbgcolor(ih: ColorBrowser_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,ColorBrowser_t,int,int,int,int	niup: drawbgcolor=(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,ColorBrowser_t,int,int,int,int	niup: drawbgcolor(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,ColorBrowser_t	niup: drawbgcolor(ih: ColorBrowser_t): string	
drawcolor=	niup.html#drawcolor=,ColorBrowser_t,string	niup: drawcolor=(ih: ColorBrowser_t; value: string)	
drawcolor	niup.html#drawcolor,ColorBrowser_t,string	niup: drawcolor(ih: ColorBrowser_t; value: string)	
drawcolor=	niup.html#drawcolor=,ColorBrowser_t,int,int,int,int	niup: drawcolor=(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,ColorBrowser_t,int,int,int,int	niup: drawcolor(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,ColorBrowser_t	niup: drawcolor(ih: ColorBrowser_t): string	
drawdriver	niup.html#drawdriver,ColorBrowser_t	niup: drawdriver(ih: ColorBrowser_t): string	
drawfont=	niup.html#drawfont=,ColorBrowser_t,string	niup: drawfont=(ih: ColorBrowser_t; value: string)	
drawfont	niup.html#drawfont,ColorBrowser_t,string	niup: drawfont(ih: ColorBrowser_t; value: string)	
drawfont	niup.html#drawfont,ColorBrowser_t	niup: drawfont(ih: ColorBrowser_t): string	
drawlinewidth=	niup.html#drawlinewidth=,ColorBrowser_t,string	niup: drawlinewidth=(ih: ColorBrowser_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,ColorBrowser_t,string	niup: drawlinewidth(ih: ColorBrowser_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,ColorBrowser_t,int	niup: drawlinewidth=(ih: ColorBrowser_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,ColorBrowser_t,int	niup: drawlinewidth(ih: ColorBrowser_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,ColorBrowser_t	niup: drawlinewidth(ih: ColorBrowser_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,ColorBrowser_t,string	niup: drawmakeinactive=(ih: ColorBrowser_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,ColorBrowser_t,string	niup: drawmakeinactive(ih: ColorBrowser_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,ColorBrowser_t,bool	niup: drawmakeinactive=(ih: ColorBrowser_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,ColorBrowser_t,bool	niup: drawmakeinactive(ih: ColorBrowser_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,ColorBrowser_t	niup: drawmakeinactive(ih: ColorBrowser_t): bool	
drawsize	niup.html#drawsize,ColorBrowser_t	niup: drawsize(ih: ColorBrowser_t): string	
drawstyle=	niup.html#drawstyle=,ColorBrowser_t,string	niup: drawstyle=(ih: ColorBrowser_t; value: string)	
drawstyle	niup.html#drawstyle,ColorBrowser_t,string	niup: drawstyle(ih: ColorBrowser_t; value: string)	
drawstyle	niup.html#drawstyle,ColorBrowser_t	niup: drawstyle(ih: ColorBrowser_t): string	
drawtextalignment=	niup.html#drawtextalignment=,ColorBrowser_t,string	niup: drawtextalignment=(ih: ColorBrowser_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,ColorBrowser_t,string	niup: drawtextalignment(ih: ColorBrowser_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,ColorBrowser_t	niup: drawtextalignment(ih: ColorBrowser_t): string	
drawtextclip=	niup.html#drawtextclip=,ColorBrowser_t,string	niup: drawtextclip=(ih: ColorBrowser_t; value: string)	
drawtextclip	niup.html#drawtextclip,ColorBrowser_t,string	niup: drawtextclip(ih: ColorBrowser_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,ColorBrowser_t,bool	niup: drawtextclip=(ih: ColorBrowser_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,ColorBrowser_t,bool	niup: drawtextclip(ih: ColorBrowser_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,ColorBrowser_t	niup: drawtextclip(ih: ColorBrowser_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,ColorBrowser_t,string	niup: drawtextellipsis=(ih: ColorBrowser_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,ColorBrowser_t,string	niup: drawtextellipsis(ih: ColorBrowser_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,ColorBrowser_t,bool	niup: drawtextellipsis=(ih: ColorBrowser_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,ColorBrowser_t,bool	niup: drawtextellipsis(ih: ColorBrowser_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,ColorBrowser_t	niup: drawtextellipsis(ih: ColorBrowser_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,ColorBrowser_t,string	niup: drawtextlayoutcenter=(ih: ColorBrowser_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,ColorBrowser_t,string	niup: drawtextlayoutcenter(ih: ColorBrowser_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,ColorBrowser_t,bool	niup: drawtextlayoutcenter=(ih: ColorBrowser_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,ColorBrowser_t,bool	niup: drawtextlayoutcenter(ih: ColorBrowser_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,ColorBrowser_t	niup: drawtextlayoutcenter(ih: ColorBrowser_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,ColorBrowser_t,string	niup: drawtextorientation=(ih: ColorBrowser_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,ColorBrowser_t,string	niup: drawtextorientation(ih: ColorBrowser_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,ColorBrowser_t,int64	niup: drawtextorientation=(ih: ColorBrowser_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,ColorBrowser_t,int64	niup: drawtextorientation(ih: ColorBrowser_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,ColorBrowser_t	niup: drawtextorientation(ih: ColorBrowser_t): string	
drawtextwrap=	niup.html#drawtextwrap=,ColorBrowser_t,string	niup: drawtextwrap=(ih: ColorBrowser_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,ColorBrowser_t,string	niup: drawtextwrap(ih: ColorBrowser_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,ColorBrowser_t,bool	niup: drawtextwrap=(ih: ColorBrowser_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,ColorBrowser_t,bool	niup: drawtextwrap(ih: ColorBrowser_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,ColorBrowser_t	niup: drawtextwrap(ih: ColorBrowser_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,ColorBrowser_t,string	niup: dropfilestarget=(ih: ColorBrowser_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,ColorBrowser_t,string	niup: dropfilestarget(ih: ColorBrowser_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,ColorBrowser_t,bool	niup: dropfilestarget=(ih: ColorBrowser_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ColorBrowser_t,bool	niup: dropfilestarget(ih: ColorBrowser_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ColorBrowser_t	niup: dropfilestarget(ih: ColorBrowser_t): bool	
droptarget=	niup.html#droptarget=,ColorBrowser_t,string	niup: droptarget=(ih: ColorBrowser_t; value: string)	
droptarget	niup.html#droptarget,ColorBrowser_t,string	niup: droptarget(ih: ColorBrowser_t; value: string)	
droptarget=	niup.html#droptarget=,ColorBrowser_t,bool	niup: droptarget=(ih: ColorBrowser_t; yes: bool)	
droptarget	niup.html#droptarget,ColorBrowser_t,bool	niup: droptarget(ih: ColorBrowser_t; yes: bool)	
droptarget	niup.html#droptarget,ColorBrowser_t	niup: droptarget(ih: ColorBrowser_t): bool	
droptypes=	niup.html#droptypes=,ColorBrowser_t,string	niup: droptypes=(ih: ColorBrowser_t; value: string)	
droptypes	niup.html#droptypes,ColorBrowser_t,string	niup: droptypes(ih: ColorBrowser_t; value: string)	
droptypes	niup.html#droptypes,ColorBrowser_t	niup: droptypes(ih: ColorBrowser_t): string	
dx=	niup.html#dx=,ColorBrowser_t,string	niup: dx=(ih: ColorBrowser_t; value: string)	
dx	niup.html#dx,ColorBrowser_t,string	niup: dx(ih: ColorBrowser_t; value: string)	
dx=	niup.html#dx=,ColorBrowser_t,int64	niup: dx=(ih: ColorBrowser_t; x: int64)	
dx	niup.html#dx,ColorBrowser_t,int64	niup: dx(ih: ColorBrowser_t; x: int64)	
dx	niup.html#dx,ColorBrowser_t	niup: dx(ih: ColorBrowser_t): string	
dy=	niup.html#dy=,ColorBrowser_t,string	niup: dy=(ih: ColorBrowser_t; value: string)	
dy	niup.html#dy,ColorBrowser_t,string	niup: dy(ih: ColorBrowser_t; value: string)	
dy=	niup.html#dy=,ColorBrowser_t,int64	niup: dy=(ih: ColorBrowser_t; x: int64)	
dy	niup.html#dy,ColorBrowser_t,int64	niup: dy(ih: ColorBrowser_t; x: int64)	
dy	niup.html#dy,ColorBrowser_t	niup: dy(ih: ColorBrowser_t): string	
expand=	niup.html#expand=,ColorBrowser_t,string	niup: expand=(ih: ColorBrowser_t; value: string)	
expand	niup.html#expand,ColorBrowser_t,string	niup: expand(ih: ColorBrowser_t; value: string)	
expand	niup.html#expand,ColorBrowser_t	niup: expand(ih: ColorBrowser_t): string	
expandweight=	niup.html#expandweight=,ColorBrowser_t,string	niup: expandweight=(ih: ColorBrowser_t; value: string)	
expandweight	niup.html#expandweight,ColorBrowser_t,string	niup: expandweight(ih: ColorBrowser_t; value: string)	
expandweight=	niup.html#expandweight=,ColorBrowser_t,int64	niup: expandweight=(ih: ColorBrowser_t; x: int64)	
expandweight	niup.html#expandweight,ColorBrowser_t,int64	niup: expandweight(ih: ColorBrowser_t; x: int64)	
expandweight	niup.html#expandweight,ColorBrowser_t	niup: expandweight(ih: ColorBrowser_t): string	
floating=	niup.html#floating=,ColorBrowser_t,string	niup: floating=(ih: ColorBrowser_t; value: string)	
floating	niup.html#floating,ColorBrowser_t,string	niup: floating(ih: ColorBrowser_t; value: string)	
floating	niup.html#floating,ColorBrowser_t	niup: floating(ih: ColorBrowser_t): string	
font=	niup.html#font=,ColorBrowser_t,string	niup: font=(ih: ColorBrowser_t; value: string)	
font	niup.html#font,ColorBrowser_t,string	niup: font(ih: ColorBrowser_t; value: string)	
font	niup.html#font,ColorBrowser_t	niup: font(ih: ColorBrowser_t): string	
fontface=	niup.html#fontface=,ColorBrowser_t,string	niup: fontface=(ih: ColorBrowser_t; value: string)	
fontface	niup.html#fontface,ColorBrowser_t,string	niup: fontface(ih: ColorBrowser_t; value: string)	
fontface	niup.html#fontface,ColorBrowser_t	niup: fontface(ih: ColorBrowser_t): string	
fontsize=	niup.html#fontsize=,ColorBrowser_t,string	niup: fontsize=(ih: ColorBrowser_t; value: string)	
fontsize	niup.html#fontsize,ColorBrowser_t,string	niup: fontsize(ih: ColorBrowser_t; value: string)	
fontsize=	niup.html#fontsize=,ColorBrowser_t,int	niup: fontsize=(ih: ColorBrowser_t; x: int)	
fontsize	niup.html#fontsize,ColorBrowser_t,int	niup: fontsize(ih: ColorBrowser_t; x: int)	
fontsize	niup.html#fontsize,ColorBrowser_t	niup: fontsize(ih: ColorBrowser_t): string	
fontstyle=	niup.html#fontstyle=,ColorBrowser_t,string	niup: fontstyle=(ih: ColorBrowser_t; value: string)	
fontstyle	niup.html#fontstyle,ColorBrowser_t,string	niup: fontstyle(ih: ColorBrowser_t; value: string)	
fontstyle	niup.html#fontstyle,ColorBrowser_t	niup: fontstyle(ih: ColorBrowser_t): string	
handlename=	niup.html#handlename=,ColorBrowser_t,string	niup: handlename=(ih: ColorBrowser_t; value: string)	
handlename	niup.html#handlename,ColorBrowser_t,string	niup: handlename(ih: ColorBrowser_t; value: string)	
handlename	niup.html#handlename,ColorBrowser_t	niup: handlename(ih: ColorBrowser_t): string	
hsi	niup.html#hsi,ColorBrowser_t	niup: hsi(ih: ColorBrowser_t): string	
linex=	niup.html#linex=,ColorBrowser_t,string	niup: linex=(ih: ColorBrowser_t; value: string)	
linex	niup.html#linex,ColorBrowser_t,string	niup: linex(ih: ColorBrowser_t; value: string)	
linex=	niup.html#linex=,ColorBrowser_t,int64	niup: linex=(ih: ColorBrowser_t; x: int64)	
linex	niup.html#linex,ColorBrowser_t,int64	niup: linex(ih: ColorBrowser_t; x: int64)	
linex	niup.html#linex,ColorBrowser_t	niup: linex(ih: ColorBrowser_t): string	
liney=	niup.html#liney=,ColorBrowser_t,string	niup: liney=(ih: ColorBrowser_t; value: string)	
liney	niup.html#liney,ColorBrowser_t,string	niup: liney(ih: ColorBrowser_t; value: string)	
liney=	niup.html#liney=,ColorBrowser_t,int64	niup: liney=(ih: ColorBrowser_t; x: int64)	
liney	niup.html#liney,ColorBrowser_t,int64	niup: liney(ih: ColorBrowser_t; x: int64)	
liney	niup.html#liney,ColorBrowser_t	niup: liney(ih: ColorBrowser_t): string	
maxsize=	niup.html#maxsize=,ColorBrowser_t,string	niup: maxsize=(ih: ColorBrowser_t; value: string)	
maxsize	niup.html#maxsize,ColorBrowser_t,string	niup: maxsize(ih: ColorBrowser_t; value: string)	
maxsize=	niup.html#maxsize=,ColorBrowser_t,int,int	niup: maxsize=(ih: ColorBrowser_t; width, height: int)	
maxsize	niup.html#maxsize,ColorBrowser_t,int,int	niup: maxsize(ih: ColorBrowser_t; width, height: int)	
maxsize	niup.html#maxsize,ColorBrowser_t	niup: maxsize(ih: ColorBrowser_t): string	
minsize=	niup.html#minsize=,ColorBrowser_t,string	niup: minsize=(ih: ColorBrowser_t; value: string)	
minsize	niup.html#minsize,ColorBrowser_t,string	niup: minsize(ih: ColorBrowser_t; value: string)	
minsize=	niup.html#minsize=,ColorBrowser_t,int,int	niup: minsize=(ih: ColorBrowser_t; width, height: int)	
minsize	niup.html#minsize,ColorBrowser_t,int,int	niup: minsize(ih: ColorBrowser_t; width, height: int)	
minsize	niup.html#minsize,ColorBrowser_t	niup: minsize(ih: ColorBrowser_t): string	
name=	niup.html#name=,ColorBrowser_t,string	niup: name=(ih: ColorBrowser_t; value: string)	
name	niup.html#name,ColorBrowser_t,string	niup: name(ih: ColorBrowser_t; value: string)	
name	niup.html#name,ColorBrowser_t	niup: name(ih: ColorBrowser_t): string	
naturalsize	niup.html#naturalsize,ColorBrowser_t	niup: naturalsize(ih: ColorBrowser_t): string	
normalizergroup=	niup.html#normalizergroup=,ColorBrowser_t,string	niup: normalizergroup=(ih: ColorBrowser_t; value: string)	
normalizergroup	niup.html#normalizergroup,ColorBrowser_t,string	niup: normalizergroup(ih: ColorBrowser_t; value: string)	
normalizergroup	niup.html#normalizergroup,ColorBrowser_t	niup: normalizergroup(ih: ColorBrowser_t): string	
ntheme=	niup.html#ntheme=,ColorBrowser_t,string	niup: ntheme=(ih: ColorBrowser_t; value: string)	
ntheme	niup.html#ntheme,ColorBrowser_t,string	niup: ntheme(ih: ColorBrowser_t; value: string)	
ntheme	niup.html#ntheme,ColorBrowser_t	niup: ntheme(ih: ColorBrowser_t): string	
pangofontdesc	niup.html#pangofontdesc,ColorBrowser_t	niup: pangofontdesc(ih: ColorBrowser_t): string	
pangolayout	niup.html#pangolayout,ColorBrowser_t	niup: pangolayout(ih: ColorBrowser_t): string	
position=	niup.html#position=,ColorBrowser_t,string	niup: position=(ih: ColorBrowser_t; value: string)	
position	niup.html#position,ColorBrowser_t,string	niup: position(ih: ColorBrowser_t; value: string)	
position=	niup.html#position=,ColorBrowser_t,int,int	niup: position=(ih: ColorBrowser_t; x, y: int)	
position	niup.html#position,ColorBrowser_t,int,int	niup: position(ih: ColorBrowser_t; x, y: int)	
position	niup.html#position,ColorBrowser_t	niup: position(ih: ColorBrowser_t): string	
posx=	niup.html#posx=,ColorBrowser_t,string	niup: posx=(ih: ColorBrowser_t; value: string)	
posx	niup.html#posx,ColorBrowser_t,string	niup: posx(ih: ColorBrowser_t; value: string)	
posx=	niup.html#posx=,ColorBrowser_t,int64	niup: posx=(ih: ColorBrowser_t; x: int64)	
posx	niup.html#posx,ColorBrowser_t,int64	niup: posx(ih: ColorBrowser_t; x: int64)	
posx	niup.html#posx,ColorBrowser_t	niup: posx(ih: ColorBrowser_t): string	
posy=	niup.html#posy=,ColorBrowser_t,string	niup: posy=(ih: ColorBrowser_t; value: string)	
posy	niup.html#posy,ColorBrowser_t,string	niup: posy(ih: ColorBrowser_t; value: string)	
posy=	niup.html#posy=,ColorBrowser_t,int64	niup: posy=(ih: ColorBrowser_t; x: int64)	
posy	niup.html#posy,ColorBrowser_t,int64	niup: posy(ih: ColorBrowser_t; x: int64)	
posy	niup.html#posy,ColorBrowser_t	niup: posy(ih: ColorBrowser_t): string	
propagatefocus=	niup.html#propagatefocus=,ColorBrowser_t,string	niup: propagatefocus=(ih: ColorBrowser_t; value: string)	
propagatefocus	niup.html#propagatefocus,ColorBrowser_t,string	niup: propagatefocus(ih: ColorBrowser_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,ColorBrowser_t,bool	niup: propagatefocus=(ih: ColorBrowser_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ColorBrowser_t,bool	niup: propagatefocus(ih: ColorBrowser_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ColorBrowser_t	niup: propagatefocus(ih: ColorBrowser_t): bool	
rastersize=	niup.html#rastersize=,ColorBrowser_t,string	niup: rastersize=(ih: ColorBrowser_t; value: string)	
rastersize	niup.html#rastersize,ColorBrowser_t,string	niup: rastersize(ih: ColorBrowser_t; value: string)	
rastersize=	niup.html#rastersize=,ColorBrowser_t,int,int	niup: rastersize=(ih: ColorBrowser_t; width, height: int)	
rastersize	niup.html#rastersize,ColorBrowser_t,int,int	niup: rastersize(ih: ColorBrowser_t; width, height: int)	
rastersize	niup.html#rastersize,ColorBrowser_t	niup: rastersize(ih: ColorBrowser_t): string	
rgb	niup.html#rgb,ColorBrowser_t	niup: rgb(ih: ColorBrowser_t): string	
sb_resize	niup.html#sb_resize,ColorBrowser_t	niup: sb_resize(ih: ColorBrowser_t): string	
screenposition	niup.html#screenposition,ColorBrowser_t	niup: screenposition(ih: ColorBrowser_t): string	
scrollbar=	niup.html#scrollbar=,ColorBrowser_t,string	niup: scrollbar=(ih: ColorBrowser_t; value: string)	
scrollbar	niup.html#scrollbar,ColorBrowser_t,string	niup: scrollbar(ih: ColorBrowser_t; value: string)	
scrollbar=	niup.html#scrollbar=,ColorBrowser_t,bool	niup: scrollbar=(ih: ColorBrowser_t; yes: bool)	
scrollbar	niup.html#scrollbar,ColorBrowser_t,bool	niup: scrollbar(ih: ColorBrowser_t; yes: bool)	
scrollbar	niup.html#scrollbar,ColorBrowser_t	niup: scrollbar(ih: ColorBrowser_t): bool	
size=	niup.html#size=,ColorBrowser_t,string	niup: size=(ih: ColorBrowser_t; value: string)	
size	niup.html#size,ColorBrowser_t,string	niup: size(ih: ColorBrowser_t; value: string)	
size=	niup.html#size=,ColorBrowser_t,int,int	niup: size=(ih: ColorBrowser_t; width, height: int)	
size	niup.html#size,ColorBrowser_t,int,int	niup: size(ih: ColorBrowser_t; width, height: int)	
size	niup.html#size,ColorBrowser_t	niup: size(ih: ColorBrowser_t): string	
theme=	niup.html#theme=,ColorBrowser_t,string	niup: theme=(ih: ColorBrowser_t; value: string)	
theme	niup.html#theme,ColorBrowser_t,string	niup: theme(ih: ColorBrowser_t; value: string)	
theme	niup.html#theme,ColorBrowser_t	niup: theme(ih: ColorBrowser_t): string	
tip=	niup.html#tip=,ColorBrowser_t,string	niup: tip=(ih: ColorBrowser_t; value: string)	
tip	niup.html#tip,ColorBrowser_t,string	niup: tip(ih: ColorBrowser_t; value: string)	
tip	niup.html#tip,ColorBrowser_t	niup: tip(ih: ColorBrowser_t): string	
tipbgcolor=	niup.html#tipbgcolor=,ColorBrowser_t,string	niup: tipbgcolor=(ih: ColorBrowser_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,ColorBrowser_t,string	niup: tipbgcolor(ih: ColorBrowser_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,ColorBrowser_t,int,int,int,int	niup: tipbgcolor=(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ColorBrowser_t,int,int,int,int	niup: tipbgcolor(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ColorBrowser_t	niup: tipbgcolor(ih: ColorBrowser_t): string	
tipdelay=	niup.html#tipdelay=,ColorBrowser_t,string	niup: tipdelay=(ih: ColorBrowser_t; value: string)	
tipdelay	niup.html#tipdelay,ColorBrowser_t,string	niup: tipdelay(ih: ColorBrowser_t; value: string)	
tipdelay=	niup.html#tipdelay=,ColorBrowser_t,int	niup: tipdelay=(ih: ColorBrowser_t; x: int)	
tipdelay	niup.html#tipdelay,ColorBrowser_t,int	niup: tipdelay(ih: ColorBrowser_t; x: int)	
tipdelay	niup.html#tipdelay,ColorBrowser_t	niup: tipdelay(ih: ColorBrowser_t): string	
tipfgcolor=	niup.html#tipfgcolor=,ColorBrowser_t,string	niup: tipfgcolor=(ih: ColorBrowser_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,ColorBrowser_t,string	niup: tipfgcolor(ih: ColorBrowser_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,ColorBrowser_t,int,int,int,int	niup: tipfgcolor=(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ColorBrowser_t,int,int,int,int	niup: tipfgcolor(ih: ColorBrowser_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ColorBrowser_t	niup: tipfgcolor(ih: ColorBrowser_t): string	
tipicon=	niup.html#tipicon=,ColorBrowser_t,string	niup: tipicon=(ih: ColorBrowser_t; value: string)	
tipicon	niup.html#tipicon,ColorBrowser_t,string	niup: tipicon(ih: ColorBrowser_t; value: string)	
tipicon	niup.html#tipicon,ColorBrowser_t	niup: tipicon(ih: ColorBrowser_t): string	
tipmarkup=	niup.html#tipmarkup=,ColorBrowser_t,string	niup: tipmarkup=(ih: ColorBrowser_t; value: string)	
tipmarkup	niup.html#tipmarkup,ColorBrowser_t,string	niup: tipmarkup(ih: ColorBrowser_t; value: string)	
tipmarkup	niup.html#tipmarkup,ColorBrowser_t	niup: tipmarkup(ih: ColorBrowser_t): string	
tiprect=	niup.html#tiprect=,ColorBrowser_t,string	niup: tiprect=(ih: ColorBrowser_t; value: string)	
tiprect	niup.html#tiprect,ColorBrowser_t,string	niup: tiprect(ih: ColorBrowser_t; value: string)	
tiprect=	niup.html#tiprect=,ColorBrowser_t,int,int,int,int	niup: tiprect=(ih: ColorBrowser_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ColorBrowser_t,int,int,int,int	niup: tiprect(ih: ColorBrowser_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ColorBrowser_t	niup: tiprect(ih: ColorBrowser_t): string	
tipvisible=	niup.html#tipvisible=,ColorBrowser_t,string	niup: tipvisible=(ih: ColorBrowser_t; value: string)	
tipvisible	niup.html#tipvisible,ColorBrowser_t,string	niup: tipvisible(ih: ColorBrowser_t; value: string)	
tipvisible=	niup.html#tipvisible=,ColorBrowser_t,bool	niup: tipvisible=(ih: ColorBrowser_t; yes: bool)	
tipvisible	niup.html#tipvisible,ColorBrowser_t,bool	niup: tipvisible(ih: ColorBrowser_t; yes: bool)	
tipvisible	niup.html#tipvisible,ColorBrowser_t	niup: tipvisible(ih: ColorBrowser_t): bool	
touch=	niup.html#touch=,ColorBrowser_t,string	niup: touch=(ih: ColorBrowser_t; value: string)	
touch	niup.html#touch,ColorBrowser_t,string	niup: touch(ih: ColorBrowser_t; value: string)	
touch=	niup.html#touch=,ColorBrowser_t,bool	niup: touch=(ih: ColorBrowser_t; yes: bool)	
touch	niup.html#touch,ColorBrowser_t,bool	niup: touch(ih: ColorBrowser_t; yes: bool)	
touch	niup.html#touch,ColorBrowser_t	niup: touch(ih: ColorBrowser_t): bool	
usersize=	niup.html#usersize=,ColorBrowser_t,string	niup: usersize=(ih: ColorBrowser_t; value: string)	
usersize	niup.html#usersize,ColorBrowser_t,string	niup: usersize(ih: ColorBrowser_t; value: string)	
usersize=	niup.html#usersize=,ColorBrowser_t,int,int	niup: usersize=(ih: ColorBrowser_t; width, height: int)	
usersize	niup.html#usersize,ColorBrowser_t,int,int	niup: usersize(ih: ColorBrowser_t; width, height: int)	
usersize	niup.html#usersize,ColorBrowser_t	niup: usersize(ih: ColorBrowser_t): string	
visible=	niup.html#visible=,ColorBrowser_t,string	niup: visible=(ih: ColorBrowser_t; value: string)	
visible	niup.html#visible,ColorBrowser_t,string	niup: visible(ih: ColorBrowser_t; value: string)	
visible=	niup.html#visible=,ColorBrowser_t,bool	niup: visible=(ih: ColorBrowser_t; yes: bool)	
visible	niup.html#visible,ColorBrowser_t,bool	niup: visible(ih: ColorBrowser_t; yes: bool)	
visible	niup.html#visible,ColorBrowser_t	niup: visible(ih: ColorBrowser_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,ColorBrowser_t,string	niup: wheeldropfocus=(ih: ColorBrowser_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,ColorBrowser_t,string	niup: wheeldropfocus(ih: ColorBrowser_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,ColorBrowser_t,bool	niup: wheeldropfocus=(ih: ColorBrowser_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,ColorBrowser_t,bool	niup: wheeldropfocus(ih: ColorBrowser_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,ColorBrowser_t	niup: wheeldropfocus(ih: ColorBrowser_t): bool	
wid	niup.html#wid,ColorBrowser_t	niup: wid(ih: ColorBrowser_t): string	
x	niup.html#x,ColorBrowser_t	niup: x(ih: ColorBrowser_t): string	
xautohide=	niup.html#xautohide=,ColorBrowser_t,string	niup: xautohide=(ih: ColorBrowser_t; value: string)	
xautohide	niup.html#xautohide,ColorBrowser_t,string	niup: xautohide(ih: ColorBrowser_t; value: string)	
xautohide=	niup.html#xautohide=,ColorBrowser_t,bool	niup: xautohide=(ih: ColorBrowser_t; yes: bool)	
xautohide	niup.html#xautohide,ColorBrowser_t,bool	niup: xautohide(ih: ColorBrowser_t; yes: bool)	
xautohide	niup.html#xautohide,ColorBrowser_t	niup: xautohide(ih: ColorBrowser_t): bool	
xdisplay	niup.html#xdisplay,ColorBrowser_t	niup: xdisplay(ih: ColorBrowser_t): string	
xfontid	niup.html#xfontid,ColorBrowser_t	niup: xfontid(ih: ColorBrowser_t): string	
xhidden	niup.html#xhidden,ColorBrowser_t	niup: xhidden(ih: ColorBrowser_t): bool	
xmax=	niup.html#xmax=,ColorBrowser_t,string	niup: xmax=(ih: ColorBrowser_t; value: string)	
xmax	niup.html#xmax,ColorBrowser_t,string	niup: xmax(ih: ColorBrowser_t; value: string)	
xmax=	niup.html#xmax=,ColorBrowser_t,int	niup: xmax=(ih: ColorBrowser_t; x: int)	
xmax	niup.html#xmax,ColorBrowser_t,int	niup: xmax(ih: ColorBrowser_t; x: int)	
xmax	niup.html#xmax,ColorBrowser_t	niup: xmax(ih: ColorBrowser_t): string	
xmin=	niup.html#xmin=,ColorBrowser_t,string	niup: xmin=(ih: ColorBrowser_t; value: string)	
xmin	niup.html#xmin,ColorBrowser_t,string	niup: xmin(ih: ColorBrowser_t; value: string)	
xmin=	niup.html#xmin=,ColorBrowser_t,int	niup: xmin=(ih: ColorBrowser_t; x: int)	
xmin	niup.html#xmin,ColorBrowser_t,int	niup: xmin(ih: ColorBrowser_t; x: int)	
xmin	niup.html#xmin,ColorBrowser_t	niup: xmin(ih: ColorBrowser_t): string	
xwindow	niup.html#xwindow,ColorBrowser_t	niup: xwindow(ih: ColorBrowser_t): string	
y	niup.html#y,ColorBrowser_t	niup: y(ih: ColorBrowser_t): string	
yautohide=	niup.html#yautohide=,ColorBrowser_t,string	niup: yautohide=(ih: ColorBrowser_t; value: string)	
yautohide	niup.html#yautohide,ColorBrowser_t,string	niup: yautohide(ih: ColorBrowser_t; value: string)	
yautohide=	niup.html#yautohide=,ColorBrowser_t,bool	niup: yautohide=(ih: ColorBrowser_t; yes: bool)	
yautohide	niup.html#yautohide,ColorBrowser_t,bool	niup: yautohide(ih: ColorBrowser_t; yes: bool)	
yautohide	niup.html#yautohide,ColorBrowser_t	niup: yautohide(ih: ColorBrowser_t): bool	
yhidden	niup.html#yhidden,ColorBrowser_t	niup: yhidden(ih: ColorBrowser_t): bool	
ymax=	niup.html#ymax=,ColorBrowser_t,string	niup: ymax=(ih: ColorBrowser_t; value: string)	
ymax	niup.html#ymax,ColorBrowser_t,string	niup: ymax(ih: ColorBrowser_t; value: string)	
ymax=	niup.html#ymax=,ColorBrowser_t,int	niup: ymax=(ih: ColorBrowser_t; x: int)	
ymax	niup.html#ymax,ColorBrowser_t,int	niup: ymax(ih: ColorBrowser_t; x: int)	
ymax	niup.html#ymax,ColorBrowser_t	niup: ymax(ih: ColorBrowser_t): string	
ymin=	niup.html#ymin=,ColorBrowser_t,string	niup: ymin=(ih: ColorBrowser_t; value: string)	
ymin	niup.html#ymin,ColorBrowser_t,string	niup: ymin(ih: ColorBrowser_t; value: string)	
ymin=	niup.html#ymin=,ColorBrowser_t,int	niup: ymin=(ih: ColorBrowser_t; x: int)	
ymin	niup.html#ymin,ColorBrowser_t,int	niup: ymin(ih: ColorBrowser_t; x: int)	
ymin	niup.html#ymin,ColorBrowser_t	niup: ymin(ih: ColorBrowser_t): string	
zorder=	niup.html#zorder=,ColorBrowser_t,string	niup: zorder=(ih: ColorBrowser_t; value: string)	
zorder	niup.html#zorder,ColorBrowser_t,string	niup: zorder(ih: ColorBrowser_t; value: string)	
action=	niup.html#action=,ColorBrowser_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: ColorBrowser_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,ColorBrowser_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: ColorBrowser_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,ColorBrowser_t	niup: action(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,ColorBrowser_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,ColorBrowser_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                        arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,ColorBrowser_t	niup: button_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
change_cb=	niup.html#change_cb=,ColorBrowser_t,proc(PIhandle,uint8,uint8,uint8)	niup: change_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: uint8; arg3: uint8;\n    arg4: uint8): cint {.cdecl.})	
change_cb	niup.html#change_cb,ColorBrowser_t,proc(PIhandle,uint8,uint8,uint8)	niup: change_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: uint8; arg3: uint8;\n                                        arg4: uint8): cint {.cdecl.})	
change_cb	niup.html#change_cb,ColorBrowser_t	niup: change_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,ColorBrowser_t,proc(PIhandle)	niup: destroy_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ColorBrowser_t,proc(PIhandle)	niup: destroy_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ColorBrowser_t	niup: destroy_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,ColorBrowser_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: ColorBrowser_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ColorBrowser_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: ColorBrowser_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ColorBrowser_t	niup: dragbegin_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,ColorBrowser_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: ColorBrowser_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ColorBrowser_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: ColorBrowser_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ColorBrowser_t	niup: dragdatasize_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,ColorBrowser_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ColorBrowser_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ColorBrowser_t	niup: dragdata_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,ColorBrowser_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: ColorBrowser_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ColorBrowser_t,proc(PIhandle,cint)	niup: dragend_cb(ih: ColorBrowser_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ColorBrowser_t	niup: dragend_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
drag_cb=	niup.html#drag_cb=,ColorBrowser_t,proc(PIhandle,uint8,uint8,uint8)	niup: drag_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: uint8; arg3: uint8;\n                                       arg4: uint8): cint {.cdecl.})	
drag_cb	niup.html#drag_cb,ColorBrowser_t,proc(PIhandle,uint8,uint8,uint8)	niup: drag_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: uint8; arg3: uint8;\n                                      arg4: uint8): cint {.cdecl.})	
drag_cb	niup.html#drag_cb,ColorBrowser_t	niup: drag_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,ColorBrowser_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ColorBrowser_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ColorBrowser_t	niup: dropdata_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,ColorBrowser_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: ColorBrowser_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ColorBrowser_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: ColorBrowser_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ColorBrowser_t	niup: dropfiles_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,ColorBrowser_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ColorBrowser_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ColorBrowser_t	niup: dropmotion_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,ColorBrowser_t,proc(PIhandle)	niup: enterwindow_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ColorBrowser_t,proc(PIhandle)	niup: enterwindow_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ColorBrowser_t	niup: enterwindow_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,ColorBrowser_t,proc(PIhandle,cint)	niup: focus_cb=(ih: ColorBrowser_t;\n          cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ColorBrowser_t,proc(PIhandle,cint)	niup: focus_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ColorBrowser_t	niup: focus_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,ColorBrowser_t,proc(PIhandle)	niup: getfocus_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ColorBrowser_t,proc(PIhandle)	niup: getfocus_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ColorBrowser_t	niup: getfocus_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,ColorBrowser_t,proc(PIhandle)	niup: help_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ColorBrowser_t,proc(PIhandle)	niup: help_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ColorBrowser_t	niup: help_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,ColorBrowser_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: ColorBrowser_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,ColorBrowser_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: ColorBrowser_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,ColorBrowser_t	niup: keypress_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,ColorBrowser_t,proc(PIhandle)	niup: killfocus_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ColorBrowser_t,proc(PIhandle)	niup: killfocus_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ColorBrowser_t	niup: killfocus_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,ColorBrowser_t,proc(PIhandle,cint)	niup: k_any=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ColorBrowser_t,proc(PIhandle,cint)	niup: k_any(ih: ColorBrowser_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ColorBrowser_t	niup: k_any(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,ColorBrowser_t,proc(PIhandle)	niup: ldestroy_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ColorBrowser_t,proc(PIhandle)	niup: ldestroy_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ColorBrowser_t	niup: ldestroy_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,ColorBrowser_t,proc(PIhandle)	niup: leavewindow_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ColorBrowser_t,proc(PIhandle)	niup: leavewindow_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ColorBrowser_t	niup: leavewindow_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,ColorBrowser_t,proc(PIhandle)	niup: map_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ColorBrowser_t,proc(PIhandle)	niup: map_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ColorBrowser_t	niup: map_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,ColorBrowser_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: ColorBrowser_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,ColorBrowser_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: ColorBrowser_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,ColorBrowser_t	niup: motion_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,ColorBrowser_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ColorBrowser_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ColorBrowser_t	niup: postmessage_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,ColorBrowser_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: ColorBrowser_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ColorBrowser_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: ColorBrowser_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ColorBrowser_t	niup: resize_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,ColorBrowser_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: ColorBrowser_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,ColorBrowser_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: ColorBrowser_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,ColorBrowser_t	niup: scroll_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,ColorBrowser_t,proc(PIhandle)	niup: unmap_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ColorBrowser_t,proc(PIhandle)	niup: unmap_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ColorBrowser_t	niup: unmap_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,ColorBrowser_t,proc(PIhandle)	niup: valuechanged_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,ColorBrowser_t,proc(PIhandle)	niup: valuechanged_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,ColorBrowser_t	niup: valuechanged_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,ColorBrowser_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,ColorBrowser_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                       status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,ColorBrowser_t	niup: wheel_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,ColorBrowser_t,proc(PIhandle,cint)	niup: wom_cb=(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,ColorBrowser_t,proc(PIhandle,cint)	niup: wom_cb(ih: ColorBrowser_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,ColorBrowser_t	niup: wom_cb(ih: ColorBrowser_t): proc (ih: PIhandle): cint {.cdecl.}	
ColorDlg	niup.html#ColorDlg_2	niup: ColorDlg(): ColorDlg_t	
active=	niup.html#active=,ColorDlg_t,string	niup: active=(ih: ColorDlg_t; value: string)	
active	niup.html#active,ColorDlg_t,string	niup: active(ih: ColorDlg_t; value: string)	
active=	niup.html#active=,ColorDlg_t,bool	niup: active=(ih: ColorDlg_t; yes: bool)	
active	niup.html#active,ColorDlg_t,bool	niup: active(ih: ColorDlg_t; yes: bool)	
active	niup.html#active,ColorDlg_t	niup: active(ih: ColorDlg_t): bool	
activewindow	niup.html#activewindow,ColorDlg_t	niup: activewindow(ih: ColorDlg_t): bool	
alpha	niup.html#alpha,ColorDlg_t	niup: alpha(ih: ColorDlg_t): string	
background=	niup.html#background=,ColorDlg_t,string	niup: background=(ih: ColorDlg_t; value: string)	
background	niup.html#background,ColorDlg_t,string	niup: background(ih: ColorDlg_t; value: string)	
background=	niup.html#background=,ColorDlg_t,int,int,int,int	niup: background=(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,ColorDlg_t,int,int,int,int	niup: background(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,ColorDlg_t	niup: background(ih: ColorDlg_t): string	
bgcolor=	niup.html#bgcolor=,ColorDlg_t,string	niup: bgcolor=(ih: ColorDlg_t; value: string)	
bgcolor	niup.html#bgcolor,ColorDlg_t,string	niup: bgcolor(ih: ColorDlg_t; value: string)	
bgcolor=	niup.html#bgcolor=,ColorDlg_t,int,int,int,int	niup: bgcolor=(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ColorDlg_t,int,int,int,int	niup: bgcolor(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ColorDlg_t	niup: bgcolor(ih: ColorDlg_t): string	
border=	niup.html#border=,ColorDlg_t,string	niup: border=(ih: ColorDlg_t; value: string)	
border	niup.html#border,ColorDlg_t,string	niup: border(ih: ColorDlg_t; value: string)	
border=	niup.html#border=,ColorDlg_t,bool	niup: border=(ih: ColorDlg_t; yes: bool)	
border	niup.html#border,ColorDlg_t,bool	niup: border(ih: ColorDlg_t; yes: bool)	
border	niup.html#border,ColorDlg_t	niup: border(ih: ColorDlg_t): bool	
bordersize	niup.html#bordersize,ColorDlg_t	niup: bordersize(ih: ColorDlg_t): string	
bringfront=	niup.html#bringfront=,ColorDlg_t,string	niup: bringfront=(ih: ColorDlg_t; value: string)	
bringfront	niup.html#bringfront,ColorDlg_t,string	niup: bringfront(ih: ColorDlg_t; value: string)	
bringfront=	niup.html#bringfront=,ColorDlg_t,bool	niup: bringfront=(ih: ColorDlg_t; yes: bool)	
bringfront	niup.html#bringfront,ColorDlg_t,bool	niup: bringfront(ih: ColorDlg_t; yes: bool)	
bringfront	niup.html#bringfront,ColorDlg_t	niup: bringfront(ih: ColorDlg_t): bool	
canfocus=	niup.html#canfocus=,ColorDlg_t,string	niup: canfocus=(ih: ColorDlg_t; value: string)	
canfocus	niup.html#canfocus,ColorDlg_t,string	niup: canfocus(ih: ColorDlg_t; value: string)	
canfocus=	niup.html#canfocus=,ColorDlg_t,bool	niup: canfocus=(ih: ColorDlg_t; yes: bool)	
canfocus	niup.html#canfocus,ColorDlg_t,bool	niup: canfocus(ih: ColorDlg_t; yes: bool)	
canfocus	niup.html#canfocus,ColorDlg_t	niup: canfocus(ih: ColorDlg_t): bool	
charsize	niup.html#charsize,ColorDlg_t	niup: charsize(ih: ColorDlg_t): string	
childoffset=	niup.html#childoffset=,ColorDlg_t,string	niup: childoffset=(ih: ColorDlg_t; value: string)	
childoffset	niup.html#childoffset,ColorDlg_t,string	niup: childoffset(ih: ColorDlg_t; value: string)	
childoffset=	niup.html#childoffset=,ColorDlg_t,int,int	niup: childoffset=(ih: ColorDlg_t; width, height: int)	
childoffset	niup.html#childoffset,ColorDlg_t,int,int	niup: childoffset(ih: ColorDlg_t; width, height: int)	
childoffset	niup.html#childoffset,ColorDlg_t	niup: childoffset(ih: ColorDlg_t): string	
clientoffset	niup.html#clientoffset,ColorDlg_t	niup: clientoffset(ih: ColorDlg_t): string	
clientsize=	niup.html#clientsize=,ColorDlg_t,string	niup: clientsize=(ih: ColorDlg_t; value: string)	
clientsize	niup.html#clientsize,ColorDlg_t,string	niup: clientsize(ih: ColorDlg_t; value: string)	
clientsize=	niup.html#clientsize=,ColorDlg_t,int,int	niup: clientsize=(ih: ColorDlg_t; width, height: int)	
clientsize	niup.html#clientsize,ColorDlg_t,int,int	niup: clientsize(ih: ColorDlg_t; width, height: int)	
clientsize	niup.html#clientsize,ColorDlg_t	niup: clientsize(ih: ColorDlg_t): string	
colortable	niup.html#colortable,ColorDlg_t	niup: colortable(ih: ColorDlg_t): string	
composited=	niup.html#composited=,ColorDlg_t,string	niup: composited=(ih: ColorDlg_t; value: string)	
composited	niup.html#composited,ColorDlg_t,string	niup: composited(ih: ColorDlg_t; value: string)	
composited=	niup.html#composited=,ColorDlg_t,bool	niup: composited=(ih: ColorDlg_t; yes: bool)	
composited	niup.html#composited,ColorDlg_t,bool	niup: composited(ih: ColorDlg_t; yes: bool)	
composited	niup.html#composited,ColorDlg_t	niup: composited(ih: ColorDlg_t): bool	
control=	niup.html#control=,ColorDlg_t,string	niup: control=(ih: ColorDlg_t; value: string)	
control	niup.html#control,ColorDlg_t,string	niup: control(ih: ColorDlg_t; value: string)	
control=	niup.html#control=,ColorDlg_t,bool	niup: control=(ih: ColorDlg_t; yes: bool)	
control	niup.html#control,ColorDlg_t,bool	niup: control(ih: ColorDlg_t; yes: bool)	
control	niup.html#control,ColorDlg_t	niup: control(ih: ColorDlg_t): bool	
cursor=	niup.html#cursor=,ColorDlg_t,	niup: cursor=(ih: ColorDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ColorDlg_t,	niup: cursor(ih: ColorDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ColorDlg_t	niup: cursor(ih: ColorDlg_t): string	
customframe=	niup.html#customframe=,ColorDlg_t,string	niup: customframe=(ih: ColorDlg_t; value: string)	
customframe	niup.html#customframe,ColorDlg_t,string	niup: customframe(ih: ColorDlg_t; value: string)	
customframe=	niup.html#customframe=,ColorDlg_t,bool	niup: customframe=(ih: ColorDlg_t; yes: bool)	
customframe	niup.html#customframe,ColorDlg_t,bool	niup: customframe(ih: ColorDlg_t; yes: bool)	
customframe	niup.html#customframe,ColorDlg_t	niup: customframe(ih: ColorDlg_t): bool	
customframesimulate=	niup.html#customframesimulate=,ColorDlg_t,string	niup: customframesimulate=(ih: ColorDlg_t; value: string)	
customframesimulate	niup.html#customframesimulate,ColorDlg_t,string	niup: customframesimulate(ih: ColorDlg_t; value: string)	
customframesimulate=	niup.html#customframesimulate=,ColorDlg_t,bool	niup: customframesimulate=(ih: ColorDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,ColorDlg_t,bool	niup: customframesimulate(ih: ColorDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,ColorDlg_t	niup: customframesimulate(ih: ColorDlg_t): bool	
defaultenter=	niup.html#defaultenter=,ColorDlg_t,IUPhandle_t	niup: defaultenter=(ih: ColorDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,ColorDlg_t,IUPhandle_t	niup: defaultenter(ih: ColorDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,ColorDlg_t	niup: defaultenter(ih: ColorDlg_t): string	
defaultesc=	niup.html#defaultesc=,ColorDlg_t,IUPhandle_t	niup: defaultesc=(ih: ColorDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,ColorDlg_t,IUPhandle_t	niup: defaultesc(ih: ColorDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,ColorDlg_t	niup: defaultesc(ih: ColorDlg_t): string	
dialogframe=	niup.html#dialogframe=,ColorDlg_t,string	niup: dialogframe=(ih: ColorDlg_t; value: string)	
dialogframe	niup.html#dialogframe,ColorDlg_t,string	niup: dialogframe(ih: ColorDlg_t; value: string)	
dialogframe=	niup.html#dialogframe=,ColorDlg_t,bool	niup: dialogframe=(ih: ColorDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,ColorDlg_t,bool	niup: dialogframe(ih: ColorDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,ColorDlg_t	niup: dialogframe(ih: ColorDlg_t): bool	
dialoghint=	niup.html#dialoghint=,ColorDlg_t,string	niup: dialoghint=(ih: ColorDlg_t; value: string)	
dialoghint	niup.html#dialoghint,ColorDlg_t,string	niup: dialoghint(ih: ColorDlg_t; value: string)	
dialoghint=	niup.html#dialoghint=,ColorDlg_t,bool	niup: dialoghint=(ih: ColorDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,ColorDlg_t,bool	niup: dialoghint(ih: ColorDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,ColorDlg_t	niup: dialoghint(ih: ColorDlg_t): bool	
dragdrop=	niup.html#dragdrop=,ColorDlg_t,string	niup: dragdrop=(ih: ColorDlg_t; value: string)	
dragdrop	niup.html#dragdrop,ColorDlg_t,string	niup: dragdrop(ih: ColorDlg_t; value: string)	
dragdrop=	niup.html#dragdrop=,ColorDlg_t,bool	niup: dragdrop=(ih: ColorDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,ColorDlg_t,bool	niup: dragdrop(ih: ColorDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,ColorDlg_t	niup: dragdrop(ih: ColorDlg_t): bool	
dragsource=	niup.html#dragsource=,ColorDlg_t,string	niup: dragsource=(ih: ColorDlg_t; value: string)	
dragsource	niup.html#dragsource,ColorDlg_t,string	niup: dragsource(ih: ColorDlg_t; value: string)	
dragsource=	niup.html#dragsource=,ColorDlg_t,bool	niup: dragsource=(ih: ColorDlg_t; yes: bool)	
dragsource	niup.html#dragsource,ColorDlg_t,bool	niup: dragsource(ih: ColorDlg_t; yes: bool)	
dragsource	niup.html#dragsource,ColorDlg_t	niup: dragsource(ih: ColorDlg_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,ColorDlg_t,string	niup: dragsourcemove=(ih: ColorDlg_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,ColorDlg_t,string	niup: dragsourcemove(ih: ColorDlg_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,ColorDlg_t,bool	niup: dragsourcemove=(ih: ColorDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ColorDlg_t,bool	niup: dragsourcemove(ih: ColorDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ColorDlg_t	niup: dragsourcemove(ih: ColorDlg_t): bool	
dragtypes=	niup.html#dragtypes=,ColorDlg_t,string	niup: dragtypes=(ih: ColorDlg_t; value: string)	
dragtypes	niup.html#dragtypes,ColorDlg_t,string	niup: dragtypes(ih: ColorDlg_t; value: string)	
dragtypes	niup.html#dragtypes,ColorDlg_t	niup: dragtypes(ih: ColorDlg_t): string	
dropfilestarget=	niup.html#dropfilestarget=,ColorDlg_t,string	niup: dropfilestarget=(ih: ColorDlg_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,ColorDlg_t,string	niup: dropfilestarget(ih: ColorDlg_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,ColorDlg_t,bool	niup: dropfilestarget=(ih: ColorDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ColorDlg_t,bool	niup: dropfilestarget(ih: ColorDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ColorDlg_t	niup: dropfilestarget(ih: ColorDlg_t): bool	
droptarget=	niup.html#droptarget=,ColorDlg_t,string	niup: droptarget=(ih: ColorDlg_t; value: string)	
droptarget	niup.html#droptarget,ColorDlg_t,string	niup: droptarget(ih: ColorDlg_t; value: string)	
droptarget=	niup.html#droptarget=,ColorDlg_t,bool	niup: droptarget=(ih: ColorDlg_t; yes: bool)	
droptarget	niup.html#droptarget,ColorDlg_t,bool	niup: droptarget(ih: ColorDlg_t; yes: bool)	
droptarget	niup.html#droptarget,ColorDlg_t	niup: droptarget(ih: ColorDlg_t): bool	
droptypes=	niup.html#droptypes=,ColorDlg_t,string	niup: droptypes=(ih: ColorDlg_t; value: string)	
droptypes	niup.html#droptypes,ColorDlg_t,string	niup: droptypes(ih: ColorDlg_t; value: string)	
droptypes	niup.html#droptypes,ColorDlg_t	niup: droptypes(ih: ColorDlg_t): string	
expand=	niup.html#expand=,ColorDlg_t,string	niup: expand=(ih: ColorDlg_t; value: string)	
expand	niup.html#expand,ColorDlg_t,string	niup: expand(ih: ColorDlg_t; value: string)	
expand	niup.html#expand,ColorDlg_t	niup: expand(ih: ColorDlg_t): string	
expandweight=	niup.html#expandweight=,ColorDlg_t,string	niup: expandweight=(ih: ColorDlg_t; value: string)	
expandweight	niup.html#expandweight,ColorDlg_t,string	niup: expandweight(ih: ColorDlg_t; value: string)	
expandweight=	niup.html#expandweight=,ColorDlg_t,int64	niup: expandweight=(ih: ColorDlg_t; x: int64)	
expandweight	niup.html#expandweight,ColorDlg_t,int64	niup: expandweight(ih: ColorDlg_t; x: int64)	
expandweight	niup.html#expandweight,ColorDlg_t	niup: expandweight(ih: ColorDlg_t): string	
floating=	niup.html#floating=,ColorDlg_t,string	niup: floating=(ih: ColorDlg_t; value: string)	
floating	niup.html#floating,ColorDlg_t,string	niup: floating(ih: ColorDlg_t; value: string)	
floating	niup.html#floating,ColorDlg_t	niup: floating(ih: ColorDlg_t): string	
font=	niup.html#font=,ColorDlg_t,string	niup: font=(ih: ColorDlg_t; value: string)	
font	niup.html#font,ColorDlg_t,string	niup: font(ih: ColorDlg_t; value: string)	
font	niup.html#font,ColorDlg_t	niup: font(ih: ColorDlg_t): string	
fontface=	niup.html#fontface=,ColorDlg_t,string	niup: fontface=(ih: ColorDlg_t; value: string)	
fontface	niup.html#fontface,ColorDlg_t,string	niup: fontface(ih: ColorDlg_t; value: string)	
fontface	niup.html#fontface,ColorDlg_t	niup: fontface(ih: ColorDlg_t): string	
fontsize=	niup.html#fontsize=,ColorDlg_t,string	niup: fontsize=(ih: ColorDlg_t; value: string)	
fontsize	niup.html#fontsize,ColorDlg_t,string	niup: fontsize(ih: ColorDlg_t; value: string)	
fontsize=	niup.html#fontsize=,ColorDlg_t,int	niup: fontsize=(ih: ColorDlg_t; x: int)	
fontsize	niup.html#fontsize,ColorDlg_t,int	niup: fontsize(ih: ColorDlg_t; x: int)	
fontsize	niup.html#fontsize,ColorDlg_t	niup: fontsize(ih: ColorDlg_t): string	
fontstyle=	niup.html#fontstyle=,ColorDlg_t,string	niup: fontstyle=(ih: ColorDlg_t; value: string)	
fontstyle	niup.html#fontstyle,ColorDlg_t,string	niup: fontstyle(ih: ColorDlg_t; value: string)	
fontstyle	niup.html#fontstyle,ColorDlg_t	niup: fontstyle(ih: ColorDlg_t): string	
fullscreen=	niup.html#fullscreen=,ColorDlg_t,string	niup: fullscreen=(ih: ColorDlg_t; value: string)	
fullscreen	niup.html#fullscreen,ColorDlg_t,string	niup: fullscreen(ih: ColorDlg_t; value: string)	
fullscreen=	niup.html#fullscreen=,ColorDlg_t,bool	niup: fullscreen=(ih: ColorDlg_t; yes: bool)	
fullscreen	niup.html#fullscreen,ColorDlg_t,bool	niup: fullscreen(ih: ColorDlg_t; yes: bool)	
handlename=	niup.html#handlename=,ColorDlg_t,string	niup: handlename=(ih: ColorDlg_t; value: string)	
handlename	niup.html#handlename,ColorDlg_t,string	niup: handlename(ih: ColorDlg_t; value: string)	
handlename	niup.html#handlename,ColorDlg_t	niup: handlename(ih: ColorDlg_t): string	
helpbutton=	niup.html#helpbutton=,ColorDlg_t,string	niup: helpbutton=(ih: ColorDlg_t; value: string)	
helpbutton	niup.html#helpbutton,ColorDlg_t,string	niup: helpbutton(ih: ColorDlg_t; value: string)	
helpbutton=	niup.html#helpbutton=,ColorDlg_t,bool	niup: helpbutton=(ih: ColorDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,ColorDlg_t,bool	niup: helpbutton(ih: ColorDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,ColorDlg_t	niup: helpbutton(ih: ColorDlg_t): bool	
hidetaskbar=	niup.html#hidetaskbar=,ColorDlg_t,string	niup: hidetaskbar=(ih: ColorDlg_t; value: string)	
hidetaskbar	niup.html#hidetaskbar,ColorDlg_t,string	niup: hidetaskbar(ih: ColorDlg_t; value: string)	
hidetaskbar=	niup.html#hidetaskbar=,ColorDlg_t,bool	niup: hidetaskbar=(ih: ColorDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,ColorDlg_t,bool	niup: hidetaskbar(ih: ColorDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,ColorDlg_t	niup: hidetaskbar(ih: ColorDlg_t): bool	
hidetitlebar=	niup.html#hidetitlebar=,ColorDlg_t,string	niup: hidetitlebar=(ih: ColorDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,ColorDlg_t,string	niup: hidetitlebar(ih: ColorDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,ColorDlg_t	niup: hidetitlebar(ih: ColorDlg_t): string	
icon=	niup.html#icon=,ColorDlg_t,string	niup: icon=(ih: ColorDlg_t; value: string)	
icon	niup.html#icon,ColorDlg_t,string	niup: icon(ih: ColorDlg_t; value: string)	
icon	niup.html#icon,ColorDlg_t	niup: icon(ih: ColorDlg_t): string	
maxbox=	niup.html#maxbox=,ColorDlg_t,string	niup: maxbox=(ih: ColorDlg_t; value: string)	
maxbox	niup.html#maxbox,ColorDlg_t,string	niup: maxbox(ih: ColorDlg_t; value: string)	
maxbox=	niup.html#maxbox=,ColorDlg_t,bool	niup: maxbox=(ih: ColorDlg_t; yes: bool)	
maxbox	niup.html#maxbox,ColorDlg_t,bool	niup: maxbox(ih: ColorDlg_t; yes: bool)	
maxbox	niup.html#maxbox,ColorDlg_t	niup: maxbox(ih: ColorDlg_t): bool	
maximized	niup.html#maximized,ColorDlg_t	niup: maximized(ih: ColorDlg_t): bool	
maxsize=	niup.html#maxsize=,ColorDlg_t,string	niup: maxsize=(ih: ColorDlg_t; value: string)	
maxsize	niup.html#maxsize,ColorDlg_t,string	niup: maxsize(ih: ColorDlg_t; value: string)	
maxsize=	niup.html#maxsize=,ColorDlg_t,int,int	niup: maxsize=(ih: ColorDlg_t; width, height: int)	
maxsize	niup.html#maxsize,ColorDlg_t,int,int	niup: maxsize(ih: ColorDlg_t; width, height: int)	
maxsize	niup.html#maxsize,ColorDlg_t	niup: maxsize(ih: ColorDlg_t): string	
mdichild=	niup.html#mdichild=,ColorDlg_t,string	niup: mdichild=(ih: ColorDlg_t; value: string)	
mdichild	niup.html#mdichild,ColorDlg_t,string	niup: mdichild(ih: ColorDlg_t; value: string)	
mdichild=	niup.html#mdichild=,ColorDlg_t,bool	niup: mdichild=(ih: ColorDlg_t; yes: bool)	
mdichild	niup.html#mdichild,ColorDlg_t,bool	niup: mdichild(ih: ColorDlg_t; yes: bool)	
mdichild	niup.html#mdichild,ColorDlg_t	niup: mdichild(ih: ColorDlg_t): bool	
mdiclient=	niup.html#mdiclient=,ColorDlg_t,string	niup: mdiclient=(ih: ColorDlg_t; value: string)	
mdiclient	niup.html#mdiclient,ColorDlg_t,string	niup: mdiclient(ih: ColorDlg_t; value: string)	
mdiclient=	niup.html#mdiclient=,ColorDlg_t,bool	niup: mdiclient=(ih: ColorDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,ColorDlg_t,bool	niup: mdiclient(ih: ColorDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,ColorDlg_t	niup: mdiclient(ih: ColorDlg_t): bool	
mdiframe=	niup.html#mdiframe=,ColorDlg_t,string	niup: mdiframe=(ih: ColorDlg_t; value: string)	
mdiframe	niup.html#mdiframe,ColorDlg_t,string	niup: mdiframe(ih: ColorDlg_t; value: string)	
mdiframe=	niup.html#mdiframe=,ColorDlg_t,bool	niup: mdiframe=(ih: ColorDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,ColorDlg_t,bool	niup: mdiframe(ih: ColorDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,ColorDlg_t	niup: mdiframe(ih: ColorDlg_t): bool	
mdimenu=	niup.html#mdimenu=,ColorDlg_t,Menu_t	niup: mdimenu=(ih: ColorDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,ColorDlg_t,Menu_t	niup: mdimenu(ih: ColorDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,ColorDlg_t	niup: mdimenu(ih: ColorDlg_t): string	
menu=	niup.html#menu=,ColorDlg_t,Menu_t	niup: menu=(ih: ColorDlg_t; handle: Menu_t)	
menu	niup.html#menu,ColorDlg_t,Menu_t	niup: menu(ih: ColorDlg_t; handle: Menu_t)	
menu	niup.html#menu,ColorDlg_t	niup: menu(ih: ColorDlg_t): string	
menubox=	niup.html#menubox=,ColorDlg_t,string	niup: menubox=(ih: ColorDlg_t; value: string)	
menubox	niup.html#menubox,ColorDlg_t,string	niup: menubox(ih: ColorDlg_t; value: string)	
menubox=	niup.html#menubox=,ColorDlg_t,bool	niup: menubox=(ih: ColorDlg_t; yes: bool)	
menubox	niup.html#menubox,ColorDlg_t,bool	niup: menubox(ih: ColorDlg_t; yes: bool)	
menubox	niup.html#menubox,ColorDlg_t	niup: menubox(ih: ColorDlg_t): bool	
minbox=	niup.html#minbox=,ColorDlg_t,string	niup: minbox=(ih: ColorDlg_t; value: string)	
minbox	niup.html#minbox,ColorDlg_t,string	niup: minbox(ih: ColorDlg_t; value: string)	
minbox=	niup.html#minbox=,ColorDlg_t,bool	niup: minbox=(ih: ColorDlg_t; yes: bool)	
minbox	niup.html#minbox,ColorDlg_t,bool	niup: minbox(ih: ColorDlg_t; yes: bool)	
minbox	niup.html#minbox,ColorDlg_t	niup: minbox(ih: ColorDlg_t): bool	
minsize=	niup.html#minsize=,ColorDlg_t,string	niup: minsize=(ih: ColorDlg_t; value: string)	
minsize	niup.html#minsize,ColorDlg_t,string	niup: minsize(ih: ColorDlg_t; value: string)	
minsize=	niup.html#minsize=,ColorDlg_t,int,int	niup: minsize=(ih: ColorDlg_t; width, height: int)	
minsize	niup.html#minsize,ColorDlg_t,int,int	niup: minsize(ih: ColorDlg_t; width, height: int)	
minsize	niup.html#minsize,ColorDlg_t	niup: minsize(ih: ColorDlg_t): string	
modal	niup.html#modal,ColorDlg_t	niup: modal(ih: ColorDlg_t): bool	
nactive=	niup.html#nactive=,ColorDlg_t,string	niup: nactive=(ih: ColorDlg_t; value: string)	
nactive	niup.html#nactive,ColorDlg_t,string	niup: nactive(ih: ColorDlg_t; value: string)	
nactive=	niup.html#nactive=,ColorDlg_t,bool	niup: nactive=(ih: ColorDlg_t; yes: bool)	
nactive	niup.html#nactive,ColorDlg_t,bool	niup: nactive(ih: ColorDlg_t; yes: bool)	
nactive	niup.html#nactive,ColorDlg_t	niup: nactive(ih: ColorDlg_t): bool	
name=	niup.html#name=,ColorDlg_t,string	niup: name=(ih: ColorDlg_t; value: string)	
name	niup.html#name,ColorDlg_t,string	niup: name(ih: ColorDlg_t; value: string)	
name	niup.html#name,ColorDlg_t	niup: name(ih: ColorDlg_t): string	
nativeparent=	niup.html#nativeparent=,ColorDlg_t,User_t	niup: nativeparent=(ih: ColorDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,ColorDlg_t,User_t	niup: nativeparent(ih: ColorDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,ColorDlg_t	niup: nativeparent(ih: ColorDlg_t): string	
naturalsize	niup.html#naturalsize,ColorDlg_t	niup: naturalsize(ih: ColorDlg_t): string	
noflush=	niup.html#noflush=,ColorDlg_t,string	niup: noflush=(ih: ColorDlg_t; value: string)	
noflush	niup.html#noflush,ColorDlg_t,string	niup: noflush(ih: ColorDlg_t; value: string)	
noflush=	niup.html#noflush=,ColorDlg_t,bool	niup: noflush=(ih: ColorDlg_t; yes: bool)	
noflush	niup.html#noflush,ColorDlg_t,bool	niup: noflush(ih: ColorDlg_t; yes: bool)	
noflush	niup.html#noflush,ColorDlg_t	niup: noflush(ih: ColorDlg_t): bool	
normalizergroup=	niup.html#normalizergroup=,ColorDlg_t,string	niup: normalizergroup=(ih: ColorDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,ColorDlg_t,string	niup: normalizergroup(ih: ColorDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,ColorDlg_t	niup: normalizergroup(ih: ColorDlg_t): string	
ntheme=	niup.html#ntheme=,ColorDlg_t,string	niup: ntheme=(ih: ColorDlg_t; value: string)	
ntheme	niup.html#ntheme,ColorDlg_t,string	niup: ntheme(ih: ColorDlg_t; value: string)	
ntheme	niup.html#ntheme,ColorDlg_t	niup: ntheme(ih: ColorDlg_t): string	
opacity=	niup.html#opacity=,ColorDlg_t,string	niup: opacity=(ih: ColorDlg_t; value: string)	
opacity	niup.html#opacity,ColorDlg_t,string	niup: opacity(ih: ColorDlg_t; value: string)	
opacity=	niup.html#opacity=,ColorDlg_t,int	niup: opacity=(ih: ColorDlg_t; x: int)	
opacity	niup.html#opacity,ColorDlg_t,int	niup: opacity(ih: ColorDlg_t; x: int)	
opacity	niup.html#opacity,ColorDlg_t	niup: opacity(ih: ColorDlg_t): string	
opacityimage=	niup.html#opacityimage=,ColorDlg_t,string	niup: opacityimage=(ih: ColorDlg_t; value: string)	
opacityimage	niup.html#opacityimage,ColorDlg_t,string	niup: opacityimage(ih: ColorDlg_t; value: string)	
opacityimage	niup.html#opacityimage,ColorDlg_t	niup: opacityimage(ih: ColorDlg_t): string	
pangofontdesc	niup.html#pangofontdesc,ColorDlg_t	niup: pangofontdesc(ih: ColorDlg_t): string	
pangolayout	niup.html#pangolayout,ColorDlg_t	niup: pangolayout(ih: ColorDlg_t): string	
parentdialog=	niup.html#parentdialog=,ColorDlg_t,IUPhandle_t	niup: parentdialog=(ih: ColorDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,ColorDlg_t,IUPhandle_t	niup: parentdialog(ih: ColorDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,ColorDlg_t	niup: parentdialog(ih: ColorDlg_t): string	
placement=	niup.html#placement=,ColorDlg_t,string	niup: placement=(ih: ColorDlg_t; value: string)	
placement	niup.html#placement,ColorDlg_t,string	niup: placement(ih: ColorDlg_t; value: string)	
placement	niup.html#placement,ColorDlg_t	niup: placement(ih: ColorDlg_t): string	
position=	niup.html#position=,ColorDlg_t,string	niup: position=(ih: ColorDlg_t; value: string)	
position	niup.html#position,ColorDlg_t,string	niup: position(ih: ColorDlg_t; value: string)	
position=	niup.html#position=,ColorDlg_t,int,int	niup: position=(ih: ColorDlg_t; x, y: int)	
position	niup.html#position,ColorDlg_t,int,int	niup: position(ih: ColorDlg_t; x, y: int)	
position	niup.html#position,ColorDlg_t	niup: position(ih: ColorDlg_t): string	
propagatefocus=	niup.html#propagatefocus=,ColorDlg_t,string	niup: propagatefocus=(ih: ColorDlg_t; value: string)	
propagatefocus	niup.html#propagatefocus,ColorDlg_t,string	niup: propagatefocus(ih: ColorDlg_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,ColorDlg_t,bool	niup: propagatefocus=(ih: ColorDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ColorDlg_t,bool	niup: propagatefocus(ih: ColorDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ColorDlg_t	niup: propagatefocus(ih: ColorDlg_t): bool	
rastersize=	niup.html#rastersize=,ColorDlg_t,string	niup: rastersize=(ih: ColorDlg_t; value: string)	
rastersize	niup.html#rastersize,ColorDlg_t,string	niup: rastersize(ih: ColorDlg_t; value: string)	
rastersize=	niup.html#rastersize=,ColorDlg_t,int,int	niup: rastersize=(ih: ColorDlg_t; width, height: int)	
rastersize	niup.html#rastersize,ColorDlg_t,int,int	niup: rastersize(ih: ColorDlg_t; width, height: int)	
rastersize	niup.html#rastersize,ColorDlg_t	niup: rastersize(ih: ColorDlg_t): string	
resize=	niup.html#resize=,ColorDlg_t,string	niup: resize=(ih: ColorDlg_t; value: string)	
resize	niup.html#resize,ColorDlg_t,string	niup: resize(ih: ColorDlg_t; value: string)	
resize=	niup.html#resize=,ColorDlg_t,bool	niup: resize=(ih: ColorDlg_t; yes: bool)	
resize	niup.html#resize,ColorDlg_t,bool	niup: resize(ih: ColorDlg_t; yes: bool)	
resize	niup.html#resize,ColorDlg_t	niup: resize(ih: ColorDlg_t): bool	
saveunder=	niup.html#saveunder=,ColorDlg_t,string	niup: saveunder=(ih: ColorDlg_t; value: string)	
saveunder	niup.html#saveunder,ColorDlg_t,string	niup: saveunder(ih: ColorDlg_t; value: string)	
saveunder=	niup.html#saveunder=,ColorDlg_t,bool	niup: saveunder=(ih: ColorDlg_t; yes: bool)	
saveunder	niup.html#saveunder,ColorDlg_t,bool	niup: saveunder(ih: ColorDlg_t; yes: bool)	
saveunder	niup.html#saveunder,ColorDlg_t	niup: saveunder(ih: ColorDlg_t): bool	
screenposition	niup.html#screenposition,ColorDlg_t	niup: screenposition(ih: ColorDlg_t): string	
shapeimage=	niup.html#shapeimage=,ColorDlg_t,string	niup: shapeimage=(ih: ColorDlg_t; value: string)	
shapeimage	niup.html#shapeimage,ColorDlg_t,string	niup: shapeimage(ih: ColorDlg_t; value: string)	
shapeimage	niup.html#shapeimage,ColorDlg_t	niup: shapeimage(ih: ColorDlg_t): string	
showalpha	niup.html#showalpha,ColorDlg_t	niup: showalpha(ih: ColorDlg_t): string	
showcolortable	niup.html#showcolortable,ColorDlg_t	niup: showcolortable(ih: ColorDlg_t): string	
showhelp	niup.html#showhelp,ColorDlg_t	niup: showhelp(ih: ColorDlg_t): string	
showhex	niup.html#showhex,ColorDlg_t	niup: showhex(ih: ColorDlg_t): string	
shownofocus=	niup.html#shownofocus=,ColorDlg_t,string	niup: shownofocus=(ih: ColorDlg_t; value: string)	
shownofocus	niup.html#shownofocus,ColorDlg_t,string	niup: shownofocus(ih: ColorDlg_t; value: string)	
shownofocus=	niup.html#shownofocus=,ColorDlg_t,bool	niup: shownofocus=(ih: ColorDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,ColorDlg_t,bool	niup: shownofocus(ih: ColorDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,ColorDlg_t	niup: shownofocus(ih: ColorDlg_t): bool	
shrink=	niup.html#shrink=,ColorDlg_t,string	niup: shrink=(ih: ColorDlg_t; value: string)	
shrink	niup.html#shrink,ColorDlg_t,string	niup: shrink(ih: ColorDlg_t; value: string)	
shrink=	niup.html#shrink=,ColorDlg_t,bool	niup: shrink=(ih: ColorDlg_t; yes: bool)	
shrink	niup.html#shrink,ColorDlg_t,bool	niup: shrink(ih: ColorDlg_t; yes: bool)	
shrink	niup.html#shrink,ColorDlg_t	niup: shrink(ih: ColorDlg_t): bool	
simulatemodal=	niup.html#simulatemodal=,ColorDlg_t,string	niup: simulatemodal=(ih: ColorDlg_t; value: string)	
simulatemodal	niup.html#simulatemodal,ColorDlg_t,string	niup: simulatemodal(ih: ColorDlg_t; value: string)	
simulatemodal=	niup.html#simulatemodal=,ColorDlg_t,bool	niup: simulatemodal=(ih: ColorDlg_t; yes: bool)	
simulatemodal	niup.html#simulatemodal,ColorDlg_t,bool	niup: simulatemodal(ih: ColorDlg_t; yes: bool)	
size=	niup.html#size=,ColorDlg_t,string	niup: size=(ih: ColorDlg_t; value: string)	
size	niup.html#size,ColorDlg_t,string	niup: size(ih: ColorDlg_t; value: string)	
size=	niup.html#size=,ColorDlg_t,int,int	niup: size=(ih: ColorDlg_t; width, height: int)	
size	niup.html#size,ColorDlg_t,int,int	niup: size(ih: ColorDlg_t; width, height: int)	
size=	niup.html#size=,ColorDlg_t,string,int	niup: size=(ih: ColorDlg_t; width: string; height: int)	
size	niup.html#size,ColorDlg_t,string,int	niup: size(ih: ColorDlg_t; width: string; height: int)	
size=	niup.html#size=,ColorDlg_t,int,string	niup: size=(ih: ColorDlg_t; width: int; height: string)	
size	niup.html#size,ColorDlg_t,int,string	niup: size(ih: ColorDlg_t; width: int; height: string)	
size	niup.html#size,ColorDlg_t	niup: size(ih: ColorDlg_t): string	
startfocus=	niup.html#startfocus=,ColorDlg_t,string	niup: startfocus=(ih: ColorDlg_t; value: string)	
startfocus	niup.html#startfocus,ColorDlg_t,string	niup: startfocus(ih: ColorDlg_t; value: string)	
startfocus	niup.html#startfocus,ColorDlg_t	niup: startfocus(ih: ColorDlg_t): string	
status	niup.html#status,ColorDlg_t	niup: status(ih: ColorDlg_t): string	
theme=	niup.html#theme=,ColorDlg_t,string	niup: theme=(ih: ColorDlg_t; value: string)	
theme	niup.html#theme,ColorDlg_t,string	niup: theme(ih: ColorDlg_t; value: string)	
theme	niup.html#theme,ColorDlg_t	niup: theme(ih: ColorDlg_t): string	
tip=	niup.html#tip=,ColorDlg_t,string	niup: tip=(ih: ColorDlg_t; value: string)	
tip	niup.html#tip,ColorDlg_t,string	niup: tip(ih: ColorDlg_t; value: string)	
tip	niup.html#tip,ColorDlg_t	niup: tip(ih: ColorDlg_t): string	
tipbgcolor=	niup.html#tipbgcolor=,ColorDlg_t,string	niup: tipbgcolor=(ih: ColorDlg_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,ColorDlg_t,string	niup: tipbgcolor(ih: ColorDlg_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,ColorDlg_t,int,int,int,int	niup: tipbgcolor=(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ColorDlg_t,int,int,int,int	niup: tipbgcolor(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ColorDlg_t	niup: tipbgcolor(ih: ColorDlg_t): string	
tipdelay=	niup.html#tipdelay=,ColorDlg_t,string	niup: tipdelay=(ih: ColorDlg_t; value: string)	
tipdelay	niup.html#tipdelay,ColorDlg_t,string	niup: tipdelay(ih: ColorDlg_t; value: string)	
tipdelay=	niup.html#tipdelay=,ColorDlg_t,int	niup: tipdelay=(ih: ColorDlg_t; x: int)	
tipdelay	niup.html#tipdelay,ColorDlg_t,int	niup: tipdelay(ih: ColorDlg_t; x: int)	
tipdelay	niup.html#tipdelay,ColorDlg_t	niup: tipdelay(ih: ColorDlg_t): string	
tipfgcolor=	niup.html#tipfgcolor=,ColorDlg_t,string	niup: tipfgcolor=(ih: ColorDlg_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,ColorDlg_t,string	niup: tipfgcolor(ih: ColorDlg_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,ColorDlg_t,int,int,int,int	niup: tipfgcolor=(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ColorDlg_t,int,int,int,int	niup: tipfgcolor(ih: ColorDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ColorDlg_t	niup: tipfgcolor(ih: ColorDlg_t): string	
tipicon=	niup.html#tipicon=,ColorDlg_t,string	niup: tipicon=(ih: ColorDlg_t; value: string)	
tipicon	niup.html#tipicon,ColorDlg_t,string	niup: tipicon(ih: ColorDlg_t; value: string)	
tipicon	niup.html#tipicon,ColorDlg_t	niup: tipicon(ih: ColorDlg_t): string	
tipmarkup=	niup.html#tipmarkup=,ColorDlg_t,string	niup: tipmarkup=(ih: ColorDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,ColorDlg_t,string	niup: tipmarkup(ih: ColorDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,ColorDlg_t	niup: tipmarkup(ih: ColorDlg_t): string	
tiprect=	niup.html#tiprect=,ColorDlg_t,string	niup: tiprect=(ih: ColorDlg_t; value: string)	
tiprect	niup.html#tiprect,ColorDlg_t,string	niup: tiprect(ih: ColorDlg_t; value: string)	
tiprect=	niup.html#tiprect=,ColorDlg_t,int,int,int,int	niup: tiprect=(ih: ColorDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ColorDlg_t,int,int,int,int	niup: tiprect(ih: ColorDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ColorDlg_t	niup: tiprect(ih: ColorDlg_t): string	
tipvisible=	niup.html#tipvisible=,ColorDlg_t,string	niup: tipvisible=(ih: ColorDlg_t; value: string)	
tipvisible	niup.html#tipvisible,ColorDlg_t,string	niup: tipvisible(ih: ColorDlg_t; value: string)	
tipvisible=	niup.html#tipvisible=,ColorDlg_t,bool	niup: tipvisible=(ih: ColorDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,ColorDlg_t,bool	niup: tipvisible(ih: ColorDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,ColorDlg_t	niup: tipvisible(ih: ColorDlg_t): bool	
title=	niup.html#title=,ColorDlg_t,string	niup: title=(ih: ColorDlg_t; value: string)	
title	niup.html#title,ColorDlg_t,string	niup: title(ih: ColorDlg_t; value: string)	
title	niup.html#title,ColorDlg_t	niup: title(ih: ColorDlg_t): string	
toolbox=	niup.html#toolbox=,ColorDlg_t,string	niup: toolbox=(ih: ColorDlg_t; value: string)	
toolbox	niup.html#toolbox,ColorDlg_t,string	niup: toolbox(ih: ColorDlg_t; value: string)	
toolbox=	niup.html#toolbox=,ColorDlg_t,bool	niup: toolbox=(ih: ColorDlg_t; yes: bool)	
toolbox	niup.html#toolbox,ColorDlg_t,bool	niup: toolbox(ih: ColorDlg_t; yes: bool)	
toolbox	niup.html#toolbox,ColorDlg_t	niup: toolbox(ih: ColorDlg_t): bool	
topmost=	niup.html#topmost=,ColorDlg_t,string	niup: topmost=(ih: ColorDlg_t; value: string)	
topmost	niup.html#topmost,ColorDlg_t,string	niup: topmost(ih: ColorDlg_t; value: string)	
topmost=	niup.html#topmost=,ColorDlg_t,bool	niup: topmost=(ih: ColorDlg_t; yes: bool)	
topmost	niup.html#topmost,ColorDlg_t,bool	niup: topmost(ih: ColorDlg_t; yes: bool)	
tray=	niup.html#tray=,ColorDlg_t,string	niup: tray=(ih: ColorDlg_t; value: string)	
tray	niup.html#tray,ColorDlg_t,string	niup: tray(ih: ColorDlg_t; value: string)	
tray=	niup.html#tray=,ColorDlg_t,bool	niup: tray=(ih: ColorDlg_t; yes: bool)	
tray	niup.html#tray,ColorDlg_t,bool	niup: tray(ih: ColorDlg_t; yes: bool)	
tray	niup.html#tray,ColorDlg_t	niup: tray(ih: ColorDlg_t): bool	
trayimage=	niup.html#trayimage=,ColorDlg_t,	niup: trayimage=(ih: ColorDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,ColorDlg_t,	niup: trayimage(ih: ColorDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,ColorDlg_t	niup: trayimage(ih: ColorDlg_t): string	
traytip=	niup.html#traytip=,ColorDlg_t,string	niup: traytip=(ih: ColorDlg_t; value: string)	
traytip	niup.html#traytip,ColorDlg_t,string	niup: traytip(ih: ColorDlg_t; value: string)	
traytip	niup.html#traytip,ColorDlg_t	niup: traytip(ih: ColorDlg_t): string	
traytipmarkup=	niup.html#traytipmarkup=,ColorDlg_t,string	niup: traytipmarkup=(ih: ColorDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,ColorDlg_t,string	niup: traytipmarkup(ih: ColorDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,ColorDlg_t	niup: traytipmarkup(ih: ColorDlg_t): string	
usersize=	niup.html#usersize=,ColorDlg_t,string	niup: usersize=(ih: ColorDlg_t; value: string)	
usersize	niup.html#usersize,ColorDlg_t,string	niup: usersize(ih: ColorDlg_t; value: string)	
usersize=	niup.html#usersize=,ColorDlg_t,int,int	niup: usersize=(ih: ColorDlg_t; width, height: int)	
usersize	niup.html#usersize,ColorDlg_t,int,int	niup: usersize(ih: ColorDlg_t; width, height: int)	
usersize	niup.html#usersize,ColorDlg_t	niup: usersize(ih: ColorDlg_t): string	
value=	niup.html#value=,ColorDlg_t,string	niup: value=(ih: ColorDlg_t; value: string)	
value	niup.html#value,ColorDlg_t,string	niup: value(ih: ColorDlg_t; value: string)	
value	niup.html#value,ColorDlg_t	niup: value(ih: ColorDlg_t): string	
valuehex	niup.html#valuehex,ColorDlg_t	niup: valuehex(ih: ColorDlg_t): string	
valuehsi	niup.html#valuehsi,ColorDlg_t	niup: valuehsi(ih: ColorDlg_t): string	
visible=	niup.html#visible=,ColorDlg_t,string	niup: visible=(ih: ColorDlg_t; value: string)	
visible	niup.html#visible,ColorDlg_t,string	niup: visible(ih: ColorDlg_t; value: string)	
visible=	niup.html#visible=,ColorDlg_t,bool	niup: visible=(ih: ColorDlg_t; yes: bool)	
visible	niup.html#visible,ColorDlg_t,bool	niup: visible(ih: ColorDlg_t; yes: bool)	
visible	niup.html#visible,ColorDlg_t	niup: visible(ih: ColorDlg_t): bool	
wid	niup.html#wid,ColorDlg_t	niup: wid(ih: ColorDlg_t): string	
x	niup.html#x,ColorDlg_t	niup: x(ih: ColorDlg_t): string	
xfontid	niup.html#xfontid,ColorDlg_t	niup: xfontid(ih: ColorDlg_t): string	
xwindow	niup.html#xwindow,ColorDlg_t	niup: xwindow(ih: ColorDlg_t): string	
y	niup.html#y,ColorDlg_t	niup: y(ih: ColorDlg_t): string	
zorder=	niup.html#zorder=,ColorDlg_t,string	niup: zorder=(ih: ColorDlg_t; value: string)	
zorder	niup.html#zorder,ColorDlg_t,string	niup: zorder(ih: ColorDlg_t; value: string)	
close_cb=	niup.html#close_cb=,ColorDlg_t,proc(PIhandle)	niup: close_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,ColorDlg_t,proc(PIhandle)	niup: close_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,ColorDlg_t	niup: close_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
colorupdate_cb=	niup.html#colorupdate_cb=,ColorDlg_t,proc(PIhandle)	niup: colorupdate_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
colorupdate_cb	niup.html#colorupdate_cb,ColorDlg_t,proc(PIhandle)	niup: colorupdate_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
colorupdate_cb	niup.html#colorupdate_cb,ColorDlg_t	niup: colorupdate_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,ColorDlg_t,proc(PIhandle)	niup: destroy_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ColorDlg_t,proc(PIhandle)	niup: destroy_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ColorDlg_t	niup: destroy_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,ColorDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: ColorDlg_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ColorDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: ColorDlg_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ColorDlg_t	niup: dragbegin_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,ColorDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: ColorDlg_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ColorDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: ColorDlg_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ColorDlg_t	niup: dragdatasize_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,ColorDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ColorDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ColorDlg_t	niup: dragdata_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,ColorDlg_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ColorDlg_t,proc(PIhandle,cint)	niup: dragend_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ColorDlg_t	niup: dragend_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,ColorDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ColorDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ColorDlg_t	niup: dropdata_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,ColorDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: ColorDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ColorDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: ColorDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ColorDlg_t	niup: dropfiles_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,ColorDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ColorDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ColorDlg_t	niup: dropmotion_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,ColorDlg_t,proc(PIhandle)	niup: enterwindow_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ColorDlg_t,proc(PIhandle)	niup: enterwindow_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ColorDlg_t	niup: enterwindow_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,ColorDlg_t,proc(PIhandle,cint)	niup: focus_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ColorDlg_t,proc(PIhandle,cint)	niup: focus_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ColorDlg_t	niup: focus_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,ColorDlg_t,proc(PIhandle)	niup: getfocus_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ColorDlg_t,proc(PIhandle)	niup: getfocus_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ColorDlg_t	niup: getfocus_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,ColorDlg_t,proc(PIhandle)	niup: help_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ColorDlg_t,proc(PIhandle)	niup: help_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ColorDlg_t	niup: help_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,ColorDlg_t,proc(PIhandle)	niup: killfocus_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ColorDlg_t,proc(PIhandle)	niup: killfocus_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ColorDlg_t	niup: killfocus_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,ColorDlg_t,proc(PIhandle,cint)	niup: k_any=(ih: ColorDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ColorDlg_t,proc(PIhandle,cint)	niup: k_any(ih: ColorDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ColorDlg_t	niup: k_any(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,ColorDlg_t,proc(PIhandle)	niup: ldestroy_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ColorDlg_t,proc(PIhandle)	niup: ldestroy_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ColorDlg_t	niup: ldestroy_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,ColorDlg_t,proc(PIhandle)	niup: leavewindow_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ColorDlg_t,proc(PIhandle)	niup: leavewindow_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ColorDlg_t	niup: leavewindow_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,ColorDlg_t,proc(PIhandle)	niup: map_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ColorDlg_t,proc(PIhandle)	niup: map_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ColorDlg_t	niup: map_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,ColorDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ColorDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ColorDlg_t	niup: postmessage_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,ColorDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: ColorDlg_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ColorDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: ColorDlg_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ColorDlg_t	niup: resize_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
show_cb=	niup.html#show_cb=,ColorDlg_t,proc(PIhandle,cint)	niup: show_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,ColorDlg_t,proc(PIhandle,cint)	niup: show_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,ColorDlg_t	niup: show_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
trayclick_cb=	niup.html#trayclick_cb=,ColorDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.\n    cdecl.})	
trayclick_cb	niup.html#trayclick_cb,ColorDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb(ih: ColorDlg_t;\n             cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,ColorDlg_t	niup: trayclick_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,ColorDlg_t,proc(PIhandle)	niup: unmap_cb=(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ColorDlg_t,proc(PIhandle)	niup: unmap_cb(ih: ColorDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ColorDlg_t	niup: unmap_cb(ih: ColorDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
DatePick	niup.html#DatePick_2	niup: DatePick(): DatePick_t	
active=	niup.html#active=,DatePick_t,string	niup: active=(ih: DatePick_t; value: string)	
active	niup.html#active,DatePick_t,string	niup: active(ih: DatePick_t; value: string)	
active=	niup.html#active=,DatePick_t,bool	niup: active=(ih: DatePick_t; yes: bool)	
active	niup.html#active,DatePick_t,bool	niup: active(ih: DatePick_t; yes: bool)	
active	niup.html#active,DatePick_t	niup: active(ih: DatePick_t): bool	
backcolor=	niup.html#backcolor=,DatePick_t,string	niup: backcolor=(ih: DatePick_t; value: string)	
backcolor	niup.html#backcolor,DatePick_t,string	niup: backcolor(ih: DatePick_t; value: string)	
backcolor=	niup.html#backcolor=,DatePick_t,int,int,int,int	niup: backcolor=(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,DatePick_t,int,int,int,int	niup: backcolor(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,DatePick_t	niup: backcolor(ih: DatePick_t): string	
bgcolor=	niup.html#bgcolor=,DatePick_t,string	niup: bgcolor=(ih: DatePick_t; value: string)	
bgcolor	niup.html#bgcolor,DatePick_t,string	niup: bgcolor(ih: DatePick_t; value: string)	
bgcolor=	niup.html#bgcolor=,DatePick_t,int,int,int,int	niup: bgcolor=(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,DatePick_t,int,int,int,int	niup: bgcolor(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,DatePick_t	niup: bgcolor(ih: DatePick_t): string	
calendarweeknumbers	niup.html#calendarweeknumbers,DatePick_t	niup: calendarweeknumbers(ih: DatePick_t): string	
canfocus=	niup.html#canfocus=,DatePick_t,string	niup: canfocus=(ih: DatePick_t; value: string)	
canfocus	niup.html#canfocus,DatePick_t,string	niup: canfocus(ih: DatePick_t; value: string)	
canfocus=	niup.html#canfocus=,DatePick_t,bool	niup: canfocus=(ih: DatePick_t; yes: bool)	
canfocus	niup.html#canfocus,DatePick_t,bool	niup: canfocus(ih: DatePick_t; yes: bool)	
canfocus	niup.html#canfocus,DatePick_t	niup: canfocus(ih: DatePick_t): bool	
charsize	niup.html#charsize,DatePick_t	niup: charsize(ih: DatePick_t): string	
childoffset=	niup.html#childoffset=,DatePick_t,string	niup: childoffset=(ih: DatePick_t; value: string)	
childoffset	niup.html#childoffset,DatePick_t,string	niup: childoffset(ih: DatePick_t; value: string)	
childoffset=	niup.html#childoffset=,DatePick_t,int,int	niup: childoffset=(ih: DatePick_t; width, height: int)	
childoffset	niup.html#childoffset,DatePick_t,int,int	niup: childoffset(ih: DatePick_t; width, height: int)	
childoffset	niup.html#childoffset,DatePick_t	niup: childoffset(ih: DatePick_t): string	
clientoffset	niup.html#clientoffset,DatePick_t	niup: clientoffset(ih: DatePick_t): string	
clientsize	niup.html#clientsize,DatePick_t	niup: clientsize(ih: DatePick_t): string	
expand=	niup.html#expand=,DatePick_t,string	niup: expand=(ih: DatePick_t; value: string)	
expand	niup.html#expand,DatePick_t,string	niup: expand(ih: DatePick_t; value: string)	
expand	niup.html#expand,DatePick_t	niup: expand(ih: DatePick_t): string	
expandweight=	niup.html#expandweight=,DatePick_t,string	niup: expandweight=(ih: DatePick_t; value: string)	
expandweight	niup.html#expandweight,DatePick_t,string	niup: expandweight(ih: DatePick_t; value: string)	
expandweight=	niup.html#expandweight=,DatePick_t,int64	niup: expandweight=(ih: DatePick_t; x: int64)	
expandweight	niup.html#expandweight,DatePick_t,int64	niup: expandweight(ih: DatePick_t; x: int64)	
expandweight	niup.html#expandweight,DatePick_t	niup: expandweight(ih: DatePick_t): string	
fgcolor=	niup.html#fgcolor=,DatePick_t,string	niup: fgcolor=(ih: DatePick_t; value: string)	
fgcolor	niup.html#fgcolor,DatePick_t,string	niup: fgcolor(ih: DatePick_t; value: string)	
fgcolor=	niup.html#fgcolor=,DatePick_t,int,int,int,int	niup: fgcolor=(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,DatePick_t,int,int,int,int	niup: fgcolor(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,DatePick_t	niup: fgcolor(ih: DatePick_t): string	
floating=	niup.html#floating=,DatePick_t,string	niup: floating=(ih: DatePick_t; value: string)	
floating	niup.html#floating,DatePick_t,string	niup: floating(ih: DatePick_t; value: string)	
floating	niup.html#floating,DatePick_t	niup: floating(ih: DatePick_t): string	
font=	niup.html#font=,DatePick_t,string	niup: font=(ih: DatePick_t; value: string)	
font	niup.html#font,DatePick_t,string	niup: font(ih: DatePick_t; value: string)	
font	niup.html#font,DatePick_t	niup: font(ih: DatePick_t): string	
fontface=	niup.html#fontface=,DatePick_t,string	niup: fontface=(ih: DatePick_t; value: string)	
fontface	niup.html#fontface,DatePick_t,string	niup: fontface(ih: DatePick_t; value: string)	
fontface	niup.html#fontface,DatePick_t	niup: fontface(ih: DatePick_t): string	
fontsize=	niup.html#fontsize=,DatePick_t,string	niup: fontsize=(ih: DatePick_t; value: string)	
fontsize	niup.html#fontsize,DatePick_t,string	niup: fontsize(ih: DatePick_t; value: string)	
fontsize=	niup.html#fontsize=,DatePick_t,int	niup: fontsize=(ih: DatePick_t; x: int)	
fontsize	niup.html#fontsize,DatePick_t,int	niup: fontsize(ih: DatePick_t; x: int)	
fontsize	niup.html#fontsize,DatePick_t	niup: fontsize(ih: DatePick_t): string	
fontstyle=	niup.html#fontstyle=,DatePick_t,string	niup: fontstyle=(ih: DatePick_t; value: string)	
fontstyle	niup.html#fontstyle,DatePick_t,string	niup: fontstyle(ih: DatePick_t; value: string)	
fontstyle	niup.html#fontstyle,DatePick_t	niup: fontstyle(ih: DatePick_t): string	
handlename=	niup.html#handlename=,DatePick_t,string	niup: handlename=(ih: DatePick_t; value: string)	
handlename	niup.html#handlename,DatePick_t,string	niup: handlename(ih: DatePick_t; value: string)	
handlename	niup.html#handlename,DatePick_t	niup: handlename(ih: DatePick_t): string	
maxsize=	niup.html#maxsize=,DatePick_t,string	niup: maxsize=(ih: DatePick_t; value: string)	
maxsize	niup.html#maxsize,DatePick_t,string	niup: maxsize(ih: DatePick_t; value: string)	
maxsize=	niup.html#maxsize=,DatePick_t,int,int	niup: maxsize=(ih: DatePick_t; width, height: int)	
maxsize	niup.html#maxsize,DatePick_t,int,int	niup: maxsize(ih: DatePick_t; width, height: int)	
maxsize	niup.html#maxsize,DatePick_t	niup: maxsize(ih: DatePick_t): string	
minsize=	niup.html#minsize=,DatePick_t,string	niup: minsize=(ih: DatePick_t; value: string)	
minsize	niup.html#minsize,DatePick_t,string	niup: minsize(ih: DatePick_t; value: string)	
minsize=	niup.html#minsize=,DatePick_t,int,int	niup: minsize=(ih: DatePick_t; width, height: int)	
minsize	niup.html#minsize,DatePick_t,int,int	niup: minsize(ih: DatePick_t; width, height: int)	
minsize	niup.html#minsize,DatePick_t	niup: minsize(ih: DatePick_t): string	
name=	niup.html#name=,DatePick_t,string	niup: name=(ih: DatePick_t; value: string)	
name	niup.html#name,DatePick_t,string	niup: name(ih: DatePick_t; value: string)	
name	niup.html#name,DatePick_t	niup: name(ih: DatePick_t): string	
naturalsize	niup.html#naturalsize,DatePick_t	niup: naturalsize(ih: DatePick_t): string	
normalizergroup=	niup.html#normalizergroup=,DatePick_t,string	niup: normalizergroup=(ih: DatePick_t; value: string)	
normalizergroup	niup.html#normalizergroup,DatePick_t,string	niup: normalizergroup(ih: DatePick_t; value: string)	
normalizergroup	niup.html#normalizergroup,DatePick_t	niup: normalizergroup(ih: DatePick_t): string	
ntheme=	niup.html#ntheme=,DatePick_t,string	niup: ntheme=(ih: DatePick_t; value: string)	
ntheme	niup.html#ntheme,DatePick_t,string	niup: ntheme(ih: DatePick_t; value: string)	
ntheme	niup.html#ntheme,DatePick_t	niup: ntheme(ih: DatePick_t): string	
order	niup.html#order,DatePick_t	niup: order(ih: DatePick_t): string	
pangofontdesc	niup.html#pangofontdesc,DatePick_t	niup: pangofontdesc(ih: DatePick_t): string	
pangolayout	niup.html#pangolayout,DatePick_t	niup: pangolayout(ih: DatePick_t): string	
position=	niup.html#position=,DatePick_t,string	niup: position=(ih: DatePick_t; value: string)	
position	niup.html#position,DatePick_t,string	niup: position(ih: DatePick_t; value: string)	
position=	niup.html#position=,DatePick_t,int,int	niup: position=(ih: DatePick_t; x, y: int)	
position	niup.html#position,DatePick_t,int,int	niup: position(ih: DatePick_t; x, y: int)	
position	niup.html#position,DatePick_t	niup: position(ih: DatePick_t): string	
propagatefocus=	niup.html#propagatefocus=,DatePick_t,string	niup: propagatefocus=(ih: DatePick_t; value: string)	
propagatefocus	niup.html#propagatefocus,DatePick_t,string	niup: propagatefocus(ih: DatePick_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,DatePick_t,bool	niup: propagatefocus=(ih: DatePick_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,DatePick_t,bool	niup: propagatefocus(ih: DatePick_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,DatePick_t	niup: propagatefocus(ih: DatePick_t): bool	
rastersize=	niup.html#rastersize=,DatePick_t,string	niup: rastersize=(ih: DatePick_t; value: string)	
rastersize	niup.html#rastersize,DatePick_t,string	niup: rastersize(ih: DatePick_t; value: string)	
rastersize=	niup.html#rastersize=,DatePick_t,int,int	niup: rastersize=(ih: DatePick_t; width, height: int)	
rastersize	niup.html#rastersize,DatePick_t,int,int	niup: rastersize(ih: DatePick_t; width, height: int)	
rastersize	niup.html#rastersize,DatePick_t	niup: rastersize(ih: DatePick_t): string	
screenposition	niup.html#screenposition,DatePick_t	niup: screenposition(ih: DatePick_t): string	
separator=	niup.html#separator=,DatePick_t,string	niup: separator=(ih: DatePick_t; value: string)	
separator	niup.html#separator,DatePick_t,string	niup: separator(ih: DatePick_t; value: string)	
separator	niup.html#separator,DatePick_t	niup: separator(ih: DatePick_t): string	
showdropdown=	niup.html#showdropdown=,DatePick_t,string	niup: showdropdown=(ih: DatePick_t; value: string)	
showdropdown	niup.html#showdropdown,DatePick_t,string	niup: showdropdown(ih: DatePick_t; value: string)	
showdropdown=	niup.html#showdropdown=,DatePick_t,bool	niup: showdropdown=(ih: DatePick_t; yes: bool)	
showdropdown	niup.html#showdropdown,DatePick_t,bool	niup: showdropdown(ih: DatePick_t; yes: bool)	
size=	niup.html#size=,DatePick_t,string	niup: size=(ih: DatePick_t; value: string)	
size	niup.html#size,DatePick_t,string	niup: size(ih: DatePick_t; value: string)	
size=	niup.html#size=,DatePick_t,int,int	niup: size=(ih: DatePick_t; width, height: int)	
size	niup.html#size,DatePick_t,int,int	niup: size(ih: DatePick_t; width, height: int)	
size	niup.html#size,DatePick_t	niup: size(ih: DatePick_t): string	
sunken=	niup.html#sunken=,DatePick_t,string	niup: sunken=(ih: DatePick_t; value: string)	
sunken	niup.html#sunken,DatePick_t,string	niup: sunken(ih: DatePick_t; value: string)	
sunken	niup.html#sunken,DatePick_t	niup: sunken(ih: DatePick_t): string	
theme=	niup.html#theme=,DatePick_t,string	niup: theme=(ih: DatePick_t; value: string)	
theme	niup.html#theme,DatePick_t,string	niup: theme(ih: DatePick_t; value: string)	
theme	niup.html#theme,DatePick_t	niup: theme(ih: DatePick_t): string	
tip=	niup.html#tip=,DatePick_t,string	niup: tip=(ih: DatePick_t; value: string)	
tip	niup.html#tip,DatePick_t,string	niup: tip(ih: DatePick_t; value: string)	
tip	niup.html#tip,DatePick_t	niup: tip(ih: DatePick_t): string	
tipbgcolor=	niup.html#tipbgcolor=,DatePick_t,string	niup: tipbgcolor=(ih: DatePick_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,DatePick_t,string	niup: tipbgcolor(ih: DatePick_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,DatePick_t,int,int,int,int	niup: tipbgcolor=(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,DatePick_t,int,int,int,int	niup: tipbgcolor(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,DatePick_t	niup: tipbgcolor(ih: DatePick_t): string	
tipdelay=	niup.html#tipdelay=,DatePick_t,string	niup: tipdelay=(ih: DatePick_t; value: string)	
tipdelay	niup.html#tipdelay,DatePick_t,string	niup: tipdelay(ih: DatePick_t; value: string)	
tipdelay=	niup.html#tipdelay=,DatePick_t,int	niup: tipdelay=(ih: DatePick_t; x: int)	
tipdelay	niup.html#tipdelay,DatePick_t,int	niup: tipdelay(ih: DatePick_t; x: int)	
tipdelay	niup.html#tipdelay,DatePick_t	niup: tipdelay(ih: DatePick_t): string	
tipfgcolor=	niup.html#tipfgcolor=,DatePick_t,string	niup: tipfgcolor=(ih: DatePick_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,DatePick_t,string	niup: tipfgcolor(ih: DatePick_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,DatePick_t,int,int,int,int	niup: tipfgcolor=(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,DatePick_t,int,int,int,int	niup: tipfgcolor(ih: DatePick_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,DatePick_t	niup: tipfgcolor(ih: DatePick_t): string	
tipicon=	niup.html#tipicon=,DatePick_t,string	niup: tipicon=(ih: DatePick_t; value: string)	
tipicon	niup.html#tipicon,DatePick_t,string	niup: tipicon(ih: DatePick_t; value: string)	
tipicon	niup.html#tipicon,DatePick_t	niup: tipicon(ih: DatePick_t): string	
tipmarkup=	niup.html#tipmarkup=,DatePick_t,string	niup: tipmarkup=(ih: DatePick_t; value: string)	
tipmarkup	niup.html#tipmarkup,DatePick_t,string	niup: tipmarkup(ih: DatePick_t; value: string)	
tipmarkup	niup.html#tipmarkup,DatePick_t	niup: tipmarkup(ih: DatePick_t): string	
tiprect=	niup.html#tiprect=,DatePick_t,string	niup: tiprect=(ih: DatePick_t; value: string)	
tiprect	niup.html#tiprect,DatePick_t,string	niup: tiprect(ih: DatePick_t; value: string)	
tiprect=	niup.html#tiprect=,DatePick_t,int,int,int,int	niup: tiprect=(ih: DatePick_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,DatePick_t,int,int,int,int	niup: tiprect(ih: DatePick_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,DatePick_t	niup: tiprect(ih: DatePick_t): string	
tipvisible=	niup.html#tipvisible=,DatePick_t,string	niup: tipvisible=(ih: DatePick_t; value: string)	
tipvisible	niup.html#tipvisible,DatePick_t,string	niup: tipvisible(ih: DatePick_t; value: string)	
tipvisible=	niup.html#tipvisible=,DatePick_t,bool	niup: tipvisible=(ih: DatePick_t; yes: bool)	
tipvisible	niup.html#tipvisible,DatePick_t,bool	niup: tipvisible(ih: DatePick_t; yes: bool)	
tipvisible	niup.html#tipvisible,DatePick_t	niup: tipvisible(ih: DatePick_t): bool	
title=	niup.html#title=,DatePick_t,string	niup: title=(ih: DatePick_t; value: string)	
title	niup.html#title,DatePick_t,string	niup: title(ih: DatePick_t; value: string)	
title	niup.html#title,DatePick_t	niup: title(ih: DatePick_t): string	
today	niup.html#today,DatePick_t	niup: today(ih: DatePick_t): string	
usersize=	niup.html#usersize=,DatePick_t,string	niup: usersize=(ih: DatePick_t; value: string)	
usersize	niup.html#usersize,DatePick_t,string	niup: usersize(ih: DatePick_t; value: string)	
usersize=	niup.html#usersize=,DatePick_t,int,int	niup: usersize=(ih: DatePick_t; width, height: int)	
usersize	niup.html#usersize,DatePick_t,int,int	niup: usersize(ih: DatePick_t; width, height: int)	
usersize	niup.html#usersize,DatePick_t	niup: usersize(ih: DatePick_t): string	
value=	niup.html#value=,DatePick_t,string	niup: value=(ih: DatePick_t; value: string)	
value	niup.html#value,DatePick_t,string	niup: value(ih: DatePick_t; value: string)	
value	niup.html#value,DatePick_t	niup: value(ih: DatePick_t): string	
visible=	niup.html#visible=,DatePick_t,string	niup: visible=(ih: DatePick_t; value: string)	
visible	niup.html#visible,DatePick_t,string	niup: visible(ih: DatePick_t; value: string)	
visible=	niup.html#visible=,DatePick_t,bool	niup: visible=(ih: DatePick_t; yes: bool)	
visible	niup.html#visible,DatePick_t,bool	niup: visible(ih: DatePick_t; yes: bool)	
visible	niup.html#visible,DatePick_t	niup: visible(ih: DatePick_t): bool	
wid	niup.html#wid,DatePick_t	niup: wid(ih: DatePick_t): string	
x	niup.html#x,DatePick_t	niup: x(ih: DatePick_t): string	
xfontid	niup.html#xfontid,DatePick_t	niup: xfontid(ih: DatePick_t): string	
y	niup.html#y,DatePick_t	niup: y(ih: DatePick_t): string	
zeropreced	niup.html#zeropreced,DatePick_t	niup: zeropreced(ih: DatePick_t): string	
zorder=	niup.html#zorder=,DatePick_t,string	niup: zorder=(ih: DatePick_t; value: string)	
zorder	niup.html#zorder,DatePick_t,string	niup: zorder(ih: DatePick_t; value: string)	
focus_cb=	niup.html#focus_cb=,DatePick_t,proc(PIhandle,cint)	niup: focus_cb=(ih: DatePick_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,DatePick_t,proc(PIhandle,cint)	niup: focus_cb(ih: DatePick_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,DatePick_t	niup: focus_cb(ih: DatePick_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,DatePick_t,proc(PIhandle)	niup: map_cb=(ih: DatePick_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,DatePick_t,proc(PIhandle)	niup: map_cb(ih: DatePick_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,DatePick_t	niup: map_cb(ih: DatePick_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,DatePick_t,proc(PIhandle)	niup: unmap_cb=(ih: DatePick_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,DatePick_t,proc(PIhandle)	niup: unmap_cb(ih: DatePick_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,DatePick_t	niup: unmap_cb(ih: DatePick_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,DatePick_t,proc(PIhandle)	niup: valuechanged_cb=(ih: DatePick_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,DatePick_t,proc(PIhandle)	niup: valuechanged_cb(ih: DatePick_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,DatePick_t	niup: valuechanged_cb(ih: DatePick_t): proc (ih: PIhandle): cint {.cdecl.}	
DetachBox	niup.html#DetachBox,IUPhandle_t	niup: DetachBox(child: IUPhandle_t): DetachBox_t	
active=	niup.html#active=,DetachBox_t,string	niup: active=(ih: DetachBox_t; value: string)	
active	niup.html#active,DetachBox_t,string	niup: active(ih: DetachBox_t; value: string)	
active=	niup.html#active=,DetachBox_t,bool	niup: active=(ih: DetachBox_t; yes: bool)	
active	niup.html#active,DetachBox_t,bool	niup: active(ih: DetachBox_t; yes: bool)	
active	niup.html#active,DetachBox_t	niup: active(ih: DetachBox_t): bool	
barsize=	niup.html#barsize=,DetachBox_t,string	niup: barsize=(ih: DetachBox_t; value: string)	
barsize	niup.html#barsize,DetachBox_t,string	niup: barsize(ih: DetachBox_t; value: string)	
barsize=	niup.html#barsize=,DetachBox_t,int	niup: barsize=(ih: DetachBox_t; x: int)	
barsize	niup.html#barsize,DetachBox_t,int	niup: barsize(ih: DetachBox_t; x: int)	
barsize	niup.html#barsize,DetachBox_t	niup: barsize(ih: DetachBox_t): string	
canfocus=	niup.html#canfocus=,DetachBox_t,string	niup: canfocus=(ih: DetachBox_t; value: string)	
canfocus	niup.html#canfocus,DetachBox_t,string	niup: canfocus(ih: DetachBox_t; value: string)	
canfocus=	niup.html#canfocus=,DetachBox_t,bool	niup: canfocus=(ih: DetachBox_t; yes: bool)	
canfocus	niup.html#canfocus,DetachBox_t,bool	niup: canfocus(ih: DetachBox_t; yes: bool)	
canfocus	niup.html#canfocus,DetachBox_t	niup: canfocus(ih: DetachBox_t): bool	
charsize	niup.html#charsize,DetachBox_t	niup: charsize(ih: DetachBox_t): string	
clientoffset	niup.html#clientoffset,DetachBox_t	niup: clientoffset(ih: DetachBox_t): string	
clientsize	niup.html#clientsize,DetachBox_t	niup: clientsize(ih: DetachBox_t): string	
color=	niup.html#color=,DetachBox_t,string	niup: color=(ih: DetachBox_t; value: string)	
color	niup.html#color,DetachBox_t,string	niup: color(ih: DetachBox_t; value: string)	
color=	niup.html#color=,DetachBox_t,int,int,int,int	niup: color=(ih: DetachBox_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,DetachBox_t,int,int,int,int	niup: color(ih: DetachBox_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,DetachBox_t	niup: color(ih: DetachBox_t): string	
expand=	niup.html#expand=,DetachBox_t,string	niup: expand=(ih: DetachBox_t; value: string)	
expand	niup.html#expand,DetachBox_t,string	niup: expand(ih: DetachBox_t; value: string)	
expand	niup.html#expand,DetachBox_t	niup: expand(ih: DetachBox_t): string	
expandweight=	niup.html#expandweight=,DetachBox_t,string	niup: expandweight=(ih: DetachBox_t; value: string)	
expandweight	niup.html#expandweight,DetachBox_t,string	niup: expandweight(ih: DetachBox_t; value: string)	
expandweight=	niup.html#expandweight=,DetachBox_t,int64	niup: expandweight=(ih: DetachBox_t; x: int64)	
expandweight	niup.html#expandweight,DetachBox_t,int64	niup: expandweight(ih: DetachBox_t; x: int64)	
expandweight	niup.html#expandweight,DetachBox_t	niup: expandweight(ih: DetachBox_t): string	
floating=	niup.html#floating=,DetachBox_t,string	niup: floating=(ih: DetachBox_t; value: string)	
floating	niup.html#floating,DetachBox_t,string	niup: floating(ih: DetachBox_t; value: string)	
floating	niup.html#floating,DetachBox_t	niup: floating(ih: DetachBox_t): string	
font=	niup.html#font=,DetachBox_t,string	niup: font=(ih: DetachBox_t; value: string)	
font	niup.html#font,DetachBox_t,string	niup: font(ih: DetachBox_t; value: string)	
font	niup.html#font,DetachBox_t	niup: font(ih: DetachBox_t): string	
fontface=	niup.html#fontface=,DetachBox_t,string	niup: fontface=(ih: DetachBox_t; value: string)	
fontface	niup.html#fontface,DetachBox_t,string	niup: fontface(ih: DetachBox_t; value: string)	
fontface	niup.html#fontface,DetachBox_t	niup: fontface(ih: DetachBox_t): string	
fontsize=	niup.html#fontsize=,DetachBox_t,string	niup: fontsize=(ih: DetachBox_t; value: string)	
fontsize	niup.html#fontsize,DetachBox_t,string	niup: fontsize(ih: DetachBox_t; value: string)	
fontsize=	niup.html#fontsize=,DetachBox_t,int	niup: fontsize=(ih: DetachBox_t; x: int)	
fontsize	niup.html#fontsize,DetachBox_t,int	niup: fontsize(ih: DetachBox_t; x: int)	
fontsize	niup.html#fontsize,DetachBox_t	niup: fontsize(ih: DetachBox_t): string	
fontstyle=	niup.html#fontstyle=,DetachBox_t,string	niup: fontstyle=(ih: DetachBox_t; value: string)	
fontstyle	niup.html#fontstyle,DetachBox_t,string	niup: fontstyle(ih: DetachBox_t; value: string)	
fontstyle	niup.html#fontstyle,DetachBox_t	niup: fontstyle(ih: DetachBox_t): string	
handlename=	niup.html#handlename=,DetachBox_t,string	niup: handlename=(ih: DetachBox_t; value: string)	
handlename	niup.html#handlename,DetachBox_t,string	niup: handlename(ih: DetachBox_t; value: string)	
handlename	niup.html#handlename,DetachBox_t	niup: handlename(ih: DetachBox_t): string	
maxsize=	niup.html#maxsize=,DetachBox_t,string	niup: maxsize=(ih: DetachBox_t; value: string)	
maxsize	niup.html#maxsize,DetachBox_t,string	niup: maxsize(ih: DetachBox_t; value: string)	
maxsize=	niup.html#maxsize=,DetachBox_t,int,int	niup: maxsize=(ih: DetachBox_t; width, height: int)	
maxsize	niup.html#maxsize,DetachBox_t,int,int	niup: maxsize(ih: DetachBox_t; width, height: int)	
maxsize	niup.html#maxsize,DetachBox_t	niup: maxsize(ih: DetachBox_t): string	
minsize=	niup.html#minsize=,DetachBox_t,string	niup: minsize=(ih: DetachBox_t; value: string)	
minsize	niup.html#minsize,DetachBox_t,string	niup: minsize(ih: DetachBox_t; value: string)	
minsize=	niup.html#minsize=,DetachBox_t,int,int	niup: minsize=(ih: DetachBox_t; width, height: int)	
minsize	niup.html#minsize,DetachBox_t,int,int	niup: minsize(ih: DetachBox_t; width, height: int)	
minsize	niup.html#minsize,DetachBox_t	niup: minsize(ih: DetachBox_t): string	
name=	niup.html#name=,DetachBox_t,string	niup: name=(ih: DetachBox_t; value: string)	
name	niup.html#name,DetachBox_t,string	niup: name(ih: DetachBox_t; value: string)	
name	niup.html#name,DetachBox_t	niup: name(ih: DetachBox_t): string	
naturalsize	niup.html#naturalsize,DetachBox_t	niup: naturalsize(ih: DetachBox_t): string	
normalizergroup=	niup.html#normalizergroup=,DetachBox_t,string	niup: normalizergroup=(ih: DetachBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,DetachBox_t,string	niup: normalizergroup(ih: DetachBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,DetachBox_t	niup: normalizergroup(ih: DetachBox_t): string	
ntheme=	niup.html#ntheme=,DetachBox_t,string	niup: ntheme=(ih: DetachBox_t; value: string)	
ntheme	niup.html#ntheme,DetachBox_t,string	niup: ntheme(ih: DetachBox_t; value: string)	
ntheme	niup.html#ntheme,DetachBox_t	niup: ntheme(ih: DetachBox_t): string	
oldbrother_handle	niup.html#oldbrother_handle,DetachBox_t	niup: oldbrother_handle(ih: DetachBox_t): string	
oldparent_handle	niup.html#oldparent_handle,DetachBox_t	niup: oldparent_handle(ih: DetachBox_t): string	
orientation=	niup.html#orientation=,DetachBox_t,string	niup: orientation=(ih: DetachBox_t; value: string)	
orientation	niup.html#orientation,DetachBox_t,string	niup: orientation(ih: DetachBox_t; value: string)	
orientation	niup.html#orientation,DetachBox_t	niup: orientation(ih: DetachBox_t): string	
pangofontdesc	niup.html#pangofontdesc,DetachBox_t	niup: pangofontdesc(ih: DetachBox_t): string	
pangolayout	niup.html#pangolayout,DetachBox_t	niup: pangolayout(ih: DetachBox_t): string	
position=	niup.html#position=,DetachBox_t,string	niup: position=(ih: DetachBox_t; value: string)	
position	niup.html#position,DetachBox_t,string	niup: position(ih: DetachBox_t; value: string)	
position=	niup.html#position=,DetachBox_t,int,int	niup: position=(ih: DetachBox_t; x, y: int)	
position	niup.html#position,DetachBox_t,int,int	niup: position(ih: DetachBox_t; x, y: int)	
position	niup.html#position,DetachBox_t	niup: position(ih: DetachBox_t): string	
propagatefocus=	niup.html#propagatefocus=,DetachBox_t,string	niup: propagatefocus=(ih: DetachBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,DetachBox_t,string	niup: propagatefocus(ih: DetachBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,DetachBox_t,bool	niup: propagatefocus=(ih: DetachBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,DetachBox_t,bool	niup: propagatefocus(ih: DetachBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,DetachBox_t	niup: propagatefocus(ih: DetachBox_t): bool	
rastersize=	niup.html#rastersize=,DetachBox_t,string	niup: rastersize=(ih: DetachBox_t; value: string)	
rastersize	niup.html#rastersize,DetachBox_t,string	niup: rastersize(ih: DetachBox_t; value: string)	
rastersize=	niup.html#rastersize=,DetachBox_t,int,int	niup: rastersize=(ih: DetachBox_t; width, height: int)	
rastersize	niup.html#rastersize,DetachBox_t,int,int	niup: rastersize(ih: DetachBox_t; width, height: int)	
rastersize	niup.html#rastersize,DetachBox_t	niup: rastersize(ih: DetachBox_t): string	
restorewhenclosed	niup.html#restorewhenclosed,DetachBox_t	niup: restorewhenclosed(ih: DetachBox_t): string	
showgrip=	niup.html#showgrip=,DetachBox_t,string	niup: showgrip=(ih: DetachBox_t; value: string)	
showgrip	niup.html#showgrip,DetachBox_t,string	niup: showgrip(ih: DetachBox_t; value: string)	
showgrip=	niup.html#showgrip=,DetachBox_t,bool	niup: showgrip=(ih: DetachBox_t; yes: bool)	
showgrip	niup.html#showgrip,DetachBox_t,bool	niup: showgrip(ih: DetachBox_t; yes: bool)	
showgrip	niup.html#showgrip,DetachBox_t	niup: showgrip(ih: DetachBox_t): bool	
size=	niup.html#size=,DetachBox_t,string	niup: size=(ih: DetachBox_t; value: string)	
size	niup.html#size,DetachBox_t,string	niup: size(ih: DetachBox_t; value: string)	
size=	niup.html#size=,DetachBox_t,int,int	niup: size=(ih: DetachBox_t; width, height: int)	
size	niup.html#size,DetachBox_t,int,int	niup: size(ih: DetachBox_t; width, height: int)	
size	niup.html#size,DetachBox_t	niup: size(ih: DetachBox_t): string	
theme=	niup.html#theme=,DetachBox_t,string	niup: theme=(ih: DetachBox_t; value: string)	
theme	niup.html#theme,DetachBox_t,string	niup: theme(ih: DetachBox_t; value: string)	
theme	niup.html#theme,DetachBox_t	niup: theme(ih: DetachBox_t): string	
usersize=	niup.html#usersize=,DetachBox_t,string	niup: usersize=(ih: DetachBox_t; value: string)	
usersize	niup.html#usersize,DetachBox_t,string	niup: usersize(ih: DetachBox_t; value: string)	
usersize=	niup.html#usersize=,DetachBox_t,int,int	niup: usersize=(ih: DetachBox_t; width, height: int)	
usersize	niup.html#usersize,DetachBox_t,int,int	niup: usersize(ih: DetachBox_t; width, height: int)	
usersize	niup.html#usersize,DetachBox_t	niup: usersize(ih: DetachBox_t): string	
visible=	niup.html#visible=,DetachBox_t,string	niup: visible=(ih: DetachBox_t; value: string)	
visible	niup.html#visible,DetachBox_t,string	niup: visible(ih: DetachBox_t; value: string)	
visible=	niup.html#visible=,DetachBox_t,bool	niup: visible=(ih: DetachBox_t; yes: bool)	
visible	niup.html#visible,DetachBox_t,bool	niup: visible(ih: DetachBox_t; yes: bool)	
visible	niup.html#visible,DetachBox_t	niup: visible(ih: DetachBox_t): bool	
wid	niup.html#wid,DetachBox_t	niup: wid(ih: DetachBox_t): string	
xfontid	niup.html#xfontid,DetachBox_t	niup: xfontid(ih: DetachBox_t): string	
destroy_cb=	niup.html#destroy_cb=,DetachBox_t,proc(PIhandle)	niup: destroy_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,DetachBox_t,proc(PIhandle)	niup: destroy_cb(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,DetachBox_t	niup: destroy_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
detached_cb=	niup.html#detached_cb=,DetachBox_t,proc(PIhandle,PIhandle,cint,cint)	niup: detached_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle; arg2: PIhandle;\n                                        arg3: cint; arg4: cint): cint {.cdecl.})	
detached_cb	niup.html#detached_cb,DetachBox_t,proc(PIhandle,PIhandle,cint,cint)	niup: detached_cb(ih: DetachBox_t; cb: proc (ih: PIhandle; arg2: PIhandle; arg3: cint;\n                                       arg4: cint): cint {.cdecl.})	
detached_cb	niup.html#detached_cb,DetachBox_t	niup: detached_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,DetachBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,DetachBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,DetachBox_t	niup: ldestroy_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,DetachBox_t,proc(PIhandle)	niup: map_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,DetachBox_t,proc(PIhandle)	niup: map_cb(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,DetachBox_t	niup: map_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,DetachBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,DetachBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: DetachBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,DetachBox_t	niup: postmessage_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
restored_cb=	niup.html#restored_cb=,DetachBox_t,proc(PIhandle,PIhandle,cint,cint)	niup: restored_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle; arg2: PIhandle;\n                                        arg3: cint; arg4: cint): cint {.cdecl.})	
restored_cb	niup.html#restored_cb,DetachBox_t,proc(PIhandle,PIhandle,cint,cint)	niup: restored_cb(ih: DetachBox_t; cb: proc (ih: PIhandle; arg2: PIhandle; arg3: cint;\n                                       arg4: cint): cint {.cdecl.})	
restored_cb	niup.html#restored_cb,DetachBox_t	niup: restored_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,DetachBox_t,proc(PIhandle)	niup: unmap_cb=(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,DetachBox_t,proc(PIhandle)	niup: unmap_cb(ih: DetachBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,DetachBox_t	niup: unmap_cb(ih: DetachBox_t): proc (ih: PIhandle): cint {.cdecl.}	
Dial	niup.html#Dial,string	niup: Dial(type: string): Dial_t	
active=	niup.html#active=,Dial_t,string	niup: active=(ih: Dial_t; value: string)	
active	niup.html#active,Dial_t,string	niup: active(ih: Dial_t; value: string)	
active=	niup.html#active=,Dial_t,bool	niup: active=(ih: Dial_t; yes: bool)	
active	niup.html#active,Dial_t,bool	niup: active(ih: Dial_t; yes: bool)	
active	niup.html#active,Dial_t	niup: active(ih: Dial_t): bool	
backingstore=	niup.html#backingstore=,Dial_t,string	niup: backingstore=(ih: Dial_t; value: string)	
backingstore	niup.html#backingstore,Dial_t,string	niup: backingstore(ih: Dial_t; value: string)	
backingstore=	niup.html#backingstore=,Dial_t,bool	niup: backingstore=(ih: Dial_t; yes: bool)	
backingstore	niup.html#backingstore,Dial_t,bool	niup: backingstore(ih: Dial_t; yes: bool)	
backingstore	niup.html#backingstore,Dial_t	niup: backingstore(ih: Dial_t): bool	
bgcolor=	niup.html#bgcolor=,Dial_t,string	niup: bgcolor=(ih: Dial_t; value: string)	
bgcolor	niup.html#bgcolor,Dial_t,string	niup: bgcolor(ih: Dial_t; value: string)	
bgcolor=	niup.html#bgcolor=,Dial_t,int,int,int,int	niup: bgcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Dial_t,int,int,int,int	niup: bgcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Dial_t	niup: bgcolor(ih: Dial_t): string	
border	niup.html#border,Dial_t	niup: border(ih: Dial_t): bool	
canfocus=	niup.html#canfocus=,Dial_t,string	niup: canfocus=(ih: Dial_t; value: string)	
canfocus	niup.html#canfocus,Dial_t,string	niup: canfocus(ih: Dial_t; value: string)	
canfocus=	niup.html#canfocus=,Dial_t,bool	niup: canfocus=(ih: Dial_t; yes: bool)	
canfocus	niup.html#canfocus,Dial_t,bool	niup: canfocus(ih: Dial_t; yes: bool)	
canfocus	niup.html#canfocus,Dial_t	niup: canfocus(ih: Dial_t): bool	
charsize	niup.html#charsize,Dial_t	niup: charsize(ih: Dial_t): string	
cursor=	niup.html#cursor=,Dial_t,	niup: cursor=(ih: Dial_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Dial_t,	niup: cursor(ih: Dial_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Dial_t	niup: cursor(ih: Dial_t): string	
density	niup.html#density,Dial_t	niup: density(ih: Dial_t): string	
dragdrop=	niup.html#dragdrop=,Dial_t,string	niup: dragdrop=(ih: Dial_t; value: string)	
dragdrop	niup.html#dragdrop,Dial_t,string	niup: dragdrop(ih: Dial_t; value: string)	
dragdrop=	niup.html#dragdrop=,Dial_t,bool	niup: dragdrop=(ih: Dial_t; yes: bool)	
dragdrop	niup.html#dragdrop,Dial_t,bool	niup: dragdrop(ih: Dial_t; yes: bool)	
dragdrop	niup.html#dragdrop,Dial_t	niup: dragdrop(ih: Dial_t): bool	
dragsource=	niup.html#dragsource=,Dial_t,string	niup: dragsource=(ih: Dial_t; value: string)	
dragsource	niup.html#dragsource,Dial_t,string	niup: dragsource(ih: Dial_t; value: string)	
dragsource=	niup.html#dragsource=,Dial_t,bool	niup: dragsource=(ih: Dial_t; yes: bool)	
dragsource	niup.html#dragsource,Dial_t,bool	niup: dragsource(ih: Dial_t; yes: bool)	
dragsource	niup.html#dragsource,Dial_t	niup: dragsource(ih: Dial_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Dial_t,string	niup: dragsourcemove=(ih: Dial_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Dial_t,string	niup: dragsourcemove(ih: Dial_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Dial_t,bool	niup: dragsourcemove=(ih: Dial_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Dial_t,bool	niup: dragsourcemove(ih: Dial_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Dial_t	niup: dragsourcemove(ih: Dial_t): bool	
dragtypes=	niup.html#dragtypes=,Dial_t,string	niup: dragtypes=(ih: Dial_t; value: string)	
dragtypes	niup.html#dragtypes,Dial_t,string	niup: dragtypes(ih: Dial_t; value: string)	
dragtypes	niup.html#dragtypes,Dial_t	niup: dragtypes(ih: Dial_t): string	
drawable	niup.html#drawable,Dial_t	niup: drawable(ih: Dial_t): string	
drawbgcolor=	niup.html#drawbgcolor=,Dial_t,string	niup: drawbgcolor=(ih: Dial_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,Dial_t,string	niup: drawbgcolor(ih: Dial_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,Dial_t,int,int,int,int	niup: drawbgcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Dial_t,int,int,int,int	niup: drawbgcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Dial_t	niup: drawbgcolor(ih: Dial_t): string	
drawcolor=	niup.html#drawcolor=,Dial_t,string	niup: drawcolor=(ih: Dial_t; value: string)	
drawcolor	niup.html#drawcolor,Dial_t,string	niup: drawcolor(ih: Dial_t; value: string)	
drawcolor=	niup.html#drawcolor=,Dial_t,int,int,int,int	niup: drawcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Dial_t,int,int,int,int	niup: drawcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Dial_t	niup: drawcolor(ih: Dial_t): string	
drawdriver	niup.html#drawdriver,Dial_t	niup: drawdriver(ih: Dial_t): string	
drawfont=	niup.html#drawfont=,Dial_t,string	niup: drawfont=(ih: Dial_t; value: string)	
drawfont	niup.html#drawfont,Dial_t,string	niup: drawfont(ih: Dial_t; value: string)	
drawfont	niup.html#drawfont,Dial_t	niup: drawfont(ih: Dial_t): string	
drawlinewidth=	niup.html#drawlinewidth=,Dial_t,string	niup: drawlinewidth=(ih: Dial_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,Dial_t,string	niup: drawlinewidth(ih: Dial_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,Dial_t,int	niup: drawlinewidth=(ih: Dial_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Dial_t,int	niup: drawlinewidth(ih: Dial_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Dial_t	niup: drawlinewidth(ih: Dial_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,Dial_t,string	niup: drawmakeinactive=(ih: Dial_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,Dial_t,string	niup: drawmakeinactive(ih: Dial_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,Dial_t,bool	niup: drawmakeinactive=(ih: Dial_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Dial_t,bool	niup: drawmakeinactive(ih: Dial_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Dial_t	niup: drawmakeinactive(ih: Dial_t): bool	
drawsize	niup.html#drawsize,Dial_t	niup: drawsize(ih: Dial_t): string	
drawstyle=	niup.html#drawstyle=,Dial_t,string	niup: drawstyle=(ih: Dial_t; value: string)	
drawstyle	niup.html#drawstyle,Dial_t,string	niup: drawstyle(ih: Dial_t; value: string)	
drawstyle	niup.html#drawstyle,Dial_t	niup: drawstyle(ih: Dial_t): string	
drawtextalignment=	niup.html#drawtextalignment=,Dial_t,string	niup: drawtextalignment=(ih: Dial_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Dial_t,string	niup: drawtextalignment(ih: Dial_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Dial_t	niup: drawtextalignment(ih: Dial_t): string	
drawtextclip=	niup.html#drawtextclip=,Dial_t,string	niup: drawtextclip=(ih: Dial_t; value: string)	
drawtextclip	niup.html#drawtextclip,Dial_t,string	niup: drawtextclip(ih: Dial_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,Dial_t,bool	niup: drawtextclip=(ih: Dial_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Dial_t,bool	niup: drawtextclip(ih: Dial_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Dial_t	niup: drawtextclip(ih: Dial_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,Dial_t,string	niup: drawtextellipsis=(ih: Dial_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,Dial_t,string	niup: drawtextellipsis(ih: Dial_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,Dial_t,bool	niup: drawtextellipsis=(ih: Dial_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Dial_t,bool	niup: drawtextellipsis(ih: Dial_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Dial_t	niup: drawtextellipsis(ih: Dial_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Dial_t,string	niup: drawtextlayoutcenter=(ih: Dial_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Dial_t,string	niup: drawtextlayoutcenter(ih: Dial_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Dial_t,bool	niup: drawtextlayoutcenter=(ih: Dial_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Dial_t,bool	niup: drawtextlayoutcenter(ih: Dial_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Dial_t	niup: drawtextlayoutcenter(ih: Dial_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,Dial_t,string	niup: drawtextorientation=(ih: Dial_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,Dial_t,string	niup: drawtextorientation(ih: Dial_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,Dial_t,int64	niup: drawtextorientation=(ih: Dial_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Dial_t,int64	niup: drawtextorientation(ih: Dial_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Dial_t	niup: drawtextorientation(ih: Dial_t): string	
drawtextwrap=	niup.html#drawtextwrap=,Dial_t,string	niup: drawtextwrap=(ih: Dial_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,Dial_t,string	niup: drawtextwrap(ih: Dial_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,Dial_t,bool	niup: drawtextwrap=(ih: Dial_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Dial_t,bool	niup: drawtextwrap(ih: Dial_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Dial_t	niup: drawtextwrap(ih: Dial_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,Dial_t,string	niup: dropfilestarget=(ih: Dial_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Dial_t,string	niup: dropfilestarget(ih: Dial_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Dial_t,bool	niup: dropfilestarget=(ih: Dial_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Dial_t,bool	niup: dropfilestarget(ih: Dial_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Dial_t	niup: dropfilestarget(ih: Dial_t): bool	
droptarget=	niup.html#droptarget=,Dial_t,string	niup: droptarget=(ih: Dial_t; value: string)	
droptarget	niup.html#droptarget,Dial_t,string	niup: droptarget(ih: Dial_t; value: string)	
droptarget=	niup.html#droptarget=,Dial_t,bool	niup: droptarget=(ih: Dial_t; yes: bool)	
droptarget	niup.html#droptarget,Dial_t,bool	niup: droptarget(ih: Dial_t; yes: bool)	
droptarget	niup.html#droptarget,Dial_t	niup: droptarget(ih: Dial_t): bool	
droptypes=	niup.html#droptypes=,Dial_t,string	niup: droptypes=(ih: Dial_t; value: string)	
droptypes	niup.html#droptypes,Dial_t,string	niup: droptypes(ih: Dial_t; value: string)	
droptypes	niup.html#droptypes,Dial_t	niup: droptypes(ih: Dial_t): string	
dx=	niup.html#dx=,Dial_t,string	niup: dx=(ih: Dial_t; value: string)	
dx	niup.html#dx,Dial_t,string	niup: dx(ih: Dial_t; value: string)	
dx=	niup.html#dx=,Dial_t,int64	niup: dx=(ih: Dial_t; x: int64)	
dx	niup.html#dx,Dial_t,int64	niup: dx(ih: Dial_t; x: int64)	
dx	niup.html#dx,Dial_t	niup: dx(ih: Dial_t): string	
dy=	niup.html#dy=,Dial_t,string	niup: dy=(ih: Dial_t; value: string)	
dy	niup.html#dy,Dial_t,string	niup: dy(ih: Dial_t; value: string)	
dy=	niup.html#dy=,Dial_t,int64	niup: dy=(ih: Dial_t; x: int64)	
dy	niup.html#dy,Dial_t,int64	niup: dy(ih: Dial_t; x: int64)	
dy	niup.html#dy,Dial_t	niup: dy(ih: Dial_t): string	
expand=	niup.html#expand=,Dial_t,string	niup: expand=(ih: Dial_t; value: string)	
expand	niup.html#expand,Dial_t,string	niup: expand(ih: Dial_t; value: string)	
expand	niup.html#expand,Dial_t	niup: expand(ih: Dial_t): string	
expandweight=	niup.html#expandweight=,Dial_t,string	niup: expandweight=(ih: Dial_t; value: string)	
expandweight	niup.html#expandweight,Dial_t,string	niup: expandweight(ih: Dial_t; value: string)	
expandweight=	niup.html#expandweight=,Dial_t,int64	niup: expandweight=(ih: Dial_t; x: int64)	
expandweight	niup.html#expandweight,Dial_t,int64	niup: expandweight(ih: Dial_t; x: int64)	
expandweight	niup.html#expandweight,Dial_t	niup: expandweight(ih: Dial_t): string	
fgcolor=	niup.html#fgcolor=,Dial_t,string	niup: fgcolor=(ih: Dial_t; value: string)	
fgcolor	niup.html#fgcolor,Dial_t,string	niup: fgcolor(ih: Dial_t; value: string)	
fgcolor=	niup.html#fgcolor=,Dial_t,int,int,int,int	niup: fgcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Dial_t,int,int,int,int	niup: fgcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Dial_t	niup: fgcolor(ih: Dial_t): string	
flat=	niup.html#flat=,Dial_t,string	niup: flat=(ih: Dial_t; value: string)	
flat	niup.html#flat,Dial_t,string	niup: flat(ih: Dial_t; value: string)	
flat=	niup.html#flat=,Dial_t,bool	niup: flat=(ih: Dial_t; yes: bool)	
flat	niup.html#flat,Dial_t,bool	niup: flat(ih: Dial_t; yes: bool)	
flat	niup.html#flat,Dial_t	niup: flat(ih: Dial_t): bool	
flatcolor=	niup.html#flatcolor=,Dial_t,string	niup: flatcolor=(ih: Dial_t; value: string)	
flatcolor	niup.html#flatcolor,Dial_t,string	niup: flatcolor(ih: Dial_t; value: string)	
flatcolor=	niup.html#flatcolor=,Dial_t,int,int,int,int	niup: flatcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
flatcolor	niup.html#flatcolor,Dial_t,int,int,int,int	niup: flatcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
flatcolor	niup.html#flatcolor,Dial_t	niup: flatcolor(ih: Dial_t): string	
floating=	niup.html#floating=,Dial_t,string	niup: floating=(ih: Dial_t; value: string)	
floating	niup.html#floating,Dial_t,string	niup: floating(ih: Dial_t; value: string)	
floating	niup.html#floating,Dial_t	niup: floating(ih: Dial_t): string	
font=	niup.html#font=,Dial_t,string	niup: font=(ih: Dial_t; value: string)	
font	niup.html#font,Dial_t,string	niup: font(ih: Dial_t; value: string)	
font	niup.html#font,Dial_t	niup: font(ih: Dial_t): string	
fontface=	niup.html#fontface=,Dial_t,string	niup: fontface=(ih: Dial_t; value: string)	
fontface	niup.html#fontface,Dial_t,string	niup: fontface(ih: Dial_t; value: string)	
fontface	niup.html#fontface,Dial_t	niup: fontface(ih: Dial_t): string	
fontsize=	niup.html#fontsize=,Dial_t,string	niup: fontsize=(ih: Dial_t; value: string)	
fontsize	niup.html#fontsize,Dial_t,string	niup: fontsize(ih: Dial_t; value: string)	
fontsize=	niup.html#fontsize=,Dial_t,int	niup: fontsize=(ih: Dial_t; x: int)	
fontsize	niup.html#fontsize,Dial_t,int	niup: fontsize(ih: Dial_t; x: int)	
fontsize	niup.html#fontsize,Dial_t	niup: fontsize(ih: Dial_t): string	
fontstyle=	niup.html#fontstyle=,Dial_t,string	niup: fontstyle=(ih: Dial_t; value: string)	
fontstyle	niup.html#fontstyle,Dial_t,string	niup: fontstyle(ih: Dial_t; value: string)	
fontstyle	niup.html#fontstyle,Dial_t	niup: fontstyle(ih: Dial_t): string	
handlename=	niup.html#handlename=,Dial_t,string	niup: handlename=(ih: Dial_t; value: string)	
handlename	niup.html#handlename,Dial_t,string	niup: handlename(ih: Dial_t; value: string)	
handlename	niup.html#handlename,Dial_t	niup: handlename(ih: Dial_t): string	
linex=	niup.html#linex=,Dial_t,string	niup: linex=(ih: Dial_t; value: string)	
linex	niup.html#linex,Dial_t,string	niup: linex(ih: Dial_t; value: string)	
linex=	niup.html#linex=,Dial_t,int64	niup: linex=(ih: Dial_t; x: int64)	
linex	niup.html#linex,Dial_t,int64	niup: linex(ih: Dial_t; x: int64)	
linex	niup.html#linex,Dial_t	niup: linex(ih: Dial_t): string	
liney=	niup.html#liney=,Dial_t,string	niup: liney=(ih: Dial_t; value: string)	
liney	niup.html#liney,Dial_t,string	niup: liney(ih: Dial_t; value: string)	
liney=	niup.html#liney=,Dial_t,int64	niup: liney=(ih: Dial_t; x: int64)	
liney	niup.html#liney,Dial_t,int64	niup: liney(ih: Dial_t; x: int64)	
liney	niup.html#liney,Dial_t	niup: liney(ih: Dial_t): string	
maxsize=	niup.html#maxsize=,Dial_t,string	niup: maxsize=(ih: Dial_t; value: string)	
maxsize	niup.html#maxsize,Dial_t,string	niup: maxsize(ih: Dial_t; value: string)	
maxsize=	niup.html#maxsize=,Dial_t,int,int	niup: maxsize=(ih: Dial_t; width, height: int)	
maxsize	niup.html#maxsize,Dial_t,int,int	niup: maxsize(ih: Dial_t; width, height: int)	
maxsize	niup.html#maxsize,Dial_t	niup: maxsize(ih: Dial_t): string	
minsize=	niup.html#minsize=,Dial_t,string	niup: minsize=(ih: Dial_t; value: string)	
minsize	niup.html#minsize,Dial_t,string	niup: minsize(ih: Dial_t; value: string)	
minsize=	niup.html#minsize=,Dial_t,int,int	niup: minsize=(ih: Dial_t; width, height: int)	
minsize	niup.html#minsize,Dial_t,int,int	niup: minsize(ih: Dial_t; width, height: int)	
minsize	niup.html#minsize,Dial_t	niup: minsize(ih: Dial_t): string	
name=	niup.html#name=,Dial_t,string	niup: name=(ih: Dial_t; value: string)	
name	niup.html#name,Dial_t,string	niup: name(ih: Dial_t; value: string)	
name	niup.html#name,Dial_t	niup: name(ih: Dial_t): string	
naturalsize	niup.html#naturalsize,Dial_t	niup: naturalsize(ih: Dial_t): string	
normalizergroup=	niup.html#normalizergroup=,Dial_t,string	niup: normalizergroup=(ih: Dial_t; value: string)	
normalizergroup	niup.html#normalizergroup,Dial_t,string	niup: normalizergroup(ih: Dial_t; value: string)	
normalizergroup	niup.html#normalizergroup,Dial_t	niup: normalizergroup(ih: Dial_t): string	
ntheme=	niup.html#ntheme=,Dial_t,string	niup: ntheme=(ih: Dial_t; value: string)	
ntheme	niup.html#ntheme,Dial_t,string	niup: ntheme(ih: Dial_t; value: string)	
ntheme	niup.html#ntheme,Dial_t	niup: ntheme(ih: Dial_t): string	
orientation=	niup.html#orientation=,Dial_t,string	niup: orientation=(ih: Dial_t; value: string)	
orientation	niup.html#orientation,Dial_t,string	niup: orientation(ih: Dial_t; value: string)	
orientation	niup.html#orientation,Dial_t	niup: orientation(ih: Dial_t): string	
pangofontdesc	niup.html#pangofontdesc,Dial_t	niup: pangofontdesc(ih: Dial_t): string	
pangolayout	niup.html#pangolayout,Dial_t	niup: pangolayout(ih: Dial_t): string	
position=	niup.html#position=,Dial_t,string	niup: position=(ih: Dial_t; value: string)	
position	niup.html#position,Dial_t,string	niup: position(ih: Dial_t; value: string)	
position=	niup.html#position=,Dial_t,int,int	niup: position=(ih: Dial_t; x, y: int)	
position	niup.html#position,Dial_t,int,int	niup: position(ih: Dial_t; x, y: int)	
position	niup.html#position,Dial_t	niup: position(ih: Dial_t): string	
posx=	niup.html#posx=,Dial_t,string	niup: posx=(ih: Dial_t; value: string)	
posx	niup.html#posx,Dial_t,string	niup: posx(ih: Dial_t; value: string)	
posx=	niup.html#posx=,Dial_t,int64	niup: posx=(ih: Dial_t; x: int64)	
posx	niup.html#posx,Dial_t,int64	niup: posx(ih: Dial_t; x: int64)	
posx	niup.html#posx,Dial_t	niup: posx(ih: Dial_t): string	
posy=	niup.html#posy=,Dial_t,string	niup: posy=(ih: Dial_t; value: string)	
posy	niup.html#posy,Dial_t,string	niup: posy(ih: Dial_t; value: string)	
posy=	niup.html#posy=,Dial_t,int64	niup: posy=(ih: Dial_t; x: int64)	
posy	niup.html#posy,Dial_t,int64	niup: posy(ih: Dial_t; x: int64)	
posy	niup.html#posy,Dial_t	niup: posy(ih: Dial_t): string	
propagatefocus=	niup.html#propagatefocus=,Dial_t,string	niup: propagatefocus=(ih: Dial_t; value: string)	
propagatefocus	niup.html#propagatefocus,Dial_t,string	niup: propagatefocus(ih: Dial_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Dial_t,bool	niup: propagatefocus=(ih: Dial_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Dial_t,bool	niup: propagatefocus(ih: Dial_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Dial_t	niup: propagatefocus(ih: Dial_t): bool	
rastersize=	niup.html#rastersize=,Dial_t,string	niup: rastersize=(ih: Dial_t; value: string)	
rastersize	niup.html#rastersize,Dial_t,string	niup: rastersize(ih: Dial_t; value: string)	
rastersize=	niup.html#rastersize=,Dial_t,int,int	niup: rastersize=(ih: Dial_t; width, height: int)	
rastersize	niup.html#rastersize,Dial_t,int,int	niup: rastersize(ih: Dial_t; width, height: int)	
rastersize	niup.html#rastersize,Dial_t	niup: rastersize(ih: Dial_t): string	
sb_resize	niup.html#sb_resize,Dial_t	niup: sb_resize(ih: Dial_t): string	
screenposition	niup.html#screenposition,Dial_t	niup: screenposition(ih: Dial_t): string	
scrollbar=	niup.html#scrollbar=,Dial_t,string	niup: scrollbar=(ih: Dial_t; value: string)	
scrollbar	niup.html#scrollbar,Dial_t,string	niup: scrollbar(ih: Dial_t; value: string)	
scrollbar=	niup.html#scrollbar=,Dial_t,bool	niup: scrollbar=(ih: Dial_t; yes: bool)	
scrollbar	niup.html#scrollbar,Dial_t,bool	niup: scrollbar(ih: Dial_t; yes: bool)	
scrollbar	niup.html#scrollbar,Dial_t	niup: scrollbar(ih: Dial_t): bool	
size=	niup.html#size=,Dial_t,string	niup: size=(ih: Dial_t; value: string)	
size	niup.html#size,Dial_t,string	niup: size(ih: Dial_t; value: string)	
size=	niup.html#size=,Dial_t,int,int	niup: size=(ih: Dial_t; width, height: int)	
size	niup.html#size,Dial_t,int,int	niup: size(ih: Dial_t; width, height: int)	
size	niup.html#size,Dial_t	niup: size(ih: Dial_t): string	
theme=	niup.html#theme=,Dial_t,string	niup: theme=(ih: Dial_t; value: string)	
theme	niup.html#theme,Dial_t,string	niup: theme(ih: Dial_t; value: string)	
theme	niup.html#theme,Dial_t	niup: theme(ih: Dial_t): string	
tip=	niup.html#tip=,Dial_t,string	niup: tip=(ih: Dial_t; value: string)	
tip	niup.html#tip,Dial_t,string	niup: tip(ih: Dial_t; value: string)	
tip	niup.html#tip,Dial_t	niup: tip(ih: Dial_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Dial_t,string	niup: tipbgcolor=(ih: Dial_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Dial_t,string	niup: tipbgcolor(ih: Dial_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Dial_t,int,int,int,int	niup: tipbgcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Dial_t,int,int,int,int	niup: tipbgcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Dial_t	niup: tipbgcolor(ih: Dial_t): string	
tipdelay=	niup.html#tipdelay=,Dial_t,string	niup: tipdelay=(ih: Dial_t; value: string)	
tipdelay	niup.html#tipdelay,Dial_t,string	niup: tipdelay(ih: Dial_t; value: string)	
tipdelay=	niup.html#tipdelay=,Dial_t,int	niup: tipdelay=(ih: Dial_t; x: int)	
tipdelay	niup.html#tipdelay,Dial_t,int	niup: tipdelay(ih: Dial_t; x: int)	
tipdelay	niup.html#tipdelay,Dial_t	niup: tipdelay(ih: Dial_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Dial_t,string	niup: tipfgcolor=(ih: Dial_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Dial_t,string	niup: tipfgcolor(ih: Dial_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Dial_t,int,int,int,int	niup: tipfgcolor=(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Dial_t,int,int,int,int	niup: tipfgcolor(ih: Dial_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Dial_t	niup: tipfgcolor(ih: Dial_t): string	
tipicon=	niup.html#tipicon=,Dial_t,string	niup: tipicon=(ih: Dial_t; value: string)	
tipicon	niup.html#tipicon,Dial_t,string	niup: tipicon(ih: Dial_t; value: string)	
tipicon	niup.html#tipicon,Dial_t	niup: tipicon(ih: Dial_t): string	
tipmarkup=	niup.html#tipmarkup=,Dial_t,string	niup: tipmarkup=(ih: Dial_t; value: string)	
tipmarkup	niup.html#tipmarkup,Dial_t,string	niup: tipmarkup(ih: Dial_t; value: string)	
tipmarkup	niup.html#tipmarkup,Dial_t	niup: tipmarkup(ih: Dial_t): string	
tiprect=	niup.html#tiprect=,Dial_t,string	niup: tiprect=(ih: Dial_t; value: string)	
tiprect	niup.html#tiprect,Dial_t,string	niup: tiprect(ih: Dial_t; value: string)	
tiprect=	niup.html#tiprect=,Dial_t,int,int,int,int	niup: tiprect=(ih: Dial_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Dial_t,int,int,int,int	niup: tiprect(ih: Dial_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Dial_t	niup: tiprect(ih: Dial_t): string	
tipvisible=	niup.html#tipvisible=,Dial_t,string	niup: tipvisible=(ih: Dial_t; value: string)	
tipvisible	niup.html#tipvisible,Dial_t,string	niup: tipvisible(ih: Dial_t; value: string)	
tipvisible=	niup.html#tipvisible=,Dial_t,bool	niup: tipvisible=(ih: Dial_t; yes: bool)	
tipvisible	niup.html#tipvisible,Dial_t,bool	niup: tipvisible(ih: Dial_t; yes: bool)	
tipvisible	niup.html#tipvisible,Dial_t	niup: tipvisible(ih: Dial_t): bool	
touch=	niup.html#touch=,Dial_t,string	niup: touch=(ih: Dial_t; value: string)	
touch	niup.html#touch,Dial_t,string	niup: touch(ih: Dial_t; value: string)	
touch=	niup.html#touch=,Dial_t,bool	niup: touch=(ih: Dial_t; yes: bool)	
touch	niup.html#touch,Dial_t,bool	niup: touch(ih: Dial_t; yes: bool)	
touch	niup.html#touch,Dial_t	niup: touch(ih: Dial_t): bool	
type=	niup.html#type=,Dial_t,string	niup: type=(ih: Dial_t; value: string)	
`type`	niup.html#type,Dial_t,string	niup: `type`(ih: Dial_t; value: string)	
type=	niup.html#type=,Dial_t,int64	niup: type=(ih: Dial_t; x: int64)	
`type`	niup.html#type,Dial_t,int64	niup: `type`(ih: Dial_t; x: int64)	
`type`	niup.html#type,Dial_t	niup: `type`(ih: Dial_t): string	
unit	niup.html#unit,Dial_t	niup: unit(ih: Dial_t): string	
usersize=	niup.html#usersize=,Dial_t,string	niup: usersize=(ih: Dial_t; value: string)	
usersize	niup.html#usersize,Dial_t,string	niup: usersize(ih: Dial_t; value: string)	
usersize=	niup.html#usersize=,Dial_t,int,int	niup: usersize=(ih: Dial_t; width, height: int)	
usersize	niup.html#usersize,Dial_t,int,int	niup: usersize(ih: Dial_t; width, height: int)	
usersize	niup.html#usersize,Dial_t	niup: usersize(ih: Dial_t): string	
value=	niup.html#value=,Dial_t,string	niup: value=(ih: Dial_t; value: string)	
value	niup.html#value,Dial_t,string	niup: value(ih: Dial_t; value: string)	
value	niup.html#value,Dial_t	niup: value(ih: Dial_t): string	
visible=	niup.html#visible=,Dial_t,string	niup: visible=(ih: Dial_t; value: string)	
visible	niup.html#visible,Dial_t,string	niup: visible(ih: Dial_t; value: string)	
visible=	niup.html#visible=,Dial_t,bool	niup: visible=(ih: Dial_t; yes: bool)	
visible	niup.html#visible,Dial_t,bool	niup: visible(ih: Dial_t; yes: bool)	
visible	niup.html#visible,Dial_t	niup: visible(ih: Dial_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,Dial_t,string	niup: wheeldropfocus=(ih: Dial_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,Dial_t,string	niup: wheeldropfocus(ih: Dial_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,Dial_t,bool	niup: wheeldropfocus=(ih: Dial_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Dial_t,bool	niup: wheeldropfocus(ih: Dial_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Dial_t	niup: wheeldropfocus(ih: Dial_t): bool	
wid	niup.html#wid,Dial_t	niup: wid(ih: Dial_t): string	
x	niup.html#x,Dial_t	niup: x(ih: Dial_t): string	
xautohide=	niup.html#xautohide=,Dial_t,string	niup: xautohide=(ih: Dial_t; value: string)	
xautohide	niup.html#xautohide,Dial_t,string	niup: xautohide(ih: Dial_t; value: string)	
xautohide=	niup.html#xautohide=,Dial_t,bool	niup: xautohide=(ih: Dial_t; yes: bool)	
xautohide	niup.html#xautohide,Dial_t,bool	niup: xautohide(ih: Dial_t; yes: bool)	
xautohide	niup.html#xautohide,Dial_t	niup: xautohide(ih: Dial_t): bool	
xdisplay	niup.html#xdisplay,Dial_t	niup: xdisplay(ih: Dial_t): string	
xfontid	niup.html#xfontid,Dial_t	niup: xfontid(ih: Dial_t): string	
xhidden	niup.html#xhidden,Dial_t	niup: xhidden(ih: Dial_t): bool	
xmax=	niup.html#xmax=,Dial_t,string	niup: xmax=(ih: Dial_t; value: string)	
xmax	niup.html#xmax,Dial_t,string	niup: xmax(ih: Dial_t; value: string)	
xmax=	niup.html#xmax=,Dial_t,int	niup: xmax=(ih: Dial_t; x: int)	
xmax	niup.html#xmax,Dial_t,int	niup: xmax(ih: Dial_t; x: int)	
xmax	niup.html#xmax,Dial_t	niup: xmax(ih: Dial_t): string	
xmin=	niup.html#xmin=,Dial_t,string	niup: xmin=(ih: Dial_t; value: string)	
xmin	niup.html#xmin,Dial_t,string	niup: xmin(ih: Dial_t; value: string)	
xmin=	niup.html#xmin=,Dial_t,int	niup: xmin=(ih: Dial_t; x: int)	
xmin	niup.html#xmin,Dial_t,int	niup: xmin(ih: Dial_t; x: int)	
xmin	niup.html#xmin,Dial_t	niup: xmin(ih: Dial_t): string	
xwindow	niup.html#xwindow,Dial_t	niup: xwindow(ih: Dial_t): string	
y	niup.html#y,Dial_t	niup: y(ih: Dial_t): string	
yautohide=	niup.html#yautohide=,Dial_t,string	niup: yautohide=(ih: Dial_t; value: string)	
yautohide	niup.html#yautohide,Dial_t,string	niup: yautohide(ih: Dial_t; value: string)	
yautohide=	niup.html#yautohide=,Dial_t,bool	niup: yautohide=(ih: Dial_t; yes: bool)	
yautohide	niup.html#yautohide,Dial_t,bool	niup: yautohide(ih: Dial_t; yes: bool)	
yautohide	niup.html#yautohide,Dial_t	niup: yautohide(ih: Dial_t): bool	
yhidden	niup.html#yhidden,Dial_t	niup: yhidden(ih: Dial_t): bool	
ymax=	niup.html#ymax=,Dial_t,string	niup: ymax=(ih: Dial_t; value: string)	
ymax	niup.html#ymax,Dial_t,string	niup: ymax(ih: Dial_t; value: string)	
ymax=	niup.html#ymax=,Dial_t,int	niup: ymax=(ih: Dial_t; x: int)	
ymax	niup.html#ymax,Dial_t,int	niup: ymax(ih: Dial_t; x: int)	
ymax	niup.html#ymax,Dial_t	niup: ymax(ih: Dial_t): string	
ymin=	niup.html#ymin=,Dial_t,string	niup: ymin=(ih: Dial_t; value: string)	
ymin	niup.html#ymin,Dial_t,string	niup: ymin(ih: Dial_t; value: string)	
ymin=	niup.html#ymin=,Dial_t,int	niup: ymin=(ih: Dial_t; x: int)	
ymin	niup.html#ymin,Dial_t,int	niup: ymin(ih: Dial_t; x: int)	
ymin	niup.html#ymin,Dial_t	niup: ymin(ih: Dial_t): string	
zorder=	niup.html#zorder=,Dial_t,string	niup: zorder=(ih: Dial_t; value: string)	
zorder	niup.html#zorder,Dial_t,string	niup: zorder(ih: Dial_t; value: string)	
action=	niup.html#action=,Dial_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: Dial_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,Dial_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: Dial_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,Dial_t	niup: action(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Dial_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Dial_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Dial_t	niup: button_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
button_press_cb=	niup.html#button_press_cb=,Dial_t,proc(PIhandle,cdouble)	niup: button_press_cb=(ih: Dial_t;\n                 cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_press_cb	niup.html#button_press_cb,Dial_t,proc(PIhandle,cdouble)	niup: button_press_cb(ih: Dial_t;\n                cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_press_cb	niup.html#button_press_cb,Dial_t	niup: button_press_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
button_release_cb=	niup.html#button_release_cb=,Dial_t,proc(PIhandle,cdouble)	niup: button_release_cb=(ih: Dial_t;\n                   cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_release_cb	niup.html#button_release_cb,Dial_t,proc(PIhandle,cdouble)	niup: button_release_cb(ih: Dial_t;\n                  cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_release_cb	niup.html#button_release_cb,Dial_t	niup: button_release_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Dial_t,proc(PIhandle)	niup: destroy_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Dial_t,proc(PIhandle)	niup: destroy_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Dial_t	niup: destroy_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Dial_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Dial_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Dial_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Dial_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Dial_t	niup: dragbegin_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Dial_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Dial_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Dial_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Dial_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Dial_t	niup: dragdatasize_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Dial_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Dial_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Dial_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Dial_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Dial_t	niup: dragdata_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Dial_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Dial_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Dial_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Dial_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Dial_t	niup: dragend_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Dial_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Dial_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Dial_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Dial_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Dial_t	niup: dropdata_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Dial_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Dial_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Dial_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Dial_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                   num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Dial_t	niup: dropfiles_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Dial_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Dial_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Dial_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Dial_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Dial_t	niup: dropmotion_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Dial_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Dial_t,proc(PIhandle)	niup: enterwindow_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Dial_t	niup: enterwindow_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,Dial_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Dial_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Dial_t,proc(PIhandle,cint)	niup: focus_cb(ih: Dial_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Dial_t	niup: focus_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Dial_t,proc(PIhandle)	niup: getfocus_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Dial_t,proc(PIhandle)	niup: getfocus_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Dial_t	niup: getfocus_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Dial_t,proc(PIhandle)	niup: help_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Dial_t,proc(PIhandle)	niup: help_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Dial_t	niup: help_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,Dial_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: Dial_t; cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Dial_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: Dial_t; cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Dial_t	niup: keypress_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Dial_t,proc(PIhandle)	niup: killfocus_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Dial_t,proc(PIhandle)	niup: killfocus_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Dial_t	niup: killfocus_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Dial_t,proc(PIhandle,cint)	niup: k_any=(ih: Dial_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Dial_t,proc(PIhandle,cint)	niup: k_any(ih: Dial_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Dial_t	niup: k_any(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Dial_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Dial_t,proc(PIhandle)	niup: ldestroy_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Dial_t	niup: ldestroy_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Dial_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Dial_t,proc(PIhandle)	niup: leavewindow_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Dial_t	niup: leavewindow_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Dial_t,proc(PIhandle)	niup: map_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Dial_t,proc(PIhandle)	niup: map_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Dial_t	niup: map_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Dial_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Dial_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Dial_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Dial_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Dial_t	niup: motion_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
mousemove_cb=	niup.html#mousemove_cb=,Dial_t,proc(PIhandle,cdouble)	niup: mousemove_cb=(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
mousemove_cb	niup.html#mousemove_cb,Dial_t,proc(PIhandle,cdouble)	niup: mousemove_cb(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
mousemove_cb	niup.html#mousemove_cb,Dial_t	niup: mousemove_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Dial_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Dial_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Dial_t	niup: postmessage_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,Dial_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: Dial_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Dial_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: Dial_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Dial_t	niup: resize_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,Dial_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: Dial_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Dial_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: Dial_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Dial_t	niup: scroll_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Dial_t,proc(PIhandle)	niup: unmap_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Dial_t,proc(PIhandle)	niup: unmap_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Dial_t	niup: unmap_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,Dial_t,proc(PIhandle)	niup: valuechanged_cb=(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Dial_t,proc(PIhandle)	niup: valuechanged_cb(ih: Dial_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Dial_t	niup: valuechanged_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,Dial_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: Dial_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Dial_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: Dial_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                               status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Dial_t	niup: wheel_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,Dial_t,proc(PIhandle,cint)	niup: wom_cb=(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Dial_t,proc(PIhandle,cint)	niup: wom_cb(ih: Dial_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Dial_t	niup: wom_cb(ih: Dial_t): proc (ih: PIhandle): cint {.cdecl.}	
Dialog	niup.html#Dialog,IUPhandle_t	niup: Dialog(child: IUPhandle_t): Dialog_t	
active=	niup.html#active=,Dialog_t,string	niup: active=(ih: Dialog_t; value: string)	
active	niup.html#active,Dialog_t,string	niup: active(ih: Dialog_t; value: string)	
active=	niup.html#active=,Dialog_t,bool	niup: active=(ih: Dialog_t; yes: bool)	
active	niup.html#active,Dialog_t,bool	niup: active(ih: Dialog_t; yes: bool)	
active	niup.html#active,Dialog_t	niup: active(ih: Dialog_t): bool	
activewindow	niup.html#activewindow,Dialog_t	niup: activewindow(ih: Dialog_t): bool	
background=	niup.html#background=,Dialog_t,string	niup: background=(ih: Dialog_t; value: string)	
background	niup.html#background,Dialog_t,string	niup: background(ih: Dialog_t; value: string)	
background=	niup.html#background=,Dialog_t,int,int,int,int	niup: background=(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,Dialog_t,int,int,int,int	niup: background(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,Dialog_t	niup: background(ih: Dialog_t): string	
bgcolor=	niup.html#bgcolor=,Dialog_t,string	niup: bgcolor=(ih: Dialog_t; value: string)	
bgcolor	niup.html#bgcolor,Dialog_t,string	niup: bgcolor(ih: Dialog_t; value: string)	
bgcolor=	niup.html#bgcolor=,Dialog_t,int,int,int,int	niup: bgcolor=(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Dialog_t,int,int,int,int	niup: bgcolor(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Dialog_t	niup: bgcolor(ih: Dialog_t): string	
border=	niup.html#border=,Dialog_t,string	niup: border=(ih: Dialog_t; value: string)	
border	niup.html#border,Dialog_t,string	niup: border(ih: Dialog_t; value: string)	
border=	niup.html#border=,Dialog_t,bool	niup: border=(ih: Dialog_t; yes: bool)	
border	niup.html#border,Dialog_t,bool	niup: border(ih: Dialog_t; yes: bool)	
border	niup.html#border,Dialog_t	niup: border(ih: Dialog_t): bool	
bordersize	niup.html#bordersize,Dialog_t	niup: bordersize(ih: Dialog_t): string	
bringfront=	niup.html#bringfront=,Dialog_t,string	niup: bringfront=(ih: Dialog_t; value: string)	
bringfront	niup.html#bringfront,Dialog_t,string	niup: bringfront(ih: Dialog_t; value: string)	
bringfront=	niup.html#bringfront=,Dialog_t,bool	niup: bringfront=(ih: Dialog_t; yes: bool)	
bringfront	niup.html#bringfront,Dialog_t,bool	niup: bringfront(ih: Dialog_t; yes: bool)	
bringfront	niup.html#bringfront,Dialog_t	niup: bringfront(ih: Dialog_t): bool	
canfocus=	niup.html#canfocus=,Dialog_t,string	niup: canfocus=(ih: Dialog_t; value: string)	
canfocus	niup.html#canfocus,Dialog_t,string	niup: canfocus(ih: Dialog_t; value: string)	
canfocus=	niup.html#canfocus=,Dialog_t,bool	niup: canfocus=(ih: Dialog_t; yes: bool)	
canfocus	niup.html#canfocus,Dialog_t,bool	niup: canfocus(ih: Dialog_t; yes: bool)	
canfocus	niup.html#canfocus,Dialog_t	niup: canfocus(ih: Dialog_t): bool	
charsize	niup.html#charsize,Dialog_t	niup: charsize(ih: Dialog_t): string	
childoffset=	niup.html#childoffset=,Dialog_t,string	niup: childoffset=(ih: Dialog_t; value: string)	
childoffset	niup.html#childoffset,Dialog_t,string	niup: childoffset(ih: Dialog_t; value: string)	
childoffset=	niup.html#childoffset=,Dialog_t,int,int	niup: childoffset=(ih: Dialog_t; width, height: int)	
childoffset	niup.html#childoffset,Dialog_t,int,int	niup: childoffset(ih: Dialog_t; width, height: int)	
childoffset	niup.html#childoffset,Dialog_t	niup: childoffset(ih: Dialog_t): string	
clientoffset	niup.html#clientoffset,Dialog_t	niup: clientoffset(ih: Dialog_t): string	
clientsize=	niup.html#clientsize=,Dialog_t,string	niup: clientsize=(ih: Dialog_t; value: string)	
clientsize	niup.html#clientsize,Dialog_t,string	niup: clientsize(ih: Dialog_t; value: string)	
clientsize=	niup.html#clientsize=,Dialog_t,int,int	niup: clientsize=(ih: Dialog_t; width, height: int)	
clientsize	niup.html#clientsize,Dialog_t,int,int	niup: clientsize(ih: Dialog_t; width, height: int)	
clientsize	niup.html#clientsize,Dialog_t	niup: clientsize(ih: Dialog_t): string	
composited=	niup.html#composited=,Dialog_t,string	niup: composited=(ih: Dialog_t; value: string)	
composited	niup.html#composited,Dialog_t,string	niup: composited(ih: Dialog_t; value: string)	
composited=	niup.html#composited=,Dialog_t,bool	niup: composited=(ih: Dialog_t; yes: bool)	
composited	niup.html#composited,Dialog_t,bool	niup: composited(ih: Dialog_t; yes: bool)	
composited	niup.html#composited,Dialog_t	niup: composited(ih: Dialog_t): bool	
control=	niup.html#control=,Dialog_t,string	niup: control=(ih: Dialog_t; value: string)	
control	niup.html#control,Dialog_t,string	niup: control(ih: Dialog_t; value: string)	
control=	niup.html#control=,Dialog_t,bool	niup: control=(ih: Dialog_t; yes: bool)	
control	niup.html#control,Dialog_t,bool	niup: control(ih: Dialog_t; yes: bool)	
control	niup.html#control,Dialog_t	niup: control(ih: Dialog_t): bool	
cursor=	niup.html#cursor=,Dialog_t,	niup: cursor=(ih: Dialog_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Dialog_t,	niup: cursor(ih: Dialog_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Dialog_t	niup: cursor(ih: Dialog_t): string	
customframe=	niup.html#customframe=,Dialog_t,string	niup: customframe=(ih: Dialog_t; value: string)	
customframe	niup.html#customframe,Dialog_t,string	niup: customframe(ih: Dialog_t; value: string)	
customframe=	niup.html#customframe=,Dialog_t,bool	niup: customframe=(ih: Dialog_t; yes: bool)	
customframe	niup.html#customframe,Dialog_t,bool	niup: customframe(ih: Dialog_t; yes: bool)	
customframe	niup.html#customframe,Dialog_t	niup: customframe(ih: Dialog_t): bool	
customframesimulate=	niup.html#customframesimulate=,Dialog_t,string	niup: customframesimulate=(ih: Dialog_t; value: string)	
customframesimulate	niup.html#customframesimulate,Dialog_t,string	niup: customframesimulate(ih: Dialog_t; value: string)	
customframesimulate=	niup.html#customframesimulate=,Dialog_t,bool	niup: customframesimulate=(ih: Dialog_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,Dialog_t,bool	niup: customframesimulate(ih: Dialog_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,Dialog_t	niup: customframesimulate(ih: Dialog_t): bool	
defaultenter=	niup.html#defaultenter=,Dialog_t,IUPhandle_t	niup: defaultenter=(ih: Dialog_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,Dialog_t,IUPhandle_t	niup: defaultenter(ih: Dialog_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,Dialog_t	niup: defaultenter(ih: Dialog_t): string	
defaultesc=	niup.html#defaultesc=,Dialog_t,IUPhandle_t	niup: defaultesc=(ih: Dialog_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,Dialog_t,IUPhandle_t	niup: defaultesc(ih: Dialog_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,Dialog_t	niup: defaultesc(ih: Dialog_t): string	
dialogframe=	niup.html#dialogframe=,Dialog_t,string	niup: dialogframe=(ih: Dialog_t; value: string)	
dialogframe	niup.html#dialogframe,Dialog_t,string	niup: dialogframe(ih: Dialog_t; value: string)	
dialogframe=	niup.html#dialogframe=,Dialog_t,bool	niup: dialogframe=(ih: Dialog_t; yes: bool)	
dialogframe	niup.html#dialogframe,Dialog_t,bool	niup: dialogframe(ih: Dialog_t; yes: bool)	
dialogframe	niup.html#dialogframe,Dialog_t	niup: dialogframe(ih: Dialog_t): bool	
dialoghint=	niup.html#dialoghint=,Dialog_t,string	niup: dialoghint=(ih: Dialog_t; value: string)	
dialoghint	niup.html#dialoghint,Dialog_t,string	niup: dialoghint(ih: Dialog_t; value: string)	
dialoghint=	niup.html#dialoghint=,Dialog_t,bool	niup: dialoghint=(ih: Dialog_t; yes: bool)	
dialoghint	niup.html#dialoghint,Dialog_t,bool	niup: dialoghint(ih: Dialog_t; yes: bool)	
dialoghint	niup.html#dialoghint,Dialog_t	niup: dialoghint(ih: Dialog_t): bool	
dragdrop=	niup.html#dragdrop=,Dialog_t,string	niup: dragdrop=(ih: Dialog_t; value: string)	
dragdrop	niup.html#dragdrop,Dialog_t,string	niup: dragdrop(ih: Dialog_t; value: string)	
dragdrop=	niup.html#dragdrop=,Dialog_t,bool	niup: dragdrop=(ih: Dialog_t; yes: bool)	
dragdrop	niup.html#dragdrop,Dialog_t,bool	niup: dragdrop(ih: Dialog_t; yes: bool)	
dragdrop	niup.html#dragdrop,Dialog_t	niup: dragdrop(ih: Dialog_t): bool	
dragsource=	niup.html#dragsource=,Dialog_t,string	niup: dragsource=(ih: Dialog_t; value: string)	
dragsource	niup.html#dragsource,Dialog_t,string	niup: dragsource(ih: Dialog_t; value: string)	
dragsource=	niup.html#dragsource=,Dialog_t,bool	niup: dragsource=(ih: Dialog_t; yes: bool)	
dragsource	niup.html#dragsource,Dialog_t,bool	niup: dragsource(ih: Dialog_t; yes: bool)	
dragsource	niup.html#dragsource,Dialog_t	niup: dragsource(ih: Dialog_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Dialog_t,string	niup: dragsourcemove=(ih: Dialog_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Dialog_t,string	niup: dragsourcemove(ih: Dialog_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Dialog_t,bool	niup: dragsourcemove=(ih: Dialog_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Dialog_t,bool	niup: dragsourcemove(ih: Dialog_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Dialog_t	niup: dragsourcemove(ih: Dialog_t): bool	
dragtypes=	niup.html#dragtypes=,Dialog_t,string	niup: dragtypes=(ih: Dialog_t; value: string)	
dragtypes	niup.html#dragtypes,Dialog_t,string	niup: dragtypes(ih: Dialog_t; value: string)	
dragtypes	niup.html#dragtypes,Dialog_t	niup: dragtypes(ih: Dialog_t): string	
dropfilestarget=	niup.html#dropfilestarget=,Dialog_t,string	niup: dropfilestarget=(ih: Dialog_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Dialog_t,string	niup: dropfilestarget(ih: Dialog_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Dialog_t,bool	niup: dropfilestarget=(ih: Dialog_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Dialog_t,bool	niup: dropfilestarget(ih: Dialog_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Dialog_t	niup: dropfilestarget(ih: Dialog_t): bool	
droptarget=	niup.html#droptarget=,Dialog_t,string	niup: droptarget=(ih: Dialog_t; value: string)	
droptarget	niup.html#droptarget,Dialog_t,string	niup: droptarget(ih: Dialog_t; value: string)	
droptarget=	niup.html#droptarget=,Dialog_t,bool	niup: droptarget=(ih: Dialog_t; yes: bool)	
droptarget	niup.html#droptarget,Dialog_t,bool	niup: droptarget(ih: Dialog_t; yes: bool)	
droptarget	niup.html#droptarget,Dialog_t	niup: droptarget(ih: Dialog_t): bool	
droptypes=	niup.html#droptypes=,Dialog_t,string	niup: droptypes=(ih: Dialog_t; value: string)	
droptypes	niup.html#droptypes,Dialog_t,string	niup: droptypes(ih: Dialog_t; value: string)	
droptypes	niup.html#droptypes,Dialog_t	niup: droptypes(ih: Dialog_t): string	
expand=	niup.html#expand=,Dialog_t,string	niup: expand=(ih: Dialog_t; value: string)	
expand	niup.html#expand,Dialog_t,string	niup: expand(ih: Dialog_t; value: string)	
expand	niup.html#expand,Dialog_t	niup: expand(ih: Dialog_t): string	
expandweight=	niup.html#expandweight=,Dialog_t,string	niup: expandweight=(ih: Dialog_t; value: string)	
expandweight	niup.html#expandweight,Dialog_t,string	niup: expandweight(ih: Dialog_t; value: string)	
expandweight=	niup.html#expandweight=,Dialog_t,int64	niup: expandweight=(ih: Dialog_t; x: int64)	
expandweight	niup.html#expandweight,Dialog_t,int64	niup: expandweight(ih: Dialog_t; x: int64)	
expandweight	niup.html#expandweight,Dialog_t	niup: expandweight(ih: Dialog_t): string	
floating=	niup.html#floating=,Dialog_t,string	niup: floating=(ih: Dialog_t; value: string)	
floating	niup.html#floating,Dialog_t,string	niup: floating(ih: Dialog_t; value: string)	
floating	niup.html#floating,Dialog_t	niup: floating(ih: Dialog_t): string	
font=	niup.html#font=,Dialog_t,string	niup: font=(ih: Dialog_t; value: string)	
font	niup.html#font,Dialog_t,string	niup: font(ih: Dialog_t; value: string)	
font	niup.html#font,Dialog_t	niup: font(ih: Dialog_t): string	
fontface=	niup.html#fontface=,Dialog_t,string	niup: fontface=(ih: Dialog_t; value: string)	
fontface	niup.html#fontface,Dialog_t,string	niup: fontface(ih: Dialog_t; value: string)	
fontface	niup.html#fontface,Dialog_t	niup: fontface(ih: Dialog_t): string	
fontsize=	niup.html#fontsize=,Dialog_t,string	niup: fontsize=(ih: Dialog_t; value: string)	
fontsize	niup.html#fontsize,Dialog_t,string	niup: fontsize(ih: Dialog_t; value: string)	
fontsize=	niup.html#fontsize=,Dialog_t,int	niup: fontsize=(ih: Dialog_t; x: int)	
fontsize	niup.html#fontsize,Dialog_t,int	niup: fontsize(ih: Dialog_t; x: int)	
fontsize	niup.html#fontsize,Dialog_t	niup: fontsize(ih: Dialog_t): string	
fontstyle=	niup.html#fontstyle=,Dialog_t,string	niup: fontstyle=(ih: Dialog_t; value: string)	
fontstyle	niup.html#fontstyle,Dialog_t,string	niup: fontstyle(ih: Dialog_t; value: string)	
fontstyle	niup.html#fontstyle,Dialog_t	niup: fontstyle(ih: Dialog_t): string	
fullscreen=	niup.html#fullscreen=,Dialog_t,string	niup: fullscreen=(ih: Dialog_t; value: string)	
fullscreen	niup.html#fullscreen,Dialog_t,string	niup: fullscreen(ih: Dialog_t; value: string)	
fullscreen=	niup.html#fullscreen=,Dialog_t,bool	niup: fullscreen=(ih: Dialog_t; yes: bool)	
fullscreen	niup.html#fullscreen,Dialog_t,bool	niup: fullscreen(ih: Dialog_t; yes: bool)	
handlename=	niup.html#handlename=,Dialog_t,string	niup: handlename=(ih: Dialog_t; value: string)	
handlename	niup.html#handlename,Dialog_t,string	niup: handlename(ih: Dialog_t; value: string)	
handlename	niup.html#handlename,Dialog_t	niup: handlename(ih: Dialog_t): string	
helpbutton=	niup.html#helpbutton=,Dialog_t,string	niup: helpbutton=(ih: Dialog_t; value: string)	
helpbutton	niup.html#helpbutton,Dialog_t,string	niup: helpbutton(ih: Dialog_t; value: string)	
helpbutton=	niup.html#helpbutton=,Dialog_t,bool	niup: helpbutton=(ih: Dialog_t; yes: bool)	
helpbutton	niup.html#helpbutton,Dialog_t,bool	niup: helpbutton(ih: Dialog_t; yes: bool)	
helpbutton	niup.html#helpbutton,Dialog_t	niup: helpbutton(ih: Dialog_t): bool	
hidetaskbar=	niup.html#hidetaskbar=,Dialog_t,string	niup: hidetaskbar=(ih: Dialog_t; value: string)	
hidetaskbar	niup.html#hidetaskbar,Dialog_t,string	niup: hidetaskbar(ih: Dialog_t; value: string)	
hidetaskbar=	niup.html#hidetaskbar=,Dialog_t,bool	niup: hidetaskbar=(ih: Dialog_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,Dialog_t,bool	niup: hidetaskbar(ih: Dialog_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,Dialog_t	niup: hidetaskbar(ih: Dialog_t): bool	
hidetitlebar=	niup.html#hidetitlebar=,Dialog_t,string	niup: hidetitlebar=(ih: Dialog_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,Dialog_t,string	niup: hidetitlebar(ih: Dialog_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,Dialog_t	niup: hidetitlebar(ih: Dialog_t): string	
icon=	niup.html#icon=,Dialog_t,string	niup: icon=(ih: Dialog_t; value: string)	
icon	niup.html#icon,Dialog_t,string	niup: icon(ih: Dialog_t; value: string)	
icon	niup.html#icon,Dialog_t	niup: icon(ih: Dialog_t): string	
maxbox=	niup.html#maxbox=,Dialog_t,string	niup: maxbox=(ih: Dialog_t; value: string)	
maxbox	niup.html#maxbox,Dialog_t,string	niup: maxbox(ih: Dialog_t; value: string)	
maxbox=	niup.html#maxbox=,Dialog_t,bool	niup: maxbox=(ih: Dialog_t; yes: bool)	
maxbox	niup.html#maxbox,Dialog_t,bool	niup: maxbox(ih: Dialog_t; yes: bool)	
maxbox	niup.html#maxbox,Dialog_t	niup: maxbox(ih: Dialog_t): bool	
maximized	niup.html#maximized,Dialog_t	niup: maximized(ih: Dialog_t): bool	
maxsize=	niup.html#maxsize=,Dialog_t,string	niup: maxsize=(ih: Dialog_t; value: string)	
maxsize	niup.html#maxsize,Dialog_t,string	niup: maxsize(ih: Dialog_t; value: string)	
maxsize=	niup.html#maxsize=,Dialog_t,int,int	niup: maxsize=(ih: Dialog_t; width, height: int)	
maxsize	niup.html#maxsize,Dialog_t,int,int	niup: maxsize(ih: Dialog_t; width, height: int)	
maxsize	niup.html#maxsize,Dialog_t	niup: maxsize(ih: Dialog_t): string	
mdichild=	niup.html#mdichild=,Dialog_t,string	niup: mdichild=(ih: Dialog_t; value: string)	
mdichild	niup.html#mdichild,Dialog_t,string	niup: mdichild(ih: Dialog_t; value: string)	
mdichild=	niup.html#mdichild=,Dialog_t,bool	niup: mdichild=(ih: Dialog_t; yes: bool)	
mdichild	niup.html#mdichild,Dialog_t,bool	niup: mdichild(ih: Dialog_t; yes: bool)	
mdichild	niup.html#mdichild,Dialog_t	niup: mdichild(ih: Dialog_t): bool	
mdiclient=	niup.html#mdiclient=,Dialog_t,string	niup: mdiclient=(ih: Dialog_t; value: string)	
mdiclient	niup.html#mdiclient,Dialog_t,string	niup: mdiclient(ih: Dialog_t; value: string)	
mdiclient=	niup.html#mdiclient=,Dialog_t,bool	niup: mdiclient=(ih: Dialog_t; yes: bool)	
mdiclient	niup.html#mdiclient,Dialog_t,bool	niup: mdiclient(ih: Dialog_t; yes: bool)	
mdiclient	niup.html#mdiclient,Dialog_t	niup: mdiclient(ih: Dialog_t): bool	
mdiframe=	niup.html#mdiframe=,Dialog_t,string	niup: mdiframe=(ih: Dialog_t; value: string)	
mdiframe	niup.html#mdiframe,Dialog_t,string	niup: mdiframe(ih: Dialog_t; value: string)	
mdiframe=	niup.html#mdiframe=,Dialog_t,bool	niup: mdiframe=(ih: Dialog_t; yes: bool)	
mdiframe	niup.html#mdiframe,Dialog_t,bool	niup: mdiframe(ih: Dialog_t; yes: bool)	
mdiframe	niup.html#mdiframe,Dialog_t	niup: mdiframe(ih: Dialog_t): bool	
mdimenu=	niup.html#mdimenu=,Dialog_t,Menu_t	niup: mdimenu=(ih: Dialog_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,Dialog_t,Menu_t	niup: mdimenu(ih: Dialog_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,Dialog_t	niup: mdimenu(ih: Dialog_t): string	
menu=	niup.html#menu=,Dialog_t,Menu_t	niup: menu=(ih: Dialog_t; handle: Menu_t)	
menu	niup.html#menu,Dialog_t,Menu_t	niup: menu(ih: Dialog_t; handle: Menu_t)	
menu	niup.html#menu,Dialog_t	niup: menu(ih: Dialog_t): string	
menubox=	niup.html#menubox=,Dialog_t,string	niup: menubox=(ih: Dialog_t; value: string)	
menubox	niup.html#menubox,Dialog_t,string	niup: menubox(ih: Dialog_t; value: string)	
menubox=	niup.html#menubox=,Dialog_t,bool	niup: menubox=(ih: Dialog_t; yes: bool)	
menubox	niup.html#menubox,Dialog_t,bool	niup: menubox(ih: Dialog_t; yes: bool)	
menubox	niup.html#menubox,Dialog_t	niup: menubox(ih: Dialog_t): bool	
minbox=	niup.html#minbox=,Dialog_t,string	niup: minbox=(ih: Dialog_t; value: string)	
minbox	niup.html#minbox,Dialog_t,string	niup: minbox(ih: Dialog_t; value: string)	
minbox=	niup.html#minbox=,Dialog_t,bool	niup: minbox=(ih: Dialog_t; yes: bool)	
minbox	niup.html#minbox,Dialog_t,bool	niup: minbox(ih: Dialog_t; yes: bool)	
minbox	niup.html#minbox,Dialog_t	niup: minbox(ih: Dialog_t): bool	
minsize=	niup.html#minsize=,Dialog_t,string	niup: minsize=(ih: Dialog_t; value: string)	
minsize	niup.html#minsize,Dialog_t,string	niup: minsize(ih: Dialog_t; value: string)	
minsize=	niup.html#minsize=,Dialog_t,int,int	niup: minsize=(ih: Dialog_t; width, height: int)	
minsize	niup.html#minsize,Dialog_t,int,int	niup: minsize(ih: Dialog_t; width, height: int)	
minsize	niup.html#minsize,Dialog_t	niup: minsize(ih: Dialog_t): string	
modal	niup.html#modal,Dialog_t	niup: modal(ih: Dialog_t): bool	
nactive=	niup.html#nactive=,Dialog_t,string	niup: nactive=(ih: Dialog_t; value: string)	
nactive	niup.html#nactive,Dialog_t,string	niup: nactive(ih: Dialog_t; value: string)	
nactive=	niup.html#nactive=,Dialog_t,bool	niup: nactive=(ih: Dialog_t; yes: bool)	
nactive	niup.html#nactive,Dialog_t,bool	niup: nactive(ih: Dialog_t; yes: bool)	
nactive	niup.html#nactive,Dialog_t	niup: nactive(ih: Dialog_t): bool	
name=	niup.html#name=,Dialog_t,string	niup: name=(ih: Dialog_t; value: string)	
name	niup.html#name,Dialog_t,string	niup: name(ih: Dialog_t; value: string)	
name	niup.html#name,Dialog_t	niup: name(ih: Dialog_t): string	
nativeparent=	niup.html#nativeparent=,Dialog_t,User_t	niup: nativeparent=(ih: Dialog_t; handle: User_t)	
nativeparent	niup.html#nativeparent,Dialog_t,User_t	niup: nativeparent(ih: Dialog_t; handle: User_t)	
nativeparent	niup.html#nativeparent,Dialog_t	niup: nativeparent(ih: Dialog_t): string	
naturalsize	niup.html#naturalsize,Dialog_t	niup: naturalsize(ih: Dialog_t): string	
noflush=	niup.html#noflush=,Dialog_t,string	niup: noflush=(ih: Dialog_t; value: string)	
noflush	niup.html#noflush,Dialog_t,string	niup: noflush(ih: Dialog_t; value: string)	
noflush=	niup.html#noflush=,Dialog_t,bool	niup: noflush=(ih: Dialog_t; yes: bool)	
noflush	niup.html#noflush,Dialog_t,bool	niup: noflush(ih: Dialog_t; yes: bool)	
noflush	niup.html#noflush,Dialog_t	niup: noflush(ih: Dialog_t): bool	
normalizergroup=	niup.html#normalizergroup=,Dialog_t,string	niup: normalizergroup=(ih: Dialog_t; value: string)	
normalizergroup	niup.html#normalizergroup,Dialog_t,string	niup: normalizergroup(ih: Dialog_t; value: string)	
normalizergroup	niup.html#normalizergroup,Dialog_t	niup: normalizergroup(ih: Dialog_t): string	
ntheme=	niup.html#ntheme=,Dialog_t,string	niup: ntheme=(ih: Dialog_t; value: string)	
ntheme	niup.html#ntheme,Dialog_t,string	niup: ntheme(ih: Dialog_t; value: string)	
ntheme	niup.html#ntheme,Dialog_t	niup: ntheme(ih: Dialog_t): string	
opacity=	niup.html#opacity=,Dialog_t,string	niup: opacity=(ih: Dialog_t; value: string)	
opacity	niup.html#opacity,Dialog_t,string	niup: opacity(ih: Dialog_t; value: string)	
opacity=	niup.html#opacity=,Dialog_t,int	niup: opacity=(ih: Dialog_t; x: int)	
opacity	niup.html#opacity,Dialog_t,int	niup: opacity(ih: Dialog_t; x: int)	
opacity	niup.html#opacity,Dialog_t	niup: opacity(ih: Dialog_t): string	
opacityimage=	niup.html#opacityimage=,Dialog_t,string	niup: opacityimage=(ih: Dialog_t; value: string)	
opacityimage	niup.html#opacityimage,Dialog_t,string	niup: opacityimage(ih: Dialog_t; value: string)	
opacityimage	niup.html#opacityimage,Dialog_t	niup: opacityimage(ih: Dialog_t): string	
pangofontdesc	niup.html#pangofontdesc,Dialog_t	niup: pangofontdesc(ih: Dialog_t): string	
pangolayout	niup.html#pangolayout,Dialog_t	niup: pangolayout(ih: Dialog_t): string	
parentdialog=	niup.html#parentdialog=,Dialog_t,IUPhandle_t	niup: parentdialog=(ih: Dialog_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,Dialog_t,IUPhandle_t	niup: parentdialog(ih: Dialog_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,Dialog_t	niup: parentdialog(ih: Dialog_t): string	
placement=	niup.html#placement=,Dialog_t,string	niup: placement=(ih: Dialog_t; value: string)	
placement	niup.html#placement,Dialog_t,string	niup: placement(ih: Dialog_t; value: string)	
placement	niup.html#placement,Dialog_t	niup: placement(ih: Dialog_t): string	
position=	niup.html#position=,Dialog_t,string	niup: position=(ih: Dialog_t; value: string)	
position	niup.html#position,Dialog_t,string	niup: position(ih: Dialog_t; value: string)	
position=	niup.html#position=,Dialog_t,int,int	niup: position=(ih: Dialog_t; x, y: int)	
position	niup.html#position,Dialog_t,int,int	niup: position(ih: Dialog_t; x, y: int)	
position	niup.html#position,Dialog_t	niup: position(ih: Dialog_t): string	
propagatefocus=	niup.html#propagatefocus=,Dialog_t,string	niup: propagatefocus=(ih: Dialog_t; value: string)	
propagatefocus	niup.html#propagatefocus,Dialog_t,string	niup: propagatefocus(ih: Dialog_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Dialog_t,bool	niup: propagatefocus=(ih: Dialog_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Dialog_t,bool	niup: propagatefocus(ih: Dialog_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Dialog_t	niup: propagatefocus(ih: Dialog_t): bool	
rastersize=	niup.html#rastersize=,Dialog_t,string	niup: rastersize=(ih: Dialog_t; value: string)	
rastersize	niup.html#rastersize,Dialog_t,string	niup: rastersize(ih: Dialog_t; value: string)	
rastersize=	niup.html#rastersize=,Dialog_t,int,int	niup: rastersize=(ih: Dialog_t; width, height: int)	
rastersize	niup.html#rastersize,Dialog_t,int,int	niup: rastersize(ih: Dialog_t; width, height: int)	
rastersize	niup.html#rastersize,Dialog_t	niup: rastersize(ih: Dialog_t): string	
resize=	niup.html#resize=,Dialog_t,string	niup: resize=(ih: Dialog_t; value: string)	
resize	niup.html#resize,Dialog_t,string	niup: resize(ih: Dialog_t; value: string)	
resize=	niup.html#resize=,Dialog_t,bool	niup: resize=(ih: Dialog_t; yes: bool)	
resize	niup.html#resize,Dialog_t,bool	niup: resize(ih: Dialog_t; yes: bool)	
resize	niup.html#resize,Dialog_t	niup: resize(ih: Dialog_t): bool	
saveunder=	niup.html#saveunder=,Dialog_t,string	niup: saveunder=(ih: Dialog_t; value: string)	
saveunder	niup.html#saveunder,Dialog_t,string	niup: saveunder(ih: Dialog_t; value: string)	
saveunder=	niup.html#saveunder=,Dialog_t,bool	niup: saveunder=(ih: Dialog_t; yes: bool)	
saveunder	niup.html#saveunder,Dialog_t,bool	niup: saveunder(ih: Dialog_t; yes: bool)	
saveunder	niup.html#saveunder,Dialog_t	niup: saveunder(ih: Dialog_t): bool	
screenposition	niup.html#screenposition,Dialog_t	niup: screenposition(ih: Dialog_t): string	
shapeimage=	niup.html#shapeimage=,Dialog_t,string	niup: shapeimage=(ih: Dialog_t; value: string)	
shapeimage	niup.html#shapeimage,Dialog_t,string	niup: shapeimage(ih: Dialog_t; value: string)	
shapeimage	niup.html#shapeimage,Dialog_t	niup: shapeimage(ih: Dialog_t): string	
shownofocus=	niup.html#shownofocus=,Dialog_t,string	niup: shownofocus=(ih: Dialog_t; value: string)	
shownofocus	niup.html#shownofocus,Dialog_t,string	niup: shownofocus(ih: Dialog_t; value: string)	
shownofocus=	niup.html#shownofocus=,Dialog_t,bool	niup: shownofocus=(ih: Dialog_t; yes: bool)	
shownofocus	niup.html#shownofocus,Dialog_t,bool	niup: shownofocus(ih: Dialog_t; yes: bool)	
shownofocus	niup.html#shownofocus,Dialog_t	niup: shownofocus(ih: Dialog_t): bool	
shrink=	niup.html#shrink=,Dialog_t,string	niup: shrink=(ih: Dialog_t; value: string)	
shrink	niup.html#shrink,Dialog_t,string	niup: shrink(ih: Dialog_t; value: string)	
shrink=	niup.html#shrink=,Dialog_t,bool	niup: shrink=(ih: Dialog_t; yes: bool)	
shrink	niup.html#shrink,Dialog_t,bool	niup: shrink(ih: Dialog_t; yes: bool)	
shrink	niup.html#shrink,Dialog_t	niup: shrink(ih: Dialog_t): bool	
simulatemodal=	niup.html#simulatemodal=,Dialog_t,string	niup: simulatemodal=(ih: Dialog_t; value: string)	
simulatemodal	niup.html#simulatemodal,Dialog_t,string	niup: simulatemodal(ih: Dialog_t; value: string)	
simulatemodal=	niup.html#simulatemodal=,Dialog_t,bool	niup: simulatemodal=(ih: Dialog_t; yes: bool)	
simulatemodal	niup.html#simulatemodal,Dialog_t,bool	niup: simulatemodal(ih: Dialog_t; yes: bool)	
size=	niup.html#size=,Dialog_t,string	niup: size=(ih: Dialog_t; value: string)	
size	niup.html#size,Dialog_t,string	niup: size(ih: Dialog_t; value: string)	
size=	niup.html#size=,Dialog_t,int,int	niup: size=(ih: Dialog_t; width, height: int)	
size	niup.html#size,Dialog_t,int,int	niup: size(ih: Dialog_t; width, height: int)	
size=	niup.html#size=,Dialog_t,string,int	niup: size=(ih: Dialog_t; width: string; height: int)	
size	niup.html#size,Dialog_t,string,int	niup: size(ih: Dialog_t; width: string; height: int)	
size=	niup.html#size=,Dialog_t,int,string	niup: size=(ih: Dialog_t; width: int; height: string)	
size	niup.html#size,Dialog_t,int,string	niup: size(ih: Dialog_t; width: int; height: string)	
size	niup.html#size,Dialog_t	niup: size(ih: Dialog_t): string	
startfocus=	niup.html#startfocus=,Dialog_t,string	niup: startfocus=(ih: Dialog_t; value: string)	
startfocus	niup.html#startfocus,Dialog_t,string	niup: startfocus(ih: Dialog_t; value: string)	
startfocus	niup.html#startfocus,Dialog_t	niup: startfocus(ih: Dialog_t): string	
theme=	niup.html#theme=,Dialog_t,string	niup: theme=(ih: Dialog_t; value: string)	
theme	niup.html#theme,Dialog_t,string	niup: theme(ih: Dialog_t; value: string)	
theme	niup.html#theme,Dialog_t	niup: theme(ih: Dialog_t): string	
tip=	niup.html#tip=,Dialog_t,string	niup: tip=(ih: Dialog_t; value: string)	
tip	niup.html#tip,Dialog_t,string	niup: tip(ih: Dialog_t; value: string)	
tip	niup.html#tip,Dialog_t	niup: tip(ih: Dialog_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Dialog_t,string	niup: tipbgcolor=(ih: Dialog_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Dialog_t,string	niup: tipbgcolor(ih: Dialog_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Dialog_t,int,int,int,int	niup: tipbgcolor=(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Dialog_t,int,int,int,int	niup: tipbgcolor(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Dialog_t	niup: tipbgcolor(ih: Dialog_t): string	
tipdelay=	niup.html#tipdelay=,Dialog_t,string	niup: tipdelay=(ih: Dialog_t; value: string)	
tipdelay	niup.html#tipdelay,Dialog_t,string	niup: tipdelay(ih: Dialog_t; value: string)	
tipdelay=	niup.html#tipdelay=,Dialog_t,int	niup: tipdelay=(ih: Dialog_t; x: int)	
tipdelay	niup.html#tipdelay,Dialog_t,int	niup: tipdelay(ih: Dialog_t; x: int)	
tipdelay	niup.html#tipdelay,Dialog_t	niup: tipdelay(ih: Dialog_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Dialog_t,string	niup: tipfgcolor=(ih: Dialog_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Dialog_t,string	niup: tipfgcolor(ih: Dialog_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Dialog_t,int,int,int,int	niup: tipfgcolor=(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Dialog_t,int,int,int,int	niup: tipfgcolor(ih: Dialog_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Dialog_t	niup: tipfgcolor(ih: Dialog_t): string	
tipicon=	niup.html#tipicon=,Dialog_t,string	niup: tipicon=(ih: Dialog_t; value: string)	
tipicon	niup.html#tipicon,Dialog_t,string	niup: tipicon(ih: Dialog_t; value: string)	
tipicon	niup.html#tipicon,Dialog_t	niup: tipicon(ih: Dialog_t): string	
tipmarkup=	niup.html#tipmarkup=,Dialog_t,string	niup: tipmarkup=(ih: Dialog_t; value: string)	
tipmarkup	niup.html#tipmarkup,Dialog_t,string	niup: tipmarkup(ih: Dialog_t; value: string)	
tipmarkup	niup.html#tipmarkup,Dialog_t	niup: tipmarkup(ih: Dialog_t): string	
tiprect=	niup.html#tiprect=,Dialog_t,string	niup: tiprect=(ih: Dialog_t; value: string)	
tiprect	niup.html#tiprect,Dialog_t,string	niup: tiprect(ih: Dialog_t; value: string)	
tiprect=	niup.html#tiprect=,Dialog_t,int,int,int,int	niup: tiprect=(ih: Dialog_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Dialog_t,int,int,int,int	niup: tiprect(ih: Dialog_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Dialog_t	niup: tiprect(ih: Dialog_t): string	
tipvisible=	niup.html#tipvisible=,Dialog_t,string	niup: tipvisible=(ih: Dialog_t; value: string)	
tipvisible	niup.html#tipvisible,Dialog_t,string	niup: tipvisible(ih: Dialog_t; value: string)	
tipvisible=	niup.html#tipvisible=,Dialog_t,bool	niup: tipvisible=(ih: Dialog_t; yes: bool)	
tipvisible	niup.html#tipvisible,Dialog_t,bool	niup: tipvisible(ih: Dialog_t; yes: bool)	
tipvisible	niup.html#tipvisible,Dialog_t	niup: tipvisible(ih: Dialog_t): bool	
title=	niup.html#title=,Dialog_t,string	niup: title=(ih: Dialog_t; value: string)	
title	niup.html#title,Dialog_t,string	niup: title(ih: Dialog_t; value: string)	
title	niup.html#title,Dialog_t	niup: title(ih: Dialog_t): string	
toolbox=	niup.html#toolbox=,Dialog_t,string	niup: toolbox=(ih: Dialog_t; value: string)	
toolbox	niup.html#toolbox,Dialog_t,string	niup: toolbox(ih: Dialog_t; value: string)	
toolbox=	niup.html#toolbox=,Dialog_t,bool	niup: toolbox=(ih: Dialog_t; yes: bool)	
toolbox	niup.html#toolbox,Dialog_t,bool	niup: toolbox(ih: Dialog_t; yes: bool)	
toolbox	niup.html#toolbox,Dialog_t	niup: toolbox(ih: Dialog_t): bool	
topmost=	niup.html#topmost=,Dialog_t,string	niup: topmost=(ih: Dialog_t; value: string)	
topmost	niup.html#topmost,Dialog_t,string	niup: topmost(ih: Dialog_t; value: string)	
topmost=	niup.html#topmost=,Dialog_t,bool	niup: topmost=(ih: Dialog_t; yes: bool)	
topmost	niup.html#topmost,Dialog_t,bool	niup: topmost(ih: Dialog_t; yes: bool)	
tray=	niup.html#tray=,Dialog_t,string	niup: tray=(ih: Dialog_t; value: string)	
tray	niup.html#tray,Dialog_t,string	niup: tray(ih: Dialog_t; value: string)	
tray=	niup.html#tray=,Dialog_t,bool	niup: tray=(ih: Dialog_t; yes: bool)	
tray	niup.html#tray,Dialog_t,bool	niup: tray(ih: Dialog_t; yes: bool)	
tray	niup.html#tray,Dialog_t	niup: tray(ih: Dialog_t): bool	
trayimage=	niup.html#trayimage=,Dialog_t,	niup: trayimage=(ih: Dialog_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,Dialog_t,	niup: trayimage(ih: Dialog_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,Dialog_t	niup: trayimage(ih: Dialog_t): string	
traytip=	niup.html#traytip=,Dialog_t,string	niup: traytip=(ih: Dialog_t; value: string)	
traytip	niup.html#traytip,Dialog_t,string	niup: traytip(ih: Dialog_t; value: string)	
traytip	niup.html#traytip,Dialog_t	niup: traytip(ih: Dialog_t): string	
traytipmarkup=	niup.html#traytipmarkup=,Dialog_t,string	niup: traytipmarkup=(ih: Dialog_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,Dialog_t,string	niup: traytipmarkup(ih: Dialog_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,Dialog_t	niup: traytipmarkup(ih: Dialog_t): string	
usersize=	niup.html#usersize=,Dialog_t,string	niup: usersize=(ih: Dialog_t; value: string)	
usersize	niup.html#usersize,Dialog_t,string	niup: usersize(ih: Dialog_t; value: string)	
usersize=	niup.html#usersize=,Dialog_t,int,int	niup: usersize=(ih: Dialog_t; width, height: int)	
usersize	niup.html#usersize,Dialog_t,int,int	niup: usersize(ih: Dialog_t; width, height: int)	
usersize	niup.html#usersize,Dialog_t	niup: usersize(ih: Dialog_t): string	
visible=	niup.html#visible=,Dialog_t,string	niup: visible=(ih: Dialog_t; value: string)	
visible	niup.html#visible,Dialog_t,string	niup: visible(ih: Dialog_t; value: string)	
visible=	niup.html#visible=,Dialog_t,bool	niup: visible=(ih: Dialog_t; yes: bool)	
visible	niup.html#visible,Dialog_t,bool	niup: visible(ih: Dialog_t; yes: bool)	
visible	niup.html#visible,Dialog_t	niup: visible(ih: Dialog_t): bool	
wid	niup.html#wid,Dialog_t	niup: wid(ih: Dialog_t): string	
x	niup.html#x,Dialog_t	niup: x(ih: Dialog_t): string	
xfontid	niup.html#xfontid,Dialog_t	niup: xfontid(ih: Dialog_t): string	
xwindow	niup.html#xwindow,Dialog_t	niup: xwindow(ih: Dialog_t): string	
y	niup.html#y,Dialog_t	niup: y(ih: Dialog_t): string	
zorder=	niup.html#zorder=,Dialog_t,string	niup: zorder=(ih: Dialog_t; value: string)	
zorder	niup.html#zorder,Dialog_t,string	niup: zorder(ih: Dialog_t; value: string)	
gap=	niup.html#gap=,Dialog_t,string	niup: gap=(ih: Dialog_t; value: string)	
gap	niup.html#gap,Dialog_t,string	niup: gap(ih: Dialog_t; value: string)	
gap=	niup.html#gap=,Dialog_t,int	niup: gap=(ih: Dialog_t; value: int)	
gap	niup.html#gap,Dialog_t,int	niup: gap(ih: Dialog_t; value: int)	
margin=	niup.html#margin=,Dialog_t,string	niup: margin=(ih: Dialog_t; value: string)	
margin	niup.html#margin,Dialog_t,string	niup: margin(ih: Dialog_t; value: string)	
margin=	niup.html#margin=,Dialog_t,int,int	niup: margin=(ih: Dialog_t; horiz, vert: int)	
margin	niup.html#margin,Dialog_t,int,int	niup: margin(ih: Dialog_t; horiz, vert: int)	
shapeimage=	niup.html#shapeimage=,Dialog_t,	niup: shapeimage=(ih: Dialog_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
shapeimage	niup.html#shapeimage,Dialog_t,	niup: shapeimage(ih: Dialog_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
close_cb=	niup.html#close_cb=,Dialog_t,proc(PIhandle)	niup: close_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,Dialog_t,proc(PIhandle)	niup: close_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,Dialog_t	niup: close_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Dialog_t,proc(PIhandle)	niup: destroy_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Dialog_t,proc(PIhandle)	niup: destroy_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Dialog_t	niup: destroy_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Dialog_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Dialog_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Dialog_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Dialog_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Dialog_t	niup: dragbegin_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Dialog_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Dialog_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Dialog_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Dialog_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Dialog_t	niup: dragdatasize_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Dialog_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Dialog_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Dialog_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Dialog_t	niup: dragdata_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Dialog_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Dialog_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Dialog_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Dialog_t	niup: dragend_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Dialog_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Dialog_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Dialog_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Dialog_t	niup: dropdata_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Dialog_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Dialog_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                      num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Dialog_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Dialog_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                     num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Dialog_t	niup: dropfiles_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Dialog_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Dialog_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Dialog_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Dialog_t	niup: dropmotion_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Dialog_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Dialog_t,proc(PIhandle)	niup: enterwindow_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Dialog_t	niup: enterwindow_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,Dialog_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Dialog_t,proc(PIhandle,cint)	niup: focus_cb(ih: Dialog_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Dialog_t	niup: focus_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Dialog_t,proc(PIhandle)	niup: getfocus_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Dialog_t,proc(PIhandle)	niup: getfocus_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Dialog_t	niup: getfocus_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Dialog_t,proc(PIhandle)	niup: help_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Dialog_t,proc(PIhandle)	niup: help_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Dialog_t	niup: help_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Dialog_t,proc(PIhandle)	niup: killfocus_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Dialog_t,proc(PIhandle)	niup: killfocus_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Dialog_t	niup: killfocus_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Dialog_t,proc(PIhandle,cint)	niup: k_any=(ih: Dialog_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Dialog_t,proc(PIhandle,cint)	niup: k_any(ih: Dialog_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Dialog_t	niup: k_any(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Dialog_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Dialog_t,proc(PIhandle)	niup: ldestroy_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Dialog_t	niup: ldestroy_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Dialog_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Dialog_t,proc(PIhandle)	niup: leavewindow_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Dialog_t	niup: leavewindow_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Dialog_t,proc(PIhandle)	niup: map_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Dialog_t,proc(PIhandle)	niup: map_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Dialog_t	niup: map_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Dialog_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Dialog_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Dialog_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Dialog_t	niup: postmessage_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,Dialog_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: Dialog_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Dialog_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: Dialog_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Dialog_t	niup: resize_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
show_cb=	niup.html#show_cb=,Dialog_t,proc(PIhandle,cint)	niup: show_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,Dialog_t,proc(PIhandle,cint)	niup: show_cb(ih: Dialog_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,Dialog_t	niup: show_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
trayclick_cb=	niup.html#trayclick_cb=,Dialog_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb=(ih: Dialog_t; cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.\n    cdecl.})	
trayclick_cb	niup.html#trayclick_cb,Dialog_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb(ih: Dialog_t;\n             cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,Dialog_t	niup: trayclick_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Dialog_t,proc(PIhandle)	niup: unmap_cb=(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Dialog_t,proc(PIhandle)	niup: unmap_cb(ih: Dialog_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Dialog_t	niup: unmap_cb(ih: Dialog_t): proc (ih: PIhandle): cint {.cdecl.}	
DropButton	niup.html#DropButton,IUPhandle_t	niup: DropButton(dropchild: IUPhandle_t): DropButton_t	
active=	niup.html#active=,DropButton_t,string	niup: active=(ih: DropButton_t; value: string)	
active	niup.html#active,DropButton_t,string	niup: active(ih: DropButton_t; value: string)	
active=	niup.html#active=,DropButton_t,bool	niup: active=(ih: DropButton_t; yes: bool)	
active	niup.html#active,DropButton_t,bool	niup: active(ih: DropButton_t; yes: bool)	
active	niup.html#active,DropButton_t	niup: active(ih: DropButton_t): bool	
alignment=	niup.html#alignment=,DropButton_t,string	niup: alignment=(ih: DropButton_t; value: string)	
alignment	niup.html#alignment,DropButton_t,string	niup: alignment(ih: DropButton_t; value: string)	
alignment	niup.html#alignment,DropButton_t	niup: alignment(ih: DropButton_t): string	
arrowactive	niup.html#arrowactive,DropButton_t	niup: arrowactive(ih: DropButton_t): string	
arrowalign	niup.html#arrowalign,DropButton_t	niup: arrowalign(ih: DropButton_t): string	
arrowcolor	niup.html#arrowcolor,DropButton_t	niup: arrowcolor(ih: DropButton_t): string	
arrowimage=	niup.html#arrowimage=,DropButton_t,	niup: arrowimage=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimage	niup.html#arrowimage,DropButton_t,	niup: arrowimage(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimage	niup.html#arrowimage,DropButton_t	niup: arrowimage(ih: DropButton_t): string	
arrowimagehighlight=	niup.html#arrowimagehighlight=,DropButton_t,	niup: arrowimagehighlight=(ih: DropButton_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimagehighlight	niup.html#arrowimagehighlight,DropButton_t,	niup: arrowimagehighlight(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimagehighlight	niup.html#arrowimagehighlight,DropButton_t	niup: arrowimagehighlight(ih: DropButton_t): string	
arrowimageinactive=	niup.html#arrowimageinactive=,DropButton_t,	niup: arrowimageinactive=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimageinactive	niup.html#arrowimageinactive,DropButton_t,	niup: arrowimageinactive(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimageinactive	niup.html#arrowimageinactive,DropButton_t	niup: arrowimageinactive(ih: DropButton_t): string	
arrowimagepress=	niup.html#arrowimagepress=,DropButton_t,	niup: arrowimagepress=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimagepress	niup.html#arrowimagepress,DropButton_t,	niup: arrowimagepress(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
arrowimagepress	niup.html#arrowimagepress,DropButton_t	niup: arrowimagepress(ih: DropButton_t): string	
arrowimages=	niup.html#arrowimages=,DropButton_t,string	niup: arrowimages=(ih: DropButton_t; value: string)	
arrowimages	niup.html#arrowimages,DropButton_t,string	niup: arrowimages(ih: DropButton_t; value: string)	
arrowimages=	niup.html#arrowimages=,DropButton_t,int	niup: arrowimages=(ih: DropButton_t; x: int)	
arrowimages	niup.html#arrowimages,DropButton_t,int	niup: arrowimages(ih: DropButton_t; x: int)	
arrowimages	niup.html#arrowimages,DropButton_t	niup: arrowimages(ih: DropButton_t): string	
arrowpadding	niup.html#arrowpadding,DropButton_t	niup: arrowpadding(ih: DropButton_t): string	
arrowsize	niup.html#arrowsize,DropButton_t	niup: arrowsize(ih: DropButton_t): string	
backimage=	niup.html#backimage=,DropButton_t,	niup: backimage=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,DropButton_t,	niup: backimage(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,DropButton_t	niup: backimage(ih: DropButton_t): string	
backimagehighlight=	niup.html#backimagehighlight=,DropButton_t,	niup: backimagehighlight=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagehighlight	niup.html#backimagehighlight,DropButton_t,	niup: backimagehighlight(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagehighlight	niup.html#backimagehighlight,DropButton_t	niup: backimagehighlight(ih: DropButton_t): string	
backimageinactive=	niup.html#backimageinactive=,DropButton_t,	niup: backimageinactive=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimageinactive	niup.html#backimageinactive,DropButton_t,	niup: backimageinactive(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimageinactive	niup.html#backimageinactive,DropButton_t	niup: backimageinactive(ih: DropButton_t): string	
backimagepress=	niup.html#backimagepress=,DropButton_t,	niup: backimagepress=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagepress	niup.html#backimagepress,DropButton_t,	niup: backimagepress(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagepress	niup.html#backimagepress,DropButton_t	niup: backimagepress(ih: DropButton_t): string	
backimagezoom=	niup.html#backimagezoom=,DropButton_t,string	niup: backimagezoom=(ih: DropButton_t; value: string)	
backimagezoom	niup.html#backimagezoom,DropButton_t,string	niup: backimagezoom(ih: DropButton_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,DropButton_t,bool	niup: backimagezoom=(ih: DropButton_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,DropButton_t,bool	niup: backimagezoom(ih: DropButton_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,DropButton_t	niup: backimagezoom(ih: DropButton_t): bool	
backingstore=	niup.html#backingstore=,DropButton_t,string	niup: backingstore=(ih: DropButton_t; value: string)	
backingstore	niup.html#backingstore,DropButton_t,string	niup: backingstore(ih: DropButton_t; value: string)	
backingstore=	niup.html#backingstore=,DropButton_t,bool	niup: backingstore=(ih: DropButton_t; yes: bool)	
backingstore	niup.html#backingstore,DropButton_t,bool	niup: backingstore(ih: DropButton_t; yes: bool)	
backingstore	niup.html#backingstore,DropButton_t	niup: backingstore(ih: DropButton_t): bool	
bgcolor=	niup.html#bgcolor=,DropButton_t,string	niup: bgcolor=(ih: DropButton_t; value: string)	
bgcolor	niup.html#bgcolor,DropButton_t,string	niup: bgcolor(ih: DropButton_t; value: string)	
bgcolor=	niup.html#bgcolor=,DropButton_t,int,int,int,int	niup: bgcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,DropButton_t,int,int,int,int	niup: bgcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,DropButton_t	niup: bgcolor(ih: DropButton_t): string	
border=	niup.html#border=,DropButton_t,string	niup: border=(ih: DropButton_t; value: string)	
border	niup.html#border,DropButton_t,string	niup: border(ih: DropButton_t; value: string)	
border=	niup.html#border=,DropButton_t,bool	niup: border=(ih: DropButton_t; yes: bool)	
border	niup.html#border,DropButton_t,bool	niup: border(ih: DropButton_t; yes: bool)	
border	niup.html#border,DropButton_t	niup: border(ih: DropButton_t): bool	
bordercolor=	niup.html#bordercolor=,DropButton_t,string	niup: bordercolor=(ih: DropButton_t; value: string)	
bordercolor	niup.html#bordercolor,DropButton_t,string	niup: bordercolor(ih: DropButton_t; value: string)	
bordercolor=	niup.html#bordercolor=,DropButton_t,int,int,int,int	niup: bordercolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,DropButton_t,int,int,int,int	niup: bordercolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,DropButton_t	niup: bordercolor(ih: DropButton_t): string	
borderhlcolor=	niup.html#borderhlcolor=,DropButton_t,string	niup: borderhlcolor=(ih: DropButton_t; value: string)	
borderhlcolor	niup.html#borderhlcolor,DropButton_t,string	niup: borderhlcolor(ih: DropButton_t; value: string)	
borderhlcolor=	niup.html#borderhlcolor=,DropButton_t,int,int,int,int	niup: borderhlcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,DropButton_t,int,int,int,int	niup: borderhlcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,DropButton_t	niup: borderhlcolor(ih: DropButton_t): string	
borderpscolor=	niup.html#borderpscolor=,DropButton_t,string	niup: borderpscolor=(ih: DropButton_t; value: string)	
borderpscolor	niup.html#borderpscolor,DropButton_t,string	niup: borderpscolor(ih: DropButton_t; value: string)	
borderpscolor=	niup.html#borderpscolor=,DropButton_t,int,int,int,int	niup: borderpscolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,DropButton_t,int,int,int,int	niup: borderpscolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,DropButton_t	niup: borderpscolor(ih: DropButton_t): string	
borderwidth=	niup.html#borderwidth=,DropButton_t,string	niup: borderwidth=(ih: DropButton_t; value: string)	
borderwidth	niup.html#borderwidth,DropButton_t,string	niup: borderwidth(ih: DropButton_t; value: string)	
borderwidth=	niup.html#borderwidth=,DropButton_t,int	niup: borderwidth=(ih: DropButton_t; x: int)	
borderwidth	niup.html#borderwidth,DropButton_t,int	niup: borderwidth(ih: DropButton_t; x: int)	
borderwidth	niup.html#borderwidth,DropButton_t	niup: borderwidth(ih: DropButton_t): string	
canfocus=	niup.html#canfocus=,DropButton_t,string	niup: canfocus=(ih: DropButton_t; value: string)	
canfocus	niup.html#canfocus,DropButton_t,string	niup: canfocus(ih: DropButton_t; value: string)	
canfocus=	niup.html#canfocus=,DropButton_t,bool	niup: canfocus=(ih: DropButton_t; yes: bool)	
canfocus	niup.html#canfocus,DropButton_t,bool	niup: canfocus(ih: DropButton_t; yes: bool)	
canfocus	niup.html#canfocus,DropButton_t	niup: canfocus(ih: DropButton_t): bool	
charsize	niup.html#charsize,DropButton_t	niup: charsize(ih: DropButton_t): string	
cpadding=	niup.html#cpadding=,DropButton_t,string	niup: cpadding=(ih: DropButton_t; value: string)	
cpadding	niup.html#cpadding,DropButton_t,string	niup: cpadding(ih: DropButton_t; value: string)	
cpadding=	niup.html#cpadding=,DropButton_t,int,int	niup: cpadding=(ih: DropButton_t; width, height: int)	
cpadding	niup.html#cpadding,DropButton_t,int,int	niup: cpadding(ih: DropButton_t; width, height: int)	
cpadding	niup.html#cpadding,DropButton_t	niup: cpadding(ih: DropButton_t): string	
cspacing=	niup.html#cspacing=,DropButton_t,string	niup: cspacing=(ih: DropButton_t; value: string)	
cspacing	niup.html#cspacing,DropButton_t,string	niup: cspacing(ih: DropButton_t; value: string)	
cspacing=	niup.html#cspacing=,DropButton_t,int	niup: cspacing=(ih: DropButton_t; x: int)	
cspacing	niup.html#cspacing,DropButton_t,int	niup: cspacing(ih: DropButton_t; x: int)	
cspacing	niup.html#cspacing,DropButton_t	niup: cspacing(ih: DropButton_t): string	
cursor=	niup.html#cursor=,DropButton_t,	niup: cursor=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,DropButton_t,	niup: cursor(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,DropButton_t	niup: cursor(ih: DropButton_t): string	
dragdrop=	niup.html#dragdrop=,DropButton_t,string	niup: dragdrop=(ih: DropButton_t; value: string)	
dragdrop	niup.html#dragdrop,DropButton_t,string	niup: dragdrop(ih: DropButton_t; value: string)	
dragdrop=	niup.html#dragdrop=,DropButton_t,bool	niup: dragdrop=(ih: DropButton_t; yes: bool)	
dragdrop	niup.html#dragdrop,DropButton_t,bool	niup: dragdrop(ih: DropButton_t; yes: bool)	
dragdrop	niup.html#dragdrop,DropButton_t	niup: dragdrop(ih: DropButton_t): bool	
dragsource=	niup.html#dragsource=,DropButton_t,string	niup: dragsource=(ih: DropButton_t; value: string)	
dragsource	niup.html#dragsource,DropButton_t,string	niup: dragsource(ih: DropButton_t; value: string)	
dragsource=	niup.html#dragsource=,DropButton_t,bool	niup: dragsource=(ih: DropButton_t; yes: bool)	
dragsource	niup.html#dragsource,DropButton_t,bool	niup: dragsource(ih: DropButton_t; yes: bool)	
dragsource	niup.html#dragsource,DropButton_t	niup: dragsource(ih: DropButton_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,DropButton_t,string	niup: dragsourcemove=(ih: DropButton_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,DropButton_t,string	niup: dragsourcemove(ih: DropButton_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,DropButton_t,bool	niup: dragsourcemove=(ih: DropButton_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,DropButton_t,bool	niup: dragsourcemove(ih: DropButton_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,DropButton_t	niup: dragsourcemove(ih: DropButton_t): bool	
dragtypes=	niup.html#dragtypes=,DropButton_t,string	niup: dragtypes=(ih: DropButton_t; value: string)	
dragtypes	niup.html#dragtypes,DropButton_t,string	niup: dragtypes(ih: DropButton_t; value: string)	
dragtypes	niup.html#dragtypes,DropButton_t	niup: dragtypes(ih: DropButton_t): string	
drawable	niup.html#drawable,DropButton_t	niup: drawable(ih: DropButton_t): string	
drawbgcolor=	niup.html#drawbgcolor=,DropButton_t,string	niup: drawbgcolor=(ih: DropButton_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,DropButton_t,string	niup: drawbgcolor(ih: DropButton_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,DropButton_t,int,int,int,int	niup: drawbgcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,DropButton_t,int,int,int,int	niup: drawbgcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,DropButton_t	niup: drawbgcolor(ih: DropButton_t): string	
drawcolor=	niup.html#drawcolor=,DropButton_t,string	niup: drawcolor=(ih: DropButton_t; value: string)	
drawcolor	niup.html#drawcolor,DropButton_t,string	niup: drawcolor(ih: DropButton_t; value: string)	
drawcolor=	niup.html#drawcolor=,DropButton_t,int,int,int,int	niup: drawcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,DropButton_t,int,int,int,int	niup: drawcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,DropButton_t	niup: drawcolor(ih: DropButton_t): string	
drawdriver	niup.html#drawdriver,DropButton_t	niup: drawdriver(ih: DropButton_t): string	
drawfont=	niup.html#drawfont=,DropButton_t,string	niup: drawfont=(ih: DropButton_t; value: string)	
drawfont	niup.html#drawfont,DropButton_t,string	niup: drawfont(ih: DropButton_t; value: string)	
drawfont	niup.html#drawfont,DropButton_t	niup: drawfont(ih: DropButton_t): string	
drawlinewidth=	niup.html#drawlinewidth=,DropButton_t,string	niup: drawlinewidth=(ih: DropButton_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,DropButton_t,string	niup: drawlinewidth(ih: DropButton_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,DropButton_t,int	niup: drawlinewidth=(ih: DropButton_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,DropButton_t,int	niup: drawlinewidth(ih: DropButton_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,DropButton_t	niup: drawlinewidth(ih: DropButton_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,DropButton_t,string	niup: drawmakeinactive=(ih: DropButton_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,DropButton_t,string	niup: drawmakeinactive(ih: DropButton_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,DropButton_t,bool	niup: drawmakeinactive=(ih: DropButton_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,DropButton_t,bool	niup: drawmakeinactive(ih: DropButton_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,DropButton_t	niup: drawmakeinactive(ih: DropButton_t): bool	
drawsize	niup.html#drawsize,DropButton_t	niup: drawsize(ih: DropButton_t): string	
drawstyle=	niup.html#drawstyle=,DropButton_t,string	niup: drawstyle=(ih: DropButton_t; value: string)	
drawstyle	niup.html#drawstyle,DropButton_t,string	niup: drawstyle(ih: DropButton_t; value: string)	
drawstyle	niup.html#drawstyle,DropButton_t	niup: drawstyle(ih: DropButton_t): string	
drawtextalignment=	niup.html#drawtextalignment=,DropButton_t,string	niup: drawtextalignment=(ih: DropButton_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,DropButton_t,string	niup: drawtextalignment(ih: DropButton_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,DropButton_t	niup: drawtextalignment(ih: DropButton_t): string	
drawtextclip=	niup.html#drawtextclip=,DropButton_t,string	niup: drawtextclip=(ih: DropButton_t; value: string)	
drawtextclip	niup.html#drawtextclip,DropButton_t,string	niup: drawtextclip(ih: DropButton_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,DropButton_t,bool	niup: drawtextclip=(ih: DropButton_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,DropButton_t,bool	niup: drawtextclip(ih: DropButton_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,DropButton_t	niup: drawtextclip(ih: DropButton_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,DropButton_t,string	niup: drawtextellipsis=(ih: DropButton_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,DropButton_t,string	niup: drawtextellipsis(ih: DropButton_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,DropButton_t,bool	niup: drawtextellipsis=(ih: DropButton_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,DropButton_t,bool	niup: drawtextellipsis(ih: DropButton_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,DropButton_t	niup: drawtextellipsis(ih: DropButton_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,DropButton_t,string	niup: drawtextlayoutcenter=(ih: DropButton_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,DropButton_t,string	niup: drawtextlayoutcenter(ih: DropButton_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,DropButton_t,bool	niup: drawtextlayoutcenter=(ih: DropButton_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,DropButton_t,bool	niup: drawtextlayoutcenter(ih: DropButton_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,DropButton_t	niup: drawtextlayoutcenter(ih: DropButton_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,DropButton_t,string	niup: drawtextorientation=(ih: DropButton_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,DropButton_t,string	niup: drawtextorientation(ih: DropButton_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,DropButton_t,int64	niup: drawtextorientation=(ih: DropButton_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,DropButton_t,int64	niup: drawtextorientation(ih: DropButton_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,DropButton_t	niup: drawtextorientation(ih: DropButton_t): string	
drawtextwrap=	niup.html#drawtextwrap=,DropButton_t,string	niup: drawtextwrap=(ih: DropButton_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,DropButton_t,string	niup: drawtextwrap(ih: DropButton_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,DropButton_t,bool	niup: drawtextwrap=(ih: DropButton_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,DropButton_t,bool	niup: drawtextwrap(ih: DropButton_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,DropButton_t	niup: drawtextwrap(ih: DropButton_t): bool	
dropchild	niup.html#dropchild,DropButton_t	niup: dropchild(ih: DropButton_t): string	
dropchild_handle=	niup.html#dropchild_handle=,DropButton_t,User_t	niup: dropchild_handle=(ih: DropButton_t; handle: User_t)	
dropchild_handle	niup.html#dropchild_handle,DropButton_t,User_t	niup: dropchild_handle(ih: DropButton_t; handle: User_t)	
dropchild_handle	niup.html#dropchild_handle,DropButton_t	niup: dropchild_handle(ih: DropButton_t): string	
dropfilestarget=	niup.html#dropfilestarget=,DropButton_t,string	niup: dropfilestarget=(ih: DropButton_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,DropButton_t,string	niup: dropfilestarget(ih: DropButton_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,DropButton_t,bool	niup: dropfilestarget=(ih: DropButton_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,DropButton_t,bool	niup: dropfilestarget(ih: DropButton_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,DropButton_t	niup: dropfilestarget(ih: DropButton_t): bool	
droponarrow	niup.html#droponarrow,DropButton_t	niup: droponarrow(ih: DropButton_t): string	
dropposition	niup.html#dropposition,DropButton_t	niup: dropposition(ih: DropButton_t): string	
droptarget=	niup.html#droptarget=,DropButton_t,string	niup: droptarget=(ih: DropButton_t; value: string)	
droptarget	niup.html#droptarget,DropButton_t,string	niup: droptarget(ih: DropButton_t; value: string)	
droptarget=	niup.html#droptarget=,DropButton_t,bool	niup: droptarget=(ih: DropButton_t; yes: bool)	
droptarget	niup.html#droptarget,DropButton_t,bool	niup: droptarget(ih: DropButton_t; yes: bool)	
droptarget	niup.html#droptarget,DropButton_t	niup: droptarget(ih: DropButton_t): bool	
droptypes=	niup.html#droptypes=,DropButton_t,string	niup: droptypes=(ih: DropButton_t; value: string)	
droptypes	niup.html#droptypes,DropButton_t,string	niup: droptypes(ih: DropButton_t; value: string)	
droptypes	niup.html#droptypes,DropButton_t	niup: droptypes(ih: DropButton_t): string	
dx=	niup.html#dx=,DropButton_t,string	niup: dx=(ih: DropButton_t; value: string)	
dx	niup.html#dx,DropButton_t,string	niup: dx(ih: DropButton_t; value: string)	
dx=	niup.html#dx=,DropButton_t,int64	niup: dx=(ih: DropButton_t; x: int64)	
dx	niup.html#dx,DropButton_t,int64	niup: dx(ih: DropButton_t; x: int64)	
dx	niup.html#dx,DropButton_t	niup: dx(ih: DropButton_t): string	
dy=	niup.html#dy=,DropButton_t,string	niup: dy=(ih: DropButton_t; value: string)	
dy	niup.html#dy,DropButton_t,string	niup: dy(ih: DropButton_t; value: string)	
dy=	niup.html#dy=,DropButton_t,int64	niup: dy=(ih: DropButton_t; x: int64)	
dy	niup.html#dy,DropButton_t,int64	niup: dy(ih: DropButton_t; x: int64)	
dy	niup.html#dy,DropButton_t	niup: dy(ih: DropButton_t): string	
expand=	niup.html#expand=,DropButton_t,string	niup: expand=(ih: DropButton_t; value: string)	
expand	niup.html#expand,DropButton_t,string	niup: expand(ih: DropButton_t; value: string)	
expand	niup.html#expand,DropButton_t	niup: expand(ih: DropButton_t): string	
expandweight=	niup.html#expandweight=,DropButton_t,string	niup: expandweight=(ih: DropButton_t; value: string)	
expandweight	niup.html#expandweight,DropButton_t,string	niup: expandweight(ih: DropButton_t; value: string)	
expandweight=	niup.html#expandweight=,DropButton_t,int64	niup: expandweight=(ih: DropButton_t; x: int64)	
expandweight	niup.html#expandweight,DropButton_t,int64	niup: expandweight(ih: DropButton_t; x: int64)	
expandweight	niup.html#expandweight,DropButton_t	niup: expandweight(ih: DropButton_t): string	
fgcolor=	niup.html#fgcolor=,DropButton_t,string	niup: fgcolor=(ih: DropButton_t; value: string)	
fgcolor	niup.html#fgcolor,DropButton_t,string	niup: fgcolor(ih: DropButton_t; value: string)	
fgcolor=	niup.html#fgcolor=,DropButton_t,int,int,int,int	niup: fgcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,DropButton_t,int,int,int,int	niup: fgcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,DropButton_t	niup: fgcolor(ih: DropButton_t): string	
first_control_handle	niup.html#first_control_handle,DropButton_t	niup: first_control_handle(ih: DropButton_t): string	
fittobackimage=	niup.html#fittobackimage=,DropButton_t,string	niup: fittobackimage=(ih: DropButton_t; value: string)	
fittobackimage	niup.html#fittobackimage,DropButton_t,string	niup: fittobackimage(ih: DropButton_t; value: string)	
fittobackimage=	niup.html#fittobackimage=,DropButton_t,bool	niup: fittobackimage=(ih: DropButton_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,DropButton_t,bool	niup: fittobackimage(ih: DropButton_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,DropButton_t	niup: fittobackimage(ih: DropButton_t): bool	
floating=	niup.html#floating=,DropButton_t,string	niup: floating=(ih: DropButton_t; value: string)	
floating	niup.html#floating,DropButton_t,string	niup: floating(ih: DropButton_t; value: string)	
floating	niup.html#floating,DropButton_t	niup: floating(ih: DropButton_t): string	
focusfeedback=	niup.html#focusfeedback=,DropButton_t,string	niup: focusfeedback=(ih: DropButton_t; value: string)	
focusfeedback	niup.html#focusfeedback,DropButton_t,string	niup: focusfeedback(ih: DropButton_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,DropButton_t,bool	niup: focusfeedback=(ih: DropButton_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,DropButton_t,bool	niup: focusfeedback(ih: DropButton_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,DropButton_t	niup: focusfeedback(ih: DropButton_t): bool	
font=	niup.html#font=,DropButton_t,string	niup: font=(ih: DropButton_t; value: string)	
font	niup.html#font,DropButton_t,string	niup: font(ih: DropButton_t; value: string)	
font	niup.html#font,DropButton_t	niup: font(ih: DropButton_t): string	
fontface=	niup.html#fontface=,DropButton_t,string	niup: fontface=(ih: DropButton_t; value: string)	
fontface	niup.html#fontface,DropButton_t,string	niup: fontface(ih: DropButton_t; value: string)	
fontface	niup.html#fontface,DropButton_t	niup: fontface(ih: DropButton_t): string	
fontsize=	niup.html#fontsize=,DropButton_t,string	niup: fontsize=(ih: DropButton_t; value: string)	
fontsize	niup.html#fontsize,DropButton_t,string	niup: fontsize(ih: DropButton_t; value: string)	
fontsize=	niup.html#fontsize=,DropButton_t,int	niup: fontsize=(ih: DropButton_t; x: int)	
fontsize	niup.html#fontsize,DropButton_t,int	niup: fontsize(ih: DropButton_t; x: int)	
fontsize	niup.html#fontsize,DropButton_t	niup: fontsize(ih: DropButton_t): string	
fontstyle=	niup.html#fontstyle=,DropButton_t,string	niup: fontstyle=(ih: DropButton_t; value: string)	
fontstyle	niup.html#fontstyle,DropButton_t,string	niup: fontstyle(ih: DropButton_t; value: string)	
fontstyle	niup.html#fontstyle,DropButton_t	niup: fontstyle(ih: DropButton_t): string	
frontimage=	niup.html#frontimage=,DropButton_t,	niup: frontimage=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,DropButton_t,	niup: frontimage(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,DropButton_t	niup: frontimage(ih: DropButton_t): string	
frontimagehighlight=	niup.html#frontimagehighlight=,DropButton_t,	niup: frontimagehighlight=(ih: DropButton_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagehighlight	niup.html#frontimagehighlight,DropButton_t,	niup: frontimagehighlight(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagehighlight	niup.html#frontimagehighlight,DropButton_t	niup: frontimagehighlight(ih: DropButton_t): string	
frontimageinactive=	niup.html#frontimageinactive=,DropButton_t,	niup: frontimageinactive=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,DropButton_t,	niup: frontimageinactive(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,DropButton_t	niup: frontimageinactive(ih: DropButton_t): string	
frontimagepress=	niup.html#frontimagepress=,DropButton_t,	niup: frontimagepress=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagepress	niup.html#frontimagepress,DropButton_t,	niup: frontimagepress(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagepress	niup.html#frontimagepress,DropButton_t	niup: frontimagepress(ih: DropButton_t): string	
handlename=	niup.html#handlename=,DropButton_t,string	niup: handlename=(ih: DropButton_t; value: string)	
handlename	niup.html#handlename,DropButton_t,string	niup: handlename(ih: DropButton_t; value: string)	
handlename	niup.html#handlename,DropButton_t	niup: handlename(ih: DropButton_t): string	
hasfocus	niup.html#hasfocus,DropButton_t	niup: hasfocus(ih: DropButton_t): bool	
highlighted	niup.html#highlighted,DropButton_t	niup: highlighted(ih: DropButton_t): bool	
hlcolor=	niup.html#hlcolor=,DropButton_t,string	niup: hlcolor=(ih: DropButton_t; value: string)	
hlcolor	niup.html#hlcolor,DropButton_t,string	niup: hlcolor(ih: DropButton_t; value: string)	
hlcolor=	niup.html#hlcolor=,DropButton_t,int,int,int,int	niup: hlcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,DropButton_t,int,int,int,int	niup: hlcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,DropButton_t	niup: hlcolor(ih: DropButton_t): string	
image=	niup.html#image=,DropButton_t,	niup: image=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,DropButton_t,	niup: image(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,DropButton_t	niup: image(ih: DropButton_t): string	
imagehighlight=	niup.html#imagehighlight=,DropButton_t,	niup: imagehighlight=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,DropButton_t,	niup: imagehighlight(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,DropButton_t	niup: imagehighlight(ih: DropButton_t): string	
imageinactive=	niup.html#imageinactive=,DropButton_t,	niup: imageinactive=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,DropButton_t,	niup: imageinactive(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,DropButton_t	niup: imageinactive(ih: DropButton_t): string	
imageposition=	niup.html#imageposition=,DropButton_t,string	niup: imageposition=(ih: DropButton_t; value: string)	
imageposition	niup.html#imageposition,DropButton_t,string	niup: imageposition(ih: DropButton_t; value: string)	
imageposition	niup.html#imageposition,DropButton_t	niup: imageposition(ih: DropButton_t): string	
imagepress=	niup.html#imagepress=,DropButton_t,	niup: imagepress=(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,DropButton_t,	niup: imagepress(ih: DropButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,DropButton_t	niup: imagepress(ih: DropButton_t): string	
linex=	niup.html#linex=,DropButton_t,string	niup: linex=(ih: DropButton_t; value: string)	
linex	niup.html#linex,DropButton_t,string	niup: linex(ih: DropButton_t; value: string)	
linex=	niup.html#linex=,DropButton_t,int64	niup: linex=(ih: DropButton_t; x: int64)	
linex	niup.html#linex,DropButton_t,int64	niup: linex(ih: DropButton_t; x: int64)	
linex	niup.html#linex,DropButton_t	niup: linex(ih: DropButton_t): string	
liney=	niup.html#liney=,DropButton_t,string	niup: liney=(ih: DropButton_t; value: string)	
liney	niup.html#liney,DropButton_t,string	niup: liney(ih: DropButton_t; value: string)	
liney=	niup.html#liney=,DropButton_t,int64	niup: liney=(ih: DropButton_t; x: int64)	
liney	niup.html#liney,DropButton_t,int64	niup: liney(ih: DropButton_t; x: int64)	
liney	niup.html#liney,DropButton_t	niup: liney(ih: DropButton_t): string	
maxsize=	niup.html#maxsize=,DropButton_t,string	niup: maxsize=(ih: DropButton_t; value: string)	
maxsize	niup.html#maxsize,DropButton_t,string	niup: maxsize(ih: DropButton_t; value: string)	
maxsize=	niup.html#maxsize=,DropButton_t,int,int	niup: maxsize=(ih: DropButton_t; width, height: int)	
maxsize	niup.html#maxsize,DropButton_t,int,int	niup: maxsize(ih: DropButton_t; width, height: int)	
maxsize	niup.html#maxsize,DropButton_t	niup: maxsize(ih: DropButton_t): string	
minsize=	niup.html#minsize=,DropButton_t,string	niup: minsize=(ih: DropButton_t; value: string)	
minsize	niup.html#minsize,DropButton_t,string	niup: minsize(ih: DropButton_t; value: string)	
minsize=	niup.html#minsize=,DropButton_t,int,int	niup: minsize=(ih: DropButton_t; width, height: int)	
minsize	niup.html#minsize,DropButton_t,int,int	niup: minsize(ih: DropButton_t; width, height: int)	
minsize	niup.html#minsize,DropButton_t	niup: minsize(ih: DropButton_t): string	
name=	niup.html#name=,DropButton_t,string	niup: name=(ih: DropButton_t; value: string)	
name	niup.html#name,DropButton_t,string	niup: name(ih: DropButton_t; value: string)	
name	niup.html#name,DropButton_t	niup: name(ih: DropButton_t): string	
naturalsize	niup.html#naturalsize,DropButton_t	niup: naturalsize(ih: DropButton_t): string	
next_control_handle	niup.html#next_control_handle,DropButton_t	niup: next_control_handle(ih: DropButton_t): string	
normalizergroup=	niup.html#normalizergroup=,DropButton_t,string	niup: normalizergroup=(ih: DropButton_t; value: string)	
normalizergroup	niup.html#normalizergroup,DropButton_t,string	niup: normalizergroup(ih: DropButton_t; value: string)	
normalizergroup	niup.html#normalizergroup,DropButton_t	niup: normalizergroup(ih: DropButton_t): string	
ntheme=	niup.html#ntheme=,DropButton_t,string	niup: ntheme=(ih: DropButton_t; value: string)	
ntheme	niup.html#ntheme,DropButton_t,string	niup: ntheme(ih: DropButton_t; value: string)	
ntheme	niup.html#ntheme,DropButton_t	niup: ntheme(ih: DropButton_t): string	
padding=	niup.html#padding=,DropButton_t,string	niup: padding=(ih: DropButton_t; value: string)	
padding	niup.html#padding,DropButton_t,string	niup: padding(ih: DropButton_t; value: string)	
padding=	niup.html#padding=,DropButton_t,int,int	niup: padding=(ih: DropButton_t; width, height: int)	
padding	niup.html#padding,DropButton_t,int,int	niup: padding(ih: DropButton_t; width, height: int)	
padding	niup.html#padding,DropButton_t	niup: padding(ih: DropButton_t): string	
pangofontdesc	niup.html#pangofontdesc,DropButton_t	niup: pangofontdesc(ih: DropButton_t): string	
pangolayout	niup.html#pangolayout,DropButton_t	niup: pangolayout(ih: DropButton_t): string	
position=	niup.html#position=,DropButton_t,string	niup: position=(ih: DropButton_t; value: string)	
position	niup.html#position,DropButton_t,string	niup: position(ih: DropButton_t; value: string)	
position=	niup.html#position=,DropButton_t,int,int	niup: position=(ih: DropButton_t; x, y: int)	
position	niup.html#position,DropButton_t,int,int	niup: position(ih: DropButton_t; x, y: int)	
position	niup.html#position,DropButton_t	niup: position(ih: DropButton_t): string	
posx=	niup.html#posx=,DropButton_t,string	niup: posx=(ih: DropButton_t; value: string)	
posx	niup.html#posx,DropButton_t,string	niup: posx(ih: DropButton_t; value: string)	
posx=	niup.html#posx=,DropButton_t,int64	niup: posx=(ih: DropButton_t; x: int64)	
posx	niup.html#posx,DropButton_t,int64	niup: posx(ih: DropButton_t; x: int64)	
posx	niup.html#posx,DropButton_t	niup: posx(ih: DropButton_t): string	
posy=	niup.html#posy=,DropButton_t,string	niup: posy=(ih: DropButton_t; value: string)	
posy	niup.html#posy,DropButton_t,string	niup: posy(ih: DropButton_t; value: string)	
posy=	niup.html#posy=,DropButton_t,int64	niup: posy=(ih: DropButton_t; x: int64)	
posy	niup.html#posy,DropButton_t,int64	niup: posy(ih: DropButton_t; x: int64)	
posy	niup.html#posy,DropButton_t	niup: posy(ih: DropButton_t): string	
pressed	niup.html#pressed,DropButton_t	niup: pressed(ih: DropButton_t): bool	
propagatefocus=	niup.html#propagatefocus=,DropButton_t,string	niup: propagatefocus=(ih: DropButton_t; value: string)	
propagatefocus	niup.html#propagatefocus,DropButton_t,string	niup: propagatefocus(ih: DropButton_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,DropButton_t,bool	niup: propagatefocus=(ih: DropButton_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,DropButton_t,bool	niup: propagatefocus(ih: DropButton_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,DropButton_t	niup: propagatefocus(ih: DropButton_t): bool	
pscolor=	niup.html#pscolor=,DropButton_t,string	niup: pscolor=(ih: DropButton_t; value: string)	
pscolor	niup.html#pscolor,DropButton_t,string	niup: pscolor(ih: DropButton_t; value: string)	
pscolor=	niup.html#pscolor=,DropButton_t,int,int,int,int	niup: pscolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,DropButton_t,int,int,int,int	niup: pscolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,DropButton_t	niup: pscolor(ih: DropButton_t): string	
rastersize=	niup.html#rastersize=,DropButton_t,string	niup: rastersize=(ih: DropButton_t; value: string)	
rastersize	niup.html#rastersize,DropButton_t,string	niup: rastersize(ih: DropButton_t; value: string)	
rastersize=	niup.html#rastersize=,DropButton_t,int,int	niup: rastersize=(ih: DropButton_t; width, height: int)	
rastersize	niup.html#rastersize,DropButton_t,int,int	niup: rastersize(ih: DropButton_t; width, height: int)	
rastersize	niup.html#rastersize,DropButton_t	niup: rastersize(ih: DropButton_t): string	
sb_resize	niup.html#sb_resize,DropButton_t	niup: sb_resize(ih: DropButton_t): string	
screenposition	niup.html#screenposition,DropButton_t	niup: screenposition(ih: DropButton_t): string	
scrollbar=	niup.html#scrollbar=,DropButton_t,string	niup: scrollbar=(ih: DropButton_t; value: string)	
scrollbar	niup.html#scrollbar,DropButton_t,string	niup: scrollbar(ih: DropButton_t; value: string)	
scrollbar=	niup.html#scrollbar=,DropButton_t,bool	niup: scrollbar=(ih: DropButton_t; yes: bool)	
scrollbar	niup.html#scrollbar,DropButton_t,bool	niup: scrollbar(ih: DropButton_t; yes: bool)	
scrollbar	niup.html#scrollbar,DropButton_t	niup: scrollbar(ih: DropButton_t): bool	
showborder=	niup.html#showborder=,DropButton_t,string	niup: showborder=(ih: DropButton_t; value: string)	
showborder	niup.html#showborder,DropButton_t,string	niup: showborder(ih: DropButton_t; value: string)	
showborder=	niup.html#showborder=,DropButton_t,bool	niup: showborder=(ih: DropButton_t; yes: bool)	
showborder	niup.html#showborder,DropButton_t,bool	niup: showborder(ih: DropButton_t; yes: bool)	
showborder	niup.html#showborder,DropButton_t	niup: showborder(ih: DropButton_t): bool	
showdropdown=	niup.html#showdropdown=,DropButton_t,string	niup: showdropdown=(ih: DropButton_t; value: string)	
showdropdown	niup.html#showdropdown,DropButton_t,string	niup: showdropdown(ih: DropButton_t; value: string)	
showdropdown=	niup.html#showdropdown=,DropButton_t,bool	niup: showdropdown=(ih: DropButton_t; yes: bool)	
showdropdown	niup.html#showdropdown,DropButton_t,bool	niup: showdropdown(ih: DropButton_t; yes: bool)	
size=	niup.html#size=,DropButton_t,string	niup: size=(ih: DropButton_t; value: string)	
size	niup.html#size,DropButton_t,string	niup: size(ih: DropButton_t; value: string)	
size=	niup.html#size=,DropButton_t,int,int	niup: size=(ih: DropButton_t; width, height: int)	
size	niup.html#size,DropButton_t,int,int	niup: size(ih: DropButton_t; width, height: int)	
size	niup.html#size,DropButton_t	niup: size(ih: DropButton_t): string	
spacing=	niup.html#spacing=,DropButton_t,string	niup: spacing=(ih: DropButton_t; value: string)	
spacing	niup.html#spacing,DropButton_t,string	niup: spacing(ih: DropButton_t; value: string)	
spacing=	niup.html#spacing=,DropButton_t,int	niup: spacing=(ih: DropButton_t; x: int)	
spacing	niup.html#spacing,DropButton_t,int	niup: spacing(ih: DropButton_t; x: int)	
spacing	niup.html#spacing,DropButton_t	niup: spacing(ih: DropButton_t): string	
textalignment=	niup.html#textalignment=,DropButton_t,string	niup: textalignment=(ih: DropButton_t; value: string)	
textalignment	niup.html#textalignment,DropButton_t,string	niup: textalignment(ih: DropButton_t; value: string)	
textalignment	niup.html#textalignment,DropButton_t	niup: textalignment(ih: DropButton_t): string	
textclip	niup.html#textclip,DropButton_t	niup: textclip(ih: DropButton_t): string	
textellipsis=	niup.html#textellipsis=,DropButton_t,string	niup: textellipsis=(ih: DropButton_t; value: string)	
textellipsis	niup.html#textellipsis,DropButton_t,string	niup: textellipsis(ih: DropButton_t; value: string)	
textellipsis=	niup.html#textellipsis=,DropButton_t,bool	niup: textellipsis=(ih: DropButton_t; yes: bool)	
textellipsis	niup.html#textellipsis,DropButton_t,bool	niup: textellipsis(ih: DropButton_t; yes: bool)	
textellipsis	niup.html#textellipsis,DropButton_t	niup: textellipsis(ih: DropButton_t): bool	
texthlcolor=	niup.html#texthlcolor=,DropButton_t,string	niup: texthlcolor=(ih: DropButton_t; value: string)	
texthlcolor	niup.html#texthlcolor,DropButton_t,string	niup: texthlcolor(ih: DropButton_t; value: string)	
texthlcolor=	niup.html#texthlcolor=,DropButton_t,int,int,int,int	niup: texthlcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
texthlcolor	niup.html#texthlcolor,DropButton_t,int,int,int,int	niup: texthlcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
texthlcolor	niup.html#texthlcolor,DropButton_t	niup: texthlcolor(ih: DropButton_t): string	
textorientation=	niup.html#textorientation=,DropButton_t,string	niup: textorientation=(ih: DropButton_t; value: string)	
textorientation	niup.html#textorientation,DropButton_t,string	niup: textorientation(ih: DropButton_t; value: string)	
textorientation=	niup.html#textorientation=,DropButton_t,int64	niup: textorientation=(ih: DropButton_t; x: int64)	
textorientation	niup.html#textorientation,DropButton_t,int64	niup: textorientation(ih: DropButton_t; x: int64)	
textorientation	niup.html#textorientation,DropButton_t	niup: textorientation(ih: DropButton_t): string	
textpscolor=	niup.html#textpscolor=,DropButton_t,string	niup: textpscolor=(ih: DropButton_t; value: string)	
textpscolor	niup.html#textpscolor,DropButton_t,string	niup: textpscolor(ih: DropButton_t; value: string)	
textpscolor=	niup.html#textpscolor=,DropButton_t,int,int,int,int	niup: textpscolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,DropButton_t,int,int,int,int	niup: textpscolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,DropButton_t	niup: textpscolor(ih: DropButton_t): string	
textwrap=	niup.html#textwrap=,DropButton_t,string	niup: textwrap=(ih: DropButton_t; value: string)	
textwrap	niup.html#textwrap,DropButton_t,string	niup: textwrap(ih: DropButton_t; value: string)	
textwrap=	niup.html#textwrap=,DropButton_t,bool	niup: textwrap=(ih: DropButton_t; yes: bool)	
textwrap	niup.html#textwrap,DropButton_t,bool	niup: textwrap(ih: DropButton_t; yes: bool)	
textwrap	niup.html#textwrap,DropButton_t	niup: textwrap(ih: DropButton_t): bool	
theme=	niup.html#theme=,DropButton_t,string	niup: theme=(ih: DropButton_t; value: string)	
theme	niup.html#theme,DropButton_t,string	niup: theme(ih: DropButton_t; value: string)	
theme	niup.html#theme,DropButton_t	niup: theme(ih: DropButton_t): string	
tip=	niup.html#tip=,DropButton_t,string	niup: tip=(ih: DropButton_t; value: string)	
tip	niup.html#tip,DropButton_t,string	niup: tip(ih: DropButton_t; value: string)	
tip	niup.html#tip,DropButton_t	niup: tip(ih: DropButton_t): string	
tipbgcolor=	niup.html#tipbgcolor=,DropButton_t,string	niup: tipbgcolor=(ih: DropButton_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,DropButton_t,string	niup: tipbgcolor(ih: DropButton_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,DropButton_t,int,int,int,int	niup: tipbgcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,DropButton_t,int,int,int,int	niup: tipbgcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,DropButton_t	niup: tipbgcolor(ih: DropButton_t): string	
tipdelay=	niup.html#tipdelay=,DropButton_t,string	niup: tipdelay=(ih: DropButton_t; value: string)	
tipdelay	niup.html#tipdelay,DropButton_t,string	niup: tipdelay(ih: DropButton_t; value: string)	
tipdelay=	niup.html#tipdelay=,DropButton_t,int	niup: tipdelay=(ih: DropButton_t; x: int)	
tipdelay	niup.html#tipdelay,DropButton_t,int	niup: tipdelay(ih: DropButton_t; x: int)	
tipdelay	niup.html#tipdelay,DropButton_t	niup: tipdelay(ih: DropButton_t): string	
tipfgcolor=	niup.html#tipfgcolor=,DropButton_t,string	niup: tipfgcolor=(ih: DropButton_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,DropButton_t,string	niup: tipfgcolor(ih: DropButton_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,DropButton_t,int,int,int,int	niup: tipfgcolor=(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,DropButton_t,int,int,int,int	niup: tipfgcolor(ih: DropButton_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,DropButton_t	niup: tipfgcolor(ih: DropButton_t): string	
tipicon=	niup.html#tipicon=,DropButton_t,string	niup: tipicon=(ih: DropButton_t; value: string)	
tipicon	niup.html#tipicon,DropButton_t,string	niup: tipicon(ih: DropButton_t; value: string)	
tipicon	niup.html#tipicon,DropButton_t	niup: tipicon(ih: DropButton_t): string	
tipmarkup=	niup.html#tipmarkup=,DropButton_t,string	niup: tipmarkup=(ih: DropButton_t; value: string)	
tipmarkup	niup.html#tipmarkup,DropButton_t,string	niup: tipmarkup(ih: DropButton_t; value: string)	
tipmarkup	niup.html#tipmarkup,DropButton_t	niup: tipmarkup(ih: DropButton_t): string	
tiprect=	niup.html#tiprect=,DropButton_t,string	niup: tiprect=(ih: DropButton_t; value: string)	
tiprect	niup.html#tiprect,DropButton_t,string	niup: tiprect(ih: DropButton_t; value: string)	
tiprect=	niup.html#tiprect=,DropButton_t,int,int,int,int	niup: tiprect=(ih: DropButton_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,DropButton_t,int,int,int,int	niup: tiprect(ih: DropButton_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,DropButton_t	niup: tiprect(ih: DropButton_t): string	
tipvisible=	niup.html#tipvisible=,DropButton_t,string	niup: tipvisible=(ih: DropButton_t; value: string)	
tipvisible	niup.html#tipvisible,DropButton_t,string	niup: tipvisible(ih: DropButton_t; value: string)	
tipvisible=	niup.html#tipvisible=,DropButton_t,bool	niup: tipvisible=(ih: DropButton_t; yes: bool)	
tipvisible	niup.html#tipvisible,DropButton_t,bool	niup: tipvisible(ih: DropButton_t; yes: bool)	
tipvisible	niup.html#tipvisible,DropButton_t	niup: tipvisible(ih: DropButton_t): bool	
title=	niup.html#title=,DropButton_t,string	niup: title=(ih: DropButton_t; value: string)	
title	niup.html#title,DropButton_t,string	niup: title(ih: DropButton_t; value: string)	
title	niup.html#title,DropButton_t	niup: title(ih: DropButton_t): string	
touch=	niup.html#touch=,DropButton_t,string	niup: touch=(ih: DropButton_t; value: string)	
touch	niup.html#touch,DropButton_t,string	niup: touch(ih: DropButton_t; value: string)	
touch=	niup.html#touch=,DropButton_t,bool	niup: touch=(ih: DropButton_t; yes: bool)	
touch	niup.html#touch,DropButton_t,bool	niup: touch(ih: DropButton_t; yes: bool)	
touch	niup.html#touch,DropButton_t	niup: touch(ih: DropButton_t): bool	
usersize=	niup.html#usersize=,DropButton_t,string	niup: usersize=(ih: DropButton_t; value: string)	
usersize	niup.html#usersize,DropButton_t,string	niup: usersize(ih: DropButton_t; value: string)	
usersize=	niup.html#usersize=,DropButton_t,int,int	niup: usersize=(ih: DropButton_t; width, height: int)	
usersize	niup.html#usersize,DropButton_t,int,int	niup: usersize(ih: DropButton_t; width, height: int)	
usersize	niup.html#usersize,DropButton_t	niup: usersize(ih: DropButton_t): string	
visible=	niup.html#visible=,DropButton_t,string	niup: visible=(ih: DropButton_t; value: string)	
visible	niup.html#visible,DropButton_t,string	niup: visible(ih: DropButton_t; value: string)	
visible=	niup.html#visible=,DropButton_t,bool	niup: visible=(ih: DropButton_t; yes: bool)	
visible	niup.html#visible,DropButton_t,bool	niup: visible(ih: DropButton_t; yes: bool)	
visible	niup.html#visible,DropButton_t	niup: visible(ih: DropButton_t): bool	
visiblecolumns=	niup.html#visiblecolumns=,DropButton_t,string	niup: visiblecolumns=(ih: DropButton_t; value: string)	
visiblecolumns	niup.html#visiblecolumns,DropButton_t,string	niup: visiblecolumns(ih: DropButton_t; value: string)	
visiblecolumns=	niup.html#visiblecolumns=,DropButton_t,int	niup: visiblecolumns=(ih: DropButton_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,DropButton_t,int	niup: visiblecolumns(ih: DropButton_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,DropButton_t	niup: visiblecolumns(ih: DropButton_t): string	
wheeldropfocus=	niup.html#wheeldropfocus=,DropButton_t,string	niup: wheeldropfocus=(ih: DropButton_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,DropButton_t,string	niup: wheeldropfocus(ih: DropButton_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,DropButton_t,bool	niup: wheeldropfocus=(ih: DropButton_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,DropButton_t,bool	niup: wheeldropfocus(ih: DropButton_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,DropButton_t	niup: wheeldropfocus(ih: DropButton_t): bool	
wid	niup.html#wid,DropButton_t	niup: wid(ih: DropButton_t): string	
x	niup.html#x,DropButton_t	niup: x(ih: DropButton_t): string	
xautohide=	niup.html#xautohide=,DropButton_t,string	niup: xautohide=(ih: DropButton_t; value: string)	
xautohide	niup.html#xautohide,DropButton_t,string	niup: xautohide(ih: DropButton_t; value: string)	
xautohide=	niup.html#xautohide=,DropButton_t,bool	niup: xautohide=(ih: DropButton_t; yes: bool)	
xautohide	niup.html#xautohide,DropButton_t,bool	niup: xautohide(ih: DropButton_t; yes: bool)	
xautohide	niup.html#xautohide,DropButton_t	niup: xautohide(ih: DropButton_t): bool	
xdisplay	niup.html#xdisplay,DropButton_t	niup: xdisplay(ih: DropButton_t): string	
xfontid	niup.html#xfontid,DropButton_t	niup: xfontid(ih: DropButton_t): string	
xhidden	niup.html#xhidden,DropButton_t	niup: xhidden(ih: DropButton_t): bool	
xmax=	niup.html#xmax=,DropButton_t,string	niup: xmax=(ih: DropButton_t; value: string)	
xmax	niup.html#xmax,DropButton_t,string	niup: xmax(ih: DropButton_t; value: string)	
xmax=	niup.html#xmax=,DropButton_t,int	niup: xmax=(ih: DropButton_t; x: int)	
xmax	niup.html#xmax,DropButton_t,int	niup: xmax(ih: DropButton_t; x: int)	
xmax	niup.html#xmax,DropButton_t	niup: xmax(ih: DropButton_t): string	
xmin=	niup.html#xmin=,DropButton_t,string	niup: xmin=(ih: DropButton_t; value: string)	
xmin	niup.html#xmin,DropButton_t,string	niup: xmin(ih: DropButton_t; value: string)	
xmin=	niup.html#xmin=,DropButton_t,int	niup: xmin=(ih: DropButton_t; x: int)	
xmin	niup.html#xmin,DropButton_t,int	niup: xmin(ih: DropButton_t; x: int)	
xmin	niup.html#xmin,DropButton_t	niup: xmin(ih: DropButton_t): string	
xwindow	niup.html#xwindow,DropButton_t	niup: xwindow(ih: DropButton_t): string	
y	niup.html#y,DropButton_t	niup: y(ih: DropButton_t): string	
yautohide=	niup.html#yautohide=,DropButton_t,string	niup: yautohide=(ih: DropButton_t; value: string)	
yautohide	niup.html#yautohide,DropButton_t,string	niup: yautohide(ih: DropButton_t; value: string)	
yautohide=	niup.html#yautohide=,DropButton_t,bool	niup: yautohide=(ih: DropButton_t; yes: bool)	
yautohide	niup.html#yautohide,DropButton_t,bool	niup: yautohide(ih: DropButton_t; yes: bool)	
yautohide	niup.html#yautohide,DropButton_t	niup: yautohide(ih: DropButton_t): bool	
yhidden	niup.html#yhidden,DropButton_t	niup: yhidden(ih: DropButton_t): bool	
ymax=	niup.html#ymax=,DropButton_t,string	niup: ymax=(ih: DropButton_t; value: string)	
ymax	niup.html#ymax,DropButton_t,string	niup: ymax(ih: DropButton_t; value: string)	
ymax=	niup.html#ymax=,DropButton_t,int	niup: ymax=(ih: DropButton_t; x: int)	
ymax	niup.html#ymax,DropButton_t,int	niup: ymax(ih: DropButton_t; x: int)	
ymax	niup.html#ymax,DropButton_t	niup: ymax(ih: DropButton_t): string	
ymin=	niup.html#ymin=,DropButton_t,string	niup: ymin=(ih: DropButton_t; value: string)	
ymin	niup.html#ymin,DropButton_t,string	niup: ymin(ih: DropButton_t; value: string)	
ymin=	niup.html#ymin=,DropButton_t,int	niup: ymin=(ih: DropButton_t; x: int)	
ymin	niup.html#ymin,DropButton_t,int	niup: ymin(ih: DropButton_t; x: int)	
ymin	niup.html#ymin,DropButton_t	niup: ymin(ih: DropButton_t): string	
zorder=	niup.html#zorder=,DropButton_t,string	niup: zorder=(ih: DropButton_t; value: string)	
zorder	niup.html#zorder,DropButton_t,string	niup: zorder(ih: DropButton_t; value: string)	
action=	niup.html#action=,DropButton_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: DropButton_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,DropButton_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: DropButton_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,DropButton_t	niup: action(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,DropButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                       arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,DropButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,DropButton_t	niup: button_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,DropButton_t,proc(PIhandle)	niup: destroy_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,DropButton_t,proc(PIhandle)	niup: destroy_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,DropButton_t	niup: destroy_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,DropButton_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: DropButton_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,DropButton_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: DropButton_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,DropButton_t	niup: dragbegin_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,DropButton_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: DropButton_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,DropButton_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: DropButton_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,DropButton_t	niup: dragdatasize_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,DropButton_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,DropButton_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: DropButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,DropButton_t	niup: dragdata_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,DropButton_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: DropButton_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,DropButton_t,proc(PIhandle,cint)	niup: dragend_cb(ih: DropButton_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,DropButton_t	niup: dragend_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,DropButton_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,DropButton_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: DropButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,DropButton_t	niup: dropdata_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdown_cb=	niup.html#dropdown_cb=,DropButton_t,proc(PIhandle,cint)	niup: dropdown_cb=(ih: DropButton_t;\n             cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
dropdown_cb	niup.html#dropdown_cb,DropButton_t,proc(PIhandle,cint)	niup: dropdown_cb(ih: DropButton_t;\n            cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
dropdown_cb	niup.html#dropdown_cb,DropButton_t	niup: dropdown_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,DropButton_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: DropButton_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,DropButton_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: DropButton_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,DropButton_t	niup: dropfiles_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,DropButton_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,DropButton_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: DropButton_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,DropButton_t	niup: dropmotion_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropshow_cb=	niup.html#dropshow_cb=,DropButton_t,proc(PIhandle,cint)	niup: dropshow_cb=(ih: DropButton_t;\n             cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
dropshow_cb	niup.html#dropshow_cb,DropButton_t,proc(PIhandle,cint)	niup: dropshow_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
dropshow_cb	niup.html#dropshow_cb,DropButton_t	niup: dropshow_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,DropButton_t,proc(PIhandle)	niup: enterwindow_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,DropButton_t,proc(PIhandle)	niup: enterwindow_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,DropButton_t	niup: enterwindow_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_action=	niup.html#flat_action=,DropButton_t,proc(PIhandle)	niup: flat_action=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_action	niup.html#flat_action,DropButton_t,proc(PIhandle)	niup: flat_action(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_action	niup.html#flat_action,DropButton_t	niup: flat_action(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,DropButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint; arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,DropButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,DropButton_t	niup: flat_button_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_enterwindow_cb=	niup.html#flat_enterwindow_cb=,DropButton_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,DropButton_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,DropButton_t	niup: flat_enterwindow_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_focus_cb=	niup.html#flat_focus_cb=,DropButton_t,proc(PIhandle,cint)	niup: flat_focus_cb=(ih: DropButton_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,DropButton_t,proc(PIhandle,cint)	niup: flat_focus_cb(ih: DropButton_t;\n              cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,DropButton_t	niup: flat_focus_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,DropButton_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,DropButton_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,DropButton_t	niup: flat_leavewindow_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,DropButton_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint; arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,DropButton_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,DropButton_t	niup: flat_motion_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,DropButton_t,proc(PIhandle,cint)	niup: focus_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,DropButton_t,proc(PIhandle,cint)	niup: focus_cb(ih: DropButton_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,DropButton_t	niup: focus_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,DropButton_t,proc(PIhandle)	niup: getfocus_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,DropButton_t,proc(PIhandle)	niup: getfocus_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,DropButton_t	niup: getfocus_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,DropButton_t,proc(PIhandle)	niup: help_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,DropButton_t,proc(PIhandle)	niup: help_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,DropButton_t	niup: help_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,DropButton_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: DropButton_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,DropButton_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: DropButton_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,DropButton_t	niup: keypress_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,DropButton_t,proc(PIhandle)	niup: killfocus_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,DropButton_t,proc(PIhandle)	niup: killfocus_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,DropButton_t	niup: killfocus_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,DropButton_t,proc(PIhandle,cint)	niup: k_any=(ih: DropButton_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,DropButton_t,proc(PIhandle,cint)	niup: k_any(ih: DropButton_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,DropButton_t	niup: k_any(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,DropButton_t,proc(PIhandle)	niup: ldestroy_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,DropButton_t,proc(PIhandle)	niup: ldestroy_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,DropButton_t	niup: ldestroy_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,DropButton_t,proc(PIhandle)	niup: leavewindow_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,DropButton_t,proc(PIhandle)	niup: leavewindow_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,DropButton_t	niup: leavewindow_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,DropButton_t,proc(PIhandle)	niup: map_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,DropButton_t,proc(PIhandle)	niup: map_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,DropButton_t	niup: map_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,DropButton_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: DropButton_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,DropButton_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: DropButton_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,DropButton_t	niup: motion_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,DropButton_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,DropButton_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,DropButton_t	niup: postmessage_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,DropButton_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: DropButton_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,DropButton_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: DropButton_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,DropButton_t	niup: resize_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,DropButton_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: DropButton_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,DropButton_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: DropButton_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,DropButton_t	niup: scroll_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,DropButton_t,proc(PIhandle)	niup: unmap_cb=(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,DropButton_t,proc(PIhandle)	niup: unmap_cb(ih: DropButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,DropButton_t	niup: unmap_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,DropButton_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                      status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,DropButton_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: DropButton_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                     status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,DropButton_t	niup: wheel_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,DropButton_t,proc(PIhandle,cint)	niup: wom_cb=(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,DropButton_t,proc(PIhandle,cint)	niup: wom_cb(ih: DropButton_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,DropButton_t	niup: wom_cb(ih: DropButton_t): proc (ih: PIhandle): cint {.cdecl.}	
Expander	niup.html#Expander,IUPhandle_t	niup: Expander(child: IUPhandle_t): Expander_t	
active=	niup.html#active=,Expander_t,string	niup: active=(ih: Expander_t; value: string)	
active	niup.html#active,Expander_t,string	niup: active(ih: Expander_t; value: string)	
active=	niup.html#active=,Expander_t,bool	niup: active=(ih: Expander_t; yes: bool)	
active	niup.html#active,Expander_t,bool	niup: active(ih: Expander_t; yes: bool)	
active	niup.html#active,Expander_t	niup: active(ih: Expander_t): bool	
animation=	niup.html#animation=,Expander_t,string	niup: animation=(ih: Expander_t; value: string)	
animation	niup.html#animation,Expander_t,string	niup: animation(ih: Expander_t; value: string)	
animation	niup.html#animation,Expander_t	niup: animation(ih: Expander_t): string	
autoshow	niup.html#autoshow,Expander_t	niup: autoshow(ih: Expander_t): string	
backcolor=	niup.html#backcolor=,Expander_t,string	niup: backcolor=(ih: Expander_t; value: string)	
backcolor	niup.html#backcolor,Expander_t,string	niup: backcolor(ih: Expander_t; value: string)	
backcolor=	niup.html#backcolor=,Expander_t,int,int,int,int	niup: backcolor=(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,Expander_t,int,int,int,int	niup: backcolor(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,Expander_t	niup: backcolor(ih: Expander_t): string	
barposition	niup.html#barposition,Expander_t	niup: barposition(ih: Expander_t): string	
barsize=	niup.html#barsize=,Expander_t,string	niup: barsize=(ih: Expander_t; value: string)	
barsize	niup.html#barsize,Expander_t,string	niup: barsize(ih: Expander_t; value: string)	
barsize=	niup.html#barsize=,Expander_t,int	niup: barsize=(ih: Expander_t; x: int)	
barsize	niup.html#barsize,Expander_t,int	niup: barsize(ih: Expander_t; x: int)	
barsize	niup.html#barsize,Expander_t	niup: barsize(ih: Expander_t): string	
canfocus=	niup.html#canfocus=,Expander_t,string	niup: canfocus=(ih: Expander_t; value: string)	
canfocus	niup.html#canfocus,Expander_t,string	niup: canfocus(ih: Expander_t; value: string)	
canfocus=	niup.html#canfocus=,Expander_t,bool	niup: canfocus=(ih: Expander_t; yes: bool)	
canfocus	niup.html#canfocus,Expander_t,bool	niup: canfocus(ih: Expander_t; yes: bool)	
canfocus	niup.html#canfocus,Expander_t	niup: canfocus(ih: Expander_t): bool	
charsize	niup.html#charsize,Expander_t	niup: charsize(ih: Expander_t): string	
clientoffset	niup.html#clientoffset,Expander_t	niup: clientoffset(ih: Expander_t): string	
clientsize	niup.html#clientsize,Expander_t	niup: clientsize(ih: Expander_t): string	
expand=	niup.html#expand=,Expander_t,string	niup: expand=(ih: Expander_t; value: string)	
expand	niup.html#expand,Expander_t,string	niup: expand(ih: Expander_t; value: string)	
expand	niup.html#expand,Expander_t	niup: expand(ih: Expander_t): string	
expandweight=	niup.html#expandweight=,Expander_t,string	niup: expandweight=(ih: Expander_t; value: string)	
expandweight	niup.html#expandweight,Expander_t,string	niup: expandweight(ih: Expander_t; value: string)	
expandweight=	niup.html#expandweight=,Expander_t,int64	niup: expandweight=(ih: Expander_t; x: int64)	
expandweight	niup.html#expandweight,Expander_t,int64	niup: expandweight(ih: Expander_t; x: int64)	
expandweight	niup.html#expandweight,Expander_t	niup: expandweight(ih: Expander_t): string	
extrabuttons=	niup.html#extrabuttons=,Expander_t,string	niup: extrabuttons=(ih: Expander_t; value: string)	
extrabuttons	niup.html#extrabuttons,Expander_t,string	niup: extrabuttons(ih: Expander_t; value: string)	
extrabuttons=	niup.html#extrabuttons=,Expander_t,int	niup: extrabuttons=(ih: Expander_t; x: int)	
extrabuttons	niup.html#extrabuttons,Expander_t,int	niup: extrabuttons(ih: Expander_t; x: int)	
extrabuttons	niup.html#extrabuttons,Expander_t	niup: extrabuttons(ih: Expander_t): string	
floating=	niup.html#floating=,Expander_t,string	niup: floating=(ih: Expander_t; value: string)	
floating	niup.html#floating,Expander_t,string	niup: floating(ih: Expander_t; value: string)	
floating	niup.html#floating,Expander_t	niup: floating(ih: Expander_t): string	
font=	niup.html#font=,Expander_t,string	niup: font=(ih: Expander_t; value: string)	
font	niup.html#font,Expander_t,string	niup: font(ih: Expander_t; value: string)	
font	niup.html#font,Expander_t	niup: font(ih: Expander_t): string	
fontface=	niup.html#fontface=,Expander_t,string	niup: fontface=(ih: Expander_t; value: string)	
fontface	niup.html#fontface,Expander_t,string	niup: fontface(ih: Expander_t; value: string)	
fontface	niup.html#fontface,Expander_t	niup: fontface(ih: Expander_t): string	
fontsize=	niup.html#fontsize=,Expander_t,string	niup: fontsize=(ih: Expander_t; value: string)	
fontsize	niup.html#fontsize,Expander_t,string	niup: fontsize(ih: Expander_t; value: string)	
fontsize=	niup.html#fontsize=,Expander_t,int	niup: fontsize=(ih: Expander_t; x: int)	
fontsize	niup.html#fontsize,Expander_t,int	niup: fontsize(ih: Expander_t; x: int)	
fontsize	niup.html#fontsize,Expander_t	niup: fontsize(ih: Expander_t): string	
fontstyle=	niup.html#fontstyle=,Expander_t,string	niup: fontstyle=(ih: Expander_t; value: string)	
fontstyle	niup.html#fontstyle,Expander_t,string	niup: fontstyle(ih: Expander_t; value: string)	
fontstyle	niup.html#fontstyle,Expander_t	niup: fontstyle(ih: Expander_t): string	
forecolor=	niup.html#forecolor=,Expander_t,string	niup: forecolor=(ih: Expander_t; value: string)	
forecolor	niup.html#forecolor,Expander_t,string	niup: forecolor(ih: Expander_t; value: string)	
forecolor=	niup.html#forecolor=,Expander_t,int,int,int,int	niup: forecolor=(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
forecolor	niup.html#forecolor,Expander_t,int,int,int,int	niup: forecolor(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
forecolor	niup.html#forecolor,Expander_t	niup: forecolor(ih: Expander_t): string	
frame=	niup.html#frame=,Expander_t,string	niup: frame=(ih: Expander_t; value: string)	
frame	niup.html#frame,Expander_t,string	niup: frame(ih: Expander_t; value: string)	
frame=	niup.html#frame=,Expander_t,bool	niup: frame=(ih: Expander_t; yes: bool)	
frame	niup.html#frame,Expander_t,bool	niup: frame(ih: Expander_t; yes: bool)	
frame	niup.html#frame,Expander_t	niup: frame(ih: Expander_t): bool	
framecolor=	niup.html#framecolor=,Expander_t,string	niup: framecolor=(ih: Expander_t; value: string)	
framecolor	niup.html#framecolor,Expander_t,string	niup: framecolor(ih: Expander_t; value: string)	
framecolor=	niup.html#framecolor=,Expander_t,int,int,int,int	niup: framecolor=(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
framecolor	niup.html#framecolor,Expander_t,int,int,int,int	niup: framecolor(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
framecolor	niup.html#framecolor,Expander_t	niup: framecolor(ih: Expander_t): string	
frametime=	niup.html#frametime=,Expander_t,string	niup: frametime=(ih: Expander_t; value: string)	
frametime	niup.html#frametime,Expander_t,string	niup: frametime(ih: Expander_t; value: string)	
frametime=	niup.html#frametime=,Expander_t,int	niup: frametime=(ih: Expander_t; x: int)	
frametime	niup.html#frametime,Expander_t,int	niup: frametime(ih: Expander_t; x: int)	
frametime	niup.html#frametime,Expander_t	niup: frametime(ih: Expander_t): string	
framewidth=	niup.html#framewidth=,Expander_t,string	niup: framewidth=(ih: Expander_t; value: string)	
framewidth	niup.html#framewidth,Expander_t,string	niup: framewidth(ih: Expander_t; value: string)	
framewidth=	niup.html#framewidth=,Expander_t,int	niup: framewidth=(ih: Expander_t; x: int)	
framewidth	niup.html#framewidth,Expander_t,int	niup: framewidth(ih: Expander_t; x: int)	
framewidth	niup.html#framewidth,Expander_t	niup: framewidth(ih: Expander_t): string	
handlename=	niup.html#handlename=,Expander_t,string	niup: handlename=(ih: Expander_t; value: string)	
handlename	niup.html#handlename,Expander_t,string	niup: handlename(ih: Expander_t; value: string)	
handlename	niup.html#handlename,Expander_t	niup: handlename(ih: Expander_t): string	
highcolor=	niup.html#highcolor=,Expander_t,string	niup: highcolor=(ih: Expander_t; value: string)	
highcolor	niup.html#highcolor,Expander_t,string	niup: highcolor(ih: Expander_t; value: string)	
highcolor=	niup.html#highcolor=,Expander_t,int,int,int,int	niup: highcolor=(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
highcolor	niup.html#highcolor,Expander_t,int,int,int,int	niup: highcolor(ih: Expander_t; red, green, blue: int; alpha: int = 255)	
highcolor	niup.html#highcolor,Expander_t	niup: highcolor(ih: Expander_t): string	
image=	niup.html#image=,Expander_t,	niup: image=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Expander_t,	niup: image(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Expander_t	niup: image(ih: Expander_t): string	
imageextra1=	niup.html#imageextra1=,Expander_t,	niup: imageextra1=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextra1	niup.html#imageextra1,Expander_t,	niup: imageextra1(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextra1	niup.html#imageextra1,Expander_t	niup: imageextra1(ih: Expander_t): string	
imageextra2=	niup.html#imageextra2=,Expander_t,	niup: imageextra2=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextra2	niup.html#imageextra2,Expander_t,	niup: imageextra2(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextra2	niup.html#imageextra2,Expander_t	niup: imageextra2(ih: Expander_t): string	
imageextra3=	niup.html#imageextra3=,Expander_t,	niup: imageextra3=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextra3	niup.html#imageextra3,Expander_t,	niup: imageextra3(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextra3	niup.html#imageextra3,Expander_t	niup: imageextra3(ih: Expander_t): string	
imageextrahighlight1=	niup.html#imageextrahighlight1=,Expander_t,	niup: imageextrahighlight1=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrahighlight1	niup.html#imageextrahighlight1,Expander_t,	niup: imageextrahighlight1(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrahighlight1	niup.html#imageextrahighlight1,Expander_t	niup: imageextrahighlight1(ih: Expander_t): string	
imageextrahighlight2=	niup.html#imageextrahighlight2=,Expander_t,	niup: imageextrahighlight2=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrahighlight2	niup.html#imageextrahighlight2,Expander_t,	niup: imageextrahighlight2(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrahighlight2	niup.html#imageextrahighlight2,Expander_t	niup: imageextrahighlight2(ih: Expander_t): string	
imageextrahighlight3=	niup.html#imageextrahighlight3=,Expander_t,	niup: imageextrahighlight3=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrahighlight3	niup.html#imageextrahighlight3,Expander_t,	niup: imageextrahighlight3(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrahighlight3	niup.html#imageextrahighlight3,Expander_t	niup: imageextrahighlight3(ih: Expander_t): string	
imageextrapress1=	niup.html#imageextrapress1=,Expander_t,	niup: imageextrapress1=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrapress1	niup.html#imageextrapress1,Expander_t,	niup: imageextrapress1(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrapress1	niup.html#imageextrapress1,Expander_t	niup: imageextrapress1(ih: Expander_t): string	
imageextrapress2=	niup.html#imageextrapress2=,Expander_t,	niup: imageextrapress2=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrapress2	niup.html#imageextrapress2,Expander_t,	niup: imageextrapress2(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrapress2	niup.html#imageextrapress2,Expander_t	niup: imageextrapress2(ih: Expander_t): string	
imageextrapress3=	niup.html#imageextrapress3=,Expander_t,	niup: imageextrapress3=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrapress3	niup.html#imageextrapress3,Expander_t,	niup: imageextrapress3(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageextrapress3	niup.html#imageextrapress3,Expander_t	niup: imageextrapress3(ih: Expander_t): string	
imagehighlight=	niup.html#imagehighlight=,Expander_t,	niup: imagehighlight=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,Expander_t,	niup: imagehighlight(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,Expander_t	niup: imagehighlight(ih: Expander_t): string	
imageopen=	niup.html#imageopen=,Expander_t,	niup: imageopen=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageopen	niup.html#imageopen,Expander_t,	niup: imageopen(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageopen	niup.html#imageopen,Expander_t	niup: imageopen(ih: Expander_t): string	
imageopenhighlight=	niup.html#imageopenhighlight=,Expander_t,	niup: imageopenhighlight=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageopenhighlight	niup.html#imageopenhighlight,Expander_t,	niup: imageopenhighlight(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageopenhighlight	niup.html#imageopenhighlight,Expander_t	niup: imageopenhighlight(ih: Expander_t): string	
maxsize=	niup.html#maxsize=,Expander_t,string	niup: maxsize=(ih: Expander_t; value: string)	
maxsize	niup.html#maxsize,Expander_t,string	niup: maxsize(ih: Expander_t; value: string)	
maxsize=	niup.html#maxsize=,Expander_t,int,int	niup: maxsize=(ih: Expander_t; width, height: int)	
maxsize	niup.html#maxsize,Expander_t,int,int	niup: maxsize(ih: Expander_t; width, height: int)	
maxsize	niup.html#maxsize,Expander_t	niup: maxsize(ih: Expander_t): string	
minsize=	niup.html#minsize=,Expander_t,string	niup: minsize=(ih: Expander_t; value: string)	
minsize	niup.html#minsize,Expander_t,string	niup: minsize(ih: Expander_t; value: string)	
minsize=	niup.html#minsize=,Expander_t,int,int	niup: minsize=(ih: Expander_t; width, height: int)	
minsize	niup.html#minsize,Expander_t,int,int	niup: minsize(ih: Expander_t; width, height: int)	
minsize	niup.html#minsize,Expander_t	niup: minsize(ih: Expander_t): string	
name=	niup.html#name=,Expander_t,string	niup: name=(ih: Expander_t; value: string)	
name	niup.html#name,Expander_t,string	niup: name(ih: Expander_t; value: string)	
name	niup.html#name,Expander_t	niup: name(ih: Expander_t): string	
naturalsize	niup.html#naturalsize,Expander_t	niup: naturalsize(ih: Expander_t): string	
normalizergroup=	niup.html#normalizergroup=,Expander_t,string	niup: normalizergroup=(ih: Expander_t; value: string)	
normalizergroup	niup.html#normalizergroup,Expander_t,string	niup: normalizergroup(ih: Expander_t; value: string)	
normalizergroup	niup.html#normalizergroup,Expander_t	niup: normalizergroup(ih: Expander_t): string	
ntheme=	niup.html#ntheme=,Expander_t,string	niup: ntheme=(ih: Expander_t; value: string)	
ntheme	niup.html#ntheme,Expander_t,string	niup: ntheme(ih: Expander_t; value: string)	
ntheme	niup.html#ntheme,Expander_t	niup: ntheme(ih: Expander_t): string	
numframes	niup.html#numframes,Expander_t	niup: numframes(ih: Expander_t): string	
opencolor	niup.html#opencolor,Expander_t	niup: opencolor(ih: Expander_t): string	
pangofontdesc	niup.html#pangofontdesc,Expander_t	niup: pangofontdesc(ih: Expander_t): string	
pangolayout	niup.html#pangolayout,Expander_t	niup: pangolayout(ih: Expander_t): string	
position=	niup.html#position=,Expander_t,string	niup: position=(ih: Expander_t; value: string)	
position	niup.html#position,Expander_t,string	niup: position(ih: Expander_t; value: string)	
position=	niup.html#position=,Expander_t,int,int	niup: position=(ih: Expander_t; x, y: int)	
position	niup.html#position,Expander_t,int,int	niup: position(ih: Expander_t; x, y: int)	
position	niup.html#position,Expander_t	niup: position(ih: Expander_t): string	
propagatefocus=	niup.html#propagatefocus=,Expander_t,string	niup: propagatefocus=(ih: Expander_t; value: string)	
propagatefocus	niup.html#propagatefocus,Expander_t,string	niup: propagatefocus(ih: Expander_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Expander_t,bool	niup: propagatefocus=(ih: Expander_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Expander_t,bool	niup: propagatefocus(ih: Expander_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Expander_t	niup: propagatefocus(ih: Expander_t): bool	
rastersize=	niup.html#rastersize=,Expander_t,string	niup: rastersize=(ih: Expander_t; value: string)	
rastersize	niup.html#rastersize,Expander_t,string	niup: rastersize(ih: Expander_t; value: string)	
rastersize=	niup.html#rastersize=,Expander_t,int,int	niup: rastersize=(ih: Expander_t; width, height: int)	
rastersize	niup.html#rastersize,Expander_t,int,int	niup: rastersize(ih: Expander_t; width, height: int)	
rastersize	niup.html#rastersize,Expander_t	niup: rastersize(ih: Expander_t): string	
size=	niup.html#size=,Expander_t,string	niup: size=(ih: Expander_t; value: string)	
size	niup.html#size,Expander_t,string	niup: size(ih: Expander_t; value: string)	
size=	niup.html#size=,Expander_t,int,int	niup: size=(ih: Expander_t; width, height: int)	
size	niup.html#size,Expander_t,int,int	niup: size(ih: Expander_t; width, height: int)	
size	niup.html#size,Expander_t	niup: size(ih: Expander_t): string	
state=	niup.html#state=,Expander_t,string	niup: state=(ih: Expander_t; value: string)	
state	niup.html#state,Expander_t,string	niup: state(ih: Expander_t; value: string)	
state	niup.html#state,Expander_t	niup: state(ih: Expander_t): string	
staterefresh	niup.html#staterefresh,Expander_t	niup: staterefresh(ih: Expander_t): string	
theme=	niup.html#theme=,Expander_t,string	niup: theme=(ih: Expander_t; value: string)	
theme	niup.html#theme,Expander_t,string	niup: theme(ih: Expander_t; value: string)	
theme	niup.html#theme,Expander_t	niup: theme(ih: Expander_t): string	
title=	niup.html#title=,Expander_t,string	niup: title=(ih: Expander_t; value: string)	
title	niup.html#title,Expander_t,string	niup: title(ih: Expander_t; value: string)	
title	niup.html#title,Expander_t	niup: title(ih: Expander_t): string	
titleexpand	niup.html#titleexpand,Expander_t	niup: titleexpand(ih: Expander_t): string	
titleimage=	niup.html#titleimage=,Expander_t,	niup: titleimage=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimage	niup.html#titleimage,Expander_t,	niup: titleimage(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimage	niup.html#titleimage,Expander_t	niup: titleimage(ih: Expander_t): string	
titleimagehighlight=	niup.html#titleimagehighlight=,Expander_t,	niup: titleimagehighlight=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimagehighlight	niup.html#titleimagehighlight,Expander_t,	niup: titleimagehighlight(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimagehighlight	niup.html#titleimagehighlight,Expander_t	niup: titleimagehighlight(ih: Expander_t): string	
titleimageopen=	niup.html#titleimageopen=,Expander_t,	niup: titleimageopen=(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimageopen	niup.html#titleimageopen,Expander_t,	niup: titleimageopen(ih: Expander_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimageopen	niup.html#titleimageopen,Expander_t	niup: titleimageopen(ih: Expander_t): string	
titleimageopenhighlight=	niup.html#titleimageopenhighlight=,Expander_t,	niup: titleimageopenhighlight=(ih: Expander_t;\n                         handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimageopenhighlight	niup.html#titleimageopenhighlight,Expander_t,	niup: titleimageopenhighlight(ih: Expander_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimageopenhighlight	niup.html#titleimageopenhighlight,Expander_t	niup: titleimageopenhighlight(ih: Expander_t): string	
usersize=	niup.html#usersize=,Expander_t,string	niup: usersize=(ih: Expander_t; value: string)	
usersize	niup.html#usersize,Expander_t,string	niup: usersize(ih: Expander_t; value: string)	
usersize=	niup.html#usersize=,Expander_t,int,int	niup: usersize=(ih: Expander_t; width, height: int)	
usersize	niup.html#usersize,Expander_t,int,int	niup: usersize(ih: Expander_t; width, height: int)	
usersize	niup.html#usersize,Expander_t	niup: usersize(ih: Expander_t): string	
visible=	niup.html#visible=,Expander_t,string	niup: visible=(ih: Expander_t; value: string)	
visible	niup.html#visible,Expander_t,string	niup: visible(ih: Expander_t; value: string)	
visible=	niup.html#visible=,Expander_t,bool	niup: visible=(ih: Expander_t; yes: bool)	
visible	niup.html#visible,Expander_t,bool	niup: visible(ih: Expander_t; yes: bool)	
visible	niup.html#visible,Expander_t	niup: visible(ih: Expander_t): bool	
wid	niup.html#wid,Expander_t	niup: wid(ih: Expander_t): string	
xfontid	niup.html#xfontid,Expander_t	niup: xfontid(ih: Expander_t): string	
action=	niup.html#action=,Expander_t,proc(PIhandle)	niup: action=(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action	niup.html#action,Expander_t,proc(PIhandle)	niup: action(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action	niup.html#action,Expander_t	niup: action(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Expander_t,proc(PIhandle)	niup: destroy_cb=(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Expander_t,proc(PIhandle)	niup: destroy_cb(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Expander_t	niup: destroy_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
extrabutton_cb=	niup.html#extrabutton_cb=,Expander_t,proc(PIhandle,cint,cint)	niup: extrabutton_cb=(ih: Expander_t;\n                cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
extrabutton_cb	niup.html#extrabutton_cb,Expander_t,proc(PIhandle,cint,cint)	niup: extrabutton_cb(ih: Expander_t;\n               cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
extrabutton_cb	niup.html#extrabutton_cb,Expander_t	niup: extrabutton_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Expander_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Expander_t,proc(PIhandle)	niup: ldestroy_cb(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Expander_t	niup: ldestroy_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Expander_t,proc(PIhandle)	niup: map_cb=(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Expander_t,proc(PIhandle)	niup: map_cb(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Expander_t	niup: map_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
openclose_cb=	niup.html#openclose_cb=,Expander_t,proc(PIhandle,cint)	niup: openclose_cb=(ih: Expander_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
openclose_cb	niup.html#openclose_cb,Expander_t,proc(PIhandle,cint)	niup: openclose_cb(ih: Expander_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
openclose_cb	niup.html#openclose_cb,Expander_t	niup: openclose_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Expander_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Expander_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Expander_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Expander_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Expander_t	niup: postmessage_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Expander_t,proc(PIhandle)	niup: unmap_cb=(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Expander_t,proc(PIhandle)	niup: unmap_cb(ih: Expander_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Expander_t	niup: unmap_cb(ih: Expander_t): proc (ih: PIhandle): cint {.cdecl.}	
FileDlg	niup.html#FileDlg_2	niup: FileDlg(): FileDlg_t	
active=	niup.html#active=,FileDlg_t,string	niup: active=(ih: FileDlg_t; value: string)	
active	niup.html#active,FileDlg_t,string	niup: active(ih: FileDlg_t; value: string)	
active=	niup.html#active=,FileDlg_t,bool	niup: active=(ih: FileDlg_t; yes: bool)	
active	niup.html#active,FileDlg_t,bool	niup: active(ih: FileDlg_t; yes: bool)	
active	niup.html#active,FileDlg_t	niup: active(ih: FileDlg_t): bool	
activewindow	niup.html#activewindow,FileDlg_t	niup: activewindow(ih: FileDlg_t): bool	
allownew=	niup.html#allownew=,FileDlg_t,string	niup: allownew=(ih: FileDlg_t; value: string)	
allownew	niup.html#allownew,FileDlg_t,string	niup: allownew(ih: FileDlg_t; value: string)	
allownew=	niup.html#allownew=,FileDlg_t,bool	niup: allownew=(ih: FileDlg_t; yes: bool)	
allownew	niup.html#allownew,FileDlg_t,bool	niup: allownew(ih: FileDlg_t; yes: bool)	
allownew	niup.html#allownew,FileDlg_t	niup: allownew(ih: FileDlg_t): bool	
background=	niup.html#background=,FileDlg_t,string	niup: background=(ih: FileDlg_t; value: string)	
background	niup.html#background,FileDlg_t,string	niup: background(ih: FileDlg_t; value: string)	
background=	niup.html#background=,FileDlg_t,int,int,int,int	niup: background=(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,FileDlg_t,int,int,int,int	niup: background(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,FileDlg_t	niup: background(ih: FileDlg_t): string	
bgcolor=	niup.html#bgcolor=,FileDlg_t,string	niup: bgcolor=(ih: FileDlg_t; value: string)	
bgcolor	niup.html#bgcolor,FileDlg_t,string	niup: bgcolor(ih: FileDlg_t; value: string)	
bgcolor=	niup.html#bgcolor=,FileDlg_t,int,int,int,int	niup: bgcolor=(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FileDlg_t,int,int,int,int	niup: bgcolor(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FileDlg_t	niup: bgcolor(ih: FileDlg_t): string	
border=	niup.html#border=,FileDlg_t,string	niup: border=(ih: FileDlg_t; value: string)	
border	niup.html#border,FileDlg_t,string	niup: border(ih: FileDlg_t; value: string)	
border=	niup.html#border=,FileDlg_t,bool	niup: border=(ih: FileDlg_t; yes: bool)	
border	niup.html#border,FileDlg_t,bool	niup: border(ih: FileDlg_t; yes: bool)	
border	niup.html#border,FileDlg_t	niup: border(ih: FileDlg_t): bool	
bordersize	niup.html#bordersize,FileDlg_t	niup: bordersize(ih: FileDlg_t): string	
bringfront=	niup.html#bringfront=,FileDlg_t,string	niup: bringfront=(ih: FileDlg_t; value: string)	
bringfront	niup.html#bringfront,FileDlg_t,string	niup: bringfront(ih: FileDlg_t; value: string)	
bringfront=	niup.html#bringfront=,FileDlg_t,bool	niup: bringfront=(ih: FileDlg_t; yes: bool)	
bringfront	niup.html#bringfront,FileDlg_t,bool	niup: bringfront(ih: FileDlg_t; yes: bool)	
bringfront	niup.html#bringfront,FileDlg_t	niup: bringfront(ih: FileDlg_t): bool	
canfocus=	niup.html#canfocus=,FileDlg_t,string	niup: canfocus=(ih: FileDlg_t; value: string)	
canfocus	niup.html#canfocus,FileDlg_t,string	niup: canfocus(ih: FileDlg_t; value: string)	
canfocus=	niup.html#canfocus=,FileDlg_t,bool	niup: canfocus=(ih: FileDlg_t; yes: bool)	
canfocus	niup.html#canfocus,FileDlg_t,bool	niup: canfocus(ih: FileDlg_t; yes: bool)	
canfocus	niup.html#canfocus,FileDlg_t	niup: canfocus(ih: FileDlg_t): bool	
charsize	niup.html#charsize,FileDlg_t	niup: charsize(ih: FileDlg_t): string	
childoffset=	niup.html#childoffset=,FileDlg_t,string	niup: childoffset=(ih: FileDlg_t; value: string)	
childoffset	niup.html#childoffset,FileDlg_t,string	niup: childoffset(ih: FileDlg_t; value: string)	
childoffset=	niup.html#childoffset=,FileDlg_t,int,int	niup: childoffset=(ih: FileDlg_t; width, height: int)	
childoffset	niup.html#childoffset,FileDlg_t,int,int	niup: childoffset(ih: FileDlg_t; width, height: int)	
childoffset	niup.html#childoffset,FileDlg_t	niup: childoffset(ih: FileDlg_t): string	
clientoffset	niup.html#clientoffset,FileDlg_t	niup: clientoffset(ih: FileDlg_t): string	
clientsize=	niup.html#clientsize=,FileDlg_t,string	niup: clientsize=(ih: FileDlg_t; value: string)	
clientsize	niup.html#clientsize,FileDlg_t,string	niup: clientsize(ih: FileDlg_t; value: string)	
clientsize=	niup.html#clientsize=,FileDlg_t,int,int	niup: clientsize=(ih: FileDlg_t; width, height: int)	
clientsize	niup.html#clientsize,FileDlg_t,int,int	niup: clientsize(ih: FileDlg_t; width, height: int)	
clientsize	niup.html#clientsize,FileDlg_t	niup: clientsize(ih: FileDlg_t): string	
composited=	niup.html#composited=,FileDlg_t,string	niup: composited=(ih: FileDlg_t; value: string)	
composited	niup.html#composited,FileDlg_t,string	niup: composited(ih: FileDlg_t; value: string)	
composited=	niup.html#composited=,FileDlg_t,bool	niup: composited=(ih: FileDlg_t; yes: bool)	
composited	niup.html#composited,FileDlg_t,bool	niup: composited(ih: FileDlg_t; yes: bool)	
composited	niup.html#composited,FileDlg_t	niup: composited(ih: FileDlg_t): bool	
control=	niup.html#control=,FileDlg_t,string	niup: control=(ih: FileDlg_t; value: string)	
control	niup.html#control,FileDlg_t,string	niup: control(ih: FileDlg_t; value: string)	
control=	niup.html#control=,FileDlg_t,bool	niup: control=(ih: FileDlg_t; yes: bool)	
control	niup.html#control,FileDlg_t,bool	niup: control(ih: FileDlg_t; yes: bool)	
control	niup.html#control,FileDlg_t	niup: control(ih: FileDlg_t): bool	
cursor=	niup.html#cursor=,FileDlg_t,	niup: cursor=(ih: FileDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FileDlg_t,	niup: cursor(ih: FileDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FileDlg_t	niup: cursor(ih: FileDlg_t): string	
customframe=	niup.html#customframe=,FileDlg_t,string	niup: customframe=(ih: FileDlg_t; value: string)	
customframe	niup.html#customframe,FileDlg_t,string	niup: customframe(ih: FileDlg_t; value: string)	
customframe=	niup.html#customframe=,FileDlg_t,bool	niup: customframe=(ih: FileDlg_t; yes: bool)	
customframe	niup.html#customframe,FileDlg_t,bool	niup: customframe(ih: FileDlg_t; yes: bool)	
customframe	niup.html#customframe,FileDlg_t	niup: customframe(ih: FileDlg_t): bool	
customframesimulate=	niup.html#customframesimulate=,FileDlg_t,string	niup: customframesimulate=(ih: FileDlg_t; value: string)	
customframesimulate	niup.html#customframesimulate,FileDlg_t,string	niup: customframesimulate(ih: FileDlg_t; value: string)	
customframesimulate=	niup.html#customframesimulate=,FileDlg_t,bool	niup: customframesimulate=(ih: FileDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,FileDlg_t,bool	niup: customframesimulate(ih: FileDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,FileDlg_t	niup: customframesimulate(ih: FileDlg_t): bool	
defaultenter=	niup.html#defaultenter=,FileDlg_t,IUPhandle_t	niup: defaultenter=(ih: FileDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,FileDlg_t,IUPhandle_t	niup: defaultenter(ih: FileDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,FileDlg_t	niup: defaultenter(ih: FileDlg_t): string	
defaultesc=	niup.html#defaultesc=,FileDlg_t,IUPhandle_t	niup: defaultesc=(ih: FileDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,FileDlg_t,IUPhandle_t	niup: defaultesc(ih: FileDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,FileDlg_t	niup: defaultesc(ih: FileDlg_t): string	
dialogframe=	niup.html#dialogframe=,FileDlg_t,string	niup: dialogframe=(ih: FileDlg_t; value: string)	
dialogframe	niup.html#dialogframe,FileDlg_t,string	niup: dialogframe(ih: FileDlg_t; value: string)	
dialogframe=	niup.html#dialogframe=,FileDlg_t,bool	niup: dialogframe=(ih: FileDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,FileDlg_t,bool	niup: dialogframe(ih: FileDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,FileDlg_t	niup: dialogframe(ih: FileDlg_t): bool	
dialoghint=	niup.html#dialoghint=,FileDlg_t,string	niup: dialoghint=(ih: FileDlg_t; value: string)	
dialoghint	niup.html#dialoghint,FileDlg_t,string	niup: dialoghint(ih: FileDlg_t; value: string)	
dialoghint=	niup.html#dialoghint=,FileDlg_t,bool	niup: dialoghint=(ih: FileDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,FileDlg_t,bool	niup: dialoghint(ih: FileDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,FileDlg_t	niup: dialoghint(ih: FileDlg_t): bool	
dialogtype=	niup.html#dialogtype=,FileDlg_t,string	niup: dialogtype=(ih: FileDlg_t; value: string)	
dialogtype	niup.html#dialogtype,FileDlg_t,string	niup: dialogtype(ih: FileDlg_t; value: string)	
dialogtype	niup.html#dialogtype,FileDlg_t	niup: dialogtype(ih: FileDlg_t): string	
directory=	niup.html#directory=,FileDlg_t,string	niup: directory=(ih: FileDlg_t; value: string)	
directory	niup.html#directory,FileDlg_t,string	niup: directory(ih: FileDlg_t; value: string)	
directory	niup.html#directory,FileDlg_t	niup: directory(ih: FileDlg_t): string	
dragdrop=	niup.html#dragdrop=,FileDlg_t,string	niup: dragdrop=(ih: FileDlg_t; value: string)	
dragdrop	niup.html#dragdrop,FileDlg_t,string	niup: dragdrop(ih: FileDlg_t; value: string)	
dragdrop=	niup.html#dragdrop=,FileDlg_t,bool	niup: dragdrop=(ih: FileDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,FileDlg_t,bool	niup: dragdrop(ih: FileDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,FileDlg_t	niup: dragdrop(ih: FileDlg_t): bool	
dragsource=	niup.html#dragsource=,FileDlg_t,string	niup: dragsource=(ih: FileDlg_t; value: string)	
dragsource	niup.html#dragsource,FileDlg_t,string	niup: dragsource(ih: FileDlg_t; value: string)	
dragsource=	niup.html#dragsource=,FileDlg_t,bool	niup: dragsource=(ih: FileDlg_t; yes: bool)	
dragsource	niup.html#dragsource,FileDlg_t,bool	niup: dragsource(ih: FileDlg_t; yes: bool)	
dragsource	niup.html#dragsource,FileDlg_t	niup: dragsource(ih: FileDlg_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FileDlg_t,string	niup: dragsourcemove=(ih: FileDlg_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FileDlg_t,string	niup: dragsourcemove(ih: FileDlg_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FileDlg_t,bool	niup: dragsourcemove=(ih: FileDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FileDlg_t,bool	niup: dragsourcemove(ih: FileDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FileDlg_t	niup: dragsourcemove(ih: FileDlg_t): bool	
dragtypes=	niup.html#dragtypes=,FileDlg_t,string	niup: dragtypes=(ih: FileDlg_t; value: string)	
dragtypes	niup.html#dragtypes,FileDlg_t,string	niup: dragtypes(ih: FileDlg_t; value: string)	
dragtypes	niup.html#dragtypes,FileDlg_t	niup: dragtypes(ih: FileDlg_t): string	
dropfilestarget=	niup.html#dropfilestarget=,FileDlg_t,string	niup: dropfilestarget=(ih: FileDlg_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FileDlg_t,string	niup: dropfilestarget(ih: FileDlg_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FileDlg_t,bool	niup: dropfilestarget=(ih: FileDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FileDlg_t,bool	niup: dropfilestarget(ih: FileDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FileDlg_t	niup: dropfilestarget(ih: FileDlg_t): bool	
droptarget=	niup.html#droptarget=,FileDlg_t,string	niup: droptarget=(ih: FileDlg_t; value: string)	
droptarget	niup.html#droptarget,FileDlg_t,string	niup: droptarget(ih: FileDlg_t; value: string)	
droptarget=	niup.html#droptarget=,FileDlg_t,bool	niup: droptarget=(ih: FileDlg_t; yes: bool)	
droptarget	niup.html#droptarget,FileDlg_t,bool	niup: droptarget(ih: FileDlg_t; yes: bool)	
droptarget	niup.html#droptarget,FileDlg_t	niup: droptarget(ih: FileDlg_t): bool	
droptypes=	niup.html#droptypes=,FileDlg_t,string	niup: droptypes=(ih: FileDlg_t; value: string)	
droptypes	niup.html#droptypes,FileDlg_t,string	niup: droptypes(ih: FileDlg_t; value: string)	
droptypes	niup.html#droptypes,FileDlg_t	niup: droptypes(ih: FileDlg_t): string	
expand=	niup.html#expand=,FileDlg_t,string	niup: expand=(ih: FileDlg_t; value: string)	
expand	niup.html#expand,FileDlg_t,string	niup: expand(ih: FileDlg_t; value: string)	
expand	niup.html#expand,FileDlg_t	niup: expand(ih: FileDlg_t): string	
expandweight=	niup.html#expandweight=,FileDlg_t,string	niup: expandweight=(ih: FileDlg_t; value: string)	
expandweight	niup.html#expandweight,FileDlg_t,string	niup: expandweight(ih: FileDlg_t; value: string)	
expandweight=	niup.html#expandweight=,FileDlg_t,int64	niup: expandweight=(ih: FileDlg_t; x: int64)	
expandweight	niup.html#expandweight,FileDlg_t,int64	niup: expandweight(ih: FileDlg_t; x: int64)	
expandweight	niup.html#expandweight,FileDlg_t	niup: expandweight(ih: FileDlg_t): string	
extdefault=	niup.html#extdefault=,FileDlg_t,string	niup: extdefault=(ih: FileDlg_t; value: string)	
extdefault	niup.html#extdefault,FileDlg_t,string	niup: extdefault(ih: FileDlg_t; value: string)	
extdefault	niup.html#extdefault,FileDlg_t	niup: extdefault(ih: FileDlg_t): string	
extfilter=	niup.html#extfilter=,FileDlg_t,string	niup: extfilter=(ih: FileDlg_t; value: string)	
extfilter	niup.html#extfilter,FileDlg_t,string	niup: extfilter(ih: FileDlg_t; value: string)	
extfilter	niup.html#extfilter,FileDlg_t	niup: extfilter(ih: FileDlg_t): string	
file	niup.html#file,FileDlg_t	niup: file(ih: FileDlg_t): string	
fileexist	niup.html#fileexist,FileDlg_t	niup: fileexist(ih: FileDlg_t): string	
filter=	niup.html#filter=,FileDlg_t,string	niup: filter=(ih: FileDlg_t; value: string)	
filter	niup.html#filter,FileDlg_t,string	niup: filter(ih: FileDlg_t; value: string)	
filter	niup.html#filter,FileDlg_t	niup: filter(ih: FileDlg_t): string	
filterinfo	niup.html#filterinfo,FileDlg_t	niup: filterinfo(ih: FileDlg_t): string	
filterused	niup.html#filterused,FileDlg_t	niup: filterused(ih: FileDlg_t): string	
floating=	niup.html#floating=,FileDlg_t,string	niup: floating=(ih: FileDlg_t; value: string)	
floating	niup.html#floating,FileDlg_t,string	niup: floating(ih: FileDlg_t; value: string)	
floating	niup.html#floating,FileDlg_t	niup: floating(ih: FileDlg_t): string	
font=	niup.html#font=,FileDlg_t,string	niup: font=(ih: FileDlg_t; value: string)	
font	niup.html#font,FileDlg_t,string	niup: font(ih: FileDlg_t; value: string)	
font	niup.html#font,FileDlg_t	niup: font(ih: FileDlg_t): string	
fontface=	niup.html#fontface=,FileDlg_t,string	niup: fontface=(ih: FileDlg_t; value: string)	
fontface	niup.html#fontface,FileDlg_t,string	niup: fontface(ih: FileDlg_t; value: string)	
fontface	niup.html#fontface,FileDlg_t	niup: fontface(ih: FileDlg_t): string	
fontsize=	niup.html#fontsize=,FileDlg_t,string	niup: fontsize=(ih: FileDlg_t; value: string)	
fontsize	niup.html#fontsize,FileDlg_t,string	niup: fontsize(ih: FileDlg_t; value: string)	
fontsize=	niup.html#fontsize=,FileDlg_t,int	niup: fontsize=(ih: FileDlg_t; x: int)	
fontsize	niup.html#fontsize,FileDlg_t,int	niup: fontsize(ih: FileDlg_t; x: int)	
fontsize	niup.html#fontsize,FileDlg_t	niup: fontsize(ih: FileDlg_t): string	
fontstyle=	niup.html#fontstyle=,FileDlg_t,string	niup: fontstyle=(ih: FileDlg_t; value: string)	
fontstyle	niup.html#fontstyle,FileDlg_t,string	niup: fontstyle(ih: FileDlg_t; value: string)	
fontstyle	niup.html#fontstyle,FileDlg_t	niup: fontstyle(ih: FileDlg_t): string	
fullscreen=	niup.html#fullscreen=,FileDlg_t,string	niup: fullscreen=(ih: FileDlg_t; value: string)	
fullscreen	niup.html#fullscreen,FileDlg_t,string	niup: fullscreen(ih: FileDlg_t; value: string)	
fullscreen=	niup.html#fullscreen=,FileDlg_t,bool	niup: fullscreen=(ih: FileDlg_t; yes: bool)	
fullscreen	niup.html#fullscreen,FileDlg_t,bool	niup: fullscreen(ih: FileDlg_t; yes: bool)	
handlename=	niup.html#handlename=,FileDlg_t,string	niup: handlename=(ih: FileDlg_t; value: string)	
handlename	niup.html#handlename,FileDlg_t,string	niup: handlename(ih: FileDlg_t; value: string)	
handlename	niup.html#handlename,FileDlg_t	niup: handlename(ih: FileDlg_t): string	
helpbutton=	niup.html#helpbutton=,FileDlg_t,string	niup: helpbutton=(ih: FileDlg_t; value: string)	
helpbutton	niup.html#helpbutton,FileDlg_t,string	niup: helpbutton(ih: FileDlg_t; value: string)	
helpbutton=	niup.html#helpbutton=,FileDlg_t,bool	niup: helpbutton=(ih: FileDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,FileDlg_t,bool	niup: helpbutton(ih: FileDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,FileDlg_t	niup: helpbutton(ih: FileDlg_t): bool	
hidetaskbar=	niup.html#hidetaskbar=,FileDlg_t,string	niup: hidetaskbar=(ih: FileDlg_t; value: string)	
hidetaskbar	niup.html#hidetaskbar,FileDlg_t,string	niup: hidetaskbar(ih: FileDlg_t; value: string)	
hidetaskbar=	niup.html#hidetaskbar=,FileDlg_t,bool	niup: hidetaskbar=(ih: FileDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,FileDlg_t,bool	niup: hidetaskbar(ih: FileDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,FileDlg_t	niup: hidetaskbar(ih: FileDlg_t): bool	
hidetitlebar=	niup.html#hidetitlebar=,FileDlg_t,string	niup: hidetitlebar=(ih: FileDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,FileDlg_t,string	niup: hidetitlebar(ih: FileDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,FileDlg_t	niup: hidetitlebar(ih: FileDlg_t): string	
icon=	niup.html#icon=,FileDlg_t,string	niup: icon=(ih: FileDlg_t; value: string)	
icon	niup.html#icon,FileDlg_t,string	niup: icon(ih: FileDlg_t; value: string)	
icon	niup.html#icon,FileDlg_t	niup: icon(ih: FileDlg_t): string	
maxbox=	niup.html#maxbox=,FileDlg_t,string	niup: maxbox=(ih: FileDlg_t; value: string)	
maxbox	niup.html#maxbox,FileDlg_t,string	niup: maxbox(ih: FileDlg_t; value: string)	
maxbox=	niup.html#maxbox=,FileDlg_t,bool	niup: maxbox=(ih: FileDlg_t; yes: bool)	
maxbox	niup.html#maxbox,FileDlg_t,bool	niup: maxbox(ih: FileDlg_t; yes: bool)	
maxbox	niup.html#maxbox,FileDlg_t	niup: maxbox(ih: FileDlg_t): bool	
maximized	niup.html#maximized,FileDlg_t	niup: maximized(ih: FileDlg_t): bool	
maxsize=	niup.html#maxsize=,FileDlg_t,string	niup: maxsize=(ih: FileDlg_t; value: string)	
maxsize	niup.html#maxsize,FileDlg_t,string	niup: maxsize(ih: FileDlg_t; value: string)	
maxsize=	niup.html#maxsize=,FileDlg_t,int,int	niup: maxsize=(ih: FileDlg_t; width, height: int)	
maxsize	niup.html#maxsize,FileDlg_t,int,int	niup: maxsize(ih: FileDlg_t; width, height: int)	
maxsize	niup.html#maxsize,FileDlg_t	niup: maxsize(ih: FileDlg_t): string	
mdichild=	niup.html#mdichild=,FileDlg_t,string	niup: mdichild=(ih: FileDlg_t; value: string)	
mdichild	niup.html#mdichild,FileDlg_t,string	niup: mdichild(ih: FileDlg_t; value: string)	
mdichild=	niup.html#mdichild=,FileDlg_t,bool	niup: mdichild=(ih: FileDlg_t; yes: bool)	
mdichild	niup.html#mdichild,FileDlg_t,bool	niup: mdichild(ih: FileDlg_t; yes: bool)	
mdichild	niup.html#mdichild,FileDlg_t	niup: mdichild(ih: FileDlg_t): bool	
mdiclient=	niup.html#mdiclient=,FileDlg_t,string	niup: mdiclient=(ih: FileDlg_t; value: string)	
mdiclient	niup.html#mdiclient,FileDlg_t,string	niup: mdiclient(ih: FileDlg_t; value: string)	
mdiclient=	niup.html#mdiclient=,FileDlg_t,bool	niup: mdiclient=(ih: FileDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,FileDlg_t,bool	niup: mdiclient(ih: FileDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,FileDlg_t	niup: mdiclient(ih: FileDlg_t): bool	
mdiframe=	niup.html#mdiframe=,FileDlg_t,string	niup: mdiframe=(ih: FileDlg_t; value: string)	
mdiframe	niup.html#mdiframe,FileDlg_t,string	niup: mdiframe(ih: FileDlg_t; value: string)	
mdiframe=	niup.html#mdiframe=,FileDlg_t,bool	niup: mdiframe=(ih: FileDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,FileDlg_t,bool	niup: mdiframe(ih: FileDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,FileDlg_t	niup: mdiframe(ih: FileDlg_t): bool	
mdimenu=	niup.html#mdimenu=,FileDlg_t,Menu_t	niup: mdimenu=(ih: FileDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,FileDlg_t,Menu_t	niup: mdimenu(ih: FileDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,FileDlg_t	niup: mdimenu(ih: FileDlg_t): string	
menu=	niup.html#menu=,FileDlg_t,Menu_t	niup: menu=(ih: FileDlg_t; handle: Menu_t)	
menu	niup.html#menu,FileDlg_t,Menu_t	niup: menu(ih: FileDlg_t; handle: Menu_t)	
menu	niup.html#menu,FileDlg_t	niup: menu(ih: FileDlg_t): string	
menubox=	niup.html#menubox=,FileDlg_t,string	niup: menubox=(ih: FileDlg_t; value: string)	
menubox	niup.html#menubox,FileDlg_t,string	niup: menubox(ih: FileDlg_t; value: string)	
menubox=	niup.html#menubox=,FileDlg_t,bool	niup: menubox=(ih: FileDlg_t; yes: bool)	
menubox	niup.html#menubox,FileDlg_t,bool	niup: menubox(ih: FileDlg_t; yes: bool)	
menubox	niup.html#menubox,FileDlg_t	niup: menubox(ih: FileDlg_t): bool	
minbox=	niup.html#minbox=,FileDlg_t,string	niup: minbox=(ih: FileDlg_t; value: string)	
minbox	niup.html#minbox,FileDlg_t,string	niup: minbox(ih: FileDlg_t; value: string)	
minbox=	niup.html#minbox=,FileDlg_t,bool	niup: minbox=(ih: FileDlg_t; yes: bool)	
minbox	niup.html#minbox,FileDlg_t,bool	niup: minbox(ih: FileDlg_t; yes: bool)	
minbox	niup.html#minbox,FileDlg_t	niup: minbox(ih: FileDlg_t): bool	
minsize=	niup.html#minsize=,FileDlg_t,string	niup: minsize=(ih: FileDlg_t; value: string)	
minsize	niup.html#minsize,FileDlg_t,string	niup: minsize(ih: FileDlg_t; value: string)	
minsize=	niup.html#minsize=,FileDlg_t,int,int	niup: minsize=(ih: FileDlg_t; width, height: int)	
minsize	niup.html#minsize,FileDlg_t,int,int	niup: minsize(ih: FileDlg_t; width, height: int)	
minsize	niup.html#minsize,FileDlg_t	niup: minsize(ih: FileDlg_t): string	
modal	niup.html#modal,FileDlg_t	niup: modal(ih: FileDlg_t): bool	
multiplefiles	niup.html#multiplefiles,FileDlg_t	niup: multiplefiles(ih: FileDlg_t): string	
multivaluepath	niup.html#multivaluepath,FileDlg_t	niup: multivaluepath(ih: FileDlg_t): string	
nactive=	niup.html#nactive=,FileDlg_t,string	niup: nactive=(ih: FileDlg_t; value: string)	
nactive	niup.html#nactive,FileDlg_t,string	niup: nactive(ih: FileDlg_t; value: string)	
nactive=	niup.html#nactive=,FileDlg_t,bool	niup: nactive=(ih: FileDlg_t; yes: bool)	
nactive	niup.html#nactive,FileDlg_t,bool	niup: nactive(ih: FileDlg_t; yes: bool)	
nactive	niup.html#nactive,FileDlg_t	niup: nactive(ih: FileDlg_t): bool	
name=	niup.html#name=,FileDlg_t,string	niup: name=(ih: FileDlg_t; value: string)	
name	niup.html#name,FileDlg_t,string	niup: name(ih: FileDlg_t; value: string)	
name	niup.html#name,FileDlg_t	niup: name(ih: FileDlg_t): string	
nativeparent=	niup.html#nativeparent=,FileDlg_t,User_t	niup: nativeparent=(ih: FileDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,FileDlg_t,User_t	niup: nativeparent(ih: FileDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,FileDlg_t	niup: nativeparent(ih: FileDlg_t): string	
naturalsize	niup.html#naturalsize,FileDlg_t	niup: naturalsize(ih: FileDlg_t): string	
nochangedir=	niup.html#nochangedir=,FileDlg_t,string	niup: nochangedir=(ih: FileDlg_t; value: string)	
nochangedir	niup.html#nochangedir,FileDlg_t,string	niup: nochangedir(ih: FileDlg_t; value: string)	
nochangedir=	niup.html#nochangedir=,FileDlg_t,bool	niup: nochangedir=(ih: FileDlg_t; yes: bool)	
nochangedir	niup.html#nochangedir,FileDlg_t,bool	niup: nochangedir(ih: FileDlg_t; yes: bool)	
nochangedir	niup.html#nochangedir,FileDlg_t	niup: nochangedir(ih: FileDlg_t): bool	
noflush=	niup.html#noflush=,FileDlg_t,string	niup: noflush=(ih: FileDlg_t; value: string)	
noflush	niup.html#noflush,FileDlg_t,string	niup: noflush(ih: FileDlg_t; value: string)	
noflush=	niup.html#noflush=,FileDlg_t,bool	niup: noflush=(ih: FileDlg_t; yes: bool)	
noflush	niup.html#noflush,FileDlg_t,bool	niup: noflush(ih: FileDlg_t; yes: bool)	
noflush	niup.html#noflush,FileDlg_t	niup: noflush(ih: FileDlg_t): bool	
nooverwriteprompt=	niup.html#nooverwriteprompt=,FileDlg_t,string	niup: nooverwriteprompt=(ih: FileDlg_t; value: string)	
nooverwriteprompt	niup.html#nooverwriteprompt,FileDlg_t,string	niup: nooverwriteprompt(ih: FileDlg_t; value: string)	
nooverwriteprompt=	niup.html#nooverwriteprompt=,FileDlg_t,bool	niup: nooverwriteprompt=(ih: FileDlg_t; yes: bool)	
nooverwriteprompt	niup.html#nooverwriteprompt,FileDlg_t,bool	niup: nooverwriteprompt(ih: FileDlg_t; yes: bool)	
nooverwriteprompt	niup.html#nooverwriteprompt,FileDlg_t	niup: nooverwriteprompt(ih: FileDlg_t): bool	
normalizergroup=	niup.html#normalizergroup=,FileDlg_t,string	niup: normalizergroup=(ih: FileDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,FileDlg_t,string	niup: normalizergroup(ih: FileDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,FileDlg_t	niup: normalizergroup(ih: FileDlg_t): string	
ntheme=	niup.html#ntheme=,FileDlg_t,string	niup: ntheme=(ih: FileDlg_t; value: string)	
ntheme	niup.html#ntheme,FileDlg_t,string	niup: ntheme(ih: FileDlg_t; value: string)	
ntheme	niup.html#ntheme,FileDlg_t	niup: ntheme(ih: FileDlg_t): string	
opacity=	niup.html#opacity=,FileDlg_t,string	niup: opacity=(ih: FileDlg_t; value: string)	
opacity	niup.html#opacity,FileDlg_t,string	niup: opacity(ih: FileDlg_t; value: string)	
opacity=	niup.html#opacity=,FileDlg_t,int	niup: opacity=(ih: FileDlg_t; x: int)	
opacity	niup.html#opacity,FileDlg_t,int	niup: opacity(ih: FileDlg_t; x: int)	
opacity	niup.html#opacity,FileDlg_t	niup: opacity(ih: FileDlg_t): string	
opacityimage=	niup.html#opacityimage=,FileDlg_t,string	niup: opacityimage=(ih: FileDlg_t; value: string)	
opacityimage	niup.html#opacityimage,FileDlg_t,string	niup: opacityimage(ih: FileDlg_t; value: string)	
opacityimage	niup.html#opacityimage,FileDlg_t	niup: opacityimage(ih: FileDlg_t): string	
pangofontdesc	niup.html#pangofontdesc,FileDlg_t	niup: pangofontdesc(ih: FileDlg_t): string	
pangolayout	niup.html#pangolayout,FileDlg_t	niup: pangolayout(ih: FileDlg_t): string	
parentdialog=	niup.html#parentdialog=,FileDlg_t,IUPhandle_t	niup: parentdialog=(ih: FileDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,FileDlg_t,IUPhandle_t	niup: parentdialog(ih: FileDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,FileDlg_t	niup: parentdialog(ih: FileDlg_t): string	
placement=	niup.html#placement=,FileDlg_t,string	niup: placement=(ih: FileDlg_t; value: string)	
placement	niup.html#placement,FileDlg_t,string	niup: placement(ih: FileDlg_t; value: string)	
placement	niup.html#placement,FileDlg_t	niup: placement(ih: FileDlg_t): string	
position=	niup.html#position=,FileDlg_t,string	niup: position=(ih: FileDlg_t; value: string)	
position	niup.html#position,FileDlg_t,string	niup: position(ih: FileDlg_t; value: string)	
position=	niup.html#position=,FileDlg_t,int,int	niup: position=(ih: FileDlg_t; x, y: int)	
position	niup.html#position,FileDlg_t,int,int	niup: position(ih: FileDlg_t; x, y: int)	
position	niup.html#position,FileDlg_t	niup: position(ih: FileDlg_t): string	
previewdc	niup.html#previewdc,FileDlg_t	niup: previewdc(ih: FileDlg_t): string	
previewheight	niup.html#previewheight,FileDlg_t	niup: previewheight(ih: FileDlg_t): string	
previewwidth	niup.html#previewwidth,FileDlg_t	niup: previewwidth(ih: FileDlg_t): string	
propagatefocus=	niup.html#propagatefocus=,FileDlg_t,string	niup: propagatefocus=(ih: FileDlg_t; value: string)	
propagatefocus	niup.html#propagatefocus,FileDlg_t,string	niup: propagatefocus(ih: FileDlg_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FileDlg_t,bool	niup: propagatefocus=(ih: FileDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FileDlg_t,bool	niup: propagatefocus(ih: FileDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FileDlg_t	niup: propagatefocus(ih: FileDlg_t): bool	
rastersize=	niup.html#rastersize=,FileDlg_t,string	niup: rastersize=(ih: FileDlg_t; value: string)	
rastersize	niup.html#rastersize,FileDlg_t,string	niup: rastersize(ih: FileDlg_t; value: string)	
rastersize=	niup.html#rastersize=,FileDlg_t,int,int	niup: rastersize=(ih: FileDlg_t; width, height: int)	
rastersize	niup.html#rastersize,FileDlg_t,int,int	niup: rastersize(ih: FileDlg_t; width, height: int)	
rastersize	niup.html#rastersize,FileDlg_t	niup: rastersize(ih: FileDlg_t): string	
resize=	niup.html#resize=,FileDlg_t,string	niup: resize=(ih: FileDlg_t; value: string)	
resize	niup.html#resize,FileDlg_t,string	niup: resize(ih: FileDlg_t; value: string)	
resize=	niup.html#resize=,FileDlg_t,bool	niup: resize=(ih: FileDlg_t; yes: bool)	
resize	niup.html#resize,FileDlg_t,bool	niup: resize(ih: FileDlg_t; yes: bool)	
resize	niup.html#resize,FileDlg_t	niup: resize(ih: FileDlg_t): bool	
saveunder=	niup.html#saveunder=,FileDlg_t,string	niup: saveunder=(ih: FileDlg_t; value: string)	
saveunder	niup.html#saveunder,FileDlg_t,string	niup: saveunder(ih: FileDlg_t; value: string)	
saveunder=	niup.html#saveunder=,FileDlg_t,bool	niup: saveunder=(ih: FileDlg_t; yes: bool)	
saveunder	niup.html#saveunder,FileDlg_t,bool	niup: saveunder(ih: FileDlg_t; yes: bool)	
saveunder	niup.html#saveunder,FileDlg_t	niup: saveunder(ih: FileDlg_t): bool	
screenposition	niup.html#screenposition,FileDlg_t	niup: screenposition(ih: FileDlg_t): string	
shapeimage=	niup.html#shapeimage=,FileDlg_t,string	niup: shapeimage=(ih: FileDlg_t; value: string)	
shapeimage	niup.html#shapeimage,FileDlg_t,string	niup: shapeimage(ih: FileDlg_t; value: string)	
shapeimage	niup.html#shapeimage,FileDlg_t	niup: shapeimage(ih: FileDlg_t): string	
showhidden	niup.html#showhidden,FileDlg_t	niup: showhidden(ih: FileDlg_t): string	
shownofocus=	niup.html#shownofocus=,FileDlg_t,string	niup: shownofocus=(ih: FileDlg_t; value: string)	
shownofocus	niup.html#shownofocus,FileDlg_t,string	niup: shownofocus(ih: FileDlg_t; value: string)	
shownofocus=	niup.html#shownofocus=,FileDlg_t,bool	niup: shownofocus=(ih: FileDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,FileDlg_t,bool	niup: shownofocus(ih: FileDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,FileDlg_t	niup: shownofocus(ih: FileDlg_t): bool	
showpreview=	niup.html#showpreview=,FileDlg_t,string	niup: showpreview=(ih: FileDlg_t; value: string)	
showpreview	niup.html#showpreview,FileDlg_t,string	niup: showpreview(ih: FileDlg_t; value: string)	
showpreview	niup.html#showpreview,FileDlg_t	niup: showpreview(ih: FileDlg_t): string	
shrink=	niup.html#shrink=,FileDlg_t,string	niup: shrink=(ih: FileDlg_t; value: string)	
shrink	niup.html#shrink,FileDlg_t,string	niup: shrink(ih: FileDlg_t; value: string)	
shrink=	niup.html#shrink=,FileDlg_t,bool	niup: shrink=(ih: FileDlg_t; yes: bool)	
shrink	niup.html#shrink,FileDlg_t,bool	niup: shrink(ih: FileDlg_t; yes: bool)	
shrink	niup.html#shrink,FileDlg_t	niup: shrink(ih: FileDlg_t): bool	
simulatemodal=	niup.html#simulatemodal=,FileDlg_t,string	niup: simulatemodal=(ih: FileDlg_t; value: string)	
simulatemodal	niup.html#simulatemodal,FileDlg_t,string	niup: simulatemodal(ih: FileDlg_t; value: string)	
simulatemodal=	niup.html#simulatemodal=,FileDlg_t,bool	niup: simulatemodal=(ih: FileDlg_t; yes: bool)	
simulatemodal	niup.html#simulatemodal,FileDlg_t,bool	niup: simulatemodal(ih: FileDlg_t; yes: bool)	
size=	niup.html#size=,FileDlg_t,string	niup: size=(ih: FileDlg_t; value: string)	
size	niup.html#size,FileDlg_t,string	niup: size(ih: FileDlg_t; value: string)	
size=	niup.html#size=,FileDlg_t,int,int	niup: size=(ih: FileDlg_t; width, height: int)	
size	niup.html#size,FileDlg_t,int,int	niup: size(ih: FileDlg_t; width, height: int)	
size=	niup.html#size=,FileDlg_t,string,int	niup: size=(ih: FileDlg_t; width: string; height: int)	
size	niup.html#size,FileDlg_t,string,int	niup: size(ih: FileDlg_t; width: string; height: int)	
size=	niup.html#size=,FileDlg_t,int,string	niup: size=(ih: FileDlg_t; width: int; height: string)	
size	niup.html#size,FileDlg_t,int,string	niup: size(ih: FileDlg_t; width: int; height: string)	
size	niup.html#size,FileDlg_t	niup: size(ih: FileDlg_t): string	
startfocus=	niup.html#startfocus=,FileDlg_t,string	niup: startfocus=(ih: FileDlg_t; value: string)	
startfocus	niup.html#startfocus,FileDlg_t,string	niup: startfocus(ih: FileDlg_t; value: string)	
startfocus	niup.html#startfocus,FileDlg_t	niup: startfocus(ih: FileDlg_t): string	
status	niup.html#status,FileDlg_t	niup: status(ih: FileDlg_t): string	
theme=	niup.html#theme=,FileDlg_t,string	niup: theme=(ih: FileDlg_t; value: string)	
theme	niup.html#theme,FileDlg_t,string	niup: theme(ih: FileDlg_t; value: string)	
theme	niup.html#theme,FileDlg_t	niup: theme(ih: FileDlg_t): string	
tip=	niup.html#tip=,FileDlg_t,string	niup: tip=(ih: FileDlg_t; value: string)	
tip	niup.html#tip,FileDlg_t,string	niup: tip(ih: FileDlg_t; value: string)	
tip	niup.html#tip,FileDlg_t	niup: tip(ih: FileDlg_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FileDlg_t,string	niup: tipbgcolor=(ih: FileDlg_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FileDlg_t,string	niup: tipbgcolor(ih: FileDlg_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FileDlg_t,int,int,int,int	niup: tipbgcolor=(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FileDlg_t,int,int,int,int	niup: tipbgcolor(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FileDlg_t	niup: tipbgcolor(ih: FileDlg_t): string	
tipdelay=	niup.html#tipdelay=,FileDlg_t,string	niup: tipdelay=(ih: FileDlg_t; value: string)	
tipdelay	niup.html#tipdelay,FileDlg_t,string	niup: tipdelay(ih: FileDlg_t; value: string)	
tipdelay=	niup.html#tipdelay=,FileDlg_t,int	niup: tipdelay=(ih: FileDlg_t; x: int)	
tipdelay	niup.html#tipdelay,FileDlg_t,int	niup: tipdelay(ih: FileDlg_t; x: int)	
tipdelay	niup.html#tipdelay,FileDlg_t	niup: tipdelay(ih: FileDlg_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FileDlg_t,string	niup: tipfgcolor=(ih: FileDlg_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FileDlg_t,string	niup: tipfgcolor(ih: FileDlg_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FileDlg_t,int,int,int,int	niup: tipfgcolor=(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FileDlg_t,int,int,int,int	niup: tipfgcolor(ih: FileDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FileDlg_t	niup: tipfgcolor(ih: FileDlg_t): string	
tipicon=	niup.html#tipicon=,FileDlg_t,string	niup: tipicon=(ih: FileDlg_t; value: string)	
tipicon	niup.html#tipicon,FileDlg_t,string	niup: tipicon(ih: FileDlg_t; value: string)	
tipicon	niup.html#tipicon,FileDlg_t	niup: tipicon(ih: FileDlg_t): string	
tipmarkup=	niup.html#tipmarkup=,FileDlg_t,string	niup: tipmarkup=(ih: FileDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,FileDlg_t,string	niup: tipmarkup(ih: FileDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,FileDlg_t	niup: tipmarkup(ih: FileDlg_t): string	
tiprect=	niup.html#tiprect=,FileDlg_t,string	niup: tiprect=(ih: FileDlg_t; value: string)	
tiprect	niup.html#tiprect,FileDlg_t,string	niup: tiprect(ih: FileDlg_t; value: string)	
tiprect=	niup.html#tiprect=,FileDlg_t,int,int,int,int	niup: tiprect=(ih: FileDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FileDlg_t,int,int,int,int	niup: tiprect(ih: FileDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FileDlg_t	niup: tiprect(ih: FileDlg_t): string	
tipvisible=	niup.html#tipvisible=,FileDlg_t,string	niup: tipvisible=(ih: FileDlg_t; value: string)	
tipvisible	niup.html#tipvisible,FileDlg_t,string	niup: tipvisible(ih: FileDlg_t; value: string)	
tipvisible=	niup.html#tipvisible=,FileDlg_t,bool	niup: tipvisible=(ih: FileDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,FileDlg_t,bool	niup: tipvisible(ih: FileDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,FileDlg_t	niup: tipvisible(ih: FileDlg_t): bool	
title=	niup.html#title=,FileDlg_t,string	niup: title=(ih: FileDlg_t; value: string)	
title	niup.html#title,FileDlg_t,string	niup: title(ih: FileDlg_t; value: string)	
title	niup.html#title,FileDlg_t	niup: title(ih: FileDlg_t): string	
toolbox=	niup.html#toolbox=,FileDlg_t,string	niup: toolbox=(ih: FileDlg_t; value: string)	
toolbox	niup.html#toolbox,FileDlg_t,string	niup: toolbox(ih: FileDlg_t; value: string)	
toolbox=	niup.html#toolbox=,FileDlg_t,bool	niup: toolbox=(ih: FileDlg_t; yes: bool)	
toolbox	niup.html#toolbox,FileDlg_t,bool	niup: toolbox(ih: FileDlg_t; yes: bool)	
toolbox	niup.html#toolbox,FileDlg_t	niup: toolbox(ih: FileDlg_t): bool	
topmost=	niup.html#topmost=,FileDlg_t,string	niup: topmost=(ih: FileDlg_t; value: string)	
topmost	niup.html#topmost,FileDlg_t,string	niup: topmost(ih: FileDlg_t; value: string)	
topmost=	niup.html#topmost=,FileDlg_t,bool	niup: topmost=(ih: FileDlg_t; yes: bool)	
topmost	niup.html#topmost,FileDlg_t,bool	niup: topmost(ih: FileDlg_t; yes: bool)	
tray=	niup.html#tray=,FileDlg_t,string	niup: tray=(ih: FileDlg_t; value: string)	
tray	niup.html#tray,FileDlg_t,string	niup: tray(ih: FileDlg_t; value: string)	
tray=	niup.html#tray=,FileDlg_t,bool	niup: tray=(ih: FileDlg_t; yes: bool)	
tray	niup.html#tray,FileDlg_t,bool	niup: tray(ih: FileDlg_t; yes: bool)	
tray	niup.html#tray,FileDlg_t	niup: tray(ih: FileDlg_t): bool	
trayimage=	niup.html#trayimage=,FileDlg_t,	niup: trayimage=(ih: FileDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,FileDlg_t,	niup: trayimage(ih: FileDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,FileDlg_t	niup: trayimage(ih: FileDlg_t): string	
traytip=	niup.html#traytip=,FileDlg_t,string	niup: traytip=(ih: FileDlg_t; value: string)	
traytip	niup.html#traytip,FileDlg_t,string	niup: traytip(ih: FileDlg_t; value: string)	
traytip	niup.html#traytip,FileDlg_t	niup: traytip(ih: FileDlg_t): string	
traytipmarkup=	niup.html#traytipmarkup=,FileDlg_t,string	niup: traytipmarkup=(ih: FileDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,FileDlg_t,string	niup: traytipmarkup(ih: FileDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,FileDlg_t	niup: traytipmarkup(ih: FileDlg_t): string	
usersize=	niup.html#usersize=,FileDlg_t,string	niup: usersize=(ih: FileDlg_t; value: string)	
usersize	niup.html#usersize,FileDlg_t,string	niup: usersize(ih: FileDlg_t; value: string)	
usersize=	niup.html#usersize=,FileDlg_t,int,int	niup: usersize=(ih: FileDlg_t; width, height: int)	
usersize	niup.html#usersize,FileDlg_t,int,int	niup: usersize(ih: FileDlg_t; width, height: int)	
usersize	niup.html#usersize,FileDlg_t	niup: usersize(ih: FileDlg_t): string	
value	niup.html#value,FileDlg_t	niup: value(ih: FileDlg_t): string	
visible=	niup.html#visible=,FileDlg_t,string	niup: visible=(ih: FileDlg_t; value: string)	
visible	niup.html#visible,FileDlg_t,string	niup: visible(ih: FileDlg_t; value: string)	
visible=	niup.html#visible=,FileDlg_t,bool	niup: visible=(ih: FileDlg_t; yes: bool)	
visible	niup.html#visible,FileDlg_t,bool	niup: visible(ih: FileDlg_t; yes: bool)	
visible	niup.html#visible,FileDlg_t	niup: visible(ih: FileDlg_t): bool	
wid	niup.html#wid,FileDlg_t	niup: wid(ih: FileDlg_t): string	
x	niup.html#x,FileDlg_t	niup: x(ih: FileDlg_t): string	
xfontid	niup.html#xfontid,FileDlg_t	niup: xfontid(ih: FileDlg_t): string	
xwindow	niup.html#xwindow,FileDlg_t	niup: xwindow(ih: FileDlg_t): string	
y	niup.html#y,FileDlg_t	niup: y(ih: FileDlg_t): string	
zorder=	niup.html#zorder=,FileDlg_t,string	niup: zorder=(ih: FileDlg_t; value: string)	
zorder	niup.html#zorder,FileDlg_t,string	niup: zorder(ih: FileDlg_t; value: string)	
close_cb=	niup.html#close_cb=,FileDlg_t,proc(PIhandle)	niup: close_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,FileDlg_t,proc(PIhandle)	niup: close_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,FileDlg_t	niup: close_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FileDlg_t,proc(PIhandle)	niup: destroy_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FileDlg_t,proc(PIhandle)	niup: destroy_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FileDlg_t	niup: destroy_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FileDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FileDlg_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FileDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FileDlg_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FileDlg_t	niup: dragbegin_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FileDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FileDlg_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FileDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FileDlg_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FileDlg_t	niup: dragdatasize_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FileDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FileDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FileDlg_t	niup: dragdata_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FileDlg_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FileDlg_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FileDlg_t	niup: dragend_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FileDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FileDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FileDlg_t	niup: dropdata_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FileDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FileDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FileDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FileDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                      num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FileDlg_t	niup: dropfiles_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FileDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FileDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FileDlg_t	niup: dropmotion_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FileDlg_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FileDlg_t,proc(PIhandle)	niup: enterwindow_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FileDlg_t	niup: enterwindow_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
file_cb=	niup.html#file_cb=,FileDlg_t,proc(PIhandle,cstring,cstring)	niup: file_cb=(ih: FileDlg_t;\n         cb: proc (ih: PIhandle; arg2: cstring; arg3: cstring): cint {.cdecl.})	
file_cb	niup.html#file_cb,FileDlg_t,proc(PIhandle,cstring,cstring)	niup: file_cb(ih: FileDlg_t;\n        cb: proc (ih: PIhandle; arg2: cstring; arg3: cstring): cint {.cdecl.})	
file_cb	niup.html#file_cb,FileDlg_t	niup: file_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FileDlg_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FileDlg_t,proc(PIhandle,cint)	niup: focus_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FileDlg_t	niup: focus_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FileDlg_t,proc(PIhandle)	niup: getfocus_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FileDlg_t,proc(PIhandle)	niup: getfocus_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FileDlg_t	niup: getfocus_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FileDlg_t,proc(PIhandle)	niup: help_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FileDlg_t,proc(PIhandle)	niup: help_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FileDlg_t	niup: help_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FileDlg_t,proc(PIhandle)	niup: killfocus_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FileDlg_t,proc(PIhandle)	niup: killfocus_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FileDlg_t	niup: killfocus_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FileDlg_t,proc(PIhandle,cint)	niup: k_any=(ih: FileDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FileDlg_t,proc(PIhandle,cint)	niup: k_any(ih: FileDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FileDlg_t	niup: k_any(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FileDlg_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FileDlg_t,proc(PIhandle)	niup: ldestroy_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FileDlg_t	niup: ldestroy_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FileDlg_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FileDlg_t,proc(PIhandle)	niup: leavewindow_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FileDlg_t	niup: leavewindow_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FileDlg_t,proc(PIhandle)	niup: map_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FileDlg_t,proc(PIhandle)	niup: map_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FileDlg_t	niup: map_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FileDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FileDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FileDlg_t	niup: postmessage_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FileDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FileDlg_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FileDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FileDlg_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FileDlg_t	niup: resize_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
show_cb=	niup.html#show_cb=,FileDlg_t,proc(PIhandle,cint)	niup: show_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,FileDlg_t,proc(PIhandle,cint)	niup: show_cb(ih: FileDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,FileDlg_t	niup: show_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
trayclick_cb=	niup.html#trayclick_cb=,FileDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.\n    cdecl.})	
trayclick_cb	niup.html#trayclick_cb,FileDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb(ih: FileDlg_t;\n             cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,FileDlg_t	niup: trayclick_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FileDlg_t,proc(PIhandle)	niup: unmap_cb=(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FileDlg_t,proc(PIhandle)	niup: unmap_cb(ih: FileDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FileDlg_t	niup: unmap_cb(ih: FileDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
Fill	niup.html#Fill_2	niup: Fill(): Fill_t	
active=	niup.html#active=,Fill_t,string	niup: active=(ih: Fill_t; value: string)	
active	niup.html#active,Fill_t,string	niup: active(ih: Fill_t; value: string)	
active=	niup.html#active=,Fill_t,bool	niup: active=(ih: Fill_t; yes: bool)	
active	niup.html#active,Fill_t,bool	niup: active(ih: Fill_t; yes: bool)	
active	niup.html#active,Fill_t	niup: active(ih: Fill_t): bool	
canfocus=	niup.html#canfocus=,Fill_t,string	niup: canfocus=(ih: Fill_t; value: string)	
canfocus	niup.html#canfocus,Fill_t,string	niup: canfocus(ih: Fill_t; value: string)	
canfocus=	niup.html#canfocus=,Fill_t,bool	niup: canfocus=(ih: Fill_t; yes: bool)	
canfocus	niup.html#canfocus,Fill_t,bool	niup: canfocus(ih: Fill_t; yes: bool)	
canfocus	niup.html#canfocus,Fill_t	niup: canfocus(ih: Fill_t): bool	
charsize	niup.html#charsize,Fill_t	niup: charsize(ih: Fill_t): string	
expand=	niup.html#expand=,Fill_t,string	niup: expand=(ih: Fill_t; value: string)	
expand	niup.html#expand,Fill_t,string	niup: expand(ih: Fill_t; value: string)	
expand	niup.html#expand,Fill_t	niup: expand(ih: Fill_t): string	
expandweight=	niup.html#expandweight=,Fill_t,string	niup: expandweight=(ih: Fill_t; value: string)	
expandweight	niup.html#expandweight,Fill_t,string	niup: expandweight(ih: Fill_t; value: string)	
expandweight=	niup.html#expandweight=,Fill_t,int64	niup: expandweight=(ih: Fill_t; x: int64)	
expandweight	niup.html#expandweight,Fill_t,int64	niup: expandweight(ih: Fill_t; x: int64)	
expandweight	niup.html#expandweight,Fill_t	niup: expandweight(ih: Fill_t): string	
floating=	niup.html#floating=,Fill_t,string	niup: floating=(ih: Fill_t; value: string)	
floating	niup.html#floating,Fill_t,string	niup: floating(ih: Fill_t; value: string)	
floating	niup.html#floating,Fill_t	niup: floating(ih: Fill_t): string	
font=	niup.html#font=,Fill_t,string	niup: font=(ih: Fill_t; value: string)	
font	niup.html#font,Fill_t,string	niup: font(ih: Fill_t; value: string)	
font	niup.html#font,Fill_t	niup: font(ih: Fill_t): string	
fontface=	niup.html#fontface=,Fill_t,string	niup: fontface=(ih: Fill_t; value: string)	
fontface	niup.html#fontface,Fill_t,string	niup: fontface(ih: Fill_t; value: string)	
fontface	niup.html#fontface,Fill_t	niup: fontface(ih: Fill_t): string	
fontsize=	niup.html#fontsize=,Fill_t,string	niup: fontsize=(ih: Fill_t; value: string)	
fontsize	niup.html#fontsize,Fill_t,string	niup: fontsize(ih: Fill_t; value: string)	
fontsize=	niup.html#fontsize=,Fill_t,int	niup: fontsize=(ih: Fill_t; x: int)	
fontsize	niup.html#fontsize,Fill_t,int	niup: fontsize(ih: Fill_t; x: int)	
fontsize	niup.html#fontsize,Fill_t	niup: fontsize(ih: Fill_t): string	
fontstyle=	niup.html#fontstyle=,Fill_t,string	niup: fontstyle=(ih: Fill_t; value: string)	
fontstyle	niup.html#fontstyle,Fill_t,string	niup: fontstyle(ih: Fill_t; value: string)	
fontstyle	niup.html#fontstyle,Fill_t	niup: fontstyle(ih: Fill_t): string	
handlename=	niup.html#handlename=,Fill_t,string	niup: handlename=(ih: Fill_t; value: string)	
handlename	niup.html#handlename,Fill_t,string	niup: handlename(ih: Fill_t; value: string)	
handlename	niup.html#handlename,Fill_t	niup: handlename(ih: Fill_t): string	
maxsize=	niup.html#maxsize=,Fill_t,string	niup: maxsize=(ih: Fill_t; value: string)	
maxsize	niup.html#maxsize,Fill_t,string	niup: maxsize(ih: Fill_t; value: string)	
maxsize=	niup.html#maxsize=,Fill_t,int,int	niup: maxsize=(ih: Fill_t; width, height: int)	
maxsize	niup.html#maxsize,Fill_t,int,int	niup: maxsize(ih: Fill_t; width, height: int)	
maxsize	niup.html#maxsize,Fill_t	niup: maxsize(ih: Fill_t): string	
minsize=	niup.html#minsize=,Fill_t,string	niup: minsize=(ih: Fill_t; value: string)	
minsize	niup.html#minsize,Fill_t,string	niup: minsize(ih: Fill_t; value: string)	
minsize=	niup.html#minsize=,Fill_t,int,int	niup: minsize=(ih: Fill_t; width, height: int)	
minsize	niup.html#minsize,Fill_t,int,int	niup: minsize(ih: Fill_t; width, height: int)	
minsize	niup.html#minsize,Fill_t	niup: minsize(ih: Fill_t): string	
name=	niup.html#name=,Fill_t,string	niup: name=(ih: Fill_t; value: string)	
name	niup.html#name,Fill_t,string	niup: name(ih: Fill_t; value: string)	
name	niup.html#name,Fill_t	niup: name(ih: Fill_t): string	
naturalsize	niup.html#naturalsize,Fill_t	niup: naturalsize(ih: Fill_t): string	
normalizergroup=	niup.html#normalizergroup=,Fill_t,string	niup: normalizergroup=(ih: Fill_t; value: string)	
normalizergroup	niup.html#normalizergroup,Fill_t,string	niup: normalizergroup(ih: Fill_t; value: string)	
normalizergroup	niup.html#normalizergroup,Fill_t	niup: normalizergroup(ih: Fill_t): string	
ntheme=	niup.html#ntheme=,Fill_t,string	niup: ntheme=(ih: Fill_t; value: string)	
ntheme	niup.html#ntheme,Fill_t,string	niup: ntheme(ih: Fill_t; value: string)	
ntheme	niup.html#ntheme,Fill_t	niup: ntheme(ih: Fill_t): string	
pangofontdesc	niup.html#pangofontdesc,Fill_t	niup: pangofontdesc(ih: Fill_t): string	
pangolayout	niup.html#pangolayout,Fill_t	niup: pangolayout(ih: Fill_t): string	
position=	niup.html#position=,Fill_t,string	niup: position=(ih: Fill_t; value: string)	
position	niup.html#position,Fill_t,string	niup: position(ih: Fill_t; value: string)	
position=	niup.html#position=,Fill_t,int,int	niup: position=(ih: Fill_t; x, y: int)	
position	niup.html#position,Fill_t,int,int	niup: position(ih: Fill_t; x, y: int)	
position	niup.html#position,Fill_t	niup: position(ih: Fill_t): string	
propagatefocus=	niup.html#propagatefocus=,Fill_t,string	niup: propagatefocus=(ih: Fill_t; value: string)	
propagatefocus	niup.html#propagatefocus,Fill_t,string	niup: propagatefocus(ih: Fill_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Fill_t,bool	niup: propagatefocus=(ih: Fill_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Fill_t,bool	niup: propagatefocus(ih: Fill_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Fill_t	niup: propagatefocus(ih: Fill_t): bool	
rastersize=	niup.html#rastersize=,Fill_t,string	niup: rastersize=(ih: Fill_t; value: string)	
rastersize	niup.html#rastersize,Fill_t,string	niup: rastersize(ih: Fill_t; value: string)	
rastersize=	niup.html#rastersize=,Fill_t,int,int	niup: rastersize=(ih: Fill_t; width, height: int)	
rastersize	niup.html#rastersize,Fill_t,int,int	niup: rastersize(ih: Fill_t; width, height: int)	
rastersize	niup.html#rastersize,Fill_t	niup: rastersize(ih: Fill_t): string	
size=	niup.html#size=,Fill_t,string	niup: size=(ih: Fill_t; value: string)	
size	niup.html#size,Fill_t,string	niup: size(ih: Fill_t; value: string)	
size=	niup.html#size=,Fill_t,int,int	niup: size=(ih: Fill_t; width, height: int)	
size	niup.html#size,Fill_t,int,int	niup: size(ih: Fill_t; width, height: int)	
size	niup.html#size,Fill_t	niup: size(ih: Fill_t): string	
theme=	niup.html#theme=,Fill_t,string	niup: theme=(ih: Fill_t; value: string)	
theme	niup.html#theme,Fill_t,string	niup: theme(ih: Fill_t; value: string)	
theme	niup.html#theme,Fill_t	niup: theme(ih: Fill_t): string	
usersize=	niup.html#usersize=,Fill_t,string	niup: usersize=(ih: Fill_t; value: string)	
usersize	niup.html#usersize,Fill_t,string	niup: usersize(ih: Fill_t; value: string)	
usersize=	niup.html#usersize=,Fill_t,int,int	niup: usersize=(ih: Fill_t; width, height: int)	
usersize	niup.html#usersize,Fill_t,int,int	niup: usersize(ih: Fill_t; width, height: int)	
usersize	niup.html#usersize,Fill_t	niup: usersize(ih: Fill_t): string	
visible=	niup.html#visible=,Fill_t,string	niup: visible=(ih: Fill_t; value: string)	
visible	niup.html#visible,Fill_t,string	niup: visible(ih: Fill_t; value: string)	
visible=	niup.html#visible=,Fill_t,bool	niup: visible=(ih: Fill_t; yes: bool)	
visible	niup.html#visible,Fill_t,bool	niup: visible(ih: Fill_t; yes: bool)	
visible	niup.html#visible,Fill_t	niup: visible(ih: Fill_t): bool	
wid	niup.html#wid,Fill_t	niup: wid(ih: Fill_t): string	
xfontid	niup.html#xfontid,Fill_t	niup: xfontid(ih: Fill_t): string	
destroy_cb=	niup.html#destroy_cb=,Fill_t,proc(PIhandle)	niup: destroy_cb=(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Fill_t,proc(PIhandle)	niup: destroy_cb(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Fill_t	niup: destroy_cb(ih: Fill_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Fill_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Fill_t,proc(PIhandle)	niup: ldestroy_cb(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Fill_t	niup: ldestroy_cb(ih: Fill_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Fill_t,proc(PIhandle)	niup: map_cb=(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Fill_t,proc(PIhandle)	niup: map_cb(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Fill_t	niup: map_cb(ih: Fill_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Fill_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Fill_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Fill_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Fill_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Fill_t	niup: postmessage_cb(ih: Fill_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Fill_t,proc(PIhandle)	niup: unmap_cb=(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Fill_t,proc(PIhandle)	niup: unmap_cb(ih: Fill_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Fill_t	niup: unmap_cb(ih: Fill_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatButton	niup.html#FlatButton,string	niup: FlatButton(title: string): FlatButton_t	
active=	niup.html#active=,FlatButton_t,string	niup: active=(ih: FlatButton_t; value: string)	
active	niup.html#active,FlatButton_t,string	niup: active(ih: FlatButton_t; value: string)	
active=	niup.html#active=,FlatButton_t,bool	niup: active=(ih: FlatButton_t; yes: bool)	
active	niup.html#active,FlatButton_t,bool	niup: active(ih: FlatButton_t; yes: bool)	
active	niup.html#active,FlatButton_t	niup: active(ih: FlatButton_t): bool	
alignment=	niup.html#alignment=,FlatButton_t,string	niup: alignment=(ih: FlatButton_t; value: string)	
alignment	niup.html#alignment,FlatButton_t,string	niup: alignment(ih: FlatButton_t; value: string)	
alignment	niup.html#alignment,FlatButton_t	niup: alignment(ih: FlatButton_t): string	
backimage=	niup.html#backimage=,FlatButton_t,	niup: backimage=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatButton_t,	niup: backimage(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatButton_t	niup: backimage(ih: FlatButton_t): string	
backimagehighlight=	niup.html#backimagehighlight=,FlatButton_t,	niup: backimagehighlight=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagehighlight	niup.html#backimagehighlight,FlatButton_t,	niup: backimagehighlight(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagehighlight	niup.html#backimagehighlight,FlatButton_t	niup: backimagehighlight(ih: FlatButton_t): string	
backimageinactive=	niup.html#backimageinactive=,FlatButton_t,	niup: backimageinactive=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimageinactive	niup.html#backimageinactive,FlatButton_t,	niup: backimageinactive(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimageinactive	niup.html#backimageinactive,FlatButton_t	niup: backimageinactive(ih: FlatButton_t): string	
backimagepress=	niup.html#backimagepress=,FlatButton_t,	niup: backimagepress=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagepress	niup.html#backimagepress,FlatButton_t,	niup: backimagepress(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagepress	niup.html#backimagepress,FlatButton_t	niup: backimagepress(ih: FlatButton_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatButton_t,string	niup: backimagezoom=(ih: FlatButton_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatButton_t,string	niup: backimagezoom(ih: FlatButton_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatButton_t,bool	niup: backimagezoom=(ih: FlatButton_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatButton_t,bool	niup: backimagezoom(ih: FlatButton_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatButton_t	niup: backimagezoom(ih: FlatButton_t): bool	
backingstore=	niup.html#backingstore=,FlatButton_t,string	niup: backingstore=(ih: FlatButton_t; value: string)	
backingstore	niup.html#backingstore,FlatButton_t,string	niup: backingstore(ih: FlatButton_t; value: string)	
backingstore=	niup.html#backingstore=,FlatButton_t,bool	niup: backingstore=(ih: FlatButton_t; yes: bool)	
backingstore	niup.html#backingstore,FlatButton_t,bool	niup: backingstore(ih: FlatButton_t; yes: bool)	
backingstore	niup.html#backingstore,FlatButton_t	niup: backingstore(ih: FlatButton_t): bool	
bgcolor=	niup.html#bgcolor=,FlatButton_t,string	niup: bgcolor=(ih: FlatButton_t; value: string)	
bgcolor	niup.html#bgcolor,FlatButton_t,string	niup: bgcolor(ih: FlatButton_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatButton_t,int,int,int,int	niup: bgcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatButton_t,int,int,int,int	niup: bgcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatButton_t	niup: bgcolor(ih: FlatButton_t): string	
border=	niup.html#border=,FlatButton_t,string	niup: border=(ih: FlatButton_t; value: string)	
border	niup.html#border,FlatButton_t,string	niup: border(ih: FlatButton_t; value: string)	
border=	niup.html#border=,FlatButton_t,bool	niup: border=(ih: FlatButton_t; yes: bool)	
border	niup.html#border,FlatButton_t,bool	niup: border(ih: FlatButton_t; yes: bool)	
border	niup.html#border,FlatButton_t	niup: border(ih: FlatButton_t): bool	
bordercolor=	niup.html#bordercolor=,FlatButton_t,string	niup: bordercolor=(ih: FlatButton_t; value: string)	
bordercolor	niup.html#bordercolor,FlatButton_t,string	niup: bordercolor(ih: FlatButton_t; value: string)	
bordercolor=	niup.html#bordercolor=,FlatButton_t,int,int,int,int	niup: bordercolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatButton_t,int,int,int,int	niup: bordercolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatButton_t	niup: bordercolor(ih: FlatButton_t): string	
borderhlcolor=	niup.html#borderhlcolor=,FlatButton_t,string	niup: borderhlcolor=(ih: FlatButton_t; value: string)	
borderhlcolor	niup.html#borderhlcolor,FlatButton_t,string	niup: borderhlcolor(ih: FlatButton_t; value: string)	
borderhlcolor=	niup.html#borderhlcolor=,FlatButton_t,int,int,int,int	niup: borderhlcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,FlatButton_t,int,int,int,int	niup: borderhlcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,FlatButton_t	niup: borderhlcolor(ih: FlatButton_t): string	
borderpscolor=	niup.html#borderpscolor=,FlatButton_t,string	niup: borderpscolor=(ih: FlatButton_t; value: string)	
borderpscolor	niup.html#borderpscolor,FlatButton_t,string	niup: borderpscolor(ih: FlatButton_t; value: string)	
borderpscolor=	niup.html#borderpscolor=,FlatButton_t,int,int,int,int	niup: borderpscolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,FlatButton_t,int,int,int,int	niup: borderpscolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,FlatButton_t	niup: borderpscolor(ih: FlatButton_t): string	
borderwidth=	niup.html#borderwidth=,FlatButton_t,string	niup: borderwidth=(ih: FlatButton_t; value: string)	
borderwidth	niup.html#borderwidth,FlatButton_t,string	niup: borderwidth(ih: FlatButton_t; value: string)	
borderwidth=	niup.html#borderwidth=,FlatButton_t,int	niup: borderwidth=(ih: FlatButton_t; x: int)	
borderwidth	niup.html#borderwidth,FlatButton_t,int	niup: borderwidth(ih: FlatButton_t; x: int)	
borderwidth	niup.html#borderwidth,FlatButton_t	niup: borderwidth(ih: FlatButton_t): string	
canfocus=	niup.html#canfocus=,FlatButton_t,string	niup: canfocus=(ih: FlatButton_t; value: string)	
canfocus	niup.html#canfocus,FlatButton_t,string	niup: canfocus(ih: FlatButton_t; value: string)	
canfocus=	niup.html#canfocus=,FlatButton_t,bool	niup: canfocus=(ih: FlatButton_t; yes: bool)	
canfocus	niup.html#canfocus,FlatButton_t,bool	niup: canfocus(ih: FlatButton_t; yes: bool)	
canfocus	niup.html#canfocus,FlatButton_t	niup: canfocus(ih: FlatButton_t): bool	
charsize	niup.html#charsize,FlatButton_t	niup: charsize(ih: FlatButton_t): string	
cpadding=	niup.html#cpadding=,FlatButton_t,string	niup: cpadding=(ih: FlatButton_t; value: string)	
cpadding	niup.html#cpadding,FlatButton_t,string	niup: cpadding(ih: FlatButton_t; value: string)	
cpadding=	niup.html#cpadding=,FlatButton_t,int,int	niup: cpadding=(ih: FlatButton_t; width, height: int)	
cpadding	niup.html#cpadding,FlatButton_t,int,int	niup: cpadding(ih: FlatButton_t; width, height: int)	
cpadding	niup.html#cpadding,FlatButton_t	niup: cpadding(ih: FlatButton_t): string	
cspacing=	niup.html#cspacing=,FlatButton_t,string	niup: cspacing=(ih: FlatButton_t; value: string)	
cspacing	niup.html#cspacing,FlatButton_t,string	niup: cspacing(ih: FlatButton_t; value: string)	
cspacing=	niup.html#cspacing=,FlatButton_t,int	niup: cspacing=(ih: FlatButton_t; x: int)	
cspacing	niup.html#cspacing,FlatButton_t,int	niup: cspacing(ih: FlatButton_t; x: int)	
cspacing	niup.html#cspacing,FlatButton_t	niup: cspacing(ih: FlatButton_t): string	
cursor=	niup.html#cursor=,FlatButton_t,	niup: cursor=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatButton_t,	niup: cursor(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatButton_t	niup: cursor(ih: FlatButton_t): string	
dragdrop=	niup.html#dragdrop=,FlatButton_t,string	niup: dragdrop=(ih: FlatButton_t; value: string)	
dragdrop	niup.html#dragdrop,FlatButton_t,string	niup: dragdrop(ih: FlatButton_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatButton_t,bool	niup: dragdrop=(ih: FlatButton_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatButton_t,bool	niup: dragdrop(ih: FlatButton_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatButton_t	niup: dragdrop(ih: FlatButton_t): bool	
dragsource=	niup.html#dragsource=,FlatButton_t,string	niup: dragsource=(ih: FlatButton_t; value: string)	
dragsource	niup.html#dragsource,FlatButton_t,string	niup: dragsource(ih: FlatButton_t; value: string)	
dragsource=	niup.html#dragsource=,FlatButton_t,bool	niup: dragsource=(ih: FlatButton_t; yes: bool)	
dragsource	niup.html#dragsource,FlatButton_t,bool	niup: dragsource(ih: FlatButton_t; yes: bool)	
dragsource	niup.html#dragsource,FlatButton_t	niup: dragsource(ih: FlatButton_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatButton_t,string	niup: dragsourcemove=(ih: FlatButton_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatButton_t,string	niup: dragsourcemove(ih: FlatButton_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatButton_t,bool	niup: dragsourcemove=(ih: FlatButton_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatButton_t,bool	niup: dragsourcemove(ih: FlatButton_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatButton_t	niup: dragsourcemove(ih: FlatButton_t): bool	
dragtypes=	niup.html#dragtypes=,FlatButton_t,string	niup: dragtypes=(ih: FlatButton_t; value: string)	
dragtypes	niup.html#dragtypes,FlatButton_t,string	niup: dragtypes(ih: FlatButton_t; value: string)	
dragtypes	niup.html#dragtypes,FlatButton_t	niup: dragtypes(ih: FlatButton_t): string	
drawable	niup.html#drawable,FlatButton_t	niup: drawable(ih: FlatButton_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatButton_t,string	niup: drawbgcolor=(ih: FlatButton_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatButton_t,string	niup: drawbgcolor(ih: FlatButton_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatButton_t,int,int,int,int	niup: drawbgcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatButton_t,int,int,int,int	niup: drawbgcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatButton_t	niup: drawbgcolor(ih: FlatButton_t): string	
drawcolor=	niup.html#drawcolor=,FlatButton_t,string	niup: drawcolor=(ih: FlatButton_t; value: string)	
drawcolor	niup.html#drawcolor,FlatButton_t,string	niup: drawcolor(ih: FlatButton_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatButton_t,int,int,int,int	niup: drawcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatButton_t,int,int,int,int	niup: drawcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatButton_t	niup: drawcolor(ih: FlatButton_t): string	
drawdriver	niup.html#drawdriver,FlatButton_t	niup: drawdriver(ih: FlatButton_t): string	
drawfont=	niup.html#drawfont=,FlatButton_t,string	niup: drawfont=(ih: FlatButton_t; value: string)	
drawfont	niup.html#drawfont,FlatButton_t,string	niup: drawfont(ih: FlatButton_t; value: string)	
drawfont	niup.html#drawfont,FlatButton_t	niup: drawfont(ih: FlatButton_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatButton_t,string	niup: drawlinewidth=(ih: FlatButton_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatButton_t,string	niup: drawlinewidth(ih: FlatButton_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatButton_t,int	niup: drawlinewidth=(ih: FlatButton_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatButton_t,int	niup: drawlinewidth(ih: FlatButton_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatButton_t	niup: drawlinewidth(ih: FlatButton_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatButton_t,string	niup: drawmakeinactive=(ih: FlatButton_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatButton_t,string	niup: drawmakeinactive(ih: FlatButton_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatButton_t,bool	niup: drawmakeinactive=(ih: FlatButton_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatButton_t,bool	niup: drawmakeinactive(ih: FlatButton_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatButton_t	niup: drawmakeinactive(ih: FlatButton_t): bool	
drawsize	niup.html#drawsize,FlatButton_t	niup: drawsize(ih: FlatButton_t): string	
drawstyle=	niup.html#drawstyle=,FlatButton_t,string	niup: drawstyle=(ih: FlatButton_t; value: string)	
drawstyle	niup.html#drawstyle,FlatButton_t,string	niup: drawstyle(ih: FlatButton_t; value: string)	
drawstyle	niup.html#drawstyle,FlatButton_t	niup: drawstyle(ih: FlatButton_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatButton_t,string	niup: drawtextalignment=(ih: FlatButton_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatButton_t,string	niup: drawtextalignment(ih: FlatButton_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatButton_t	niup: drawtextalignment(ih: FlatButton_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatButton_t,string	niup: drawtextclip=(ih: FlatButton_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatButton_t,string	niup: drawtextclip(ih: FlatButton_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatButton_t,bool	niup: drawtextclip=(ih: FlatButton_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatButton_t,bool	niup: drawtextclip(ih: FlatButton_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatButton_t	niup: drawtextclip(ih: FlatButton_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatButton_t,string	niup: drawtextellipsis=(ih: FlatButton_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatButton_t,string	niup: drawtextellipsis(ih: FlatButton_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatButton_t,bool	niup: drawtextellipsis=(ih: FlatButton_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatButton_t,bool	niup: drawtextellipsis(ih: FlatButton_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatButton_t	niup: drawtextellipsis(ih: FlatButton_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatButton_t,string	niup: drawtextlayoutcenter=(ih: FlatButton_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatButton_t,string	niup: drawtextlayoutcenter(ih: FlatButton_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatButton_t,bool	niup: drawtextlayoutcenter=(ih: FlatButton_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatButton_t,bool	niup: drawtextlayoutcenter(ih: FlatButton_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatButton_t	niup: drawtextlayoutcenter(ih: FlatButton_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatButton_t,string	niup: drawtextorientation=(ih: FlatButton_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatButton_t,string	niup: drawtextorientation(ih: FlatButton_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatButton_t,int64	niup: drawtextorientation=(ih: FlatButton_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatButton_t,int64	niup: drawtextorientation(ih: FlatButton_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatButton_t	niup: drawtextorientation(ih: FlatButton_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatButton_t,string	niup: drawtextwrap=(ih: FlatButton_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatButton_t,string	niup: drawtextwrap(ih: FlatButton_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatButton_t,bool	niup: drawtextwrap=(ih: FlatButton_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatButton_t,bool	niup: drawtextwrap(ih: FlatButton_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatButton_t	niup: drawtextwrap(ih: FlatButton_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatButton_t,string	niup: dropfilestarget=(ih: FlatButton_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatButton_t,string	niup: dropfilestarget(ih: FlatButton_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatButton_t,bool	niup: dropfilestarget=(ih: FlatButton_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatButton_t,bool	niup: dropfilestarget(ih: FlatButton_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatButton_t	niup: dropfilestarget(ih: FlatButton_t): bool	
droptarget=	niup.html#droptarget=,FlatButton_t,string	niup: droptarget=(ih: FlatButton_t; value: string)	
droptarget	niup.html#droptarget,FlatButton_t,string	niup: droptarget(ih: FlatButton_t; value: string)	
droptarget=	niup.html#droptarget=,FlatButton_t,bool	niup: droptarget=(ih: FlatButton_t; yes: bool)	
droptarget	niup.html#droptarget,FlatButton_t,bool	niup: droptarget(ih: FlatButton_t; yes: bool)	
droptarget	niup.html#droptarget,FlatButton_t	niup: droptarget(ih: FlatButton_t): bool	
droptypes=	niup.html#droptypes=,FlatButton_t,string	niup: droptypes=(ih: FlatButton_t; value: string)	
droptypes	niup.html#droptypes,FlatButton_t,string	niup: droptypes(ih: FlatButton_t; value: string)	
droptypes	niup.html#droptypes,FlatButton_t	niup: droptypes(ih: FlatButton_t): string	
dx=	niup.html#dx=,FlatButton_t,string	niup: dx=(ih: FlatButton_t; value: string)	
dx	niup.html#dx,FlatButton_t,string	niup: dx(ih: FlatButton_t; value: string)	
dx=	niup.html#dx=,FlatButton_t,int64	niup: dx=(ih: FlatButton_t; x: int64)	
dx	niup.html#dx,FlatButton_t,int64	niup: dx(ih: FlatButton_t; x: int64)	
dx	niup.html#dx,FlatButton_t	niup: dx(ih: FlatButton_t): string	
dy=	niup.html#dy=,FlatButton_t,string	niup: dy=(ih: FlatButton_t; value: string)	
dy	niup.html#dy,FlatButton_t,string	niup: dy(ih: FlatButton_t; value: string)	
dy=	niup.html#dy=,FlatButton_t,int64	niup: dy=(ih: FlatButton_t; x: int64)	
dy	niup.html#dy,FlatButton_t,int64	niup: dy(ih: FlatButton_t; x: int64)	
dy	niup.html#dy,FlatButton_t	niup: dy(ih: FlatButton_t): string	
expand=	niup.html#expand=,FlatButton_t,string	niup: expand=(ih: FlatButton_t; value: string)	
expand	niup.html#expand,FlatButton_t,string	niup: expand(ih: FlatButton_t; value: string)	
expand	niup.html#expand,FlatButton_t	niup: expand(ih: FlatButton_t): string	
expandweight=	niup.html#expandweight=,FlatButton_t,string	niup: expandweight=(ih: FlatButton_t; value: string)	
expandweight	niup.html#expandweight,FlatButton_t,string	niup: expandweight(ih: FlatButton_t; value: string)	
expandweight=	niup.html#expandweight=,FlatButton_t,int64	niup: expandweight=(ih: FlatButton_t; x: int64)	
expandweight	niup.html#expandweight,FlatButton_t,int64	niup: expandweight(ih: FlatButton_t; x: int64)	
expandweight	niup.html#expandweight,FlatButton_t	niup: expandweight(ih: FlatButton_t): string	
fgcolor=	niup.html#fgcolor=,FlatButton_t,string	niup: fgcolor=(ih: FlatButton_t; value: string)	
fgcolor	niup.html#fgcolor,FlatButton_t,string	niup: fgcolor(ih: FlatButton_t; value: string)	
fgcolor=	niup.html#fgcolor=,FlatButton_t,int,int,int,int	niup: fgcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatButton_t,int,int,int,int	niup: fgcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatButton_t	niup: fgcolor(ih: FlatButton_t): string	
fittobackimage=	niup.html#fittobackimage=,FlatButton_t,string	niup: fittobackimage=(ih: FlatButton_t; value: string)	
fittobackimage	niup.html#fittobackimage,FlatButton_t,string	niup: fittobackimage(ih: FlatButton_t; value: string)	
fittobackimage=	niup.html#fittobackimage=,FlatButton_t,bool	niup: fittobackimage=(ih: FlatButton_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatButton_t,bool	niup: fittobackimage(ih: FlatButton_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatButton_t	niup: fittobackimage(ih: FlatButton_t): bool	
floating=	niup.html#floating=,FlatButton_t,string	niup: floating=(ih: FlatButton_t; value: string)	
floating	niup.html#floating,FlatButton_t,string	niup: floating(ih: FlatButton_t; value: string)	
floating	niup.html#floating,FlatButton_t	niup: floating(ih: FlatButton_t): string	
focusfeedback=	niup.html#focusfeedback=,FlatButton_t,string	niup: focusfeedback=(ih: FlatButton_t; value: string)	
focusfeedback	niup.html#focusfeedback,FlatButton_t,string	niup: focusfeedback(ih: FlatButton_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,FlatButton_t,bool	niup: focusfeedback=(ih: FlatButton_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatButton_t,bool	niup: focusfeedback(ih: FlatButton_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatButton_t	niup: focusfeedback(ih: FlatButton_t): bool	
font=	niup.html#font=,FlatButton_t,string	niup: font=(ih: FlatButton_t; value: string)	
font	niup.html#font,FlatButton_t,string	niup: font(ih: FlatButton_t; value: string)	
font	niup.html#font,FlatButton_t	niup: font(ih: FlatButton_t): string	
fontface=	niup.html#fontface=,FlatButton_t,string	niup: fontface=(ih: FlatButton_t; value: string)	
fontface	niup.html#fontface,FlatButton_t,string	niup: fontface(ih: FlatButton_t; value: string)	
fontface	niup.html#fontface,FlatButton_t	niup: fontface(ih: FlatButton_t): string	
fontsize=	niup.html#fontsize=,FlatButton_t,string	niup: fontsize=(ih: FlatButton_t; value: string)	
fontsize	niup.html#fontsize,FlatButton_t,string	niup: fontsize(ih: FlatButton_t; value: string)	
fontsize=	niup.html#fontsize=,FlatButton_t,int	niup: fontsize=(ih: FlatButton_t; x: int)	
fontsize	niup.html#fontsize,FlatButton_t,int	niup: fontsize(ih: FlatButton_t; x: int)	
fontsize	niup.html#fontsize,FlatButton_t	niup: fontsize(ih: FlatButton_t): string	
fontstyle=	niup.html#fontstyle=,FlatButton_t,string	niup: fontstyle=(ih: FlatButton_t; value: string)	
fontstyle	niup.html#fontstyle,FlatButton_t,string	niup: fontstyle(ih: FlatButton_t; value: string)	
fontstyle	niup.html#fontstyle,FlatButton_t	niup: fontstyle(ih: FlatButton_t): string	
frontimage=	niup.html#frontimage=,FlatButton_t,	niup: frontimage=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,FlatButton_t,	niup: frontimage(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,FlatButton_t	niup: frontimage(ih: FlatButton_t): string	
frontimagehighlight=	niup.html#frontimagehighlight=,FlatButton_t,	niup: frontimagehighlight=(ih: FlatButton_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagehighlight	niup.html#frontimagehighlight,FlatButton_t,	niup: frontimagehighlight(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagehighlight	niup.html#frontimagehighlight,FlatButton_t	niup: frontimagehighlight(ih: FlatButton_t): string	
frontimageinactive=	niup.html#frontimageinactive=,FlatButton_t,	niup: frontimageinactive=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,FlatButton_t,	niup: frontimageinactive(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,FlatButton_t	niup: frontimageinactive(ih: FlatButton_t): string	
frontimagepress=	niup.html#frontimagepress=,FlatButton_t,	niup: frontimagepress=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagepress	niup.html#frontimagepress,FlatButton_t,	niup: frontimagepress(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagepress	niup.html#frontimagepress,FlatButton_t	niup: frontimagepress(ih: FlatButton_t): string	
handlename=	niup.html#handlename=,FlatButton_t,string	niup: handlename=(ih: FlatButton_t; value: string)	
handlename	niup.html#handlename,FlatButton_t,string	niup: handlename(ih: FlatButton_t; value: string)	
handlename	niup.html#handlename,FlatButton_t	niup: handlename(ih: FlatButton_t): string	
hasfocus	niup.html#hasfocus,FlatButton_t	niup: hasfocus(ih: FlatButton_t): bool	
highlighted	niup.html#highlighted,FlatButton_t	niup: highlighted(ih: FlatButton_t): bool	
hlcolor=	niup.html#hlcolor=,FlatButton_t,string	niup: hlcolor=(ih: FlatButton_t; value: string)	
hlcolor	niup.html#hlcolor,FlatButton_t,string	niup: hlcolor(ih: FlatButton_t; value: string)	
hlcolor=	niup.html#hlcolor=,FlatButton_t,int,int,int,int	niup: hlcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatButton_t,int,int,int,int	niup: hlcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatButton_t	niup: hlcolor(ih: FlatButton_t): string	
ignoreradio=	niup.html#ignoreradio=,FlatButton_t,string	niup: ignoreradio=(ih: FlatButton_t; value: string)	
ignoreradio	niup.html#ignoreradio,FlatButton_t,string	niup: ignoreradio(ih: FlatButton_t; value: string)	
ignoreradio=	niup.html#ignoreradio=,FlatButton_t,bool	niup: ignoreradio=(ih: FlatButton_t; yes: bool)	
ignoreradio	niup.html#ignoreradio,FlatButton_t,bool	niup: ignoreradio(ih: FlatButton_t; yes: bool)	
ignoreradio	niup.html#ignoreradio,FlatButton_t	niup: ignoreradio(ih: FlatButton_t): bool	
image=	niup.html#image=,FlatButton_t,	niup: image=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatButton_t,	niup: image(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatButton_t	niup: image(ih: FlatButton_t): string	
imagehighlight=	niup.html#imagehighlight=,FlatButton_t,	niup: imagehighlight=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,FlatButton_t,	niup: imagehighlight(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,FlatButton_t	niup: imagehighlight(ih: FlatButton_t): string	
imageinactive=	niup.html#imageinactive=,FlatButton_t,	niup: imageinactive=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatButton_t,	niup: imageinactive(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatButton_t	niup: imageinactive(ih: FlatButton_t): string	
imageposition=	niup.html#imageposition=,FlatButton_t,string	niup: imageposition=(ih: FlatButton_t; value: string)	
imageposition	niup.html#imageposition,FlatButton_t,string	niup: imageposition(ih: FlatButton_t; value: string)	
imageposition	niup.html#imageposition,FlatButton_t	niup: imageposition(ih: FlatButton_t): string	
imagepress=	niup.html#imagepress=,FlatButton_t,	niup: imagepress=(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,FlatButton_t,	niup: imagepress(ih: FlatButton_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,FlatButton_t	niup: imagepress(ih: FlatButton_t): string	
linex=	niup.html#linex=,FlatButton_t,string	niup: linex=(ih: FlatButton_t; value: string)	
linex	niup.html#linex,FlatButton_t,string	niup: linex(ih: FlatButton_t; value: string)	
linex=	niup.html#linex=,FlatButton_t,int64	niup: linex=(ih: FlatButton_t; x: int64)	
linex	niup.html#linex,FlatButton_t,int64	niup: linex(ih: FlatButton_t; x: int64)	
linex	niup.html#linex,FlatButton_t	niup: linex(ih: FlatButton_t): string	
liney=	niup.html#liney=,FlatButton_t,string	niup: liney=(ih: FlatButton_t; value: string)	
liney	niup.html#liney,FlatButton_t,string	niup: liney(ih: FlatButton_t; value: string)	
liney=	niup.html#liney=,FlatButton_t,int64	niup: liney=(ih: FlatButton_t; x: int64)	
liney	niup.html#liney,FlatButton_t,int64	niup: liney(ih: FlatButton_t; x: int64)	
liney	niup.html#liney,FlatButton_t	niup: liney(ih: FlatButton_t): string	
maxsize=	niup.html#maxsize=,FlatButton_t,string	niup: maxsize=(ih: FlatButton_t; value: string)	
maxsize	niup.html#maxsize,FlatButton_t,string	niup: maxsize(ih: FlatButton_t; value: string)	
maxsize=	niup.html#maxsize=,FlatButton_t,int,int	niup: maxsize=(ih: FlatButton_t; width, height: int)	
maxsize	niup.html#maxsize,FlatButton_t,int,int	niup: maxsize(ih: FlatButton_t; width, height: int)	
maxsize	niup.html#maxsize,FlatButton_t	niup: maxsize(ih: FlatButton_t): string	
minsize=	niup.html#minsize=,FlatButton_t,string	niup: minsize=(ih: FlatButton_t; value: string)	
minsize	niup.html#minsize,FlatButton_t,string	niup: minsize(ih: FlatButton_t; value: string)	
minsize=	niup.html#minsize=,FlatButton_t,int,int	niup: minsize=(ih: FlatButton_t; width, height: int)	
minsize	niup.html#minsize,FlatButton_t,int,int	niup: minsize(ih: FlatButton_t; width, height: int)	
minsize	niup.html#minsize,FlatButton_t	niup: minsize(ih: FlatButton_t): string	
name=	niup.html#name=,FlatButton_t,string	niup: name=(ih: FlatButton_t; value: string)	
name	niup.html#name,FlatButton_t,string	niup: name(ih: FlatButton_t; value: string)	
name	niup.html#name,FlatButton_t	niup: name(ih: FlatButton_t): string	
naturalsize	niup.html#naturalsize,FlatButton_t	niup: naturalsize(ih: FlatButton_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatButton_t,string	niup: normalizergroup=(ih: FlatButton_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatButton_t,string	niup: normalizergroup(ih: FlatButton_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatButton_t	niup: normalizergroup(ih: FlatButton_t): string	
ntheme=	niup.html#ntheme=,FlatButton_t,string	niup: ntheme=(ih: FlatButton_t; value: string)	
ntheme	niup.html#ntheme,FlatButton_t,string	niup: ntheme(ih: FlatButton_t; value: string)	
ntheme	niup.html#ntheme,FlatButton_t	niup: ntheme(ih: FlatButton_t): string	
padding=	niup.html#padding=,FlatButton_t,string	niup: padding=(ih: FlatButton_t; value: string)	
padding	niup.html#padding,FlatButton_t,string	niup: padding(ih: FlatButton_t; value: string)	
padding=	niup.html#padding=,FlatButton_t,int,int	niup: padding=(ih: FlatButton_t; width, height: int)	
padding	niup.html#padding,FlatButton_t,int,int	niup: padding(ih: FlatButton_t; width, height: int)	
padding	niup.html#padding,FlatButton_t	niup: padding(ih: FlatButton_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatButton_t	niup: pangofontdesc(ih: FlatButton_t): string	
pangolayout	niup.html#pangolayout,FlatButton_t	niup: pangolayout(ih: FlatButton_t): string	
position=	niup.html#position=,FlatButton_t,string	niup: position=(ih: FlatButton_t; value: string)	
position	niup.html#position,FlatButton_t,string	niup: position(ih: FlatButton_t; value: string)	
position=	niup.html#position=,FlatButton_t,int,int	niup: position=(ih: FlatButton_t; x, y: int)	
position	niup.html#position,FlatButton_t,int,int	niup: position(ih: FlatButton_t; x, y: int)	
position	niup.html#position,FlatButton_t	niup: position(ih: FlatButton_t): string	
posx=	niup.html#posx=,FlatButton_t,string	niup: posx=(ih: FlatButton_t; value: string)	
posx	niup.html#posx,FlatButton_t,string	niup: posx(ih: FlatButton_t; value: string)	
posx=	niup.html#posx=,FlatButton_t,int64	niup: posx=(ih: FlatButton_t; x: int64)	
posx	niup.html#posx,FlatButton_t,int64	niup: posx(ih: FlatButton_t; x: int64)	
posx	niup.html#posx,FlatButton_t	niup: posx(ih: FlatButton_t): string	
posy=	niup.html#posy=,FlatButton_t,string	niup: posy=(ih: FlatButton_t; value: string)	
posy	niup.html#posy,FlatButton_t,string	niup: posy(ih: FlatButton_t; value: string)	
posy=	niup.html#posy=,FlatButton_t,int64	niup: posy=(ih: FlatButton_t; x: int64)	
posy	niup.html#posy,FlatButton_t,int64	niup: posy(ih: FlatButton_t; x: int64)	
posy	niup.html#posy,FlatButton_t	niup: posy(ih: FlatButton_t): string	
pressed	niup.html#pressed,FlatButton_t	niup: pressed(ih: FlatButton_t): bool	
propagatefocus=	niup.html#propagatefocus=,FlatButton_t,string	niup: propagatefocus=(ih: FlatButton_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatButton_t,string	niup: propagatefocus(ih: FlatButton_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatButton_t,bool	niup: propagatefocus=(ih: FlatButton_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatButton_t,bool	niup: propagatefocus(ih: FlatButton_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatButton_t	niup: propagatefocus(ih: FlatButton_t): bool	
pscolor=	niup.html#pscolor=,FlatButton_t,string	niup: pscolor=(ih: FlatButton_t; value: string)	
pscolor	niup.html#pscolor,FlatButton_t,string	niup: pscolor(ih: FlatButton_t; value: string)	
pscolor=	niup.html#pscolor=,FlatButton_t,int,int,int,int	niup: pscolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatButton_t,int,int,int,int	niup: pscolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatButton_t	niup: pscolor(ih: FlatButton_t): string	
radio	niup.html#radio,FlatButton_t	niup: radio(ih: FlatButton_t): bool	
rastersize=	niup.html#rastersize=,FlatButton_t,string	niup: rastersize=(ih: FlatButton_t; value: string)	
rastersize	niup.html#rastersize,FlatButton_t,string	niup: rastersize(ih: FlatButton_t; value: string)	
rastersize=	niup.html#rastersize=,FlatButton_t,int,int	niup: rastersize=(ih: FlatButton_t; width, height: int)	
rastersize	niup.html#rastersize,FlatButton_t,int,int	niup: rastersize(ih: FlatButton_t; width, height: int)	
rastersize	niup.html#rastersize,FlatButton_t	niup: rastersize(ih: FlatButton_t): string	
sb_resize	niup.html#sb_resize,FlatButton_t	niup: sb_resize(ih: FlatButton_t): string	
screenposition	niup.html#screenposition,FlatButton_t	niup: screenposition(ih: FlatButton_t): string	
scrollbar=	niup.html#scrollbar=,FlatButton_t,string	niup: scrollbar=(ih: FlatButton_t; value: string)	
scrollbar	niup.html#scrollbar,FlatButton_t,string	niup: scrollbar(ih: FlatButton_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatButton_t,bool	niup: scrollbar=(ih: FlatButton_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatButton_t,bool	niup: scrollbar(ih: FlatButton_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatButton_t	niup: scrollbar(ih: FlatButton_t): bool	
showborder=	niup.html#showborder=,FlatButton_t,string	niup: showborder=(ih: FlatButton_t; value: string)	
showborder	niup.html#showborder,FlatButton_t,string	niup: showborder(ih: FlatButton_t; value: string)	
showborder=	niup.html#showborder=,FlatButton_t,bool	niup: showborder=(ih: FlatButton_t; yes: bool)	
showborder	niup.html#showborder,FlatButton_t,bool	niup: showborder(ih: FlatButton_t; yes: bool)	
showborder	niup.html#showborder,FlatButton_t	niup: showborder(ih: FlatButton_t): bool	
size=	niup.html#size=,FlatButton_t,string	niup: size=(ih: FlatButton_t; value: string)	
size	niup.html#size,FlatButton_t,string	niup: size(ih: FlatButton_t; value: string)	
size=	niup.html#size=,FlatButton_t,int,int	niup: size=(ih: FlatButton_t; width, height: int)	
size	niup.html#size,FlatButton_t,int,int	niup: size(ih: FlatButton_t; width, height: int)	
size	niup.html#size,FlatButton_t	niup: size(ih: FlatButton_t): string	
spacing=	niup.html#spacing=,FlatButton_t,string	niup: spacing=(ih: FlatButton_t; value: string)	
spacing	niup.html#spacing,FlatButton_t,string	niup: spacing(ih: FlatButton_t; value: string)	
spacing=	niup.html#spacing=,FlatButton_t,int	niup: spacing=(ih: FlatButton_t; x: int)	
spacing	niup.html#spacing,FlatButton_t,int	niup: spacing(ih: FlatButton_t; x: int)	
spacing	niup.html#spacing,FlatButton_t	niup: spacing(ih: FlatButton_t): string	
textalignment=	niup.html#textalignment=,FlatButton_t,string	niup: textalignment=(ih: FlatButton_t; value: string)	
textalignment	niup.html#textalignment,FlatButton_t,string	niup: textalignment(ih: FlatButton_t; value: string)	
textalignment	niup.html#textalignment,FlatButton_t	niup: textalignment(ih: FlatButton_t): string	
textclip	niup.html#textclip,FlatButton_t	niup: textclip(ih: FlatButton_t): string	
textellipsis=	niup.html#textellipsis=,FlatButton_t,string	niup: textellipsis=(ih: FlatButton_t; value: string)	
textellipsis	niup.html#textellipsis,FlatButton_t,string	niup: textellipsis(ih: FlatButton_t; value: string)	
textellipsis=	niup.html#textellipsis=,FlatButton_t,bool	niup: textellipsis=(ih: FlatButton_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatButton_t,bool	niup: textellipsis(ih: FlatButton_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatButton_t	niup: textellipsis(ih: FlatButton_t): bool	
texthlcolor=	niup.html#texthlcolor=,FlatButton_t,string	niup: texthlcolor=(ih: FlatButton_t; value: string)	
texthlcolor	niup.html#texthlcolor,FlatButton_t,string	niup: texthlcolor(ih: FlatButton_t; value: string)	
texthlcolor=	niup.html#texthlcolor=,FlatButton_t,int,int,int,int	niup: texthlcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
texthlcolor	niup.html#texthlcolor,FlatButton_t,int,int,int,int	niup: texthlcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
texthlcolor	niup.html#texthlcolor,FlatButton_t	niup: texthlcolor(ih: FlatButton_t): string	
textorientation=	niup.html#textorientation=,FlatButton_t,string	niup: textorientation=(ih: FlatButton_t; value: string)	
textorientation	niup.html#textorientation,FlatButton_t,string	niup: textorientation(ih: FlatButton_t; value: string)	
textorientation=	niup.html#textorientation=,FlatButton_t,int64	niup: textorientation=(ih: FlatButton_t; x: int64)	
textorientation	niup.html#textorientation,FlatButton_t,int64	niup: textorientation(ih: FlatButton_t; x: int64)	
textorientation	niup.html#textorientation,FlatButton_t	niup: textorientation(ih: FlatButton_t): string	
textpscolor=	niup.html#textpscolor=,FlatButton_t,string	niup: textpscolor=(ih: FlatButton_t; value: string)	
textpscolor	niup.html#textpscolor,FlatButton_t,string	niup: textpscolor(ih: FlatButton_t; value: string)	
textpscolor=	niup.html#textpscolor=,FlatButton_t,int,int,int,int	niup: textpscolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatButton_t,int,int,int,int	niup: textpscolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatButton_t	niup: textpscolor(ih: FlatButton_t): string	
textwrap=	niup.html#textwrap=,FlatButton_t,string	niup: textwrap=(ih: FlatButton_t; value: string)	
textwrap	niup.html#textwrap,FlatButton_t,string	niup: textwrap(ih: FlatButton_t; value: string)	
textwrap=	niup.html#textwrap=,FlatButton_t,bool	niup: textwrap=(ih: FlatButton_t; yes: bool)	
textwrap	niup.html#textwrap,FlatButton_t,bool	niup: textwrap(ih: FlatButton_t; yes: bool)	
textwrap	niup.html#textwrap,FlatButton_t	niup: textwrap(ih: FlatButton_t): bool	
theme=	niup.html#theme=,FlatButton_t,string	niup: theme=(ih: FlatButton_t; value: string)	
theme	niup.html#theme,FlatButton_t,string	niup: theme(ih: FlatButton_t; value: string)	
theme	niup.html#theme,FlatButton_t	niup: theme(ih: FlatButton_t): string	
tip=	niup.html#tip=,FlatButton_t,string	niup: tip=(ih: FlatButton_t; value: string)	
tip	niup.html#tip,FlatButton_t,string	niup: tip(ih: FlatButton_t; value: string)	
tip	niup.html#tip,FlatButton_t	niup: tip(ih: FlatButton_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatButton_t,string	niup: tipbgcolor=(ih: FlatButton_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatButton_t,string	niup: tipbgcolor(ih: FlatButton_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatButton_t,int,int,int,int	niup: tipbgcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatButton_t,int,int,int,int	niup: tipbgcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatButton_t	niup: tipbgcolor(ih: FlatButton_t): string	
tipdelay=	niup.html#tipdelay=,FlatButton_t,string	niup: tipdelay=(ih: FlatButton_t; value: string)	
tipdelay	niup.html#tipdelay,FlatButton_t,string	niup: tipdelay(ih: FlatButton_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatButton_t,int	niup: tipdelay=(ih: FlatButton_t; x: int)	
tipdelay	niup.html#tipdelay,FlatButton_t,int	niup: tipdelay(ih: FlatButton_t; x: int)	
tipdelay	niup.html#tipdelay,FlatButton_t	niup: tipdelay(ih: FlatButton_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatButton_t,string	niup: tipfgcolor=(ih: FlatButton_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatButton_t,string	niup: tipfgcolor(ih: FlatButton_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatButton_t,int,int,int,int	niup: tipfgcolor=(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatButton_t,int,int,int,int	niup: tipfgcolor(ih: FlatButton_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatButton_t	niup: tipfgcolor(ih: FlatButton_t): string	
tipicon=	niup.html#tipicon=,FlatButton_t,string	niup: tipicon=(ih: FlatButton_t; value: string)	
tipicon	niup.html#tipicon,FlatButton_t,string	niup: tipicon(ih: FlatButton_t; value: string)	
tipicon	niup.html#tipicon,FlatButton_t	niup: tipicon(ih: FlatButton_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatButton_t,string	niup: tipmarkup=(ih: FlatButton_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatButton_t,string	niup: tipmarkup(ih: FlatButton_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatButton_t	niup: tipmarkup(ih: FlatButton_t): string	
tiprect=	niup.html#tiprect=,FlatButton_t,string	niup: tiprect=(ih: FlatButton_t; value: string)	
tiprect	niup.html#tiprect,FlatButton_t,string	niup: tiprect(ih: FlatButton_t; value: string)	
tiprect=	niup.html#tiprect=,FlatButton_t,int,int,int,int	niup: tiprect=(ih: FlatButton_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatButton_t,int,int,int,int	niup: tiprect(ih: FlatButton_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatButton_t	niup: tiprect(ih: FlatButton_t): string	
tipvisible=	niup.html#tipvisible=,FlatButton_t,string	niup: tipvisible=(ih: FlatButton_t; value: string)	
tipvisible	niup.html#tipvisible,FlatButton_t,string	niup: tipvisible(ih: FlatButton_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatButton_t,bool	niup: tipvisible=(ih: FlatButton_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatButton_t,bool	niup: tipvisible(ih: FlatButton_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatButton_t	niup: tipvisible(ih: FlatButton_t): bool	
title=	niup.html#title=,FlatButton_t,string	niup: title=(ih: FlatButton_t; value: string)	
title	niup.html#title,FlatButton_t,string	niup: title(ih: FlatButton_t; value: string)	
title	niup.html#title,FlatButton_t	niup: title(ih: FlatButton_t): string	
toggle	niup.html#toggle,FlatButton_t	niup: toggle(ih: FlatButton_t): string	
touch=	niup.html#touch=,FlatButton_t,string	niup: touch=(ih: FlatButton_t; value: string)	
touch	niup.html#touch,FlatButton_t,string	niup: touch(ih: FlatButton_t; value: string)	
touch=	niup.html#touch=,FlatButton_t,bool	niup: touch=(ih: FlatButton_t; yes: bool)	
touch	niup.html#touch,FlatButton_t,bool	niup: touch(ih: FlatButton_t; yes: bool)	
touch	niup.html#touch,FlatButton_t	niup: touch(ih: FlatButton_t): bool	
usersize=	niup.html#usersize=,FlatButton_t,string	niup: usersize=(ih: FlatButton_t; value: string)	
usersize	niup.html#usersize,FlatButton_t,string	niup: usersize(ih: FlatButton_t; value: string)	
usersize=	niup.html#usersize=,FlatButton_t,int,int	niup: usersize=(ih: FlatButton_t; width, height: int)	
usersize	niup.html#usersize,FlatButton_t,int,int	niup: usersize(ih: FlatButton_t; width, height: int)	
usersize	niup.html#usersize,FlatButton_t	niup: usersize(ih: FlatButton_t): string	
value=	niup.html#value=,FlatButton_t,string	niup: value=(ih: FlatButton_t; value: string)	
value	niup.html#value,FlatButton_t,string	niup: value(ih: FlatButton_t; value: string)	
value	niup.html#value,FlatButton_t	niup: value(ih: FlatButton_t): string	
visible=	niup.html#visible=,FlatButton_t,string	niup: visible=(ih: FlatButton_t; value: string)	
visible	niup.html#visible,FlatButton_t,string	niup: visible(ih: FlatButton_t; value: string)	
visible=	niup.html#visible=,FlatButton_t,bool	niup: visible=(ih: FlatButton_t; yes: bool)	
visible	niup.html#visible,FlatButton_t,bool	niup: visible(ih: FlatButton_t; yes: bool)	
visible	niup.html#visible,FlatButton_t	niup: visible(ih: FlatButton_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatButton_t,string	niup: wheeldropfocus=(ih: FlatButton_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatButton_t,string	niup: wheeldropfocus(ih: FlatButton_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatButton_t,bool	niup: wheeldropfocus=(ih: FlatButton_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatButton_t,bool	niup: wheeldropfocus(ih: FlatButton_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatButton_t	niup: wheeldropfocus(ih: FlatButton_t): bool	
wid	niup.html#wid,FlatButton_t	niup: wid(ih: FlatButton_t): string	
x	niup.html#x,FlatButton_t	niup: x(ih: FlatButton_t): string	
xautohide=	niup.html#xautohide=,FlatButton_t,string	niup: xautohide=(ih: FlatButton_t; value: string)	
xautohide	niup.html#xautohide,FlatButton_t,string	niup: xautohide(ih: FlatButton_t; value: string)	
xautohide=	niup.html#xautohide=,FlatButton_t,bool	niup: xautohide=(ih: FlatButton_t; yes: bool)	
xautohide	niup.html#xautohide,FlatButton_t,bool	niup: xautohide(ih: FlatButton_t; yes: bool)	
xautohide	niup.html#xautohide,FlatButton_t	niup: xautohide(ih: FlatButton_t): bool	
xdisplay	niup.html#xdisplay,FlatButton_t	niup: xdisplay(ih: FlatButton_t): string	
xfontid	niup.html#xfontid,FlatButton_t	niup: xfontid(ih: FlatButton_t): string	
xhidden	niup.html#xhidden,FlatButton_t	niup: xhidden(ih: FlatButton_t): bool	
xmax=	niup.html#xmax=,FlatButton_t,string	niup: xmax=(ih: FlatButton_t; value: string)	
xmax	niup.html#xmax,FlatButton_t,string	niup: xmax(ih: FlatButton_t; value: string)	
xmax=	niup.html#xmax=,FlatButton_t,int	niup: xmax=(ih: FlatButton_t; x: int)	
xmax	niup.html#xmax,FlatButton_t,int	niup: xmax(ih: FlatButton_t; x: int)	
xmax	niup.html#xmax,FlatButton_t	niup: xmax(ih: FlatButton_t): string	
xmin=	niup.html#xmin=,FlatButton_t,string	niup: xmin=(ih: FlatButton_t; value: string)	
xmin	niup.html#xmin,FlatButton_t,string	niup: xmin(ih: FlatButton_t; value: string)	
xmin=	niup.html#xmin=,FlatButton_t,int	niup: xmin=(ih: FlatButton_t; x: int)	
xmin	niup.html#xmin,FlatButton_t,int	niup: xmin(ih: FlatButton_t; x: int)	
xmin	niup.html#xmin,FlatButton_t	niup: xmin(ih: FlatButton_t): string	
xwindow	niup.html#xwindow,FlatButton_t	niup: xwindow(ih: FlatButton_t): string	
y	niup.html#y,FlatButton_t	niup: y(ih: FlatButton_t): string	
yautohide=	niup.html#yautohide=,FlatButton_t,string	niup: yautohide=(ih: FlatButton_t; value: string)	
yautohide	niup.html#yautohide,FlatButton_t,string	niup: yautohide(ih: FlatButton_t; value: string)	
yautohide=	niup.html#yautohide=,FlatButton_t,bool	niup: yautohide=(ih: FlatButton_t; yes: bool)	
yautohide	niup.html#yautohide,FlatButton_t,bool	niup: yautohide(ih: FlatButton_t; yes: bool)	
yautohide	niup.html#yautohide,FlatButton_t	niup: yautohide(ih: FlatButton_t): bool	
yhidden	niup.html#yhidden,FlatButton_t	niup: yhidden(ih: FlatButton_t): bool	
ymax=	niup.html#ymax=,FlatButton_t,string	niup: ymax=(ih: FlatButton_t; value: string)	
ymax	niup.html#ymax,FlatButton_t,string	niup: ymax(ih: FlatButton_t; value: string)	
ymax=	niup.html#ymax=,FlatButton_t,int	niup: ymax=(ih: FlatButton_t; x: int)	
ymax	niup.html#ymax,FlatButton_t,int	niup: ymax(ih: FlatButton_t; x: int)	
ymax	niup.html#ymax,FlatButton_t	niup: ymax(ih: FlatButton_t): string	
ymin=	niup.html#ymin=,FlatButton_t,string	niup: ymin=(ih: FlatButton_t; value: string)	
ymin	niup.html#ymin,FlatButton_t,string	niup: ymin(ih: FlatButton_t; value: string)	
ymin=	niup.html#ymin=,FlatButton_t,int	niup: ymin=(ih: FlatButton_t; x: int)	
ymin	niup.html#ymin,FlatButton_t,int	niup: ymin(ih: FlatButton_t; x: int)	
ymin	niup.html#ymin,FlatButton_t	niup: ymin(ih: FlatButton_t): string	
zorder=	niup.html#zorder=,FlatButton_t,string	niup: zorder=(ih: FlatButton_t; value: string)	
zorder	niup.html#zorder,FlatButton_t,string	niup: zorder(ih: FlatButton_t; value: string)	
action=	niup.html#action=,FlatButton_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatButton_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatButton_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatButton_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatButton_t	niup: action(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                       arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatButton_t	niup: button_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatButton_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatButton_t,proc(PIhandle)	niup: destroy_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatButton_t	niup: destroy_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatButton_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatButton_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatButton_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatButton_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatButton_t	niup: dragbegin_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatButton_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatButton_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatButton_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatButton_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatButton_t	niup: dragdatasize_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatButton_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatButton_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatButton_t	niup: dragdata_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatButton_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatButton_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatButton_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatButton_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatButton_t	niup: dragend_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatButton_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatButton_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatButton_t	niup: dropdata_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatButton_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatButton_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatButton_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatButton_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatButton_t	niup: dropfiles_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatButton_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatButton_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatButton_t	niup: dropmotion_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatButton_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatButton_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatButton_t	niup: enterwindow_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_action=	niup.html#flat_action=,FlatButton_t,proc(PIhandle)	niup: flat_action=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_action	niup.html#flat_action,FlatButton_t,proc(PIhandle)	niup: flat_action(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_action	niup.html#flat_action,FlatButton_t	niup: flat_action(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,FlatButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint; arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatButton_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatButton_t	niup: flat_button_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_enterwindow_cb=	niup.html#flat_enterwindow_cb=,FlatButton_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,FlatButton_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,FlatButton_t	niup: flat_enterwindow_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_focus_cb=	niup.html#flat_focus_cb=,FlatButton_t,proc(PIhandle,cint)	niup: flat_focus_cb=(ih: FlatButton_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatButton_t,proc(PIhandle,cint)	niup: flat_focus_cb(ih: FlatButton_t;\n              cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatButton_t	niup: flat_focus_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,FlatButton_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatButton_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatButton_t	niup: flat_leavewindow_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,FlatButton_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint; arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatButton_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatButton_t	niup: flat_motion_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatButton_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatButton_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatButton_t	niup: focus_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatButton_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatButton_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatButton_t	niup: getfocus_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatButton_t,proc(PIhandle)	niup: help_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatButton_t,proc(PIhandle)	niup: help_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatButton_t	niup: help_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatButton_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatButton_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatButton_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatButton_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatButton_t	niup: keypress_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatButton_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatButton_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatButton_t	niup: killfocus_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatButton_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatButton_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatButton_t,proc(PIhandle,cint)	niup: k_any(ih: FlatButton_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatButton_t	niup: k_any(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatButton_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatButton_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatButton_t	niup: ldestroy_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatButton_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatButton_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatButton_t	niup: leavewindow_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatButton_t,proc(PIhandle)	niup: map_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatButton_t,proc(PIhandle)	niup: map_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatButton_t	niup: map_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatButton_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatButton_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatButton_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatButton_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatButton_t	niup: motion_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatButton_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatButton_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatButton_t	niup: postmessage_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatButton_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatButton_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatButton_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatButton_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatButton_t	niup: resize_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatButton_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatButton_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatButton_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatButton_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatButton_t	niup: scroll_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatButton_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatButton_t,proc(PIhandle)	niup: unmap_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatButton_t	niup: unmap_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,FlatButton_t,proc(PIhandle)	niup: valuechanged_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatButton_t,proc(PIhandle)	niup: valuechanged_cb(ih: FlatButton_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatButton_t	niup: valuechanged_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatButton_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                      status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatButton_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                     status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatButton_t	niup: wheel_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatButton_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatButton_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatButton_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatButton_t	niup: wom_cb(ih: FlatButton_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatFrame	niup.html#FlatFrame,IUPhandle_t	niup: FlatFrame(child: IUPhandle_t): FlatFrame_t	
active=	niup.html#active=,FlatFrame_t,string	niup: active=(ih: FlatFrame_t; value: string)	
active	niup.html#active,FlatFrame_t,string	niup: active(ih: FlatFrame_t; value: string)	
active=	niup.html#active=,FlatFrame_t,bool	niup: active=(ih: FlatFrame_t; yes: bool)	
active	niup.html#active,FlatFrame_t,bool	niup: active(ih: FlatFrame_t; yes: bool)	
active	niup.html#active,FlatFrame_t	niup: active(ih: FlatFrame_t): bool	
backcolor=	niup.html#backcolor=,FlatFrame_t,string	niup: backcolor=(ih: FlatFrame_t; value: string)	
backcolor	niup.html#backcolor,FlatFrame_t,string	niup: backcolor(ih: FlatFrame_t; value: string)	
backcolor=	niup.html#backcolor=,FlatFrame_t,int,int,int,int	niup: backcolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,FlatFrame_t,int,int,int,int	niup: backcolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,FlatFrame_t	niup: backcolor(ih: FlatFrame_t): string	
backimage=	niup.html#backimage=,FlatFrame_t,	niup: backimage=(ih: FlatFrame_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatFrame_t,	niup: backimage(ih: FlatFrame_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatFrame_t	niup: backimage(ih: FlatFrame_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatFrame_t,string	niup: backimagezoom=(ih: FlatFrame_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatFrame_t,string	niup: backimagezoom(ih: FlatFrame_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatFrame_t,bool	niup: backimagezoom=(ih: FlatFrame_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatFrame_t,bool	niup: backimagezoom(ih: FlatFrame_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatFrame_t	niup: backimagezoom(ih: FlatFrame_t): bool	
backingstore=	niup.html#backingstore=,FlatFrame_t,string	niup: backingstore=(ih: FlatFrame_t; value: string)	
backingstore	niup.html#backingstore,FlatFrame_t,string	niup: backingstore(ih: FlatFrame_t; value: string)	
backingstore=	niup.html#backingstore=,FlatFrame_t,bool	niup: backingstore=(ih: FlatFrame_t; yes: bool)	
backingstore	niup.html#backingstore,FlatFrame_t,bool	niup: backingstore(ih: FlatFrame_t; yes: bool)	
backingstore	niup.html#backingstore,FlatFrame_t	niup: backingstore(ih: FlatFrame_t): bool	
bgcolor=	niup.html#bgcolor=,FlatFrame_t,string	niup: bgcolor=(ih: FlatFrame_t; value: string)	
bgcolor	niup.html#bgcolor,FlatFrame_t,string	niup: bgcolor(ih: FlatFrame_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatFrame_t,int,int,int,int	niup: bgcolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatFrame_t,int,int,int,int	niup: bgcolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatFrame_t	niup: bgcolor(ih: FlatFrame_t): string	
border	niup.html#border,FlatFrame_t	niup: border(ih: FlatFrame_t): bool	
canfocus=	niup.html#canfocus=,FlatFrame_t,string	niup: canfocus=(ih: FlatFrame_t; value: string)	
canfocus	niup.html#canfocus,FlatFrame_t,string	niup: canfocus(ih: FlatFrame_t; value: string)	
canfocus=	niup.html#canfocus=,FlatFrame_t,bool	niup: canfocus=(ih: FlatFrame_t; yes: bool)	
canfocus	niup.html#canfocus,FlatFrame_t,bool	niup: canfocus(ih: FlatFrame_t; yes: bool)	
canfocus	niup.html#canfocus,FlatFrame_t	niup: canfocus(ih: FlatFrame_t): bool	
canvasbox=	niup.html#canvasbox=,FlatFrame_t,string	niup: canvasbox=(ih: FlatFrame_t; value: string)	
canvasbox	niup.html#canvasbox,FlatFrame_t,string	niup: canvasbox(ih: FlatFrame_t; value: string)	
canvasbox=	niup.html#canvasbox=,FlatFrame_t,bool	niup: canvasbox=(ih: FlatFrame_t; yes: bool)	
canvasbox	niup.html#canvasbox,FlatFrame_t,bool	niup: canvasbox(ih: FlatFrame_t; yes: bool)	
canvasbox	niup.html#canvasbox,FlatFrame_t	niup: canvasbox(ih: FlatFrame_t): bool	
charsize	niup.html#charsize,FlatFrame_t	niup: charsize(ih: FlatFrame_t): string	
childoffset=	niup.html#childoffset=,FlatFrame_t,string	niup: childoffset=(ih: FlatFrame_t; value: string)	
childoffset	niup.html#childoffset,FlatFrame_t,string	niup: childoffset(ih: FlatFrame_t; value: string)	
childoffset=	niup.html#childoffset=,FlatFrame_t,int,int	niup: childoffset=(ih: FlatFrame_t; width, height: int)	
childoffset	niup.html#childoffset,FlatFrame_t,int,int	niup: childoffset(ih: FlatFrame_t; width, height: int)	
childoffset	niup.html#childoffset,FlatFrame_t	niup: childoffset(ih: FlatFrame_t): string	
clientoffset	niup.html#clientoffset,FlatFrame_t	niup: clientoffset(ih: FlatFrame_t): string	
clientsize	niup.html#clientsize,FlatFrame_t	niup: clientsize(ih: FlatFrame_t): string	
cursor=	niup.html#cursor=,FlatFrame_t,	niup: cursor=(ih: FlatFrame_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatFrame_t,	niup: cursor(ih: FlatFrame_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatFrame_t	niup: cursor(ih: FlatFrame_t): string	
decoration	niup.html#decoration,FlatFrame_t	niup: decoration(ih: FlatFrame_t): bool	
decoroffset	niup.html#decoroffset,FlatFrame_t	niup: decoroffset(ih: FlatFrame_t): string	
decorsize	niup.html#decorsize,FlatFrame_t	niup: decorsize(ih: FlatFrame_t): string	
dragdrop=	niup.html#dragdrop=,FlatFrame_t,string	niup: dragdrop=(ih: FlatFrame_t; value: string)	
dragdrop	niup.html#dragdrop,FlatFrame_t,string	niup: dragdrop(ih: FlatFrame_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatFrame_t,bool	niup: dragdrop=(ih: FlatFrame_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatFrame_t,bool	niup: dragdrop(ih: FlatFrame_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatFrame_t	niup: dragdrop(ih: FlatFrame_t): bool	
dragsource=	niup.html#dragsource=,FlatFrame_t,string	niup: dragsource=(ih: FlatFrame_t; value: string)	
dragsource	niup.html#dragsource,FlatFrame_t,string	niup: dragsource(ih: FlatFrame_t; value: string)	
dragsource=	niup.html#dragsource=,FlatFrame_t,bool	niup: dragsource=(ih: FlatFrame_t; yes: bool)	
dragsource	niup.html#dragsource,FlatFrame_t,bool	niup: dragsource(ih: FlatFrame_t; yes: bool)	
dragsource	niup.html#dragsource,FlatFrame_t	niup: dragsource(ih: FlatFrame_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatFrame_t,string	niup: dragsourcemove=(ih: FlatFrame_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatFrame_t,string	niup: dragsourcemove(ih: FlatFrame_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatFrame_t,bool	niup: dragsourcemove=(ih: FlatFrame_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatFrame_t,bool	niup: dragsourcemove(ih: FlatFrame_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatFrame_t	niup: dragsourcemove(ih: FlatFrame_t): bool	
dragtypes=	niup.html#dragtypes=,FlatFrame_t,string	niup: dragtypes=(ih: FlatFrame_t; value: string)	
dragtypes	niup.html#dragtypes,FlatFrame_t,string	niup: dragtypes(ih: FlatFrame_t; value: string)	
dragtypes	niup.html#dragtypes,FlatFrame_t	niup: dragtypes(ih: FlatFrame_t): string	
drawable	niup.html#drawable,FlatFrame_t	niup: drawable(ih: FlatFrame_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatFrame_t,string	niup: drawbgcolor=(ih: FlatFrame_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatFrame_t,string	niup: drawbgcolor(ih: FlatFrame_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatFrame_t,int,int,int,int	niup: drawbgcolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatFrame_t,int,int,int,int	niup: drawbgcolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatFrame_t	niup: drawbgcolor(ih: FlatFrame_t): string	
drawcolor=	niup.html#drawcolor=,FlatFrame_t,string	niup: drawcolor=(ih: FlatFrame_t; value: string)	
drawcolor	niup.html#drawcolor,FlatFrame_t,string	niup: drawcolor(ih: FlatFrame_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatFrame_t,int,int,int,int	niup: drawcolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatFrame_t,int,int,int,int	niup: drawcolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatFrame_t	niup: drawcolor(ih: FlatFrame_t): string	
drawdriver	niup.html#drawdriver,FlatFrame_t	niup: drawdriver(ih: FlatFrame_t): string	
drawfont=	niup.html#drawfont=,FlatFrame_t,string	niup: drawfont=(ih: FlatFrame_t; value: string)	
drawfont	niup.html#drawfont,FlatFrame_t,string	niup: drawfont(ih: FlatFrame_t; value: string)	
drawfont	niup.html#drawfont,FlatFrame_t	niup: drawfont(ih: FlatFrame_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatFrame_t,string	niup: drawlinewidth=(ih: FlatFrame_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatFrame_t,string	niup: drawlinewidth(ih: FlatFrame_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatFrame_t,int	niup: drawlinewidth=(ih: FlatFrame_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatFrame_t,int	niup: drawlinewidth(ih: FlatFrame_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatFrame_t	niup: drawlinewidth(ih: FlatFrame_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatFrame_t,string	niup: drawmakeinactive=(ih: FlatFrame_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatFrame_t,string	niup: drawmakeinactive(ih: FlatFrame_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatFrame_t,bool	niup: drawmakeinactive=(ih: FlatFrame_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatFrame_t,bool	niup: drawmakeinactive(ih: FlatFrame_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatFrame_t	niup: drawmakeinactive(ih: FlatFrame_t): bool	
drawsize	niup.html#drawsize,FlatFrame_t	niup: drawsize(ih: FlatFrame_t): string	
drawstyle=	niup.html#drawstyle=,FlatFrame_t,string	niup: drawstyle=(ih: FlatFrame_t; value: string)	
drawstyle	niup.html#drawstyle,FlatFrame_t,string	niup: drawstyle(ih: FlatFrame_t; value: string)	
drawstyle	niup.html#drawstyle,FlatFrame_t	niup: drawstyle(ih: FlatFrame_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatFrame_t,string	niup: drawtextalignment=(ih: FlatFrame_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatFrame_t,string	niup: drawtextalignment(ih: FlatFrame_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatFrame_t	niup: drawtextalignment(ih: FlatFrame_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatFrame_t,string	niup: drawtextclip=(ih: FlatFrame_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatFrame_t,string	niup: drawtextclip(ih: FlatFrame_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatFrame_t,bool	niup: drawtextclip=(ih: FlatFrame_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatFrame_t,bool	niup: drawtextclip(ih: FlatFrame_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatFrame_t	niup: drawtextclip(ih: FlatFrame_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatFrame_t,string	niup: drawtextellipsis=(ih: FlatFrame_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatFrame_t,string	niup: drawtextellipsis(ih: FlatFrame_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatFrame_t,bool	niup: drawtextellipsis=(ih: FlatFrame_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatFrame_t,bool	niup: drawtextellipsis(ih: FlatFrame_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatFrame_t	niup: drawtextellipsis(ih: FlatFrame_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatFrame_t,string	niup: drawtextlayoutcenter=(ih: FlatFrame_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatFrame_t,string	niup: drawtextlayoutcenter(ih: FlatFrame_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatFrame_t,bool	niup: drawtextlayoutcenter=(ih: FlatFrame_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatFrame_t,bool	niup: drawtextlayoutcenter(ih: FlatFrame_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatFrame_t	niup: drawtextlayoutcenter(ih: FlatFrame_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatFrame_t,string	niup: drawtextorientation=(ih: FlatFrame_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatFrame_t,string	niup: drawtextorientation(ih: FlatFrame_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatFrame_t,int64	niup: drawtextorientation=(ih: FlatFrame_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatFrame_t,int64	niup: drawtextorientation(ih: FlatFrame_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatFrame_t	niup: drawtextorientation(ih: FlatFrame_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatFrame_t,string	niup: drawtextwrap=(ih: FlatFrame_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatFrame_t,string	niup: drawtextwrap(ih: FlatFrame_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatFrame_t,bool	niup: drawtextwrap=(ih: FlatFrame_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatFrame_t,bool	niup: drawtextwrap(ih: FlatFrame_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatFrame_t	niup: drawtextwrap(ih: FlatFrame_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatFrame_t,string	niup: dropfilestarget=(ih: FlatFrame_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatFrame_t,string	niup: dropfilestarget(ih: FlatFrame_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatFrame_t,bool	niup: dropfilestarget=(ih: FlatFrame_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatFrame_t,bool	niup: dropfilestarget(ih: FlatFrame_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatFrame_t	niup: dropfilestarget(ih: FlatFrame_t): bool	
droptarget=	niup.html#droptarget=,FlatFrame_t,string	niup: droptarget=(ih: FlatFrame_t; value: string)	
droptarget	niup.html#droptarget,FlatFrame_t,string	niup: droptarget(ih: FlatFrame_t; value: string)	
droptarget=	niup.html#droptarget=,FlatFrame_t,bool	niup: droptarget=(ih: FlatFrame_t; yes: bool)	
droptarget	niup.html#droptarget,FlatFrame_t,bool	niup: droptarget(ih: FlatFrame_t; yes: bool)	
droptarget	niup.html#droptarget,FlatFrame_t	niup: droptarget(ih: FlatFrame_t): bool	
droptypes=	niup.html#droptypes=,FlatFrame_t,string	niup: droptypes=(ih: FlatFrame_t; value: string)	
droptypes	niup.html#droptypes,FlatFrame_t,string	niup: droptypes(ih: FlatFrame_t; value: string)	
droptypes	niup.html#droptypes,FlatFrame_t	niup: droptypes(ih: FlatFrame_t): string	
dx=	niup.html#dx=,FlatFrame_t,string	niup: dx=(ih: FlatFrame_t; value: string)	
dx	niup.html#dx,FlatFrame_t,string	niup: dx(ih: FlatFrame_t; value: string)	
dx=	niup.html#dx=,FlatFrame_t,int64	niup: dx=(ih: FlatFrame_t; x: int64)	
dx	niup.html#dx,FlatFrame_t,int64	niup: dx(ih: FlatFrame_t; x: int64)	
dx	niup.html#dx,FlatFrame_t	niup: dx(ih: FlatFrame_t): string	
dy=	niup.html#dy=,FlatFrame_t,string	niup: dy=(ih: FlatFrame_t; value: string)	
dy	niup.html#dy,FlatFrame_t,string	niup: dy(ih: FlatFrame_t; value: string)	
dy=	niup.html#dy=,FlatFrame_t,int64	niup: dy=(ih: FlatFrame_t; x: int64)	
dy	niup.html#dy,FlatFrame_t,int64	niup: dy(ih: FlatFrame_t; x: int64)	
dy	niup.html#dy,FlatFrame_t	niup: dy(ih: FlatFrame_t): string	
expand=	niup.html#expand=,FlatFrame_t,string	niup: expand=(ih: FlatFrame_t; value: string)	
expand	niup.html#expand,FlatFrame_t,string	niup: expand(ih: FlatFrame_t; value: string)	
expand	niup.html#expand,FlatFrame_t	niup: expand(ih: FlatFrame_t): string	
expandweight=	niup.html#expandweight=,FlatFrame_t,string	niup: expandweight=(ih: FlatFrame_t; value: string)	
expandweight	niup.html#expandweight,FlatFrame_t,string	niup: expandweight(ih: FlatFrame_t; value: string)	
expandweight=	niup.html#expandweight=,FlatFrame_t,int64	niup: expandweight=(ih: FlatFrame_t; x: int64)	
expandweight	niup.html#expandweight,FlatFrame_t,int64	niup: expandweight(ih: FlatFrame_t; x: int64)	
expandweight	niup.html#expandweight,FlatFrame_t	niup: expandweight(ih: FlatFrame_t): string	
floating=	niup.html#floating=,FlatFrame_t,string	niup: floating=(ih: FlatFrame_t; value: string)	
floating	niup.html#floating,FlatFrame_t,string	niup: floating(ih: FlatFrame_t; value: string)	
floating	niup.html#floating,FlatFrame_t	niup: floating(ih: FlatFrame_t): string	
font=	niup.html#font=,FlatFrame_t,string	niup: font=(ih: FlatFrame_t; value: string)	
font	niup.html#font,FlatFrame_t,string	niup: font(ih: FlatFrame_t; value: string)	
font	niup.html#font,FlatFrame_t	niup: font(ih: FlatFrame_t): string	
fontface=	niup.html#fontface=,FlatFrame_t,string	niup: fontface=(ih: FlatFrame_t; value: string)	
fontface	niup.html#fontface,FlatFrame_t,string	niup: fontface(ih: FlatFrame_t; value: string)	
fontface	niup.html#fontface,FlatFrame_t	niup: fontface(ih: FlatFrame_t): string	
fontsize=	niup.html#fontsize=,FlatFrame_t,string	niup: fontsize=(ih: FlatFrame_t; value: string)	
fontsize	niup.html#fontsize,FlatFrame_t,string	niup: fontsize(ih: FlatFrame_t; value: string)	
fontsize=	niup.html#fontsize=,FlatFrame_t,int	niup: fontsize=(ih: FlatFrame_t; x: int)	
fontsize	niup.html#fontsize,FlatFrame_t,int	niup: fontsize(ih: FlatFrame_t; x: int)	
fontsize	niup.html#fontsize,FlatFrame_t	niup: fontsize(ih: FlatFrame_t): string	
fontstyle=	niup.html#fontstyle=,FlatFrame_t,string	niup: fontstyle=(ih: FlatFrame_t; value: string)	
fontstyle	niup.html#fontstyle,FlatFrame_t,string	niup: fontstyle(ih: FlatFrame_t; value: string)	
fontstyle	niup.html#fontstyle,FlatFrame_t	niup: fontstyle(ih: FlatFrame_t): string	
frame=	niup.html#frame=,FlatFrame_t,string	niup: frame=(ih: FlatFrame_t; value: string)	
frame	niup.html#frame,FlatFrame_t,string	niup: frame(ih: FlatFrame_t; value: string)	
frame	niup.html#frame,FlatFrame_t	niup: frame(ih: FlatFrame_t): string	
framecolor=	niup.html#framecolor=,FlatFrame_t,string	niup: framecolor=(ih: FlatFrame_t; value: string)	
framecolor	niup.html#framecolor,FlatFrame_t,string	niup: framecolor(ih: FlatFrame_t; value: string)	
framecolor=	niup.html#framecolor=,FlatFrame_t,int,int,int,int	niup: framecolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
framecolor	niup.html#framecolor,FlatFrame_t,int,int,int,int	niup: framecolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
framecolor	niup.html#framecolor,FlatFrame_t	niup: framecolor(ih: FlatFrame_t): string	
framespace	niup.html#framespace,FlatFrame_t	niup: framespace(ih: FlatFrame_t): string	
framewidth=	niup.html#framewidth=,FlatFrame_t,string	niup: framewidth=(ih: FlatFrame_t; value: string)	
framewidth	niup.html#framewidth,FlatFrame_t,string	niup: framewidth(ih: FlatFrame_t; value: string)	
framewidth=	niup.html#framewidth=,FlatFrame_t,int	niup: framewidth=(ih: FlatFrame_t; x: int)	
framewidth	niup.html#framewidth,FlatFrame_t,int	niup: framewidth(ih: FlatFrame_t; x: int)	
framewidth	niup.html#framewidth,FlatFrame_t	niup: framewidth(ih: FlatFrame_t): string	
handlename=	niup.html#handlename=,FlatFrame_t,string	niup: handlename=(ih: FlatFrame_t; value: string)	
handlename	niup.html#handlename,FlatFrame_t,string	niup: handlename(ih: FlatFrame_t; value: string)	
handlename	niup.html#handlename,FlatFrame_t	niup: handlename(ih: FlatFrame_t): string	
linex=	niup.html#linex=,FlatFrame_t,string	niup: linex=(ih: FlatFrame_t; value: string)	
linex	niup.html#linex,FlatFrame_t,string	niup: linex(ih: FlatFrame_t; value: string)	
linex=	niup.html#linex=,FlatFrame_t,int64	niup: linex=(ih: FlatFrame_t; x: int64)	
linex	niup.html#linex,FlatFrame_t,int64	niup: linex(ih: FlatFrame_t; x: int64)	
linex	niup.html#linex,FlatFrame_t	niup: linex(ih: FlatFrame_t): string	
liney=	niup.html#liney=,FlatFrame_t,string	niup: liney=(ih: FlatFrame_t; value: string)	
liney	niup.html#liney,FlatFrame_t,string	niup: liney(ih: FlatFrame_t; value: string)	
liney=	niup.html#liney=,FlatFrame_t,int64	niup: liney=(ih: FlatFrame_t; x: int64)	
liney	niup.html#liney,FlatFrame_t,int64	niup: liney(ih: FlatFrame_t; x: int64)	
liney	niup.html#liney,FlatFrame_t	niup: liney(ih: FlatFrame_t): string	
maxsize=	niup.html#maxsize=,FlatFrame_t,string	niup: maxsize=(ih: FlatFrame_t; value: string)	
maxsize	niup.html#maxsize,FlatFrame_t,string	niup: maxsize(ih: FlatFrame_t; value: string)	
maxsize=	niup.html#maxsize=,FlatFrame_t,int,int	niup: maxsize=(ih: FlatFrame_t; width, height: int)	
maxsize	niup.html#maxsize,FlatFrame_t,int,int	niup: maxsize(ih: FlatFrame_t; width, height: int)	
maxsize	niup.html#maxsize,FlatFrame_t	niup: maxsize(ih: FlatFrame_t): string	
minsize=	niup.html#minsize=,FlatFrame_t,string	niup: minsize=(ih: FlatFrame_t; value: string)	
minsize	niup.html#minsize,FlatFrame_t,string	niup: minsize(ih: FlatFrame_t; value: string)	
minsize=	niup.html#minsize=,FlatFrame_t,int,int	niup: minsize=(ih: FlatFrame_t; width, height: int)	
minsize	niup.html#minsize,FlatFrame_t,int,int	niup: minsize(ih: FlatFrame_t; width, height: int)	
minsize	niup.html#minsize,FlatFrame_t	niup: minsize(ih: FlatFrame_t): string	
name=	niup.html#name=,FlatFrame_t,string	niup: name=(ih: FlatFrame_t; value: string)	
name	niup.html#name,FlatFrame_t,string	niup: name(ih: FlatFrame_t; value: string)	
name	niup.html#name,FlatFrame_t	niup: name(ih: FlatFrame_t): string	
naturalsize	niup.html#naturalsize,FlatFrame_t	niup: naturalsize(ih: FlatFrame_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatFrame_t,string	niup: normalizergroup=(ih: FlatFrame_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatFrame_t,string	niup: normalizergroup(ih: FlatFrame_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatFrame_t	niup: normalizergroup(ih: FlatFrame_t): string	
ntheme=	niup.html#ntheme=,FlatFrame_t,string	niup: ntheme=(ih: FlatFrame_t; value: string)	
ntheme	niup.html#ntheme,FlatFrame_t,string	niup: ntheme(ih: FlatFrame_t; value: string)	
ntheme	niup.html#ntheme,FlatFrame_t	niup: ntheme(ih: FlatFrame_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatFrame_t	niup: pangofontdesc(ih: FlatFrame_t): string	
pangolayout	niup.html#pangolayout,FlatFrame_t	niup: pangolayout(ih: FlatFrame_t): string	
position=	niup.html#position=,FlatFrame_t,string	niup: position=(ih: FlatFrame_t; value: string)	
position	niup.html#position,FlatFrame_t,string	niup: position(ih: FlatFrame_t; value: string)	
position=	niup.html#position=,FlatFrame_t,int,int	niup: position=(ih: FlatFrame_t; x, y: int)	
position	niup.html#position,FlatFrame_t,int,int	niup: position(ih: FlatFrame_t; x, y: int)	
position	niup.html#position,FlatFrame_t	niup: position(ih: FlatFrame_t): string	
posx=	niup.html#posx=,FlatFrame_t,string	niup: posx=(ih: FlatFrame_t; value: string)	
posx	niup.html#posx,FlatFrame_t,string	niup: posx(ih: FlatFrame_t; value: string)	
posx=	niup.html#posx=,FlatFrame_t,int64	niup: posx=(ih: FlatFrame_t; x: int64)	
posx	niup.html#posx,FlatFrame_t,int64	niup: posx(ih: FlatFrame_t; x: int64)	
posx	niup.html#posx,FlatFrame_t	niup: posx(ih: FlatFrame_t): string	
posy=	niup.html#posy=,FlatFrame_t,string	niup: posy=(ih: FlatFrame_t; value: string)	
posy	niup.html#posy,FlatFrame_t,string	niup: posy(ih: FlatFrame_t; value: string)	
posy=	niup.html#posy=,FlatFrame_t,int64	niup: posy=(ih: FlatFrame_t; x: int64)	
posy	niup.html#posy,FlatFrame_t,int64	niup: posy(ih: FlatFrame_t; x: int64)	
posy	niup.html#posy,FlatFrame_t	niup: posy(ih: FlatFrame_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatFrame_t,string	niup: propagatefocus=(ih: FlatFrame_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatFrame_t,string	niup: propagatefocus(ih: FlatFrame_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatFrame_t,bool	niup: propagatefocus=(ih: FlatFrame_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatFrame_t,bool	niup: propagatefocus(ih: FlatFrame_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatFrame_t	niup: propagatefocus(ih: FlatFrame_t): bool	
rastersize=	niup.html#rastersize=,FlatFrame_t,string	niup: rastersize=(ih: FlatFrame_t; value: string)	
rastersize	niup.html#rastersize,FlatFrame_t,string	niup: rastersize(ih: FlatFrame_t; value: string)	
rastersize=	niup.html#rastersize=,FlatFrame_t,int,int	niup: rastersize=(ih: FlatFrame_t; width, height: int)	
rastersize	niup.html#rastersize,FlatFrame_t,int,int	niup: rastersize(ih: FlatFrame_t; width, height: int)	
rastersize	niup.html#rastersize,FlatFrame_t	niup: rastersize(ih: FlatFrame_t): string	
sb_resize	niup.html#sb_resize,FlatFrame_t	niup: sb_resize(ih: FlatFrame_t): string	
screenposition	niup.html#screenposition,FlatFrame_t	niup: screenposition(ih: FlatFrame_t): string	
scrollbar=	niup.html#scrollbar=,FlatFrame_t,string	niup: scrollbar=(ih: FlatFrame_t; value: string)	
scrollbar	niup.html#scrollbar,FlatFrame_t,string	niup: scrollbar(ih: FlatFrame_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatFrame_t,bool	niup: scrollbar=(ih: FlatFrame_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatFrame_t,bool	niup: scrollbar(ih: FlatFrame_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatFrame_t	niup: scrollbar(ih: FlatFrame_t): bool	
size=	niup.html#size=,FlatFrame_t,string	niup: size=(ih: FlatFrame_t; value: string)	
size	niup.html#size,FlatFrame_t,string	niup: size(ih: FlatFrame_t; value: string)	
size=	niup.html#size=,FlatFrame_t,int,int	niup: size=(ih: FlatFrame_t; width, height: int)	
size	niup.html#size,FlatFrame_t,int,int	niup: size(ih: FlatFrame_t; width, height: int)	
size	niup.html#size,FlatFrame_t	niup: size(ih: FlatFrame_t): string	
theme=	niup.html#theme=,FlatFrame_t,string	niup: theme=(ih: FlatFrame_t; value: string)	
theme	niup.html#theme,FlatFrame_t,string	niup: theme(ih: FlatFrame_t; value: string)	
theme	niup.html#theme,FlatFrame_t	niup: theme(ih: FlatFrame_t): string	
tip=	niup.html#tip=,FlatFrame_t,string	niup: tip=(ih: FlatFrame_t; value: string)	
tip	niup.html#tip,FlatFrame_t,string	niup: tip(ih: FlatFrame_t; value: string)	
tip	niup.html#tip,FlatFrame_t	niup: tip(ih: FlatFrame_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatFrame_t,string	niup: tipbgcolor=(ih: FlatFrame_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatFrame_t,string	niup: tipbgcolor(ih: FlatFrame_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatFrame_t,int,int,int,int	niup: tipbgcolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatFrame_t,int,int,int,int	niup: tipbgcolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatFrame_t	niup: tipbgcolor(ih: FlatFrame_t): string	
tipdelay=	niup.html#tipdelay=,FlatFrame_t,string	niup: tipdelay=(ih: FlatFrame_t; value: string)	
tipdelay	niup.html#tipdelay,FlatFrame_t,string	niup: tipdelay(ih: FlatFrame_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatFrame_t,int	niup: tipdelay=(ih: FlatFrame_t; x: int)	
tipdelay	niup.html#tipdelay,FlatFrame_t,int	niup: tipdelay(ih: FlatFrame_t; x: int)	
tipdelay	niup.html#tipdelay,FlatFrame_t	niup: tipdelay(ih: FlatFrame_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatFrame_t,string	niup: tipfgcolor=(ih: FlatFrame_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatFrame_t,string	niup: tipfgcolor(ih: FlatFrame_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatFrame_t,int,int,int,int	niup: tipfgcolor=(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatFrame_t,int,int,int,int	niup: tipfgcolor(ih: FlatFrame_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatFrame_t	niup: tipfgcolor(ih: FlatFrame_t): string	
tipicon=	niup.html#tipicon=,FlatFrame_t,string	niup: tipicon=(ih: FlatFrame_t; value: string)	
tipicon	niup.html#tipicon,FlatFrame_t,string	niup: tipicon(ih: FlatFrame_t; value: string)	
tipicon	niup.html#tipicon,FlatFrame_t	niup: tipicon(ih: FlatFrame_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatFrame_t,string	niup: tipmarkup=(ih: FlatFrame_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatFrame_t,string	niup: tipmarkup(ih: FlatFrame_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatFrame_t	niup: tipmarkup(ih: FlatFrame_t): string	
tiprect=	niup.html#tiprect=,FlatFrame_t,string	niup: tiprect=(ih: FlatFrame_t; value: string)	
tiprect	niup.html#tiprect,FlatFrame_t,string	niup: tiprect(ih: FlatFrame_t; value: string)	
tiprect=	niup.html#tiprect=,FlatFrame_t,int,int,int,int	niup: tiprect=(ih: FlatFrame_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatFrame_t,int,int,int,int	niup: tiprect(ih: FlatFrame_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatFrame_t	niup: tiprect(ih: FlatFrame_t): string	
tipvisible=	niup.html#tipvisible=,FlatFrame_t,string	niup: tipvisible=(ih: FlatFrame_t; value: string)	
tipvisible	niup.html#tipvisible,FlatFrame_t,string	niup: tipvisible(ih: FlatFrame_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatFrame_t,bool	niup: tipvisible=(ih: FlatFrame_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatFrame_t,bool	niup: tipvisible(ih: FlatFrame_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatFrame_t	niup: tipvisible(ih: FlatFrame_t): bool	
title=	niup.html#title=,FlatFrame_t,string	niup: title=(ih: FlatFrame_t; value: string)	
title	niup.html#title,FlatFrame_t,string	niup: title(ih: FlatFrame_t; value: string)	
title	niup.html#title,FlatFrame_t	niup: title(ih: FlatFrame_t): string	
titlealignment	niup.html#titlealignment,FlatFrame_t	niup: titlealignment(ih: FlatFrame_t): string	
titlebgcolor	niup.html#titlebgcolor,FlatFrame_t	niup: titlebgcolor(ih: FlatFrame_t): string	
titlecolor	niup.html#titlecolor,FlatFrame_t	niup: titlecolor(ih: FlatFrame_t): string	
titleimage=	niup.html#titleimage=,FlatFrame_t,	niup: titleimage=(ih: FlatFrame_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimage	niup.html#titleimage,FlatFrame_t,	niup: titleimage(ih: FlatFrame_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimage	niup.html#titleimage,FlatFrame_t	niup: titleimage(ih: FlatFrame_t): string	
titleimageposition	niup.html#titleimageposition,FlatFrame_t	niup: titleimageposition(ih: FlatFrame_t): string	
titleimagespacing	niup.html#titleimagespacing,FlatFrame_t	niup: titleimagespacing(ih: FlatFrame_t): string	
titleline	niup.html#titleline,FlatFrame_t	niup: titleline(ih: FlatFrame_t): string	
titlelinecolor	niup.html#titlelinecolor,FlatFrame_t	niup: titlelinecolor(ih: FlatFrame_t): string	
titlelinewidth	niup.html#titlelinewidth,FlatFrame_t	niup: titlelinewidth(ih: FlatFrame_t): string	
titlepadding	niup.html#titlepadding,FlatFrame_t	niup: titlepadding(ih: FlatFrame_t): string	
titletextalignment	niup.html#titletextalignment,FlatFrame_t	niup: titletextalignment(ih: FlatFrame_t): string	
titletextclip	niup.html#titletextclip,FlatFrame_t	niup: titletextclip(ih: FlatFrame_t): string	
titletextellipsis	niup.html#titletextellipsis,FlatFrame_t	niup: titletextellipsis(ih: FlatFrame_t): string	
titletextorientation	niup.html#titletextorientation,FlatFrame_t	niup: titletextorientation(ih: FlatFrame_t): string	
titletextwrap	niup.html#titletextwrap,FlatFrame_t	niup: titletextwrap(ih: FlatFrame_t): string	
touch=	niup.html#touch=,FlatFrame_t,string	niup: touch=(ih: FlatFrame_t; value: string)	
touch	niup.html#touch,FlatFrame_t,string	niup: touch(ih: FlatFrame_t; value: string)	
touch=	niup.html#touch=,FlatFrame_t,bool	niup: touch=(ih: FlatFrame_t; yes: bool)	
touch	niup.html#touch,FlatFrame_t,bool	niup: touch(ih: FlatFrame_t; yes: bool)	
touch	niup.html#touch,FlatFrame_t	niup: touch(ih: FlatFrame_t): bool	
usersize=	niup.html#usersize=,FlatFrame_t,string	niup: usersize=(ih: FlatFrame_t; value: string)	
usersize	niup.html#usersize,FlatFrame_t,string	niup: usersize(ih: FlatFrame_t; value: string)	
usersize=	niup.html#usersize=,FlatFrame_t,int,int	niup: usersize=(ih: FlatFrame_t; width, height: int)	
usersize	niup.html#usersize,FlatFrame_t,int,int	niup: usersize(ih: FlatFrame_t; width, height: int)	
usersize	niup.html#usersize,FlatFrame_t	niup: usersize(ih: FlatFrame_t): string	
visible=	niup.html#visible=,FlatFrame_t,string	niup: visible=(ih: FlatFrame_t; value: string)	
visible	niup.html#visible,FlatFrame_t,string	niup: visible(ih: FlatFrame_t; value: string)	
visible=	niup.html#visible=,FlatFrame_t,bool	niup: visible=(ih: FlatFrame_t; yes: bool)	
visible	niup.html#visible,FlatFrame_t,bool	niup: visible(ih: FlatFrame_t; yes: bool)	
visible	niup.html#visible,FlatFrame_t	niup: visible(ih: FlatFrame_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatFrame_t,string	niup: wheeldropfocus=(ih: FlatFrame_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatFrame_t,string	niup: wheeldropfocus(ih: FlatFrame_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatFrame_t,bool	niup: wheeldropfocus=(ih: FlatFrame_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatFrame_t,bool	niup: wheeldropfocus(ih: FlatFrame_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatFrame_t	niup: wheeldropfocus(ih: FlatFrame_t): bool	
wid	niup.html#wid,FlatFrame_t	niup: wid(ih: FlatFrame_t): string	
x	niup.html#x,FlatFrame_t	niup: x(ih: FlatFrame_t): string	
xautohide=	niup.html#xautohide=,FlatFrame_t,string	niup: xautohide=(ih: FlatFrame_t; value: string)	
xautohide	niup.html#xautohide,FlatFrame_t,string	niup: xautohide(ih: FlatFrame_t; value: string)	
xautohide=	niup.html#xautohide=,FlatFrame_t,bool	niup: xautohide=(ih: FlatFrame_t; yes: bool)	
xautohide	niup.html#xautohide,FlatFrame_t,bool	niup: xautohide(ih: FlatFrame_t; yes: bool)	
xautohide	niup.html#xautohide,FlatFrame_t	niup: xautohide(ih: FlatFrame_t): bool	
xdisplay	niup.html#xdisplay,FlatFrame_t	niup: xdisplay(ih: FlatFrame_t): string	
xfontid	niup.html#xfontid,FlatFrame_t	niup: xfontid(ih: FlatFrame_t): string	
xhidden	niup.html#xhidden,FlatFrame_t	niup: xhidden(ih: FlatFrame_t): bool	
xmax=	niup.html#xmax=,FlatFrame_t,string	niup: xmax=(ih: FlatFrame_t; value: string)	
xmax	niup.html#xmax,FlatFrame_t,string	niup: xmax(ih: FlatFrame_t; value: string)	
xmax=	niup.html#xmax=,FlatFrame_t,int	niup: xmax=(ih: FlatFrame_t; x: int)	
xmax	niup.html#xmax,FlatFrame_t,int	niup: xmax(ih: FlatFrame_t; x: int)	
xmax	niup.html#xmax,FlatFrame_t	niup: xmax(ih: FlatFrame_t): string	
xmin=	niup.html#xmin=,FlatFrame_t,string	niup: xmin=(ih: FlatFrame_t; value: string)	
xmin	niup.html#xmin,FlatFrame_t,string	niup: xmin(ih: FlatFrame_t; value: string)	
xmin=	niup.html#xmin=,FlatFrame_t,int	niup: xmin=(ih: FlatFrame_t; x: int)	
xmin	niup.html#xmin,FlatFrame_t,int	niup: xmin(ih: FlatFrame_t; x: int)	
xmin	niup.html#xmin,FlatFrame_t	niup: xmin(ih: FlatFrame_t): string	
xwindow	niup.html#xwindow,FlatFrame_t	niup: xwindow(ih: FlatFrame_t): string	
y	niup.html#y,FlatFrame_t	niup: y(ih: FlatFrame_t): string	
yautohide=	niup.html#yautohide=,FlatFrame_t,string	niup: yautohide=(ih: FlatFrame_t; value: string)	
yautohide	niup.html#yautohide,FlatFrame_t,string	niup: yautohide(ih: FlatFrame_t; value: string)	
yautohide=	niup.html#yautohide=,FlatFrame_t,bool	niup: yautohide=(ih: FlatFrame_t; yes: bool)	
yautohide	niup.html#yautohide,FlatFrame_t,bool	niup: yautohide(ih: FlatFrame_t; yes: bool)	
yautohide	niup.html#yautohide,FlatFrame_t	niup: yautohide(ih: FlatFrame_t): bool	
yhidden	niup.html#yhidden,FlatFrame_t	niup: yhidden(ih: FlatFrame_t): bool	
ymax=	niup.html#ymax=,FlatFrame_t,string	niup: ymax=(ih: FlatFrame_t; value: string)	
ymax	niup.html#ymax,FlatFrame_t,string	niup: ymax(ih: FlatFrame_t; value: string)	
ymax=	niup.html#ymax=,FlatFrame_t,int	niup: ymax=(ih: FlatFrame_t; x: int)	
ymax	niup.html#ymax,FlatFrame_t,int	niup: ymax(ih: FlatFrame_t; x: int)	
ymax	niup.html#ymax,FlatFrame_t	niup: ymax(ih: FlatFrame_t): string	
ymin=	niup.html#ymin=,FlatFrame_t,string	niup: ymin=(ih: FlatFrame_t; value: string)	
ymin	niup.html#ymin,FlatFrame_t,string	niup: ymin(ih: FlatFrame_t; value: string)	
ymin=	niup.html#ymin=,FlatFrame_t,int	niup: ymin=(ih: FlatFrame_t; x: int)	
ymin	niup.html#ymin,FlatFrame_t,int	niup: ymin(ih: FlatFrame_t; x: int)	
ymin	niup.html#ymin,FlatFrame_t	niup: ymin(ih: FlatFrame_t): string	
zorder=	niup.html#zorder=,FlatFrame_t,string	niup: zorder=(ih: FlatFrame_t; value: string)	
zorder	niup.html#zorder,FlatFrame_t,string	niup: zorder(ih: FlatFrame_t; value: string)	
action=	niup.html#action=,FlatFrame_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatFrame_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatFrame_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatFrame_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatFrame_t	niup: action(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatFrame_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatFrame_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatFrame_t	niup: button_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatFrame_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatFrame_t,proc(PIhandle)	niup: destroy_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatFrame_t	niup: destroy_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatFrame_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatFrame_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatFrame_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatFrame_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatFrame_t	niup: dragbegin_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatFrame_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatFrame_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatFrame_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatFrame_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatFrame_t	niup: dragdatasize_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatFrame_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatFrame_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatFrame_t	niup: dragdata_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatFrame_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatFrame_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatFrame_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatFrame_t	niup: dragend_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatFrame_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatFrame_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatFrame_t	niup: dropdata_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatFrame_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatFrame_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatFrame_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatFrame_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatFrame_t	niup: dropfiles_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatFrame_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatFrame_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatFrame_t	niup: dropmotion_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatFrame_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatFrame_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatFrame_t	niup: enterwindow_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatFrame_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatFrame_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatFrame_t	niup: focus_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatFrame_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatFrame_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatFrame_t	niup: getfocus_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatFrame_t,proc(PIhandle)	niup: help_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatFrame_t,proc(PIhandle)	niup: help_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatFrame_t	niup: help_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatFrame_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatFrame_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatFrame_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatFrame_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatFrame_t	niup: keypress_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatFrame_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatFrame_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatFrame_t	niup: killfocus_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatFrame_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatFrame_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatFrame_t,proc(PIhandle,cint)	niup: k_any(ih: FlatFrame_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatFrame_t	niup: k_any(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatFrame_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatFrame_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatFrame_t	niup: ldestroy_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatFrame_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatFrame_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatFrame_t	niup: leavewindow_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatFrame_t,proc(PIhandle)	niup: map_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatFrame_t,proc(PIhandle)	niup: map_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatFrame_t	niup: map_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatFrame_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatFrame_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatFrame_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatFrame_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatFrame_t	niup: motion_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatFrame_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatFrame_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatFrame_t	niup: postmessage_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatFrame_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatFrame_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatFrame_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatFrame_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatFrame_t	niup: resize_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatFrame_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatFrame_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatFrame_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatFrame_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatFrame_t	niup: scroll_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatFrame_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatFrame_t,proc(PIhandle)	niup: unmap_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatFrame_t	niup: unmap_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatFrame_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                     status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatFrame_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatFrame_t	niup: wheel_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatFrame_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatFrame_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatFrame_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatFrame_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatFrame_t	niup: wom_cb(ih: FlatFrame_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatLabel	niup.html#FlatLabel,string	niup: FlatLabel(title: string): FlatLabel_t	
active=	niup.html#active=,FlatLabel_t,string	niup: active=(ih: FlatLabel_t; value: string)	
active	niup.html#active,FlatLabel_t,string	niup: active(ih: FlatLabel_t; value: string)	
active=	niup.html#active=,FlatLabel_t,bool	niup: active=(ih: FlatLabel_t; yes: bool)	
active	niup.html#active,FlatLabel_t,bool	niup: active(ih: FlatLabel_t; yes: bool)	
active	niup.html#active,FlatLabel_t	niup: active(ih: FlatLabel_t): bool	
alignment=	niup.html#alignment=,FlatLabel_t,string	niup: alignment=(ih: FlatLabel_t; value: string)	
alignment	niup.html#alignment,FlatLabel_t,string	niup: alignment(ih: FlatLabel_t; value: string)	
alignment	niup.html#alignment,FlatLabel_t	niup: alignment(ih: FlatLabel_t): string	
backimage=	niup.html#backimage=,FlatLabel_t,	niup: backimage=(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatLabel_t,	niup: backimage(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatLabel_t	niup: backimage(ih: FlatLabel_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatLabel_t,string	niup: backimagezoom=(ih: FlatLabel_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatLabel_t,string	niup: backimagezoom(ih: FlatLabel_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatLabel_t,bool	niup: backimagezoom=(ih: FlatLabel_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatLabel_t,bool	niup: backimagezoom(ih: FlatLabel_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatLabel_t	niup: backimagezoom(ih: FlatLabel_t): bool	
backingstore=	niup.html#backingstore=,FlatLabel_t,string	niup: backingstore=(ih: FlatLabel_t; value: string)	
backingstore	niup.html#backingstore,FlatLabel_t,string	niup: backingstore(ih: FlatLabel_t; value: string)	
backingstore=	niup.html#backingstore=,FlatLabel_t,bool	niup: backingstore=(ih: FlatLabel_t; yes: bool)	
backingstore	niup.html#backingstore,FlatLabel_t,bool	niup: backingstore(ih: FlatLabel_t; yes: bool)	
backingstore	niup.html#backingstore,FlatLabel_t	niup: backingstore(ih: FlatLabel_t): bool	
bgcolor=	niup.html#bgcolor=,FlatLabel_t,string	niup: bgcolor=(ih: FlatLabel_t; value: string)	
bgcolor	niup.html#bgcolor,FlatLabel_t,string	niup: bgcolor(ih: FlatLabel_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatLabel_t,int,int,int,int	niup: bgcolor=(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatLabel_t,int,int,int,int	niup: bgcolor(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatLabel_t	niup: bgcolor(ih: FlatLabel_t): string	
border=	niup.html#border=,FlatLabel_t,string	niup: border=(ih: FlatLabel_t; value: string)	
border	niup.html#border,FlatLabel_t,string	niup: border(ih: FlatLabel_t; value: string)	
border=	niup.html#border=,FlatLabel_t,bool	niup: border=(ih: FlatLabel_t; yes: bool)	
border	niup.html#border,FlatLabel_t,bool	niup: border(ih: FlatLabel_t; yes: bool)	
border	niup.html#border,FlatLabel_t	niup: border(ih: FlatLabel_t): bool	
canfocus=	niup.html#canfocus=,FlatLabel_t,string	niup: canfocus=(ih: FlatLabel_t; value: string)	
canfocus	niup.html#canfocus,FlatLabel_t,string	niup: canfocus(ih: FlatLabel_t; value: string)	
canfocus=	niup.html#canfocus=,FlatLabel_t,bool	niup: canfocus=(ih: FlatLabel_t; yes: bool)	
canfocus	niup.html#canfocus,FlatLabel_t,bool	niup: canfocus(ih: FlatLabel_t; yes: bool)	
canfocus	niup.html#canfocus,FlatLabel_t	niup: canfocus(ih: FlatLabel_t): bool	
charsize	niup.html#charsize,FlatLabel_t	niup: charsize(ih: FlatLabel_t): string	
cpadding=	niup.html#cpadding=,FlatLabel_t,string	niup: cpadding=(ih: FlatLabel_t; value: string)	
cpadding	niup.html#cpadding,FlatLabel_t,string	niup: cpadding(ih: FlatLabel_t; value: string)	
cpadding=	niup.html#cpadding=,FlatLabel_t,int,int	niup: cpadding=(ih: FlatLabel_t; width, height: int)	
cpadding	niup.html#cpadding,FlatLabel_t,int,int	niup: cpadding(ih: FlatLabel_t; width, height: int)	
cpadding	niup.html#cpadding,FlatLabel_t	niup: cpadding(ih: FlatLabel_t): string	
cspacing=	niup.html#cspacing=,FlatLabel_t,string	niup: cspacing=(ih: FlatLabel_t; value: string)	
cspacing	niup.html#cspacing,FlatLabel_t,string	niup: cspacing(ih: FlatLabel_t; value: string)	
cspacing=	niup.html#cspacing=,FlatLabel_t,int	niup: cspacing=(ih: FlatLabel_t; x: int)	
cspacing	niup.html#cspacing,FlatLabel_t,int	niup: cspacing(ih: FlatLabel_t; x: int)	
cspacing	niup.html#cspacing,FlatLabel_t	niup: cspacing(ih: FlatLabel_t): string	
cursor=	niup.html#cursor=,FlatLabel_t,	niup: cursor=(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatLabel_t,	niup: cursor(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatLabel_t	niup: cursor(ih: FlatLabel_t): string	
dragdrop=	niup.html#dragdrop=,FlatLabel_t,string	niup: dragdrop=(ih: FlatLabel_t; value: string)	
dragdrop	niup.html#dragdrop,FlatLabel_t,string	niup: dragdrop(ih: FlatLabel_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatLabel_t,bool	niup: dragdrop=(ih: FlatLabel_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatLabel_t,bool	niup: dragdrop(ih: FlatLabel_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatLabel_t	niup: dragdrop(ih: FlatLabel_t): bool	
dragsource=	niup.html#dragsource=,FlatLabel_t,string	niup: dragsource=(ih: FlatLabel_t; value: string)	
dragsource	niup.html#dragsource,FlatLabel_t,string	niup: dragsource(ih: FlatLabel_t; value: string)	
dragsource=	niup.html#dragsource=,FlatLabel_t,bool	niup: dragsource=(ih: FlatLabel_t; yes: bool)	
dragsource	niup.html#dragsource,FlatLabel_t,bool	niup: dragsource(ih: FlatLabel_t; yes: bool)	
dragsource	niup.html#dragsource,FlatLabel_t	niup: dragsource(ih: FlatLabel_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatLabel_t,string	niup: dragsourcemove=(ih: FlatLabel_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatLabel_t,string	niup: dragsourcemove(ih: FlatLabel_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatLabel_t,bool	niup: dragsourcemove=(ih: FlatLabel_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatLabel_t,bool	niup: dragsourcemove(ih: FlatLabel_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatLabel_t	niup: dragsourcemove(ih: FlatLabel_t): bool	
dragtypes=	niup.html#dragtypes=,FlatLabel_t,string	niup: dragtypes=(ih: FlatLabel_t; value: string)	
dragtypes	niup.html#dragtypes,FlatLabel_t,string	niup: dragtypes(ih: FlatLabel_t; value: string)	
dragtypes	niup.html#dragtypes,FlatLabel_t	niup: dragtypes(ih: FlatLabel_t): string	
drawable	niup.html#drawable,FlatLabel_t	niup: drawable(ih: FlatLabel_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatLabel_t,string	niup: drawbgcolor=(ih: FlatLabel_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatLabel_t,string	niup: drawbgcolor(ih: FlatLabel_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatLabel_t,int,int,int,int	niup: drawbgcolor=(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatLabel_t,int,int,int,int	niup: drawbgcolor(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatLabel_t	niup: drawbgcolor(ih: FlatLabel_t): string	
drawcolor=	niup.html#drawcolor=,FlatLabel_t,string	niup: drawcolor=(ih: FlatLabel_t; value: string)	
drawcolor	niup.html#drawcolor,FlatLabel_t,string	niup: drawcolor(ih: FlatLabel_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatLabel_t,int,int,int,int	niup: drawcolor=(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatLabel_t,int,int,int,int	niup: drawcolor(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatLabel_t	niup: drawcolor(ih: FlatLabel_t): string	
drawdriver	niup.html#drawdriver,FlatLabel_t	niup: drawdriver(ih: FlatLabel_t): string	
drawfont=	niup.html#drawfont=,FlatLabel_t,string	niup: drawfont=(ih: FlatLabel_t; value: string)	
drawfont	niup.html#drawfont,FlatLabel_t,string	niup: drawfont(ih: FlatLabel_t; value: string)	
drawfont	niup.html#drawfont,FlatLabel_t	niup: drawfont(ih: FlatLabel_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatLabel_t,string	niup: drawlinewidth=(ih: FlatLabel_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatLabel_t,string	niup: drawlinewidth(ih: FlatLabel_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatLabel_t,int	niup: drawlinewidth=(ih: FlatLabel_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatLabel_t,int	niup: drawlinewidth(ih: FlatLabel_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatLabel_t	niup: drawlinewidth(ih: FlatLabel_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatLabel_t,string	niup: drawmakeinactive=(ih: FlatLabel_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatLabel_t,string	niup: drawmakeinactive(ih: FlatLabel_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatLabel_t,bool	niup: drawmakeinactive=(ih: FlatLabel_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatLabel_t,bool	niup: drawmakeinactive(ih: FlatLabel_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatLabel_t	niup: drawmakeinactive(ih: FlatLabel_t): bool	
drawsize	niup.html#drawsize,FlatLabel_t	niup: drawsize(ih: FlatLabel_t): string	
drawstyle=	niup.html#drawstyle=,FlatLabel_t,string	niup: drawstyle=(ih: FlatLabel_t; value: string)	
drawstyle	niup.html#drawstyle,FlatLabel_t,string	niup: drawstyle(ih: FlatLabel_t; value: string)	
drawstyle	niup.html#drawstyle,FlatLabel_t	niup: drawstyle(ih: FlatLabel_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatLabel_t,string	niup: drawtextalignment=(ih: FlatLabel_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatLabel_t,string	niup: drawtextalignment(ih: FlatLabel_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatLabel_t	niup: drawtextalignment(ih: FlatLabel_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatLabel_t,string	niup: drawtextclip=(ih: FlatLabel_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatLabel_t,string	niup: drawtextclip(ih: FlatLabel_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatLabel_t,bool	niup: drawtextclip=(ih: FlatLabel_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatLabel_t,bool	niup: drawtextclip(ih: FlatLabel_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatLabel_t	niup: drawtextclip(ih: FlatLabel_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatLabel_t,string	niup: drawtextellipsis=(ih: FlatLabel_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatLabel_t,string	niup: drawtextellipsis(ih: FlatLabel_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatLabel_t,bool	niup: drawtextellipsis=(ih: FlatLabel_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatLabel_t,bool	niup: drawtextellipsis(ih: FlatLabel_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatLabel_t	niup: drawtextellipsis(ih: FlatLabel_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatLabel_t,string	niup: drawtextlayoutcenter=(ih: FlatLabel_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatLabel_t,string	niup: drawtextlayoutcenter(ih: FlatLabel_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatLabel_t,bool	niup: drawtextlayoutcenter=(ih: FlatLabel_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatLabel_t,bool	niup: drawtextlayoutcenter(ih: FlatLabel_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatLabel_t	niup: drawtextlayoutcenter(ih: FlatLabel_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatLabel_t,string	niup: drawtextorientation=(ih: FlatLabel_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatLabel_t,string	niup: drawtextorientation(ih: FlatLabel_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatLabel_t,int64	niup: drawtextorientation=(ih: FlatLabel_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatLabel_t,int64	niup: drawtextorientation(ih: FlatLabel_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatLabel_t	niup: drawtextorientation(ih: FlatLabel_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatLabel_t,string	niup: drawtextwrap=(ih: FlatLabel_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatLabel_t,string	niup: drawtextwrap(ih: FlatLabel_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatLabel_t,bool	niup: drawtextwrap=(ih: FlatLabel_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatLabel_t,bool	niup: drawtextwrap(ih: FlatLabel_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatLabel_t	niup: drawtextwrap(ih: FlatLabel_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatLabel_t,string	niup: dropfilestarget=(ih: FlatLabel_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatLabel_t,string	niup: dropfilestarget(ih: FlatLabel_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatLabel_t,bool	niup: dropfilestarget=(ih: FlatLabel_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatLabel_t,bool	niup: dropfilestarget(ih: FlatLabel_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatLabel_t	niup: dropfilestarget(ih: FlatLabel_t): bool	
droptarget=	niup.html#droptarget=,FlatLabel_t,string	niup: droptarget=(ih: FlatLabel_t; value: string)	
droptarget	niup.html#droptarget,FlatLabel_t,string	niup: droptarget(ih: FlatLabel_t; value: string)	
droptarget=	niup.html#droptarget=,FlatLabel_t,bool	niup: droptarget=(ih: FlatLabel_t; yes: bool)	
droptarget	niup.html#droptarget,FlatLabel_t,bool	niup: droptarget(ih: FlatLabel_t; yes: bool)	
droptarget	niup.html#droptarget,FlatLabel_t	niup: droptarget(ih: FlatLabel_t): bool	
droptypes=	niup.html#droptypes=,FlatLabel_t,string	niup: droptypes=(ih: FlatLabel_t; value: string)	
droptypes	niup.html#droptypes,FlatLabel_t,string	niup: droptypes(ih: FlatLabel_t; value: string)	
droptypes	niup.html#droptypes,FlatLabel_t	niup: droptypes(ih: FlatLabel_t): string	
dx=	niup.html#dx=,FlatLabel_t,string	niup: dx=(ih: FlatLabel_t; value: string)	
dx	niup.html#dx,FlatLabel_t,string	niup: dx(ih: FlatLabel_t; value: string)	
dx=	niup.html#dx=,FlatLabel_t,int64	niup: dx=(ih: FlatLabel_t; x: int64)	
dx	niup.html#dx,FlatLabel_t,int64	niup: dx(ih: FlatLabel_t; x: int64)	
dx	niup.html#dx,FlatLabel_t	niup: dx(ih: FlatLabel_t): string	
dy=	niup.html#dy=,FlatLabel_t,string	niup: dy=(ih: FlatLabel_t; value: string)	
dy	niup.html#dy,FlatLabel_t,string	niup: dy(ih: FlatLabel_t; value: string)	
dy=	niup.html#dy=,FlatLabel_t,int64	niup: dy=(ih: FlatLabel_t; x: int64)	
dy	niup.html#dy,FlatLabel_t,int64	niup: dy(ih: FlatLabel_t; x: int64)	
dy	niup.html#dy,FlatLabel_t	niup: dy(ih: FlatLabel_t): string	
expand=	niup.html#expand=,FlatLabel_t,string	niup: expand=(ih: FlatLabel_t; value: string)	
expand	niup.html#expand,FlatLabel_t,string	niup: expand(ih: FlatLabel_t; value: string)	
expand	niup.html#expand,FlatLabel_t	niup: expand(ih: FlatLabel_t): string	
expandweight=	niup.html#expandweight=,FlatLabel_t,string	niup: expandweight=(ih: FlatLabel_t; value: string)	
expandweight	niup.html#expandweight,FlatLabel_t,string	niup: expandweight(ih: FlatLabel_t; value: string)	
expandweight=	niup.html#expandweight=,FlatLabel_t,int64	niup: expandweight=(ih: FlatLabel_t; x: int64)	
expandweight	niup.html#expandweight,FlatLabel_t,int64	niup: expandweight(ih: FlatLabel_t; x: int64)	
expandweight	niup.html#expandweight,FlatLabel_t	niup: expandweight(ih: FlatLabel_t): string	
fgcolor=	niup.html#fgcolor=,FlatLabel_t,string	niup: fgcolor=(ih: FlatLabel_t; value: string)	
fgcolor	niup.html#fgcolor,FlatLabel_t,string	niup: fgcolor(ih: FlatLabel_t; value: string)	
fgcolor=	niup.html#fgcolor=,FlatLabel_t,int,int,int,int	niup: fgcolor=(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatLabel_t,int,int,int,int	niup: fgcolor(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatLabel_t	niup: fgcolor(ih: FlatLabel_t): string	
fittobackimage=	niup.html#fittobackimage=,FlatLabel_t,string	niup: fittobackimage=(ih: FlatLabel_t; value: string)	
fittobackimage	niup.html#fittobackimage,FlatLabel_t,string	niup: fittobackimage(ih: FlatLabel_t; value: string)	
fittobackimage=	niup.html#fittobackimage=,FlatLabel_t,bool	niup: fittobackimage=(ih: FlatLabel_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatLabel_t,bool	niup: fittobackimage(ih: FlatLabel_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatLabel_t	niup: fittobackimage(ih: FlatLabel_t): bool	
floating=	niup.html#floating=,FlatLabel_t,string	niup: floating=(ih: FlatLabel_t; value: string)	
floating	niup.html#floating,FlatLabel_t,string	niup: floating(ih: FlatLabel_t; value: string)	
floating	niup.html#floating,FlatLabel_t	niup: floating(ih: FlatLabel_t): string	
font=	niup.html#font=,FlatLabel_t,string	niup: font=(ih: FlatLabel_t; value: string)	
font	niup.html#font,FlatLabel_t,string	niup: font(ih: FlatLabel_t; value: string)	
font	niup.html#font,FlatLabel_t	niup: font(ih: FlatLabel_t): string	
fontface=	niup.html#fontface=,FlatLabel_t,string	niup: fontface=(ih: FlatLabel_t; value: string)	
fontface	niup.html#fontface,FlatLabel_t,string	niup: fontface(ih: FlatLabel_t; value: string)	
fontface	niup.html#fontface,FlatLabel_t	niup: fontface(ih: FlatLabel_t): string	
fontsize=	niup.html#fontsize=,FlatLabel_t,string	niup: fontsize=(ih: FlatLabel_t; value: string)	
fontsize	niup.html#fontsize,FlatLabel_t,string	niup: fontsize(ih: FlatLabel_t; value: string)	
fontsize=	niup.html#fontsize=,FlatLabel_t,int	niup: fontsize=(ih: FlatLabel_t; x: int)	
fontsize	niup.html#fontsize,FlatLabel_t,int	niup: fontsize(ih: FlatLabel_t; x: int)	
fontsize	niup.html#fontsize,FlatLabel_t	niup: fontsize(ih: FlatLabel_t): string	
fontstyle=	niup.html#fontstyle=,FlatLabel_t,string	niup: fontstyle=(ih: FlatLabel_t; value: string)	
fontstyle	niup.html#fontstyle,FlatLabel_t,string	niup: fontstyle(ih: FlatLabel_t; value: string)	
fontstyle	niup.html#fontstyle,FlatLabel_t	niup: fontstyle(ih: FlatLabel_t): string	
frontimage=	niup.html#frontimage=,FlatLabel_t,	niup: frontimage=(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,FlatLabel_t,	niup: frontimage(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,FlatLabel_t	niup: frontimage(ih: FlatLabel_t): string	
frontimageinactive=	niup.html#frontimageinactive=,FlatLabel_t,	niup: frontimageinactive=(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,FlatLabel_t,	niup: frontimageinactive(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,FlatLabel_t	niup: frontimageinactive(ih: FlatLabel_t): string	
handlename=	niup.html#handlename=,FlatLabel_t,string	niup: handlename=(ih: FlatLabel_t; value: string)	
handlename	niup.html#handlename,FlatLabel_t,string	niup: handlename(ih: FlatLabel_t; value: string)	
handlename	niup.html#handlename,FlatLabel_t	niup: handlename(ih: FlatLabel_t): string	
image=	niup.html#image=,FlatLabel_t,	niup: image=(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatLabel_t,	niup: image(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatLabel_t	niup: image(ih: FlatLabel_t): string	
imageinactive=	niup.html#imageinactive=,FlatLabel_t,	niup: imageinactive=(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatLabel_t,	niup: imageinactive(ih: FlatLabel_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatLabel_t	niup: imageinactive(ih: FlatLabel_t): string	
imageposition=	niup.html#imageposition=,FlatLabel_t,string	niup: imageposition=(ih: FlatLabel_t; value: string)	
imageposition	niup.html#imageposition,FlatLabel_t,string	niup: imageposition(ih: FlatLabel_t; value: string)	
imageposition	niup.html#imageposition,FlatLabel_t	niup: imageposition(ih: FlatLabel_t): string	
linex=	niup.html#linex=,FlatLabel_t,string	niup: linex=(ih: FlatLabel_t; value: string)	
linex	niup.html#linex,FlatLabel_t,string	niup: linex(ih: FlatLabel_t; value: string)	
linex=	niup.html#linex=,FlatLabel_t,int64	niup: linex=(ih: FlatLabel_t; x: int64)	
linex	niup.html#linex,FlatLabel_t,int64	niup: linex(ih: FlatLabel_t; x: int64)	
linex	niup.html#linex,FlatLabel_t	niup: linex(ih: FlatLabel_t): string	
liney=	niup.html#liney=,FlatLabel_t,string	niup: liney=(ih: FlatLabel_t; value: string)	
liney	niup.html#liney,FlatLabel_t,string	niup: liney(ih: FlatLabel_t; value: string)	
liney=	niup.html#liney=,FlatLabel_t,int64	niup: liney=(ih: FlatLabel_t; x: int64)	
liney	niup.html#liney,FlatLabel_t,int64	niup: liney(ih: FlatLabel_t; x: int64)	
liney	niup.html#liney,FlatLabel_t	niup: liney(ih: FlatLabel_t): string	
maxsize=	niup.html#maxsize=,FlatLabel_t,string	niup: maxsize=(ih: FlatLabel_t; value: string)	
maxsize	niup.html#maxsize,FlatLabel_t,string	niup: maxsize(ih: FlatLabel_t; value: string)	
maxsize=	niup.html#maxsize=,FlatLabel_t,int,int	niup: maxsize=(ih: FlatLabel_t; width, height: int)	
maxsize	niup.html#maxsize,FlatLabel_t,int,int	niup: maxsize(ih: FlatLabel_t; width, height: int)	
maxsize	niup.html#maxsize,FlatLabel_t	niup: maxsize(ih: FlatLabel_t): string	
minsize=	niup.html#minsize=,FlatLabel_t,string	niup: minsize=(ih: FlatLabel_t; value: string)	
minsize	niup.html#minsize,FlatLabel_t,string	niup: minsize(ih: FlatLabel_t; value: string)	
minsize=	niup.html#minsize=,FlatLabel_t,int,int	niup: minsize=(ih: FlatLabel_t; width, height: int)	
minsize	niup.html#minsize,FlatLabel_t,int,int	niup: minsize(ih: FlatLabel_t; width, height: int)	
minsize	niup.html#minsize,FlatLabel_t	niup: minsize(ih: FlatLabel_t): string	
name=	niup.html#name=,FlatLabel_t,string	niup: name=(ih: FlatLabel_t; value: string)	
name	niup.html#name,FlatLabel_t,string	niup: name(ih: FlatLabel_t; value: string)	
name	niup.html#name,FlatLabel_t	niup: name(ih: FlatLabel_t): string	
naturalsize	niup.html#naturalsize,FlatLabel_t	niup: naturalsize(ih: FlatLabel_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatLabel_t,string	niup: normalizergroup=(ih: FlatLabel_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatLabel_t,string	niup: normalizergroup(ih: FlatLabel_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatLabel_t	niup: normalizergroup(ih: FlatLabel_t): string	
ntheme=	niup.html#ntheme=,FlatLabel_t,string	niup: ntheme=(ih: FlatLabel_t; value: string)	
ntheme	niup.html#ntheme,FlatLabel_t,string	niup: ntheme(ih: FlatLabel_t; value: string)	
ntheme	niup.html#ntheme,FlatLabel_t	niup: ntheme(ih: FlatLabel_t): string	
padding=	niup.html#padding=,FlatLabel_t,string	niup: padding=(ih: FlatLabel_t; value: string)	
padding	niup.html#padding,FlatLabel_t,string	niup: padding(ih: FlatLabel_t; value: string)	
padding=	niup.html#padding=,FlatLabel_t,int,int	niup: padding=(ih: FlatLabel_t; width, height: int)	
padding	niup.html#padding,FlatLabel_t,int,int	niup: padding(ih: FlatLabel_t; width, height: int)	
padding	niup.html#padding,FlatLabel_t	niup: padding(ih: FlatLabel_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatLabel_t	niup: pangofontdesc(ih: FlatLabel_t): string	
pangolayout	niup.html#pangolayout,FlatLabel_t	niup: pangolayout(ih: FlatLabel_t): string	
position=	niup.html#position=,FlatLabel_t,string	niup: position=(ih: FlatLabel_t; value: string)	
position	niup.html#position,FlatLabel_t,string	niup: position(ih: FlatLabel_t; value: string)	
position=	niup.html#position=,FlatLabel_t,int,int	niup: position=(ih: FlatLabel_t; x, y: int)	
position	niup.html#position,FlatLabel_t,int,int	niup: position(ih: FlatLabel_t; x, y: int)	
position	niup.html#position,FlatLabel_t	niup: position(ih: FlatLabel_t): string	
posx=	niup.html#posx=,FlatLabel_t,string	niup: posx=(ih: FlatLabel_t; value: string)	
posx	niup.html#posx,FlatLabel_t,string	niup: posx(ih: FlatLabel_t; value: string)	
posx=	niup.html#posx=,FlatLabel_t,int64	niup: posx=(ih: FlatLabel_t; x: int64)	
posx	niup.html#posx,FlatLabel_t,int64	niup: posx(ih: FlatLabel_t; x: int64)	
posx	niup.html#posx,FlatLabel_t	niup: posx(ih: FlatLabel_t): string	
posy=	niup.html#posy=,FlatLabel_t,string	niup: posy=(ih: FlatLabel_t; value: string)	
posy	niup.html#posy,FlatLabel_t,string	niup: posy(ih: FlatLabel_t; value: string)	
posy=	niup.html#posy=,FlatLabel_t,int64	niup: posy=(ih: FlatLabel_t; x: int64)	
posy	niup.html#posy,FlatLabel_t,int64	niup: posy(ih: FlatLabel_t; x: int64)	
posy	niup.html#posy,FlatLabel_t	niup: posy(ih: FlatLabel_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatLabel_t,string	niup: propagatefocus=(ih: FlatLabel_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatLabel_t,string	niup: propagatefocus(ih: FlatLabel_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatLabel_t,bool	niup: propagatefocus=(ih: FlatLabel_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatLabel_t,bool	niup: propagatefocus(ih: FlatLabel_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatLabel_t	niup: propagatefocus(ih: FlatLabel_t): bool	
rastersize=	niup.html#rastersize=,FlatLabel_t,string	niup: rastersize=(ih: FlatLabel_t; value: string)	
rastersize	niup.html#rastersize,FlatLabel_t,string	niup: rastersize(ih: FlatLabel_t; value: string)	
rastersize=	niup.html#rastersize=,FlatLabel_t,int,int	niup: rastersize=(ih: FlatLabel_t; width, height: int)	
rastersize	niup.html#rastersize,FlatLabel_t,int,int	niup: rastersize(ih: FlatLabel_t; width, height: int)	
rastersize	niup.html#rastersize,FlatLabel_t	niup: rastersize(ih: FlatLabel_t): string	
sb_resize	niup.html#sb_resize,FlatLabel_t	niup: sb_resize(ih: FlatLabel_t): string	
screenposition	niup.html#screenposition,FlatLabel_t	niup: screenposition(ih: FlatLabel_t): string	
scrollbar=	niup.html#scrollbar=,FlatLabel_t,string	niup: scrollbar=(ih: FlatLabel_t; value: string)	
scrollbar	niup.html#scrollbar,FlatLabel_t,string	niup: scrollbar(ih: FlatLabel_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatLabel_t,bool	niup: scrollbar=(ih: FlatLabel_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatLabel_t,bool	niup: scrollbar(ih: FlatLabel_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatLabel_t	niup: scrollbar(ih: FlatLabel_t): bool	
size=	niup.html#size=,FlatLabel_t,string	niup: size=(ih: FlatLabel_t; value: string)	
size	niup.html#size,FlatLabel_t,string	niup: size(ih: FlatLabel_t; value: string)	
size=	niup.html#size=,FlatLabel_t,int,int	niup: size=(ih: FlatLabel_t; width, height: int)	
size	niup.html#size,FlatLabel_t,int,int	niup: size(ih: FlatLabel_t; width, height: int)	
size	niup.html#size,FlatLabel_t	niup: size(ih: FlatLabel_t): string	
spacing=	niup.html#spacing=,FlatLabel_t,string	niup: spacing=(ih: FlatLabel_t; value: string)	
spacing	niup.html#spacing,FlatLabel_t,string	niup: spacing(ih: FlatLabel_t; value: string)	
spacing=	niup.html#spacing=,FlatLabel_t,int	niup: spacing=(ih: FlatLabel_t; x: int)	
spacing	niup.html#spacing,FlatLabel_t,int	niup: spacing(ih: FlatLabel_t; x: int)	
spacing	niup.html#spacing,FlatLabel_t	niup: spacing(ih: FlatLabel_t): string	
textalignment=	niup.html#textalignment=,FlatLabel_t,string	niup: textalignment=(ih: FlatLabel_t; value: string)	
textalignment	niup.html#textalignment,FlatLabel_t,string	niup: textalignment(ih: FlatLabel_t; value: string)	
textalignment	niup.html#textalignment,FlatLabel_t	niup: textalignment(ih: FlatLabel_t): string	
textclip	niup.html#textclip,FlatLabel_t	niup: textclip(ih: FlatLabel_t): string	
textellipsis=	niup.html#textellipsis=,FlatLabel_t,string	niup: textellipsis=(ih: FlatLabel_t; value: string)	
textellipsis	niup.html#textellipsis,FlatLabel_t,string	niup: textellipsis(ih: FlatLabel_t; value: string)	
textellipsis=	niup.html#textellipsis=,FlatLabel_t,bool	niup: textellipsis=(ih: FlatLabel_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatLabel_t,bool	niup: textellipsis(ih: FlatLabel_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatLabel_t	niup: textellipsis(ih: FlatLabel_t): bool	
textorientation=	niup.html#textorientation=,FlatLabel_t,string	niup: textorientation=(ih: FlatLabel_t; value: string)	
textorientation	niup.html#textorientation,FlatLabel_t,string	niup: textorientation(ih: FlatLabel_t; value: string)	
textorientation=	niup.html#textorientation=,FlatLabel_t,int64	niup: textorientation=(ih: FlatLabel_t; x: int64)	
textorientation	niup.html#textorientation,FlatLabel_t,int64	niup: textorientation(ih: FlatLabel_t; x: int64)	
textorientation	niup.html#textorientation,FlatLabel_t	niup: textorientation(ih: FlatLabel_t): string	
textwrap=	niup.html#textwrap=,FlatLabel_t,string	niup: textwrap=(ih: FlatLabel_t; value: string)	
textwrap	niup.html#textwrap,FlatLabel_t,string	niup: textwrap(ih: FlatLabel_t; value: string)	
textwrap=	niup.html#textwrap=,FlatLabel_t,bool	niup: textwrap=(ih: FlatLabel_t; yes: bool)	
textwrap	niup.html#textwrap,FlatLabel_t,bool	niup: textwrap(ih: FlatLabel_t; yes: bool)	
textwrap	niup.html#textwrap,FlatLabel_t	niup: textwrap(ih: FlatLabel_t): bool	
theme=	niup.html#theme=,FlatLabel_t,string	niup: theme=(ih: FlatLabel_t; value: string)	
theme	niup.html#theme,FlatLabel_t,string	niup: theme(ih: FlatLabel_t; value: string)	
theme	niup.html#theme,FlatLabel_t	niup: theme(ih: FlatLabel_t): string	
tip=	niup.html#tip=,FlatLabel_t,string	niup: tip=(ih: FlatLabel_t; value: string)	
tip	niup.html#tip,FlatLabel_t,string	niup: tip(ih: FlatLabel_t; value: string)	
tip	niup.html#tip,FlatLabel_t	niup: tip(ih: FlatLabel_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatLabel_t,string	niup: tipbgcolor=(ih: FlatLabel_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatLabel_t,string	niup: tipbgcolor(ih: FlatLabel_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatLabel_t,int,int,int,int	niup: tipbgcolor=(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatLabel_t,int,int,int,int	niup: tipbgcolor(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatLabel_t	niup: tipbgcolor(ih: FlatLabel_t): string	
tipdelay=	niup.html#tipdelay=,FlatLabel_t,string	niup: tipdelay=(ih: FlatLabel_t; value: string)	
tipdelay	niup.html#tipdelay,FlatLabel_t,string	niup: tipdelay(ih: FlatLabel_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatLabel_t,int	niup: tipdelay=(ih: FlatLabel_t; x: int)	
tipdelay	niup.html#tipdelay,FlatLabel_t,int	niup: tipdelay(ih: FlatLabel_t; x: int)	
tipdelay	niup.html#tipdelay,FlatLabel_t	niup: tipdelay(ih: FlatLabel_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatLabel_t,string	niup: tipfgcolor=(ih: FlatLabel_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatLabel_t,string	niup: tipfgcolor(ih: FlatLabel_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatLabel_t,int,int,int,int	niup: tipfgcolor=(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatLabel_t,int,int,int,int	niup: tipfgcolor(ih: FlatLabel_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatLabel_t	niup: tipfgcolor(ih: FlatLabel_t): string	
tipicon=	niup.html#tipicon=,FlatLabel_t,string	niup: tipicon=(ih: FlatLabel_t; value: string)	
tipicon	niup.html#tipicon,FlatLabel_t,string	niup: tipicon(ih: FlatLabel_t; value: string)	
tipicon	niup.html#tipicon,FlatLabel_t	niup: tipicon(ih: FlatLabel_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatLabel_t,string	niup: tipmarkup=(ih: FlatLabel_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatLabel_t,string	niup: tipmarkup(ih: FlatLabel_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatLabel_t	niup: tipmarkup(ih: FlatLabel_t): string	
tiprect=	niup.html#tiprect=,FlatLabel_t,string	niup: tiprect=(ih: FlatLabel_t; value: string)	
tiprect	niup.html#tiprect,FlatLabel_t,string	niup: tiprect(ih: FlatLabel_t; value: string)	
tiprect=	niup.html#tiprect=,FlatLabel_t,int,int,int,int	niup: tiprect=(ih: FlatLabel_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatLabel_t,int,int,int,int	niup: tiprect(ih: FlatLabel_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatLabel_t	niup: tiprect(ih: FlatLabel_t): string	
tipvisible=	niup.html#tipvisible=,FlatLabel_t,string	niup: tipvisible=(ih: FlatLabel_t; value: string)	
tipvisible	niup.html#tipvisible,FlatLabel_t,string	niup: tipvisible(ih: FlatLabel_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatLabel_t,bool	niup: tipvisible=(ih: FlatLabel_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatLabel_t,bool	niup: tipvisible(ih: FlatLabel_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatLabel_t	niup: tipvisible(ih: FlatLabel_t): bool	
title=	niup.html#title=,FlatLabel_t,string	niup: title=(ih: FlatLabel_t; value: string)	
title	niup.html#title,FlatLabel_t,string	niup: title(ih: FlatLabel_t; value: string)	
title	niup.html#title,FlatLabel_t	niup: title(ih: FlatLabel_t): string	
touch=	niup.html#touch=,FlatLabel_t,string	niup: touch=(ih: FlatLabel_t; value: string)	
touch	niup.html#touch,FlatLabel_t,string	niup: touch(ih: FlatLabel_t; value: string)	
touch=	niup.html#touch=,FlatLabel_t,bool	niup: touch=(ih: FlatLabel_t; yes: bool)	
touch	niup.html#touch,FlatLabel_t,bool	niup: touch(ih: FlatLabel_t; yes: bool)	
touch	niup.html#touch,FlatLabel_t	niup: touch(ih: FlatLabel_t): bool	
usersize=	niup.html#usersize=,FlatLabel_t,string	niup: usersize=(ih: FlatLabel_t; value: string)	
usersize	niup.html#usersize,FlatLabel_t,string	niup: usersize(ih: FlatLabel_t; value: string)	
usersize=	niup.html#usersize=,FlatLabel_t,int,int	niup: usersize=(ih: FlatLabel_t; width, height: int)	
usersize	niup.html#usersize,FlatLabel_t,int,int	niup: usersize(ih: FlatLabel_t; width, height: int)	
usersize	niup.html#usersize,FlatLabel_t	niup: usersize(ih: FlatLabel_t): string	
visible=	niup.html#visible=,FlatLabel_t,string	niup: visible=(ih: FlatLabel_t; value: string)	
visible	niup.html#visible,FlatLabel_t,string	niup: visible(ih: FlatLabel_t; value: string)	
visible=	niup.html#visible=,FlatLabel_t,bool	niup: visible=(ih: FlatLabel_t; yes: bool)	
visible	niup.html#visible,FlatLabel_t,bool	niup: visible(ih: FlatLabel_t; yes: bool)	
visible	niup.html#visible,FlatLabel_t	niup: visible(ih: FlatLabel_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatLabel_t,string	niup: wheeldropfocus=(ih: FlatLabel_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatLabel_t,string	niup: wheeldropfocus(ih: FlatLabel_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatLabel_t,bool	niup: wheeldropfocus=(ih: FlatLabel_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatLabel_t,bool	niup: wheeldropfocus(ih: FlatLabel_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatLabel_t	niup: wheeldropfocus(ih: FlatLabel_t): bool	
wid	niup.html#wid,FlatLabel_t	niup: wid(ih: FlatLabel_t): string	
x	niup.html#x,FlatLabel_t	niup: x(ih: FlatLabel_t): string	
xautohide=	niup.html#xautohide=,FlatLabel_t,string	niup: xautohide=(ih: FlatLabel_t; value: string)	
xautohide	niup.html#xautohide,FlatLabel_t,string	niup: xautohide(ih: FlatLabel_t; value: string)	
xautohide=	niup.html#xautohide=,FlatLabel_t,bool	niup: xautohide=(ih: FlatLabel_t; yes: bool)	
xautohide	niup.html#xautohide,FlatLabel_t,bool	niup: xautohide(ih: FlatLabel_t; yes: bool)	
xautohide	niup.html#xautohide,FlatLabel_t	niup: xautohide(ih: FlatLabel_t): bool	
xdisplay	niup.html#xdisplay,FlatLabel_t	niup: xdisplay(ih: FlatLabel_t): string	
xfontid	niup.html#xfontid,FlatLabel_t	niup: xfontid(ih: FlatLabel_t): string	
xhidden	niup.html#xhidden,FlatLabel_t	niup: xhidden(ih: FlatLabel_t): bool	
xmax=	niup.html#xmax=,FlatLabel_t,string	niup: xmax=(ih: FlatLabel_t; value: string)	
xmax	niup.html#xmax,FlatLabel_t,string	niup: xmax(ih: FlatLabel_t; value: string)	
xmax=	niup.html#xmax=,FlatLabel_t,int	niup: xmax=(ih: FlatLabel_t; x: int)	
xmax	niup.html#xmax,FlatLabel_t,int	niup: xmax(ih: FlatLabel_t; x: int)	
xmax	niup.html#xmax,FlatLabel_t	niup: xmax(ih: FlatLabel_t): string	
xmin=	niup.html#xmin=,FlatLabel_t,string	niup: xmin=(ih: FlatLabel_t; value: string)	
xmin	niup.html#xmin,FlatLabel_t,string	niup: xmin(ih: FlatLabel_t; value: string)	
xmin=	niup.html#xmin=,FlatLabel_t,int	niup: xmin=(ih: FlatLabel_t; x: int)	
xmin	niup.html#xmin,FlatLabel_t,int	niup: xmin(ih: FlatLabel_t; x: int)	
xmin	niup.html#xmin,FlatLabel_t	niup: xmin(ih: FlatLabel_t): string	
xwindow	niup.html#xwindow,FlatLabel_t	niup: xwindow(ih: FlatLabel_t): string	
y	niup.html#y,FlatLabel_t	niup: y(ih: FlatLabel_t): string	
yautohide=	niup.html#yautohide=,FlatLabel_t,string	niup: yautohide=(ih: FlatLabel_t; value: string)	
yautohide	niup.html#yautohide,FlatLabel_t,string	niup: yautohide(ih: FlatLabel_t; value: string)	
yautohide=	niup.html#yautohide=,FlatLabel_t,bool	niup: yautohide=(ih: FlatLabel_t; yes: bool)	
yautohide	niup.html#yautohide,FlatLabel_t,bool	niup: yautohide(ih: FlatLabel_t; yes: bool)	
yautohide	niup.html#yautohide,FlatLabel_t	niup: yautohide(ih: FlatLabel_t): bool	
yhidden	niup.html#yhidden,FlatLabel_t	niup: yhidden(ih: FlatLabel_t): bool	
ymax=	niup.html#ymax=,FlatLabel_t,string	niup: ymax=(ih: FlatLabel_t; value: string)	
ymax	niup.html#ymax,FlatLabel_t,string	niup: ymax(ih: FlatLabel_t; value: string)	
ymax=	niup.html#ymax=,FlatLabel_t,int	niup: ymax=(ih: FlatLabel_t; x: int)	
ymax	niup.html#ymax,FlatLabel_t,int	niup: ymax(ih: FlatLabel_t; x: int)	
ymax	niup.html#ymax,FlatLabel_t	niup: ymax(ih: FlatLabel_t): string	
ymin=	niup.html#ymin=,FlatLabel_t,string	niup: ymin=(ih: FlatLabel_t; value: string)	
ymin	niup.html#ymin,FlatLabel_t,string	niup: ymin(ih: FlatLabel_t; value: string)	
ymin=	niup.html#ymin=,FlatLabel_t,int	niup: ymin=(ih: FlatLabel_t; x: int)	
ymin	niup.html#ymin,FlatLabel_t,int	niup: ymin(ih: FlatLabel_t; x: int)	
ymin	niup.html#ymin,FlatLabel_t	niup: ymin(ih: FlatLabel_t): string	
zorder=	niup.html#zorder=,FlatLabel_t,string	niup: zorder=(ih: FlatLabel_t; value: string)	
zorder	niup.html#zorder,FlatLabel_t,string	niup: zorder(ih: FlatLabel_t; value: string)	
action=	niup.html#action=,FlatLabel_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatLabel_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatLabel_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatLabel_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatLabel_t	niup: action(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatLabel_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatLabel_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatLabel_t	niup: button_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatLabel_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatLabel_t,proc(PIhandle)	niup: destroy_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatLabel_t	niup: destroy_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatLabel_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatLabel_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatLabel_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatLabel_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatLabel_t	niup: dragbegin_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatLabel_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatLabel_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatLabel_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatLabel_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatLabel_t	niup: dragdatasize_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatLabel_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatLabel_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatLabel_t	niup: dragdata_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatLabel_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatLabel_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatLabel_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatLabel_t	niup: dragend_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatLabel_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatLabel_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatLabel_t	niup: dropdata_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatLabel_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatLabel_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatLabel_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatLabel_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatLabel_t	niup: dropfiles_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatLabel_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatLabel_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatLabel_t	niup: dropmotion_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatLabel_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatLabel_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatLabel_t	niup: enterwindow_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatLabel_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatLabel_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatLabel_t	niup: focus_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatLabel_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatLabel_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatLabel_t	niup: getfocus_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatLabel_t,proc(PIhandle)	niup: help_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatLabel_t,proc(PIhandle)	niup: help_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatLabel_t	niup: help_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatLabel_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatLabel_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatLabel_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatLabel_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatLabel_t	niup: keypress_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatLabel_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatLabel_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatLabel_t	niup: killfocus_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatLabel_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatLabel_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatLabel_t,proc(PIhandle,cint)	niup: k_any(ih: FlatLabel_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatLabel_t	niup: k_any(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatLabel_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatLabel_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatLabel_t	niup: ldestroy_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatLabel_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatLabel_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatLabel_t	niup: leavewindow_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatLabel_t,proc(PIhandle)	niup: map_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatLabel_t,proc(PIhandle)	niup: map_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatLabel_t	niup: map_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatLabel_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatLabel_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatLabel_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatLabel_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatLabel_t	niup: motion_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatLabel_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatLabel_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatLabel_t	niup: postmessage_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatLabel_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatLabel_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatLabel_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatLabel_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatLabel_t	niup: resize_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatLabel_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatLabel_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatLabel_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatLabel_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatLabel_t	niup: scroll_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatLabel_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatLabel_t,proc(PIhandle)	niup: unmap_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatLabel_t	niup: unmap_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatLabel_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                     status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatLabel_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatLabel_t	niup: wheel_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatLabel_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatLabel_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatLabel_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatLabel_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatLabel_t	niup: wom_cb(ih: FlatLabel_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatList	niup.html#FlatList_2	niup: FlatList(): FlatList_t	
active=	niup.html#active=,FlatList_t,string	niup: active=(ih: FlatList_t; value: string)	
active	niup.html#active,FlatList_t,string	niup: active(ih: FlatList_t; value: string)	
active=	niup.html#active=,FlatList_t,bool	niup: active=(ih: FlatList_t; yes: bool)	
active	niup.html#active,FlatList_t,bool	niup: active(ih: FlatList_t; yes: bool)	
active	niup.html#active,FlatList_t	niup: active(ih: FlatList_t): bool	
alignment=	niup.html#alignment=,FlatList_t,string	niup: alignment=(ih: FlatList_t; value: string)	
alignment	niup.html#alignment,FlatList_t,string	niup: alignment(ih: FlatList_t; value: string)	
alignment	niup.html#alignment,FlatList_t	niup: alignment(ih: FlatList_t): string	
appenditem=	niup.html#appenditem=,FlatList_t,string	niup: appenditem=(ih: FlatList_t; value: string)	
appenditem	niup.html#appenditem,FlatList_t,string	niup: appenditem(ih: FlatList_t; value: string)	
arrowimages=	niup.html#arrowimages=,FlatList_t,string	niup: arrowimages=(ih: FlatList_t; value: string)	
arrowimages	niup.html#arrowimages,FlatList_t,string	niup: arrowimages(ih: FlatList_t; value: string)	
arrowimages=	niup.html#arrowimages=,FlatList_t,int	niup: arrowimages=(ih: FlatList_t; x: int)	
arrowimages	niup.html#arrowimages,FlatList_t,int	niup: arrowimages(ih: FlatList_t; x: int)	
arrowimages	niup.html#arrowimages,FlatList_t	niup: arrowimages(ih: FlatList_t): string	
backimage=	niup.html#backimage=,FlatList_t,	niup: backimage=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatList_t,	niup: backimage(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatList_t	niup: backimage(ih: FlatList_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatList_t,string	niup: backimagezoom=(ih: FlatList_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatList_t,string	niup: backimagezoom(ih: FlatList_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatList_t,bool	niup: backimagezoom=(ih: FlatList_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatList_t,bool	niup: backimagezoom(ih: FlatList_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatList_t	niup: backimagezoom(ih: FlatList_t): bool	
backingstore=	niup.html#backingstore=,FlatList_t,string	niup: backingstore=(ih: FlatList_t; value: string)	
backingstore	niup.html#backingstore,FlatList_t,string	niup: backingstore(ih: FlatList_t; value: string)	
backingstore=	niup.html#backingstore=,FlatList_t,bool	niup: backingstore=(ih: FlatList_t; yes: bool)	
backingstore	niup.html#backingstore,FlatList_t,bool	niup: backingstore(ih: FlatList_t; yes: bool)	
backingstore	niup.html#backingstore,FlatList_t	niup: backingstore(ih: FlatList_t): bool	
bgcolor=	niup.html#bgcolor=,FlatList_t,string	niup: bgcolor=(ih: FlatList_t; value: string)	
bgcolor	niup.html#bgcolor,FlatList_t,string	niup: bgcolor(ih: FlatList_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatList_t,int,int,int,int	niup: bgcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatList_t,int,int,int,int	niup: bgcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatList_t	niup: bgcolor(ih: FlatList_t): string	
border=	niup.html#border=,FlatList_t,string	niup: border=(ih: FlatList_t; value: string)	
border	niup.html#border,FlatList_t,string	niup: border(ih: FlatList_t; value: string)	
border=	niup.html#border=,FlatList_t,bool	niup: border=(ih: FlatList_t; yes: bool)	
border	niup.html#border,FlatList_t,bool	niup: border(ih: FlatList_t; yes: bool)	
border	niup.html#border,FlatList_t	niup: border(ih: FlatList_t): bool	
bordercolor=	niup.html#bordercolor=,FlatList_t,string	niup: bordercolor=(ih: FlatList_t; value: string)	
bordercolor	niup.html#bordercolor,FlatList_t,string	niup: bordercolor(ih: FlatList_t; value: string)	
bordercolor=	niup.html#bordercolor=,FlatList_t,int,int,int,int	niup: bordercolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatList_t,int,int,int,int	niup: bordercolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatList_t	niup: bordercolor(ih: FlatList_t): string	
borderwidth=	niup.html#borderwidth=,FlatList_t,string	niup: borderwidth=(ih: FlatList_t; value: string)	
borderwidth	niup.html#borderwidth,FlatList_t,string	niup: borderwidth(ih: FlatList_t; value: string)	
borderwidth=	niup.html#borderwidth=,FlatList_t,int	niup: borderwidth=(ih: FlatList_t; x: int)	
borderwidth	niup.html#borderwidth,FlatList_t,int	niup: borderwidth(ih: FlatList_t; x: int)	
borderwidth	niup.html#borderwidth,FlatList_t	niup: borderwidth(ih: FlatList_t): string	
canfocus=	niup.html#canfocus=,FlatList_t,string	niup: canfocus=(ih: FlatList_t; value: string)	
canfocus	niup.html#canfocus,FlatList_t,string	niup: canfocus(ih: FlatList_t; value: string)	
canfocus=	niup.html#canfocus=,FlatList_t,bool	niup: canfocus=(ih: FlatList_t; yes: bool)	
canfocus	niup.html#canfocus,FlatList_t,bool	niup: canfocus(ih: FlatList_t; yes: bool)	
canfocus	niup.html#canfocus,FlatList_t	niup: canfocus(ih: FlatList_t): bool	
charsize	niup.html#charsize,FlatList_t	niup: charsize(ih: FlatList_t): string	
count	niup.html#count,FlatList_t	niup: count(ih: FlatList_t): string	
cpadding=	niup.html#cpadding=,FlatList_t,string	niup: cpadding=(ih: FlatList_t; value: string)	
cpadding	niup.html#cpadding,FlatList_t,string	niup: cpadding(ih: FlatList_t; value: string)	
cpadding=	niup.html#cpadding=,FlatList_t,int,int	niup: cpadding=(ih: FlatList_t; width, height: int)	
cpadding	niup.html#cpadding,FlatList_t,int,int	niup: cpadding(ih: FlatList_t; width, height: int)	
cpadding	niup.html#cpadding,FlatList_t	niup: cpadding(ih: FlatList_t): string	
cspacing=	niup.html#cspacing=,FlatList_t,string	niup: cspacing=(ih: FlatList_t; value: string)	
cspacing	niup.html#cspacing,FlatList_t,string	niup: cspacing(ih: FlatList_t; value: string)	
cspacing=	niup.html#cspacing=,FlatList_t,int	niup: cspacing=(ih: FlatList_t; x: int)	
cspacing	niup.html#cspacing,FlatList_t,int	niup: cspacing(ih: FlatList_t; x: int)	
cspacing	niup.html#cspacing,FlatList_t	niup: cspacing(ih: FlatList_t): string	
cursor=	niup.html#cursor=,FlatList_t,	niup: cursor=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatList_t,	niup: cursor(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatList_t	niup: cursor(ih: FlatList_t): string	
dragdrop=	niup.html#dragdrop=,FlatList_t,string	niup: dragdrop=(ih: FlatList_t; value: string)	
dragdrop	niup.html#dragdrop,FlatList_t,string	niup: dragdrop(ih: FlatList_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatList_t,bool	niup: dragdrop=(ih: FlatList_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatList_t,bool	niup: dragdrop(ih: FlatList_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatList_t	niup: dragdrop(ih: FlatList_t): bool	
dragdroplist=	niup.html#dragdroplist=,FlatList_t,string	niup: dragdroplist=(ih: FlatList_t; value: string)	
dragdroplist	niup.html#dragdroplist,FlatList_t,string	niup: dragdroplist(ih: FlatList_t; value: string)	
dragdroplist=	niup.html#dragdroplist=,FlatList_t,bool	niup: dragdroplist=(ih: FlatList_t; yes: bool)	
dragdroplist	niup.html#dragdroplist,FlatList_t,bool	niup: dragdroplist(ih: FlatList_t; yes: bool)	
dragdroplist	niup.html#dragdroplist,FlatList_t	niup: dragdroplist(ih: FlatList_t): bool	
dragsource=	niup.html#dragsource=,FlatList_t,string	niup: dragsource=(ih: FlatList_t; value: string)	
dragsource	niup.html#dragsource,FlatList_t,string	niup: dragsource(ih: FlatList_t; value: string)	
dragsource=	niup.html#dragsource=,FlatList_t,bool	niup: dragsource=(ih: FlatList_t; yes: bool)	
dragsource	niup.html#dragsource,FlatList_t,bool	niup: dragsource(ih: FlatList_t; yes: bool)	
dragsource	niup.html#dragsource,FlatList_t	niup: dragsource(ih: FlatList_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatList_t,string	niup: dragsourcemove=(ih: FlatList_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatList_t,string	niup: dragsourcemove(ih: FlatList_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatList_t,bool	niup: dragsourcemove=(ih: FlatList_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatList_t,bool	niup: dragsourcemove(ih: FlatList_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatList_t	niup: dragsourcemove(ih: FlatList_t): bool	
dragtypes=	niup.html#dragtypes=,FlatList_t,string	niup: dragtypes=(ih: FlatList_t; value: string)	
dragtypes	niup.html#dragtypes,FlatList_t,string	niup: dragtypes(ih: FlatList_t; value: string)	
dragtypes	niup.html#dragtypes,FlatList_t	niup: dragtypes(ih: FlatList_t): string	
drawable	niup.html#drawable,FlatList_t	niup: drawable(ih: FlatList_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatList_t,string	niup: drawbgcolor=(ih: FlatList_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatList_t,string	niup: drawbgcolor(ih: FlatList_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatList_t,int,int,int,int	niup: drawbgcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatList_t,int,int,int,int	niup: drawbgcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatList_t	niup: drawbgcolor(ih: FlatList_t): string	
drawcolor=	niup.html#drawcolor=,FlatList_t,string	niup: drawcolor=(ih: FlatList_t; value: string)	
drawcolor	niup.html#drawcolor,FlatList_t,string	niup: drawcolor(ih: FlatList_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatList_t,int,int,int,int	niup: drawcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatList_t,int,int,int,int	niup: drawcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatList_t	niup: drawcolor(ih: FlatList_t): string	
drawdriver	niup.html#drawdriver,FlatList_t	niup: drawdriver(ih: FlatList_t): string	
drawfont=	niup.html#drawfont=,FlatList_t,string	niup: drawfont=(ih: FlatList_t; value: string)	
drawfont	niup.html#drawfont,FlatList_t,string	niup: drawfont(ih: FlatList_t; value: string)	
drawfont	niup.html#drawfont,FlatList_t	niup: drawfont(ih: FlatList_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatList_t,string	niup: drawlinewidth=(ih: FlatList_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatList_t,string	niup: drawlinewidth(ih: FlatList_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatList_t,int	niup: drawlinewidth=(ih: FlatList_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatList_t,int	niup: drawlinewidth(ih: FlatList_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatList_t	niup: drawlinewidth(ih: FlatList_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatList_t,string	niup: drawmakeinactive=(ih: FlatList_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatList_t,string	niup: drawmakeinactive(ih: FlatList_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatList_t,bool	niup: drawmakeinactive=(ih: FlatList_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatList_t,bool	niup: drawmakeinactive(ih: FlatList_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatList_t	niup: drawmakeinactive(ih: FlatList_t): bool	
drawsize	niup.html#drawsize,FlatList_t	niup: drawsize(ih: FlatList_t): string	
drawstyle=	niup.html#drawstyle=,FlatList_t,string	niup: drawstyle=(ih: FlatList_t; value: string)	
drawstyle	niup.html#drawstyle,FlatList_t,string	niup: drawstyle(ih: FlatList_t; value: string)	
drawstyle	niup.html#drawstyle,FlatList_t	niup: drawstyle(ih: FlatList_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatList_t,string	niup: drawtextalignment=(ih: FlatList_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatList_t,string	niup: drawtextalignment(ih: FlatList_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatList_t	niup: drawtextalignment(ih: FlatList_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatList_t,string	niup: drawtextclip=(ih: FlatList_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatList_t,string	niup: drawtextclip(ih: FlatList_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatList_t,bool	niup: drawtextclip=(ih: FlatList_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatList_t,bool	niup: drawtextclip(ih: FlatList_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatList_t	niup: drawtextclip(ih: FlatList_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatList_t,string	niup: drawtextellipsis=(ih: FlatList_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatList_t,string	niup: drawtextellipsis(ih: FlatList_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatList_t,bool	niup: drawtextellipsis=(ih: FlatList_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatList_t,bool	niup: drawtextellipsis(ih: FlatList_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatList_t	niup: drawtextellipsis(ih: FlatList_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatList_t,string	niup: drawtextlayoutcenter=(ih: FlatList_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatList_t,string	niup: drawtextlayoutcenter(ih: FlatList_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatList_t,bool	niup: drawtextlayoutcenter=(ih: FlatList_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatList_t,bool	niup: drawtextlayoutcenter(ih: FlatList_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatList_t	niup: drawtextlayoutcenter(ih: FlatList_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatList_t,string	niup: drawtextorientation=(ih: FlatList_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatList_t,string	niup: drawtextorientation(ih: FlatList_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatList_t,int64	niup: drawtextorientation=(ih: FlatList_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatList_t,int64	niup: drawtextorientation(ih: FlatList_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatList_t	niup: drawtextorientation(ih: FlatList_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatList_t,string	niup: drawtextwrap=(ih: FlatList_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatList_t,string	niup: drawtextwrap(ih: FlatList_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatList_t,bool	niup: drawtextwrap=(ih: FlatList_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatList_t,bool	niup: drawtextwrap(ih: FlatList_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatList_t	niup: drawtextwrap(ih: FlatList_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatList_t,string	niup: dropfilestarget=(ih: FlatList_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatList_t,string	niup: dropfilestarget(ih: FlatList_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatList_t,bool	niup: dropfilestarget=(ih: FlatList_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatList_t,bool	niup: dropfilestarget(ih: FlatList_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatList_t	niup: dropfilestarget(ih: FlatList_t): bool	
droptarget=	niup.html#droptarget=,FlatList_t,string	niup: droptarget=(ih: FlatList_t; value: string)	
droptarget	niup.html#droptarget,FlatList_t,string	niup: droptarget(ih: FlatList_t; value: string)	
droptarget=	niup.html#droptarget=,FlatList_t,bool	niup: droptarget=(ih: FlatList_t; yes: bool)	
droptarget	niup.html#droptarget,FlatList_t,bool	niup: droptarget(ih: FlatList_t; yes: bool)	
droptarget	niup.html#droptarget,FlatList_t	niup: droptarget(ih: FlatList_t): bool	
droptypes=	niup.html#droptypes=,FlatList_t,string	niup: droptypes=(ih: FlatList_t; value: string)	
droptypes	niup.html#droptypes,FlatList_t,string	niup: droptypes(ih: FlatList_t; value: string)	
droptypes	niup.html#droptypes,FlatList_t	niup: droptypes(ih: FlatList_t): string	
dx=	niup.html#dx=,FlatList_t,string	niup: dx=(ih: FlatList_t; value: string)	
dx	niup.html#dx,FlatList_t,string	niup: dx(ih: FlatList_t; value: string)	
dx=	niup.html#dx=,FlatList_t,int64	niup: dx=(ih: FlatList_t; x: int64)	
dx	niup.html#dx,FlatList_t,int64	niup: dx(ih: FlatList_t; x: int64)	
dx	niup.html#dx,FlatList_t	niup: dx(ih: FlatList_t): string	
dy=	niup.html#dy=,FlatList_t,string	niup: dy=(ih: FlatList_t; value: string)	
dy	niup.html#dy,FlatList_t,string	niup: dy(ih: FlatList_t; value: string)	
dy=	niup.html#dy=,FlatList_t,int64	niup: dy=(ih: FlatList_t; x: int64)	
dy	niup.html#dy,FlatList_t,int64	niup: dy(ih: FlatList_t; x: int64)	
dy	niup.html#dy,FlatList_t	niup: dy(ih: FlatList_t): string	
expand=	niup.html#expand=,FlatList_t,string	niup: expand=(ih: FlatList_t; value: string)	
expand	niup.html#expand,FlatList_t,string	niup: expand(ih: FlatList_t; value: string)	
expand	niup.html#expand,FlatList_t	niup: expand(ih: FlatList_t): string	
expandweight=	niup.html#expandweight=,FlatList_t,string	niup: expandweight=(ih: FlatList_t; value: string)	
expandweight	niup.html#expandweight,FlatList_t,string	niup: expandweight(ih: FlatList_t; value: string)	
expandweight=	niup.html#expandweight=,FlatList_t,int64	niup: expandweight=(ih: FlatList_t; x: int64)	
expandweight	niup.html#expandweight,FlatList_t,int64	niup: expandweight(ih: FlatList_t; x: int64)	
expandweight	niup.html#expandweight,FlatList_t	niup: expandweight(ih: FlatList_t): string	
fgcolor=	niup.html#fgcolor=,FlatList_t,string	niup: fgcolor=(ih: FlatList_t; value: string)	
fgcolor	niup.html#fgcolor,FlatList_t,string	niup: fgcolor(ih: FlatList_t; value: string)	
fgcolor=	niup.html#fgcolor=,FlatList_t,int,int,int,int	niup: fgcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatList_t,int,int,int,int	niup: fgcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatList_t	niup: fgcolor(ih: FlatList_t): string	
fittobackimage=	niup.html#fittobackimage=,FlatList_t,string	niup: fittobackimage=(ih: FlatList_t; value: string)	
fittobackimage	niup.html#fittobackimage,FlatList_t,string	niup: fittobackimage(ih: FlatList_t; value: string)	
fittobackimage=	niup.html#fittobackimage=,FlatList_t,bool	niup: fittobackimage=(ih: FlatList_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatList_t,bool	niup: fittobackimage(ih: FlatList_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatList_t	niup: fittobackimage(ih: FlatList_t): bool	
flatscrollbar	niup.html#flatscrollbar,FlatList_t	niup: flatscrollbar(ih: FlatList_t): string	
floating=	niup.html#floating=,FlatList_t,string	niup: floating=(ih: FlatList_t; value: string)	
floating	niup.html#floating,FlatList_t,string	niup: floating(ih: FlatList_t; value: string)	
floating	niup.html#floating,FlatList_t	niup: floating(ih: FlatList_t): string	
floatingdelay	niup.html#floatingdelay,FlatList_t	niup: floatingdelay(ih: FlatList_t): string	
focusfeedback=	niup.html#focusfeedback=,FlatList_t,string	niup: focusfeedback=(ih: FlatList_t; value: string)	
focusfeedback	niup.html#focusfeedback,FlatList_t,string	niup: focusfeedback(ih: FlatList_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,FlatList_t,bool	niup: focusfeedback=(ih: FlatList_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatList_t,bool	niup: focusfeedback(ih: FlatList_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatList_t	niup: focusfeedback(ih: FlatList_t): bool	
font=	niup.html#font=,FlatList_t,string	niup: font=(ih: FlatList_t; value: string)	
font	niup.html#font,FlatList_t,string	niup: font(ih: FlatList_t; value: string)	
font	niup.html#font,FlatList_t	niup: font(ih: FlatList_t): string	
fontface=	niup.html#fontface=,FlatList_t,string	niup: fontface=(ih: FlatList_t; value: string)	
fontface	niup.html#fontface,FlatList_t,string	niup: fontface(ih: FlatList_t; value: string)	
fontface	niup.html#fontface,FlatList_t	niup: fontface(ih: FlatList_t): string	
fontsize=	niup.html#fontsize=,FlatList_t,string	niup: fontsize=(ih: FlatList_t; value: string)	
fontsize	niup.html#fontsize,FlatList_t,string	niup: fontsize(ih: FlatList_t; value: string)	
fontsize=	niup.html#fontsize=,FlatList_t,int	niup: fontsize=(ih: FlatList_t; x: int)	
fontsize	niup.html#fontsize,FlatList_t,int	niup: fontsize(ih: FlatList_t; x: int)	
fontsize	niup.html#fontsize,FlatList_t	niup: fontsize(ih: FlatList_t): string	
fontstyle=	niup.html#fontstyle=,FlatList_t,string	niup: fontstyle=(ih: FlatList_t; value: string)	
fontstyle	niup.html#fontstyle,FlatList_t,string	niup: fontstyle(ih: FlatList_t; value: string)	
fontstyle	niup.html#fontstyle,FlatList_t	niup: fontstyle(ih: FlatList_t): string	
handlename=	niup.html#handlename=,FlatList_t,string	niup: handlename=(ih: FlatList_t; value: string)	
handlename	niup.html#handlename,FlatList_t,string	niup: handlename(ih: FlatList_t; value: string)	
handlename	niup.html#handlename,FlatList_t	niup: handlename(ih: FlatList_t): string	
hasfocus	niup.html#hasfocus,FlatList_t	niup: hasfocus(ih: FlatList_t): bool	
hlcolor=	niup.html#hlcolor=,FlatList_t,string	niup: hlcolor=(ih: FlatList_t; value: string)	
hlcolor	niup.html#hlcolor,FlatList_t,string	niup: hlcolor(ih: FlatList_t; value: string)	
hlcolor=	niup.html#hlcolor=,FlatList_t,int,int,int,int	niup: hlcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatList_t,int,int,int,int	niup: hlcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatList_t	niup: hlcolor(ih: FlatList_t): string	
hlcoloralpha=	niup.html#hlcoloralpha=,FlatList_t,string	niup: hlcoloralpha=(ih: FlatList_t; value: string)	
hlcoloralpha	niup.html#hlcoloralpha,FlatList_t,string	niup: hlcoloralpha(ih: FlatList_t; value: string)	
hlcoloralpha=	niup.html#hlcoloralpha=,FlatList_t,int	niup: hlcoloralpha=(ih: FlatList_t; x: int)	
hlcoloralpha	niup.html#hlcoloralpha,FlatList_t,int	niup: hlcoloralpha(ih: FlatList_t; x: int)	
hlcoloralpha	niup.html#hlcoloralpha,FlatList_t	niup: hlcoloralpha(ih: FlatList_t): string	
iconspacing=	niup.html#iconspacing=,FlatList_t,string	niup: iconspacing=(ih: FlatList_t; value: string)	
iconspacing	niup.html#iconspacing,FlatList_t,string	niup: iconspacing(ih: FlatList_t; value: string)	
iconspacing=	niup.html#iconspacing=,FlatList_t,int	niup: iconspacing=(ih: FlatList_t; x: int)	
iconspacing	niup.html#iconspacing,FlatList_t,int	niup: iconspacing(ih: FlatList_t; x: int)	
iconspacing	niup.html#iconspacing,FlatList_t	niup: iconspacing(ih: FlatList_t): string	
imageposition=	niup.html#imageposition=,FlatList_t,string	niup: imageposition=(ih: FlatList_t; value: string)	
imageposition	niup.html#imageposition,FlatList_t,string	niup: imageposition(ih: FlatList_t; value: string)	
imageposition	niup.html#imageposition,FlatList_t	niup: imageposition(ih: FlatList_t): string	
linex=	niup.html#linex=,FlatList_t,string	niup: linex=(ih: FlatList_t; value: string)	
linex	niup.html#linex,FlatList_t,string	niup: linex(ih: FlatList_t; value: string)	
linex=	niup.html#linex=,FlatList_t,int64	niup: linex=(ih: FlatList_t; x: int64)	
linex	niup.html#linex,FlatList_t,int64	niup: linex(ih: FlatList_t; x: int64)	
linex	niup.html#linex,FlatList_t	niup: linex(ih: FlatList_t): string	
liney=	niup.html#liney=,FlatList_t,string	niup: liney=(ih: FlatList_t; value: string)	
liney	niup.html#liney,FlatList_t,string	niup: liney(ih: FlatList_t; value: string)	
liney=	niup.html#liney=,FlatList_t,int64	niup: liney=(ih: FlatList_t; x: int64)	
liney	niup.html#liney,FlatList_t,int64	niup: liney(ih: FlatList_t; x: int64)	
liney	niup.html#liney,FlatList_t	niup: liney(ih: FlatList_t): string	
maxsize=	niup.html#maxsize=,FlatList_t,string	niup: maxsize=(ih: FlatList_t; value: string)	
maxsize	niup.html#maxsize,FlatList_t,string	niup: maxsize(ih: FlatList_t; value: string)	
maxsize=	niup.html#maxsize=,FlatList_t,int,int	niup: maxsize=(ih: FlatList_t; width, height: int)	
maxsize	niup.html#maxsize,FlatList_t,int,int	niup: maxsize(ih: FlatList_t; width, height: int)	
maxsize	niup.html#maxsize,FlatList_t	niup: maxsize(ih: FlatList_t): string	
minsize=	niup.html#minsize=,FlatList_t,string	niup: minsize=(ih: FlatList_t; value: string)	
minsize	niup.html#minsize,FlatList_t,string	niup: minsize(ih: FlatList_t; value: string)	
minsize=	niup.html#minsize=,FlatList_t,int,int	niup: minsize=(ih: FlatList_t; width, height: int)	
minsize	niup.html#minsize,FlatList_t,int,int	niup: minsize(ih: FlatList_t; width, height: int)	
minsize	niup.html#minsize,FlatList_t	niup: minsize(ih: FlatList_t): string	
multiple=	niup.html#multiple=,FlatList_t,string	niup: multiple=(ih: FlatList_t; value: string)	
multiple	niup.html#multiple,FlatList_t,string	niup: multiple(ih: FlatList_t; value: string)	
multiple=	niup.html#multiple=,FlatList_t,bool	niup: multiple=(ih: FlatList_t; yes: bool)	
multiple	niup.html#multiple,FlatList_t,bool	niup: multiple(ih: FlatList_t; yes: bool)	
multiple	niup.html#multiple,FlatList_t	niup: multiple(ih: FlatList_t): bool	
name=	niup.html#name=,FlatList_t,string	niup: name=(ih: FlatList_t; value: string)	
name	niup.html#name,FlatList_t,string	niup: name(ih: FlatList_t; value: string)	
name	niup.html#name,FlatList_t	niup: name(ih: FlatList_t): string	
naturalsize	niup.html#naturalsize,FlatList_t	niup: naturalsize(ih: FlatList_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatList_t,string	niup: normalizergroup=(ih: FlatList_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatList_t,string	niup: normalizergroup(ih: FlatList_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatList_t	niup: normalizergroup(ih: FlatList_t): string	
ntheme=	niup.html#ntheme=,FlatList_t,string	niup: ntheme=(ih: FlatList_t; value: string)	
ntheme	niup.html#ntheme,FlatList_t,string	niup: ntheme(ih: FlatList_t; value: string)	
ntheme	niup.html#ntheme,FlatList_t	niup: ntheme(ih: FlatList_t): string	
padding=	niup.html#padding=,FlatList_t,string	niup: padding=(ih: FlatList_t; value: string)	
padding	niup.html#padding,FlatList_t,string	niup: padding(ih: FlatList_t; value: string)	
padding=	niup.html#padding=,FlatList_t,int,int	niup: padding=(ih: FlatList_t; width, height: int)	
padding	niup.html#padding,FlatList_t,int,int	niup: padding(ih: FlatList_t; width, height: int)	
padding	niup.html#padding,FlatList_t	niup: padding(ih: FlatList_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatList_t	niup: pangofontdesc(ih: FlatList_t): string	
pangolayout	niup.html#pangolayout,FlatList_t	niup: pangolayout(ih: FlatList_t): string	
position=	niup.html#position=,FlatList_t,string	niup: position=(ih: FlatList_t; value: string)	
position	niup.html#position,FlatList_t,string	niup: position(ih: FlatList_t; value: string)	
position=	niup.html#position=,FlatList_t,int,int	niup: position=(ih: FlatList_t; x, y: int)	
position	niup.html#position,FlatList_t,int,int	niup: position(ih: FlatList_t; x, y: int)	
position	niup.html#position,FlatList_t	niup: position(ih: FlatList_t): string	
posx=	niup.html#posx=,FlatList_t,string	niup: posx=(ih: FlatList_t; value: string)	
posx	niup.html#posx,FlatList_t,string	niup: posx(ih: FlatList_t; value: string)	
posx=	niup.html#posx=,FlatList_t,int64	niup: posx=(ih: FlatList_t; x: int64)	
posx	niup.html#posx,FlatList_t,int64	niup: posx(ih: FlatList_t; x: int64)	
posx	niup.html#posx,FlatList_t	niup: posx(ih: FlatList_t): string	
posy=	niup.html#posy=,FlatList_t,string	niup: posy=(ih: FlatList_t; value: string)	
posy	niup.html#posy,FlatList_t,string	niup: posy(ih: FlatList_t; value: string)	
posy=	niup.html#posy=,FlatList_t,int64	niup: posy=(ih: FlatList_t; x: int64)	
posy	niup.html#posy,FlatList_t,int64	niup: posy(ih: FlatList_t; x: int64)	
posy	niup.html#posy,FlatList_t	niup: posy(ih: FlatList_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatList_t,string	niup: propagatefocus=(ih: FlatList_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatList_t,string	niup: propagatefocus(ih: FlatList_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatList_t,bool	niup: propagatefocus=(ih: FlatList_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatList_t,bool	niup: propagatefocus(ih: FlatList_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatList_t	niup: propagatefocus(ih: FlatList_t): bool	
pscolor=	niup.html#pscolor=,FlatList_t,string	niup: pscolor=(ih: FlatList_t; value: string)	
pscolor	niup.html#pscolor,FlatList_t,string	niup: pscolor(ih: FlatList_t; value: string)	
pscolor=	niup.html#pscolor=,FlatList_t,int,int,int,int	niup: pscolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatList_t,int,int,int,int	niup: pscolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatList_t	niup: pscolor(ih: FlatList_t): string	
rastersize=	niup.html#rastersize=,FlatList_t,string	niup: rastersize=(ih: FlatList_t; value: string)	
rastersize	niup.html#rastersize,FlatList_t,string	niup: rastersize(ih: FlatList_t; value: string)	
rastersize=	niup.html#rastersize=,FlatList_t,int,int	niup: rastersize=(ih: FlatList_t; width, height: int)	
rastersize	niup.html#rastersize,FlatList_t,int,int	niup: rastersize(ih: FlatList_t; width, height: int)	
rastersize	niup.html#rastersize,FlatList_t	niup: rastersize(ih: FlatList_t): string	
removeitem=	niup.html#removeitem=,FlatList_t,string	niup: removeitem=(ih: FlatList_t; value: string)	
removeitem	niup.html#removeitem,FlatList_t,string	niup: removeitem(ih: FlatList_t; value: string)	
removeitem=	niup.html#removeitem=,FlatList_t,int	niup: removeitem=(ih: FlatList_t; x: int)	
removeitem	niup.html#removeitem,FlatList_t,int	niup: removeitem(ih: FlatList_t; x: int)	
sb_backcolor	niup.html#sb_backcolor,FlatList_t	niup: sb_backcolor(ih: FlatList_t): string	
sb_forecolor	niup.html#sb_forecolor,FlatList_t	niup: sb_forecolor(ih: FlatList_t): string	
sb_highcolor	niup.html#sb_highcolor,FlatList_t	niup: sb_highcolor(ih: FlatList_t): string	
sb_imagebottom=	niup.html#sb_imagebottom=,FlatList_t,	niup: sb_imagebottom=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottom	niup.html#sb_imagebottom,FlatList_t,	niup: sb_imagebottom(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottom	niup.html#sb_imagebottom,FlatList_t	niup: sb_imagebottom(ih: FlatList_t): string	
sb_imagebottomhighlight=	niup.html#sb_imagebottomhighlight=,FlatList_t,	niup: sb_imagebottomhighlight=(ih: FlatList_t;\n                         handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottomhighlight	niup.html#sb_imagebottomhighlight,FlatList_t,	niup: sb_imagebottomhighlight(ih: FlatList_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottomhighlight	niup.html#sb_imagebottomhighlight,FlatList_t	niup: sb_imagebottomhighlight(ih: FlatList_t): string	
sb_imagebottominactive=	niup.html#sb_imagebottominactive=,FlatList_t,	niup: sb_imagebottominactive=(ih: FlatList_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottominactive	niup.html#sb_imagebottominactive,FlatList_t,	niup: sb_imagebottominactive(ih: FlatList_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottominactive	niup.html#sb_imagebottominactive,FlatList_t	niup: sb_imagebottominactive(ih: FlatList_t): string	
sb_imagebottompress=	niup.html#sb_imagebottompress=,FlatList_t,	niup: sb_imagebottompress=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottompress	niup.html#sb_imagebottompress,FlatList_t,	niup: sb_imagebottompress(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottompress	niup.html#sb_imagebottompress,FlatList_t	niup: sb_imagebottompress(ih: FlatList_t): string	
sb_imageleft=	niup.html#sb_imageleft=,FlatList_t,	niup: sb_imageleft=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleft	niup.html#sb_imageleft,FlatList_t,	niup: sb_imageleft(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleft	niup.html#sb_imageleft,FlatList_t	niup: sb_imageleft(ih: FlatList_t): string	
sb_imagelefthighlight=	niup.html#sb_imagelefthighlight=,FlatList_t,	niup: sb_imagelefthighlight=(ih: FlatList_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagelefthighlight	niup.html#sb_imagelefthighlight,FlatList_t,	niup: sb_imagelefthighlight(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagelefthighlight	niup.html#sb_imagelefthighlight,FlatList_t	niup: sb_imagelefthighlight(ih: FlatList_t): string	
sb_imageleftinactive=	niup.html#sb_imageleftinactive=,FlatList_t,	niup: sb_imageleftinactive=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftinactive	niup.html#sb_imageleftinactive,FlatList_t,	niup: sb_imageleftinactive(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftinactive	niup.html#sb_imageleftinactive,FlatList_t	niup: sb_imageleftinactive(ih: FlatList_t): string	
sb_imageleftpress=	niup.html#sb_imageleftpress=,FlatList_t,	niup: sb_imageleftpress=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftpress	niup.html#sb_imageleftpress,FlatList_t,	niup: sb_imageleftpress(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftpress	niup.html#sb_imageleftpress,FlatList_t	niup: sb_imageleftpress(ih: FlatList_t): string	
sb_imageright=	niup.html#sb_imageright=,FlatList_t,	niup: sb_imageright=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageright	niup.html#sb_imageright,FlatList_t,	niup: sb_imageright(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageright	niup.html#sb_imageright,FlatList_t	niup: sb_imageright(ih: FlatList_t): string	
sb_imagerighthighlight=	niup.html#sb_imagerighthighlight=,FlatList_t,	niup: sb_imagerighthighlight=(ih: FlatList_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerighthighlight	niup.html#sb_imagerighthighlight,FlatList_t,	niup: sb_imagerighthighlight(ih: FlatList_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerighthighlight	niup.html#sb_imagerighthighlight,FlatList_t	niup: sb_imagerighthighlight(ih: FlatList_t): string	
sb_imagerightinactive=	niup.html#sb_imagerightinactive=,FlatList_t,	niup: sb_imagerightinactive=(ih: FlatList_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightinactive	niup.html#sb_imagerightinactive,FlatList_t,	niup: sb_imagerightinactive(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightinactive	niup.html#sb_imagerightinactive,FlatList_t	niup: sb_imagerightinactive(ih: FlatList_t): string	
sb_imagerightpress=	niup.html#sb_imagerightpress=,FlatList_t,	niup: sb_imagerightpress=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightpress	niup.html#sb_imagerightpress,FlatList_t,	niup: sb_imagerightpress(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightpress	niup.html#sb_imagerightpress,FlatList_t	niup: sb_imagerightpress(ih: FlatList_t): string	
sb_imagetop=	niup.html#sb_imagetop=,FlatList_t,	niup: sb_imagetop=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetop	niup.html#sb_imagetop,FlatList_t,	niup: sb_imagetop(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetop	niup.html#sb_imagetop,FlatList_t	niup: sb_imagetop(ih: FlatList_t): string	
sb_imagetophighlight=	niup.html#sb_imagetophighlight=,FlatList_t,	niup: sb_imagetophighlight=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetophighlight	niup.html#sb_imagetophighlight,FlatList_t,	niup: sb_imagetophighlight(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetophighlight	niup.html#sb_imagetophighlight,FlatList_t	niup: sb_imagetophighlight(ih: FlatList_t): string	
sb_imagetopinactive=	niup.html#sb_imagetopinactive=,FlatList_t,	niup: sb_imagetopinactive=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetopinactive	niup.html#sb_imagetopinactive,FlatList_t,	niup: sb_imagetopinactive(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetopinactive	niup.html#sb_imagetopinactive,FlatList_t	niup: sb_imagetopinactive(ih: FlatList_t): string	
sb_imagetoppress=	niup.html#sb_imagetoppress=,FlatList_t,	niup: sb_imagetoppress=(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetoppress	niup.html#sb_imagetoppress,FlatList_t,	niup: sb_imagetoppress(ih: FlatList_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetoppress	niup.html#sb_imagetoppress,FlatList_t	niup: sb_imagetoppress(ih: FlatList_t): string	
sb_presscolor	niup.html#sb_presscolor,FlatList_t	niup: sb_presscolor(ih: FlatList_t): string	
sb_resize	niup.html#sb_resize,FlatList_t	niup: sb_resize(ih: FlatList_t): string	
screenposition	niup.html#screenposition,FlatList_t	niup: screenposition(ih: FlatList_t): string	
scrollbar=	niup.html#scrollbar=,FlatList_t,string	niup: scrollbar=(ih: FlatList_t; value: string)	
scrollbar	niup.html#scrollbar,FlatList_t,string	niup: scrollbar(ih: FlatList_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatList_t,bool	niup: scrollbar=(ih: FlatList_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatList_t,bool	niup: scrollbar(ih: FlatList_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatList_t	niup: scrollbar(ih: FlatList_t): bool	
scrollbarsize	niup.html#scrollbarsize,FlatList_t	niup: scrollbarsize(ih: FlatList_t): string	
showarrows	niup.html#showarrows,FlatList_t	niup: showarrows(ih: FlatList_t): string	
showdragdrop=	niup.html#showdragdrop=,FlatList_t,string	niup: showdragdrop=(ih: FlatList_t; value: string)	
showdragdrop	niup.html#showdragdrop,FlatList_t,string	niup: showdragdrop(ih: FlatList_t; value: string)	
showdragdrop=	niup.html#showdragdrop=,FlatList_t,bool	niup: showdragdrop=(ih: FlatList_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,FlatList_t,bool	niup: showdragdrop(ih: FlatList_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,FlatList_t	niup: showdragdrop(ih: FlatList_t): bool	
showfloating	niup.html#showfloating,FlatList_t	niup: showfloating(ih: FlatList_t): string	
showtransparent	niup.html#showtransparent,FlatList_t	niup: showtransparent(ih: FlatList_t): string	
size=	niup.html#size=,FlatList_t,string	niup: size=(ih: FlatList_t; value: string)	
size	niup.html#size,FlatList_t,string	niup: size(ih: FlatList_t; value: string)	
size=	niup.html#size=,FlatList_t,int,int	niup: size=(ih: FlatList_t; width, height: int)	
size	niup.html#size,FlatList_t,int,int	niup: size(ih: FlatList_t; width, height: int)	
size	niup.html#size,FlatList_t	niup: size(ih: FlatList_t): string	
spacing=	niup.html#spacing=,FlatList_t,string	niup: spacing=(ih: FlatList_t; value: string)	
spacing	niup.html#spacing,FlatList_t,string	niup: spacing(ih: FlatList_t; value: string)	
spacing=	niup.html#spacing=,FlatList_t,int	niup: spacing=(ih: FlatList_t; x: int)	
spacing	niup.html#spacing,FlatList_t,int	niup: spacing(ih: FlatList_t; x: int)	
spacing	niup.html#spacing,FlatList_t	niup: spacing(ih: FlatList_t): string	
textalignment=	niup.html#textalignment=,FlatList_t,string	niup: textalignment=(ih: FlatList_t; value: string)	
textalignment	niup.html#textalignment,FlatList_t,string	niup: textalignment(ih: FlatList_t; value: string)	
textalignment	niup.html#textalignment,FlatList_t	niup: textalignment(ih: FlatList_t): string	
textellipsis=	niup.html#textellipsis=,FlatList_t,string	niup: textellipsis=(ih: FlatList_t; value: string)	
textellipsis	niup.html#textellipsis,FlatList_t,string	niup: textellipsis(ih: FlatList_t; value: string)	
textellipsis=	niup.html#textellipsis=,FlatList_t,bool	niup: textellipsis=(ih: FlatList_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatList_t,bool	niup: textellipsis(ih: FlatList_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatList_t	niup: textellipsis(ih: FlatList_t): bool	
textpscolor=	niup.html#textpscolor=,FlatList_t,string	niup: textpscolor=(ih: FlatList_t; value: string)	
textpscolor	niup.html#textpscolor,FlatList_t,string	niup: textpscolor(ih: FlatList_t; value: string)	
textpscolor=	niup.html#textpscolor=,FlatList_t,int,int,int,int	niup: textpscolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatList_t,int,int,int,int	niup: textpscolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatList_t	niup: textpscolor(ih: FlatList_t): string	
textwrap=	niup.html#textwrap=,FlatList_t,string	niup: textwrap=(ih: FlatList_t; value: string)	
textwrap	niup.html#textwrap,FlatList_t,string	niup: textwrap(ih: FlatList_t; value: string)	
textwrap=	niup.html#textwrap=,FlatList_t,bool	niup: textwrap=(ih: FlatList_t; yes: bool)	
textwrap	niup.html#textwrap,FlatList_t,bool	niup: textwrap(ih: FlatList_t; yes: bool)	
textwrap	niup.html#textwrap,FlatList_t	niup: textwrap(ih: FlatList_t): bool	
theme=	niup.html#theme=,FlatList_t,string	niup: theme=(ih: FlatList_t; value: string)	
theme	niup.html#theme,FlatList_t,string	niup: theme(ih: FlatList_t; value: string)	
theme	niup.html#theme,FlatList_t	niup: theme(ih: FlatList_t): string	
tip=	niup.html#tip=,FlatList_t,string	niup: tip=(ih: FlatList_t; value: string)	
tip	niup.html#tip,FlatList_t,string	niup: tip(ih: FlatList_t; value: string)	
tip	niup.html#tip,FlatList_t	niup: tip(ih: FlatList_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatList_t,string	niup: tipbgcolor=(ih: FlatList_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatList_t,string	niup: tipbgcolor(ih: FlatList_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatList_t,int,int,int,int	niup: tipbgcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatList_t,int,int,int,int	niup: tipbgcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatList_t	niup: tipbgcolor(ih: FlatList_t): string	
tipdelay=	niup.html#tipdelay=,FlatList_t,string	niup: tipdelay=(ih: FlatList_t; value: string)	
tipdelay	niup.html#tipdelay,FlatList_t,string	niup: tipdelay(ih: FlatList_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatList_t,int	niup: tipdelay=(ih: FlatList_t; x: int)	
tipdelay	niup.html#tipdelay,FlatList_t,int	niup: tipdelay(ih: FlatList_t; x: int)	
tipdelay	niup.html#tipdelay,FlatList_t	niup: tipdelay(ih: FlatList_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatList_t,string	niup: tipfgcolor=(ih: FlatList_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatList_t,string	niup: tipfgcolor(ih: FlatList_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatList_t,int,int,int,int	niup: tipfgcolor=(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatList_t,int,int,int,int	niup: tipfgcolor(ih: FlatList_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatList_t	niup: tipfgcolor(ih: FlatList_t): string	
tipicon=	niup.html#tipicon=,FlatList_t,string	niup: tipicon=(ih: FlatList_t; value: string)	
tipicon	niup.html#tipicon,FlatList_t,string	niup: tipicon(ih: FlatList_t; value: string)	
tipicon	niup.html#tipicon,FlatList_t	niup: tipicon(ih: FlatList_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatList_t,string	niup: tipmarkup=(ih: FlatList_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatList_t,string	niup: tipmarkup(ih: FlatList_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatList_t	niup: tipmarkup(ih: FlatList_t): string	
tiprect=	niup.html#tiprect=,FlatList_t,string	niup: tiprect=(ih: FlatList_t; value: string)	
tiprect	niup.html#tiprect,FlatList_t,string	niup: tiprect(ih: FlatList_t; value: string)	
tiprect=	niup.html#tiprect=,FlatList_t,int,int,int,int	niup: tiprect=(ih: FlatList_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatList_t,int,int,int,int	niup: tiprect(ih: FlatList_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatList_t	niup: tiprect(ih: FlatList_t): string	
tipvisible=	niup.html#tipvisible=,FlatList_t,string	niup: tipvisible=(ih: FlatList_t; value: string)	
tipvisible	niup.html#tipvisible,FlatList_t,string	niup: tipvisible(ih: FlatList_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatList_t,bool	niup: tipvisible=(ih: FlatList_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatList_t,bool	niup: tipvisible(ih: FlatList_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatList_t	niup: tipvisible(ih: FlatList_t): bool	
topitem=	niup.html#topitem=,FlatList_t,string	niup: topitem=(ih: FlatList_t; value: string)	
topitem	niup.html#topitem,FlatList_t,string	niup: topitem(ih: FlatList_t; value: string)	
topitem=	niup.html#topitem=,FlatList_t,int	niup: topitem=(ih: FlatList_t; x: int)	
topitem	niup.html#topitem,FlatList_t,int	niup: topitem(ih: FlatList_t; x: int)	
touch=	niup.html#touch=,FlatList_t,string	niup: touch=(ih: FlatList_t; value: string)	
touch	niup.html#touch,FlatList_t,string	niup: touch(ih: FlatList_t; value: string)	
touch=	niup.html#touch=,FlatList_t,bool	niup: touch=(ih: FlatList_t; yes: bool)	
touch	niup.html#touch,FlatList_t,bool	niup: touch(ih: FlatList_t; yes: bool)	
touch	niup.html#touch,FlatList_t	niup: touch(ih: FlatList_t): bool	
usersize=	niup.html#usersize=,FlatList_t,string	niup: usersize=(ih: FlatList_t; value: string)	
usersize	niup.html#usersize,FlatList_t,string	niup: usersize(ih: FlatList_t; value: string)	
usersize=	niup.html#usersize=,FlatList_t,int,int	niup: usersize=(ih: FlatList_t; width, height: int)	
usersize	niup.html#usersize,FlatList_t,int,int	niup: usersize(ih: FlatList_t; width, height: int)	
usersize	niup.html#usersize,FlatList_t	niup: usersize(ih: FlatList_t): string	
value=	niup.html#value=,FlatList_t,string	niup: value=(ih: FlatList_t; value: string)	
value	niup.html#value,FlatList_t,string	niup: value(ih: FlatList_t; value: string)	
value	niup.html#value,FlatList_t	niup: value(ih: FlatList_t): string	
valuestring=	niup.html#valuestring=,FlatList_t,string	niup: valuestring=(ih: FlatList_t; value: string)	
valuestring	niup.html#valuestring,FlatList_t,string	niup: valuestring(ih: FlatList_t; value: string)	
valuestring	niup.html#valuestring,FlatList_t	niup: valuestring(ih: FlatList_t): string	
visible=	niup.html#visible=,FlatList_t,string	niup: visible=(ih: FlatList_t; value: string)	
visible	niup.html#visible,FlatList_t,string	niup: visible(ih: FlatList_t; value: string)	
visible=	niup.html#visible=,FlatList_t,bool	niup: visible=(ih: FlatList_t; yes: bool)	
visible	niup.html#visible,FlatList_t,bool	niup: visible(ih: FlatList_t; yes: bool)	
visible	niup.html#visible,FlatList_t	niup: visible(ih: FlatList_t): bool	
visiblecolumns=	niup.html#visiblecolumns=,FlatList_t,string	niup: visiblecolumns=(ih: FlatList_t; value: string)	
visiblecolumns	niup.html#visiblecolumns,FlatList_t,string	niup: visiblecolumns(ih: FlatList_t; value: string)	
visiblecolumns=	niup.html#visiblecolumns=,FlatList_t,int	niup: visiblecolumns=(ih: FlatList_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,FlatList_t,int	niup: visiblecolumns(ih: FlatList_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,FlatList_t	niup: visiblecolumns(ih: FlatList_t): string	
visiblelines=	niup.html#visiblelines=,FlatList_t,string	niup: visiblelines=(ih: FlatList_t; value: string)	
visiblelines	niup.html#visiblelines,FlatList_t,string	niup: visiblelines(ih: FlatList_t; value: string)	
visiblelines=	niup.html#visiblelines=,FlatList_t,int	niup: visiblelines=(ih: FlatList_t; x: int)	
visiblelines	niup.html#visiblelines,FlatList_t,int	niup: visiblelines(ih: FlatList_t; x: int)	
visiblelines	niup.html#visiblelines,FlatList_t	niup: visiblelines(ih: FlatList_t): string	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatList_t,string	niup: wheeldropfocus=(ih: FlatList_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatList_t,string	niup: wheeldropfocus(ih: FlatList_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatList_t,bool	niup: wheeldropfocus=(ih: FlatList_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatList_t,bool	niup: wheeldropfocus(ih: FlatList_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatList_t	niup: wheeldropfocus(ih: FlatList_t): bool	
wid	niup.html#wid,FlatList_t	niup: wid(ih: FlatList_t): string	
x	niup.html#x,FlatList_t	niup: x(ih: FlatList_t): string	
xautohide	niup.html#xautohide,FlatList_t	niup: xautohide(ih: FlatList_t): bool	
xdisplay	niup.html#xdisplay,FlatList_t	niup: xdisplay(ih: FlatList_t): string	
xfontid	niup.html#xfontid,FlatList_t	niup: xfontid(ih: FlatList_t): string	
xhidden	niup.html#xhidden,FlatList_t	niup: xhidden(ih: FlatList_t): bool	
xmax=	niup.html#xmax=,FlatList_t,string	niup: xmax=(ih: FlatList_t; value: string)	
xmax	niup.html#xmax,FlatList_t,string	niup: xmax(ih: FlatList_t; value: string)	
xmax=	niup.html#xmax=,FlatList_t,int	niup: xmax=(ih: FlatList_t; x: int)	
xmax	niup.html#xmax,FlatList_t,int	niup: xmax(ih: FlatList_t; x: int)	
xmax	niup.html#xmax,FlatList_t	niup: xmax(ih: FlatList_t): string	
xmin=	niup.html#xmin=,FlatList_t,string	niup: xmin=(ih: FlatList_t; value: string)	
xmin	niup.html#xmin,FlatList_t,string	niup: xmin(ih: FlatList_t; value: string)	
xmin=	niup.html#xmin=,FlatList_t,int	niup: xmin=(ih: FlatList_t; x: int)	
xmin	niup.html#xmin,FlatList_t,int	niup: xmin(ih: FlatList_t; x: int)	
xmin	niup.html#xmin,FlatList_t	niup: xmin(ih: FlatList_t): string	
xwindow	niup.html#xwindow,FlatList_t	niup: xwindow(ih: FlatList_t): string	
y	niup.html#y,FlatList_t	niup: y(ih: FlatList_t): string	
yautohide	niup.html#yautohide,FlatList_t	niup: yautohide(ih: FlatList_t): bool	
yhidden	niup.html#yhidden,FlatList_t	niup: yhidden(ih: FlatList_t): bool	
ymax=	niup.html#ymax=,FlatList_t,string	niup: ymax=(ih: FlatList_t; value: string)	
ymax	niup.html#ymax,FlatList_t,string	niup: ymax(ih: FlatList_t; value: string)	
ymax=	niup.html#ymax=,FlatList_t,int	niup: ymax=(ih: FlatList_t; x: int)	
ymax	niup.html#ymax,FlatList_t,int	niup: ymax(ih: FlatList_t; x: int)	
ymax	niup.html#ymax,FlatList_t	niup: ymax(ih: FlatList_t): string	
ymin=	niup.html#ymin=,FlatList_t,string	niup: ymin=(ih: FlatList_t; value: string)	
ymin	niup.html#ymin,FlatList_t,string	niup: ymin(ih: FlatList_t; value: string)	
ymin=	niup.html#ymin=,FlatList_t,int	niup: ymin=(ih: FlatList_t; x: int)	
ymin	niup.html#ymin,FlatList_t,int	niup: ymin(ih: FlatList_t; x: int)	
ymin	niup.html#ymin,FlatList_t	niup: ymin(ih: FlatList_t): string	
zorder=	niup.html#zorder=,FlatList_t,string	niup: zorder=(ih: FlatList_t; value: string)	
zorder	niup.html#zorder,FlatList_t,string	niup: zorder(ih: FlatList_t; value: string)	
action=	niup.html#action=,FlatList_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatList_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatList_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatList_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatList_t	niup: action(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatList_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatList_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                    arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatList_t	niup: button_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dblclick_cb=	niup.html#dblclick_cb=,FlatList_t,proc(PIhandle,cint,cstring)	niup: dblclick_cb=(ih: FlatList_t;\n             cb: proc (ih: PIhandle; item: cint; text: cstring): cint {.cdecl.})	
dblclick_cb	niup.html#dblclick_cb,FlatList_t,proc(PIhandle,cint,cstring)	niup: dblclick_cb(ih: FlatList_t;\n            cb: proc (ih: PIhandle; item: cint; text: cstring): cint {.cdecl.})	
dblclick_cb	niup.html#dblclick_cb,FlatList_t	niup: dblclick_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatList_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatList_t,proc(PIhandle)	niup: destroy_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatList_t	niup: destroy_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatList_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatList_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatList_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatList_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatList_t	niup: dragbegin_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatList_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatList_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatList_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatList_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatList_t	niup: dragdatasize_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatList_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatList_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatList_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatList_t	niup: dragdata_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdrop_cb=	niup.html#dragdrop_cb=,FlatList_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; drag_id, drop_id, isshift,\n    iscontrol: cint): cint {.cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,FlatList_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb(ih: FlatList_t; cb: proc (ih: PIhandle; drag_id, drop_id, isshift,\n    iscontrol: cint): cint {.cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,FlatList_t	niup: dragdrop_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatList_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatList_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatList_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatList_t	niup: dragend_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatList_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatList_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatList_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatList_t	niup: dropdata_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatList_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatList_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatList_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatList_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatList_t	niup: dropfiles_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatList_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatList_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatList_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatList_t	niup: dropmotion_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatList_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatList_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatList_t	niup: enterwindow_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_action=	niup.html#flat_action=,FlatList_t,proc(PIhandle,cstring,cint,cint)	niup: flat_action=(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cint): cint {.cdecl.})	
flat_action	niup.html#flat_action,FlatList_t,proc(PIhandle,cstring,cint,cint)	niup: flat_action(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cint): cint {.cdecl.})	
flat_action	niup.html#flat_action,FlatList_t	niup: flat_action(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,FlatList_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatList_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatList_t	niup: flat_button_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_focus_cb=	niup.html#flat_focus_cb=,FlatList_t,proc(PIhandle,cint)	niup: flat_focus_cb=(ih: FlatList_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatList_t,proc(PIhandle,cint)	niup: flat_focus_cb(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatList_t	niup: flat_focus_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,FlatList_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatList_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatList_t	niup: flat_leavewindow_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,FlatList_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatList_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatList_t	niup: flat_motion_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatList_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatList_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatList_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatList_t	niup: focus_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatList_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatList_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatList_t	niup: getfocus_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatList_t,proc(PIhandle)	niup: help_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatList_t,proc(PIhandle)	niup: help_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatList_t	niup: help_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatList_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatList_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatList_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatList_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatList_t	niup: keypress_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatList_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatList_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatList_t	niup: killfocus_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatList_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatList_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatList_t,proc(PIhandle,cint)	niup: k_any(ih: FlatList_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatList_t	niup: k_any(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatList_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatList_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatList_t	niup: ldestroy_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatList_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatList_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatList_t	niup: leavewindow_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatList_t,proc(PIhandle)	niup: map_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatList_t,proc(PIhandle)	niup: map_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatList_t	niup: map_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatList_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatList_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatList_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatList_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatList_t	niup: motion_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
multiselect_cb=	niup.html#multiselect_cb=,FlatList_t,proc(PIhandle,cstring)	niup: multiselect_cb=(ih: FlatList_t;\n                cb: proc (ih: PIhandle; value: cstring): cint {.cdecl.})	
multiselect_cb	niup.html#multiselect_cb,FlatList_t,proc(PIhandle,cstring)	niup: multiselect_cb(ih: FlatList_t;\n               cb: proc (ih: PIhandle; value: cstring): cint {.cdecl.})	
multiselect_cb	niup.html#multiselect_cb,FlatList_t	niup: multiselect_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatList_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatList_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatList_t	niup: postmessage_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatList_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatList_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatList_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatList_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatList_t	niup: resize_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatList_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatList_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatList_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatList_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatList_t	niup: scroll_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatList_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatList_t,proc(PIhandle)	niup: unmap_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatList_t	niup: unmap_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,FlatList_t,proc(PIhandle)	niup: valuechanged_cb=(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatList_t,proc(PIhandle)	niup: valuechanged_cb(ih: FlatList_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatList_t	niup: valuechanged_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatList_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatList_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatList_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                   status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatList_t	niup: wheel_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatList_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatList_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatList_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatList_t	niup: wom_cb(ih: FlatList_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatScrollBox	niup.html#FlatScrollBox,IUPhandle_t	niup: FlatScrollBox(child: IUPhandle_t): FlatScrollBox_t	
active=	niup.html#active=,FlatScrollBox_t,string	niup: active=(ih: FlatScrollBox_t; value: string)	
active	niup.html#active,FlatScrollBox_t,string	niup: active(ih: FlatScrollBox_t; value: string)	
active=	niup.html#active=,FlatScrollBox_t,bool	niup: active=(ih: FlatScrollBox_t; yes: bool)	
active	niup.html#active,FlatScrollBox_t,bool	niup: active(ih: FlatScrollBox_t; yes: bool)	
active	niup.html#active,FlatScrollBox_t	niup: active(ih: FlatScrollBox_t): bool	
arrowimages=	niup.html#arrowimages=,FlatScrollBox_t,string	niup: arrowimages=(ih: FlatScrollBox_t; value: string)	
arrowimages	niup.html#arrowimages,FlatScrollBox_t,string	niup: arrowimages(ih: FlatScrollBox_t; value: string)	
arrowimages=	niup.html#arrowimages=,FlatScrollBox_t,int	niup: arrowimages=(ih: FlatScrollBox_t; x: int)	
arrowimages	niup.html#arrowimages,FlatScrollBox_t,int	niup: arrowimages(ih: FlatScrollBox_t; x: int)	
arrowimages	niup.html#arrowimages,FlatScrollBox_t	niup: arrowimages(ih: FlatScrollBox_t): string	
backingstore=	niup.html#backingstore=,FlatScrollBox_t,string	niup: backingstore=(ih: FlatScrollBox_t; value: string)	
backingstore	niup.html#backingstore,FlatScrollBox_t,string	niup: backingstore(ih: FlatScrollBox_t; value: string)	
backingstore=	niup.html#backingstore=,FlatScrollBox_t,bool	niup: backingstore=(ih: FlatScrollBox_t; yes: bool)	
backingstore	niup.html#backingstore,FlatScrollBox_t,bool	niup: backingstore(ih: FlatScrollBox_t; yes: bool)	
backingstore	niup.html#backingstore,FlatScrollBox_t	niup: backingstore(ih: FlatScrollBox_t): bool	
bgcolor=	niup.html#bgcolor=,FlatScrollBox_t,string	niup: bgcolor=(ih: FlatScrollBox_t; value: string)	
bgcolor	niup.html#bgcolor,FlatScrollBox_t,string	niup: bgcolor(ih: FlatScrollBox_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatScrollBox_t,int,int,int,int	niup: bgcolor=(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatScrollBox_t,int,int,int,int	niup: bgcolor(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatScrollBox_t	niup: bgcolor(ih: FlatScrollBox_t): string	
border	niup.html#border,FlatScrollBox_t	niup: border(ih: FlatScrollBox_t): bool	
canfocus=	niup.html#canfocus=,FlatScrollBox_t,string	niup: canfocus=(ih: FlatScrollBox_t; value: string)	
canfocus	niup.html#canfocus,FlatScrollBox_t,string	niup: canfocus(ih: FlatScrollBox_t; value: string)	
canfocus=	niup.html#canfocus=,FlatScrollBox_t,bool	niup: canfocus=(ih: FlatScrollBox_t; yes: bool)	
canfocus	niup.html#canfocus,FlatScrollBox_t,bool	niup: canfocus(ih: FlatScrollBox_t; yes: bool)	
canfocus	niup.html#canfocus,FlatScrollBox_t	niup: canfocus(ih: FlatScrollBox_t): bool	
canvasbox=	niup.html#canvasbox=,FlatScrollBox_t,string	niup: canvasbox=(ih: FlatScrollBox_t; value: string)	
canvasbox	niup.html#canvasbox,FlatScrollBox_t,string	niup: canvasbox(ih: FlatScrollBox_t; value: string)	
canvasbox=	niup.html#canvasbox=,FlatScrollBox_t,bool	niup: canvasbox=(ih: FlatScrollBox_t; yes: bool)	
canvasbox	niup.html#canvasbox,FlatScrollBox_t,bool	niup: canvasbox(ih: FlatScrollBox_t; yes: bool)	
canvasbox	niup.html#canvasbox,FlatScrollBox_t	niup: canvasbox(ih: FlatScrollBox_t): bool	
charsize	niup.html#charsize,FlatScrollBox_t	niup: charsize(ih: FlatScrollBox_t): string	
childoffset=	niup.html#childoffset=,FlatScrollBox_t,string	niup: childoffset=(ih: FlatScrollBox_t; value: string)	
childoffset	niup.html#childoffset,FlatScrollBox_t,string	niup: childoffset(ih: FlatScrollBox_t; value: string)	
childoffset=	niup.html#childoffset=,FlatScrollBox_t,int,int	niup: childoffset=(ih: FlatScrollBox_t; width, height: int)	
childoffset	niup.html#childoffset,FlatScrollBox_t,int,int	niup: childoffset(ih: FlatScrollBox_t; width, height: int)	
childoffset	niup.html#childoffset,FlatScrollBox_t	niup: childoffset(ih: FlatScrollBox_t): string	
clientoffset	niup.html#clientoffset,FlatScrollBox_t	niup: clientoffset(ih: FlatScrollBox_t): string	
clientsize	niup.html#clientsize,FlatScrollBox_t	niup: clientsize(ih: FlatScrollBox_t): string	
cursor=	niup.html#cursor=,FlatScrollBox_t,	niup: cursor=(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatScrollBox_t,	niup: cursor(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatScrollBox_t	niup: cursor(ih: FlatScrollBox_t): string	
dragdrop=	niup.html#dragdrop=,FlatScrollBox_t,string	niup: dragdrop=(ih: FlatScrollBox_t; value: string)	
dragdrop	niup.html#dragdrop,FlatScrollBox_t,string	niup: dragdrop(ih: FlatScrollBox_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatScrollBox_t,bool	niup: dragdrop=(ih: FlatScrollBox_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatScrollBox_t,bool	niup: dragdrop(ih: FlatScrollBox_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatScrollBox_t	niup: dragdrop(ih: FlatScrollBox_t): bool	
dragsource=	niup.html#dragsource=,FlatScrollBox_t,string	niup: dragsource=(ih: FlatScrollBox_t; value: string)	
dragsource	niup.html#dragsource,FlatScrollBox_t,string	niup: dragsource(ih: FlatScrollBox_t; value: string)	
dragsource=	niup.html#dragsource=,FlatScrollBox_t,bool	niup: dragsource=(ih: FlatScrollBox_t; yes: bool)	
dragsource	niup.html#dragsource,FlatScrollBox_t,bool	niup: dragsource(ih: FlatScrollBox_t; yes: bool)	
dragsource	niup.html#dragsource,FlatScrollBox_t	niup: dragsource(ih: FlatScrollBox_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatScrollBox_t,string	niup: dragsourcemove=(ih: FlatScrollBox_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatScrollBox_t,string	niup: dragsourcemove(ih: FlatScrollBox_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatScrollBox_t,bool	niup: dragsourcemove=(ih: FlatScrollBox_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatScrollBox_t,bool	niup: dragsourcemove(ih: FlatScrollBox_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatScrollBox_t	niup: dragsourcemove(ih: FlatScrollBox_t): bool	
dragtypes=	niup.html#dragtypes=,FlatScrollBox_t,string	niup: dragtypes=(ih: FlatScrollBox_t; value: string)	
dragtypes	niup.html#dragtypes,FlatScrollBox_t,string	niup: dragtypes(ih: FlatScrollBox_t; value: string)	
dragtypes	niup.html#dragtypes,FlatScrollBox_t	niup: dragtypes(ih: FlatScrollBox_t): string	
drawable	niup.html#drawable,FlatScrollBox_t	niup: drawable(ih: FlatScrollBox_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatScrollBox_t,string	niup: drawbgcolor=(ih: FlatScrollBox_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatScrollBox_t,string	niup: drawbgcolor(ih: FlatScrollBox_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatScrollBox_t,int,int,int,int	niup: drawbgcolor=(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatScrollBox_t,int,int,int,int	niup: drawbgcolor(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatScrollBox_t	niup: drawbgcolor(ih: FlatScrollBox_t): string	
drawcolor=	niup.html#drawcolor=,FlatScrollBox_t,string	niup: drawcolor=(ih: FlatScrollBox_t; value: string)	
drawcolor	niup.html#drawcolor,FlatScrollBox_t,string	niup: drawcolor(ih: FlatScrollBox_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatScrollBox_t,int,int,int,int	niup: drawcolor=(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatScrollBox_t,int,int,int,int	niup: drawcolor(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatScrollBox_t	niup: drawcolor(ih: FlatScrollBox_t): string	
drawdriver	niup.html#drawdriver,FlatScrollBox_t	niup: drawdriver(ih: FlatScrollBox_t): string	
drawfont=	niup.html#drawfont=,FlatScrollBox_t,string	niup: drawfont=(ih: FlatScrollBox_t; value: string)	
drawfont	niup.html#drawfont,FlatScrollBox_t,string	niup: drawfont(ih: FlatScrollBox_t; value: string)	
drawfont	niup.html#drawfont,FlatScrollBox_t	niup: drawfont(ih: FlatScrollBox_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatScrollBox_t,string	niup: drawlinewidth=(ih: FlatScrollBox_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatScrollBox_t,string	niup: drawlinewidth(ih: FlatScrollBox_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatScrollBox_t,int	niup: drawlinewidth=(ih: FlatScrollBox_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatScrollBox_t,int	niup: drawlinewidth(ih: FlatScrollBox_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatScrollBox_t	niup: drawlinewidth(ih: FlatScrollBox_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatScrollBox_t,string	niup: drawmakeinactive=(ih: FlatScrollBox_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatScrollBox_t,string	niup: drawmakeinactive(ih: FlatScrollBox_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatScrollBox_t,bool	niup: drawmakeinactive=(ih: FlatScrollBox_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatScrollBox_t,bool	niup: drawmakeinactive(ih: FlatScrollBox_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatScrollBox_t	niup: drawmakeinactive(ih: FlatScrollBox_t): bool	
drawsize	niup.html#drawsize,FlatScrollBox_t	niup: drawsize(ih: FlatScrollBox_t): string	
drawstyle=	niup.html#drawstyle=,FlatScrollBox_t,string	niup: drawstyle=(ih: FlatScrollBox_t; value: string)	
drawstyle	niup.html#drawstyle,FlatScrollBox_t,string	niup: drawstyle(ih: FlatScrollBox_t; value: string)	
drawstyle	niup.html#drawstyle,FlatScrollBox_t	niup: drawstyle(ih: FlatScrollBox_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatScrollBox_t,string	niup: drawtextalignment=(ih: FlatScrollBox_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatScrollBox_t,string	niup: drawtextalignment(ih: FlatScrollBox_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatScrollBox_t	niup: drawtextalignment(ih: FlatScrollBox_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatScrollBox_t,string	niup: drawtextclip=(ih: FlatScrollBox_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatScrollBox_t,string	niup: drawtextclip(ih: FlatScrollBox_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatScrollBox_t,bool	niup: drawtextclip=(ih: FlatScrollBox_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatScrollBox_t,bool	niup: drawtextclip(ih: FlatScrollBox_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatScrollBox_t	niup: drawtextclip(ih: FlatScrollBox_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatScrollBox_t,string	niup: drawtextellipsis=(ih: FlatScrollBox_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatScrollBox_t,string	niup: drawtextellipsis(ih: FlatScrollBox_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatScrollBox_t,bool	niup: drawtextellipsis=(ih: FlatScrollBox_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatScrollBox_t,bool	niup: drawtextellipsis(ih: FlatScrollBox_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatScrollBox_t	niup: drawtextellipsis(ih: FlatScrollBox_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatScrollBox_t,string	niup: drawtextlayoutcenter=(ih: FlatScrollBox_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatScrollBox_t,string	niup: drawtextlayoutcenter(ih: FlatScrollBox_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatScrollBox_t,bool	niup: drawtextlayoutcenter=(ih: FlatScrollBox_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatScrollBox_t,bool	niup: drawtextlayoutcenter(ih: FlatScrollBox_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatScrollBox_t	niup: drawtextlayoutcenter(ih: FlatScrollBox_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatScrollBox_t,string	niup: drawtextorientation=(ih: FlatScrollBox_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatScrollBox_t,string	niup: drawtextorientation(ih: FlatScrollBox_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatScrollBox_t,int64	niup: drawtextorientation=(ih: FlatScrollBox_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatScrollBox_t,int64	niup: drawtextorientation(ih: FlatScrollBox_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatScrollBox_t	niup: drawtextorientation(ih: FlatScrollBox_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatScrollBox_t,string	niup: drawtextwrap=(ih: FlatScrollBox_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatScrollBox_t,string	niup: drawtextwrap(ih: FlatScrollBox_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatScrollBox_t,bool	niup: drawtextwrap=(ih: FlatScrollBox_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatScrollBox_t,bool	niup: drawtextwrap(ih: FlatScrollBox_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatScrollBox_t	niup: drawtextwrap(ih: FlatScrollBox_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatScrollBox_t,string	niup: dropfilestarget=(ih: FlatScrollBox_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatScrollBox_t,string	niup: dropfilestarget(ih: FlatScrollBox_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatScrollBox_t,bool	niup: dropfilestarget=(ih: FlatScrollBox_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatScrollBox_t,bool	niup: dropfilestarget(ih: FlatScrollBox_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatScrollBox_t	niup: dropfilestarget(ih: FlatScrollBox_t): bool	
droptarget=	niup.html#droptarget=,FlatScrollBox_t,string	niup: droptarget=(ih: FlatScrollBox_t; value: string)	
droptarget	niup.html#droptarget,FlatScrollBox_t,string	niup: droptarget(ih: FlatScrollBox_t; value: string)	
droptarget=	niup.html#droptarget=,FlatScrollBox_t,bool	niup: droptarget=(ih: FlatScrollBox_t; yes: bool)	
droptarget	niup.html#droptarget,FlatScrollBox_t,bool	niup: droptarget(ih: FlatScrollBox_t; yes: bool)	
droptarget	niup.html#droptarget,FlatScrollBox_t	niup: droptarget(ih: FlatScrollBox_t): bool	
droptypes=	niup.html#droptypes=,FlatScrollBox_t,string	niup: droptypes=(ih: FlatScrollBox_t; value: string)	
droptypes	niup.html#droptypes,FlatScrollBox_t,string	niup: droptypes(ih: FlatScrollBox_t; value: string)	
droptypes	niup.html#droptypes,FlatScrollBox_t	niup: droptypes(ih: FlatScrollBox_t): string	
dx=	niup.html#dx=,FlatScrollBox_t,string	niup: dx=(ih: FlatScrollBox_t; value: string)	
dx	niup.html#dx,FlatScrollBox_t,string	niup: dx(ih: FlatScrollBox_t; value: string)	
dx=	niup.html#dx=,FlatScrollBox_t,int64	niup: dx=(ih: FlatScrollBox_t; x: int64)	
dx	niup.html#dx,FlatScrollBox_t,int64	niup: dx(ih: FlatScrollBox_t; x: int64)	
dx	niup.html#dx,FlatScrollBox_t	niup: dx(ih: FlatScrollBox_t): string	
dy=	niup.html#dy=,FlatScrollBox_t,string	niup: dy=(ih: FlatScrollBox_t; value: string)	
dy	niup.html#dy,FlatScrollBox_t,string	niup: dy(ih: FlatScrollBox_t; value: string)	
dy=	niup.html#dy=,FlatScrollBox_t,int64	niup: dy=(ih: FlatScrollBox_t; x: int64)	
dy	niup.html#dy,FlatScrollBox_t,int64	niup: dy(ih: FlatScrollBox_t; x: int64)	
dy	niup.html#dy,FlatScrollBox_t	niup: dy(ih: FlatScrollBox_t): string	
expand=	niup.html#expand=,FlatScrollBox_t,string	niup: expand=(ih: FlatScrollBox_t; value: string)	
expand	niup.html#expand,FlatScrollBox_t,string	niup: expand(ih: FlatScrollBox_t; value: string)	
expand	niup.html#expand,FlatScrollBox_t	niup: expand(ih: FlatScrollBox_t): string	
expandweight=	niup.html#expandweight=,FlatScrollBox_t,string	niup: expandweight=(ih: FlatScrollBox_t; value: string)	
expandweight	niup.html#expandweight,FlatScrollBox_t,string	niup: expandweight(ih: FlatScrollBox_t; value: string)	
expandweight=	niup.html#expandweight=,FlatScrollBox_t,int64	niup: expandweight=(ih: FlatScrollBox_t; x: int64)	
expandweight	niup.html#expandweight,FlatScrollBox_t,int64	niup: expandweight(ih: FlatScrollBox_t; x: int64)	
expandweight	niup.html#expandweight,FlatScrollBox_t	niup: expandweight(ih: FlatScrollBox_t): string	
flatscrollbar	niup.html#flatscrollbar,FlatScrollBox_t	niup: flatscrollbar(ih: FlatScrollBox_t): string	
floating=	niup.html#floating=,FlatScrollBox_t,string	niup: floating=(ih: FlatScrollBox_t; value: string)	
floating	niup.html#floating,FlatScrollBox_t,string	niup: floating(ih: FlatScrollBox_t; value: string)	
floating	niup.html#floating,FlatScrollBox_t	niup: floating(ih: FlatScrollBox_t): string	
floatingdelay	niup.html#floatingdelay,FlatScrollBox_t	niup: floatingdelay(ih: FlatScrollBox_t): string	
font=	niup.html#font=,FlatScrollBox_t,string	niup: font=(ih: FlatScrollBox_t; value: string)	
font	niup.html#font,FlatScrollBox_t,string	niup: font(ih: FlatScrollBox_t; value: string)	
font	niup.html#font,FlatScrollBox_t	niup: font(ih: FlatScrollBox_t): string	
fontface=	niup.html#fontface=,FlatScrollBox_t,string	niup: fontface=(ih: FlatScrollBox_t; value: string)	
fontface	niup.html#fontface,FlatScrollBox_t,string	niup: fontface(ih: FlatScrollBox_t; value: string)	
fontface	niup.html#fontface,FlatScrollBox_t	niup: fontface(ih: FlatScrollBox_t): string	
fontsize=	niup.html#fontsize=,FlatScrollBox_t,string	niup: fontsize=(ih: FlatScrollBox_t; value: string)	
fontsize	niup.html#fontsize,FlatScrollBox_t,string	niup: fontsize(ih: FlatScrollBox_t; value: string)	
fontsize=	niup.html#fontsize=,FlatScrollBox_t,int	niup: fontsize=(ih: FlatScrollBox_t; x: int)	
fontsize	niup.html#fontsize,FlatScrollBox_t,int	niup: fontsize(ih: FlatScrollBox_t; x: int)	
fontsize	niup.html#fontsize,FlatScrollBox_t	niup: fontsize(ih: FlatScrollBox_t): string	
fontstyle=	niup.html#fontstyle=,FlatScrollBox_t,string	niup: fontstyle=(ih: FlatScrollBox_t; value: string)	
fontstyle	niup.html#fontstyle,FlatScrollBox_t,string	niup: fontstyle(ih: FlatScrollBox_t; value: string)	
fontstyle	niup.html#fontstyle,FlatScrollBox_t	niup: fontstyle(ih: FlatScrollBox_t): string	
handlename=	niup.html#handlename=,FlatScrollBox_t,string	niup: handlename=(ih: FlatScrollBox_t; value: string)	
handlename	niup.html#handlename,FlatScrollBox_t,string	niup: handlename(ih: FlatScrollBox_t; value: string)	
handlename	niup.html#handlename,FlatScrollBox_t	niup: handlename(ih: FlatScrollBox_t): string	
layoutdrag=	niup.html#layoutdrag=,FlatScrollBox_t,string	niup: layoutdrag=(ih: FlatScrollBox_t; value: string)	
layoutdrag	niup.html#layoutdrag,FlatScrollBox_t,string	niup: layoutdrag(ih: FlatScrollBox_t; value: string)	
layoutdrag=	niup.html#layoutdrag=,FlatScrollBox_t,bool	niup: layoutdrag=(ih: FlatScrollBox_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,FlatScrollBox_t,bool	niup: layoutdrag(ih: FlatScrollBox_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,FlatScrollBox_t	niup: layoutdrag(ih: FlatScrollBox_t): bool	
linex=	niup.html#linex=,FlatScrollBox_t,string	niup: linex=(ih: FlatScrollBox_t; value: string)	
linex	niup.html#linex,FlatScrollBox_t,string	niup: linex(ih: FlatScrollBox_t; value: string)	
linex=	niup.html#linex=,FlatScrollBox_t,int64	niup: linex=(ih: FlatScrollBox_t; x: int64)	
linex	niup.html#linex,FlatScrollBox_t,int64	niup: linex(ih: FlatScrollBox_t; x: int64)	
linex	niup.html#linex,FlatScrollBox_t	niup: linex(ih: FlatScrollBox_t): string	
liney=	niup.html#liney=,FlatScrollBox_t,string	niup: liney=(ih: FlatScrollBox_t; value: string)	
liney	niup.html#liney,FlatScrollBox_t,string	niup: liney(ih: FlatScrollBox_t; value: string)	
liney=	niup.html#liney=,FlatScrollBox_t,int64	niup: liney=(ih: FlatScrollBox_t; x: int64)	
liney	niup.html#liney,FlatScrollBox_t,int64	niup: liney(ih: FlatScrollBox_t; x: int64)	
liney	niup.html#liney,FlatScrollBox_t	niup: liney(ih: FlatScrollBox_t): string	
maxsize=	niup.html#maxsize=,FlatScrollBox_t,string	niup: maxsize=(ih: FlatScrollBox_t; value: string)	
maxsize	niup.html#maxsize,FlatScrollBox_t,string	niup: maxsize(ih: FlatScrollBox_t; value: string)	
maxsize=	niup.html#maxsize=,FlatScrollBox_t,int,int	niup: maxsize=(ih: FlatScrollBox_t; width, height: int)	
maxsize	niup.html#maxsize,FlatScrollBox_t,int,int	niup: maxsize(ih: FlatScrollBox_t; width, height: int)	
maxsize	niup.html#maxsize,FlatScrollBox_t	niup: maxsize(ih: FlatScrollBox_t): string	
minsize=	niup.html#minsize=,FlatScrollBox_t,string	niup: minsize=(ih: FlatScrollBox_t; value: string)	
minsize	niup.html#minsize,FlatScrollBox_t,string	niup: minsize(ih: FlatScrollBox_t; value: string)	
minsize=	niup.html#minsize=,FlatScrollBox_t,int,int	niup: minsize=(ih: FlatScrollBox_t; width, height: int)	
minsize	niup.html#minsize,FlatScrollBox_t,int,int	niup: minsize(ih: FlatScrollBox_t; width, height: int)	
minsize	niup.html#minsize,FlatScrollBox_t	niup: minsize(ih: FlatScrollBox_t): string	
name=	niup.html#name=,FlatScrollBox_t,string	niup: name=(ih: FlatScrollBox_t; value: string)	
name	niup.html#name,FlatScrollBox_t,string	niup: name(ih: FlatScrollBox_t; value: string)	
name	niup.html#name,FlatScrollBox_t	niup: name(ih: FlatScrollBox_t): string	
naturalsize	niup.html#naturalsize,FlatScrollBox_t	niup: naturalsize(ih: FlatScrollBox_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatScrollBox_t,string	niup: normalizergroup=(ih: FlatScrollBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatScrollBox_t,string	niup: normalizergroup(ih: FlatScrollBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatScrollBox_t	niup: normalizergroup(ih: FlatScrollBox_t): string	
ntheme=	niup.html#ntheme=,FlatScrollBox_t,string	niup: ntheme=(ih: FlatScrollBox_t; value: string)	
ntheme	niup.html#ntheme,FlatScrollBox_t,string	niup: ntheme(ih: FlatScrollBox_t; value: string)	
ntheme	niup.html#ntheme,FlatScrollBox_t	niup: ntheme(ih: FlatScrollBox_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatScrollBox_t	niup: pangofontdesc(ih: FlatScrollBox_t): string	
pangolayout	niup.html#pangolayout,FlatScrollBox_t	niup: pangolayout(ih: FlatScrollBox_t): string	
position=	niup.html#position=,FlatScrollBox_t,string	niup: position=(ih: FlatScrollBox_t; value: string)	
position	niup.html#position,FlatScrollBox_t,string	niup: position(ih: FlatScrollBox_t; value: string)	
position=	niup.html#position=,FlatScrollBox_t,int,int	niup: position=(ih: FlatScrollBox_t; x, y: int)	
position	niup.html#position,FlatScrollBox_t,int,int	niup: position(ih: FlatScrollBox_t; x, y: int)	
position	niup.html#position,FlatScrollBox_t	niup: position(ih: FlatScrollBox_t): string	
posx=	niup.html#posx=,FlatScrollBox_t,string	niup: posx=(ih: FlatScrollBox_t; value: string)	
posx	niup.html#posx,FlatScrollBox_t,string	niup: posx(ih: FlatScrollBox_t; value: string)	
posx=	niup.html#posx=,FlatScrollBox_t,int64	niup: posx=(ih: FlatScrollBox_t; x: int64)	
posx	niup.html#posx,FlatScrollBox_t,int64	niup: posx(ih: FlatScrollBox_t; x: int64)	
posx	niup.html#posx,FlatScrollBox_t	niup: posx(ih: FlatScrollBox_t): string	
posy=	niup.html#posy=,FlatScrollBox_t,string	niup: posy=(ih: FlatScrollBox_t; value: string)	
posy	niup.html#posy,FlatScrollBox_t,string	niup: posy(ih: FlatScrollBox_t; value: string)	
posy=	niup.html#posy=,FlatScrollBox_t,int64	niup: posy=(ih: FlatScrollBox_t; x: int64)	
posy	niup.html#posy,FlatScrollBox_t,int64	niup: posy(ih: FlatScrollBox_t; x: int64)	
posy	niup.html#posy,FlatScrollBox_t	niup: posy(ih: FlatScrollBox_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatScrollBox_t,string	niup: propagatefocus=(ih: FlatScrollBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatScrollBox_t,string	niup: propagatefocus(ih: FlatScrollBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatScrollBox_t,bool	niup: propagatefocus=(ih: FlatScrollBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatScrollBox_t,bool	niup: propagatefocus(ih: FlatScrollBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatScrollBox_t	niup: propagatefocus(ih: FlatScrollBox_t): bool	
rastersize=	niup.html#rastersize=,FlatScrollBox_t,string	niup: rastersize=(ih: FlatScrollBox_t; value: string)	
rastersize	niup.html#rastersize,FlatScrollBox_t,string	niup: rastersize(ih: FlatScrollBox_t; value: string)	
rastersize=	niup.html#rastersize=,FlatScrollBox_t,int,int	niup: rastersize=(ih: FlatScrollBox_t; width, height: int)	
rastersize	niup.html#rastersize,FlatScrollBox_t,int,int	niup: rastersize(ih: FlatScrollBox_t; width, height: int)	
rastersize	niup.html#rastersize,FlatScrollBox_t	niup: rastersize(ih: FlatScrollBox_t): string	
sb_backcolor	niup.html#sb_backcolor,FlatScrollBox_t	niup: sb_backcolor(ih: FlatScrollBox_t): string	
sb_forecolor	niup.html#sb_forecolor,FlatScrollBox_t	niup: sb_forecolor(ih: FlatScrollBox_t): string	
sb_highcolor	niup.html#sb_highcolor,FlatScrollBox_t	niup: sb_highcolor(ih: FlatScrollBox_t): string	
sb_imagebottom=	niup.html#sb_imagebottom=,FlatScrollBox_t,	niup: sb_imagebottom=(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottom	niup.html#sb_imagebottom,FlatScrollBox_t,	niup: sb_imagebottom(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottom	niup.html#sb_imagebottom,FlatScrollBox_t	niup: sb_imagebottom(ih: FlatScrollBox_t): string	
sb_imagebottomhighlight=	niup.html#sb_imagebottomhighlight=,FlatScrollBox_t,	niup: sb_imagebottomhighlight=(ih: FlatScrollBox_t;\n                         handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottomhighlight	niup.html#sb_imagebottomhighlight,FlatScrollBox_t,	niup: sb_imagebottomhighlight(ih: FlatScrollBox_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottomhighlight	niup.html#sb_imagebottomhighlight,FlatScrollBox_t	niup: sb_imagebottomhighlight(ih: FlatScrollBox_t): string	
sb_imagebottominactive=	niup.html#sb_imagebottominactive=,FlatScrollBox_t,	niup: sb_imagebottominactive=(ih: FlatScrollBox_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottominactive	niup.html#sb_imagebottominactive,FlatScrollBox_t,	niup: sb_imagebottominactive(ih: FlatScrollBox_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottominactive	niup.html#sb_imagebottominactive,FlatScrollBox_t	niup: sb_imagebottominactive(ih: FlatScrollBox_t): string	
sb_imagebottompress=	niup.html#sb_imagebottompress=,FlatScrollBox_t,	niup: sb_imagebottompress=(ih: FlatScrollBox_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottompress	niup.html#sb_imagebottompress,FlatScrollBox_t,	niup: sb_imagebottompress(ih: FlatScrollBox_t;\n                    handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottompress	niup.html#sb_imagebottompress,FlatScrollBox_t	niup: sb_imagebottompress(ih: FlatScrollBox_t): string	
sb_imageleft=	niup.html#sb_imageleft=,FlatScrollBox_t,	niup: sb_imageleft=(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleft	niup.html#sb_imageleft,FlatScrollBox_t,	niup: sb_imageleft(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleft	niup.html#sb_imageleft,FlatScrollBox_t	niup: sb_imageleft(ih: FlatScrollBox_t): string	
sb_imagelefthighlight=	niup.html#sb_imagelefthighlight=,FlatScrollBox_t,	niup: sb_imagelefthighlight=(ih: FlatScrollBox_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagelefthighlight	niup.html#sb_imagelefthighlight,FlatScrollBox_t,	niup: sb_imagelefthighlight(ih: FlatScrollBox_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagelefthighlight	niup.html#sb_imagelefthighlight,FlatScrollBox_t	niup: sb_imagelefthighlight(ih: FlatScrollBox_t): string	
sb_imageleftinactive=	niup.html#sb_imageleftinactive=,FlatScrollBox_t,	niup: sb_imageleftinactive=(ih: FlatScrollBox_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftinactive	niup.html#sb_imageleftinactive,FlatScrollBox_t,	niup: sb_imageleftinactive(ih: FlatScrollBox_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftinactive	niup.html#sb_imageleftinactive,FlatScrollBox_t	niup: sb_imageleftinactive(ih: FlatScrollBox_t): string	
sb_imageleftpress=	niup.html#sb_imageleftpress=,FlatScrollBox_t,	niup: sb_imageleftpress=(ih: FlatScrollBox_t;\n                   handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftpress	niup.html#sb_imageleftpress,FlatScrollBox_t,	niup: sb_imageleftpress(ih: FlatScrollBox_t;\n                  handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftpress	niup.html#sb_imageleftpress,FlatScrollBox_t	niup: sb_imageleftpress(ih: FlatScrollBox_t): string	
sb_imageright=	niup.html#sb_imageright=,FlatScrollBox_t,	niup: sb_imageright=(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageright	niup.html#sb_imageright,FlatScrollBox_t,	niup: sb_imageright(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageright	niup.html#sb_imageright,FlatScrollBox_t	niup: sb_imageright(ih: FlatScrollBox_t): string	
sb_imagerighthighlight=	niup.html#sb_imagerighthighlight=,FlatScrollBox_t,	niup: sb_imagerighthighlight=(ih: FlatScrollBox_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerighthighlight	niup.html#sb_imagerighthighlight,FlatScrollBox_t,	niup: sb_imagerighthighlight(ih: FlatScrollBox_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerighthighlight	niup.html#sb_imagerighthighlight,FlatScrollBox_t	niup: sb_imagerighthighlight(ih: FlatScrollBox_t): string	
sb_imagerightinactive=	niup.html#sb_imagerightinactive=,FlatScrollBox_t,	niup: sb_imagerightinactive=(ih: FlatScrollBox_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightinactive	niup.html#sb_imagerightinactive,FlatScrollBox_t,	niup: sb_imagerightinactive(ih: FlatScrollBox_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightinactive	niup.html#sb_imagerightinactive,FlatScrollBox_t	niup: sb_imagerightinactive(ih: FlatScrollBox_t): string	
sb_imagerightpress=	niup.html#sb_imagerightpress=,FlatScrollBox_t,	niup: sb_imagerightpress=(ih: FlatScrollBox_t;\n                    handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightpress	niup.html#sb_imagerightpress,FlatScrollBox_t,	niup: sb_imagerightpress(ih: FlatScrollBox_t;\n                   handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightpress	niup.html#sb_imagerightpress,FlatScrollBox_t	niup: sb_imagerightpress(ih: FlatScrollBox_t): string	
sb_imagetop=	niup.html#sb_imagetop=,FlatScrollBox_t,	niup: sb_imagetop=(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetop	niup.html#sb_imagetop,FlatScrollBox_t,	niup: sb_imagetop(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetop	niup.html#sb_imagetop,FlatScrollBox_t	niup: sb_imagetop(ih: FlatScrollBox_t): string	
sb_imagetophighlight=	niup.html#sb_imagetophighlight=,FlatScrollBox_t,	niup: sb_imagetophighlight=(ih: FlatScrollBox_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetophighlight	niup.html#sb_imagetophighlight,FlatScrollBox_t,	niup: sb_imagetophighlight(ih: FlatScrollBox_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetophighlight	niup.html#sb_imagetophighlight,FlatScrollBox_t	niup: sb_imagetophighlight(ih: FlatScrollBox_t): string	
sb_imagetopinactive=	niup.html#sb_imagetopinactive=,FlatScrollBox_t,	niup: sb_imagetopinactive=(ih: FlatScrollBox_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetopinactive	niup.html#sb_imagetopinactive,FlatScrollBox_t,	niup: sb_imagetopinactive(ih: FlatScrollBox_t;\n                    handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetopinactive	niup.html#sb_imagetopinactive,FlatScrollBox_t	niup: sb_imagetopinactive(ih: FlatScrollBox_t): string	
sb_imagetoppress=	niup.html#sb_imagetoppress=,FlatScrollBox_t,	niup: sb_imagetoppress=(ih: FlatScrollBox_t;\n                  handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetoppress	niup.html#sb_imagetoppress,FlatScrollBox_t,	niup: sb_imagetoppress(ih: FlatScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetoppress	niup.html#sb_imagetoppress,FlatScrollBox_t	niup: sb_imagetoppress(ih: FlatScrollBox_t): string	
sb_presscolor	niup.html#sb_presscolor,FlatScrollBox_t	niup: sb_presscolor(ih: FlatScrollBox_t): string	
sb_resize	niup.html#sb_resize,FlatScrollBox_t	niup: sb_resize(ih: FlatScrollBox_t): string	
screenposition	niup.html#screenposition,FlatScrollBox_t	niup: screenposition(ih: FlatScrollBox_t): string	
scrollbar	niup.html#scrollbar,FlatScrollBox_t	niup: scrollbar(ih: FlatScrollBox_t): bool	
scrollbarsize	niup.html#scrollbarsize,FlatScrollBox_t	niup: scrollbarsize(ih: FlatScrollBox_t): string	
scrollto=	niup.html#scrollto=,FlatScrollBox_t,string	niup: scrollto=(ih: FlatScrollBox_t; value: string)	
scrollto	niup.html#scrollto,FlatScrollBox_t,string	niup: scrollto(ih: FlatScrollBox_t; value: string)	
scrollto=	niup.html#scrollto=,FlatScrollBox_t,int	niup: scrollto=(ih: FlatScrollBox_t; x: int)	
scrollto	niup.html#scrollto,FlatScrollBox_t,int	niup: scrollto(ih: FlatScrollBox_t; x: int)	
scrolltochild=	niup.html#scrolltochild=,FlatScrollBox_t,string	niup: scrolltochild=(ih: FlatScrollBox_t; value: string)	
scrolltochild	niup.html#scrolltochild,FlatScrollBox_t,string	niup: scrolltochild(ih: FlatScrollBox_t; value: string)	
scrolltochild_handle=	niup.html#scrolltochild_handle=,FlatScrollBox_t,User_t	niup: scrolltochild_handle=(ih: FlatScrollBox_t; handle: User_t)	
scrolltochild_handle	niup.html#scrolltochild_handle,FlatScrollBox_t,User_t	niup: scrolltochild_handle(ih: FlatScrollBox_t; handle: User_t)	
showarrows	niup.html#showarrows,FlatScrollBox_t	niup: showarrows(ih: FlatScrollBox_t): string	
showfloating	niup.html#showfloating,FlatScrollBox_t	niup: showfloating(ih: FlatScrollBox_t): string	
showtransparent	niup.html#showtransparent,FlatScrollBox_t	niup: showtransparent(ih: FlatScrollBox_t): string	
size=	niup.html#size=,FlatScrollBox_t,string	niup: size=(ih: FlatScrollBox_t; value: string)	
size	niup.html#size,FlatScrollBox_t,string	niup: size(ih: FlatScrollBox_t; value: string)	
size=	niup.html#size=,FlatScrollBox_t,int,int	niup: size=(ih: FlatScrollBox_t; width, height: int)	
size	niup.html#size,FlatScrollBox_t,int,int	niup: size(ih: FlatScrollBox_t; width, height: int)	
size	niup.html#size,FlatScrollBox_t	niup: size(ih: FlatScrollBox_t): string	
theme=	niup.html#theme=,FlatScrollBox_t,string	niup: theme=(ih: FlatScrollBox_t; value: string)	
theme	niup.html#theme,FlatScrollBox_t,string	niup: theme(ih: FlatScrollBox_t; value: string)	
theme	niup.html#theme,FlatScrollBox_t	niup: theme(ih: FlatScrollBox_t): string	
tip=	niup.html#tip=,FlatScrollBox_t,string	niup: tip=(ih: FlatScrollBox_t; value: string)	
tip	niup.html#tip,FlatScrollBox_t,string	niup: tip(ih: FlatScrollBox_t; value: string)	
tip	niup.html#tip,FlatScrollBox_t	niup: tip(ih: FlatScrollBox_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatScrollBox_t,string	niup: tipbgcolor=(ih: FlatScrollBox_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatScrollBox_t,string	niup: tipbgcolor(ih: FlatScrollBox_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatScrollBox_t,int,int,int,int	niup: tipbgcolor=(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatScrollBox_t,int,int,int,int	niup: tipbgcolor(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatScrollBox_t	niup: tipbgcolor(ih: FlatScrollBox_t): string	
tipdelay=	niup.html#tipdelay=,FlatScrollBox_t,string	niup: tipdelay=(ih: FlatScrollBox_t; value: string)	
tipdelay	niup.html#tipdelay,FlatScrollBox_t,string	niup: tipdelay(ih: FlatScrollBox_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatScrollBox_t,int	niup: tipdelay=(ih: FlatScrollBox_t; x: int)	
tipdelay	niup.html#tipdelay,FlatScrollBox_t,int	niup: tipdelay(ih: FlatScrollBox_t; x: int)	
tipdelay	niup.html#tipdelay,FlatScrollBox_t	niup: tipdelay(ih: FlatScrollBox_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatScrollBox_t,string	niup: tipfgcolor=(ih: FlatScrollBox_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatScrollBox_t,string	niup: tipfgcolor(ih: FlatScrollBox_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatScrollBox_t,int,int,int,int	niup: tipfgcolor=(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatScrollBox_t,int,int,int,int	niup: tipfgcolor(ih: FlatScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatScrollBox_t	niup: tipfgcolor(ih: FlatScrollBox_t): string	
tipicon=	niup.html#tipicon=,FlatScrollBox_t,string	niup: tipicon=(ih: FlatScrollBox_t; value: string)	
tipicon	niup.html#tipicon,FlatScrollBox_t,string	niup: tipicon(ih: FlatScrollBox_t; value: string)	
tipicon	niup.html#tipicon,FlatScrollBox_t	niup: tipicon(ih: FlatScrollBox_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatScrollBox_t,string	niup: tipmarkup=(ih: FlatScrollBox_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatScrollBox_t,string	niup: tipmarkup(ih: FlatScrollBox_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatScrollBox_t	niup: tipmarkup(ih: FlatScrollBox_t): string	
tiprect=	niup.html#tiprect=,FlatScrollBox_t,string	niup: tiprect=(ih: FlatScrollBox_t; value: string)	
tiprect	niup.html#tiprect,FlatScrollBox_t,string	niup: tiprect(ih: FlatScrollBox_t; value: string)	
tiprect=	niup.html#tiprect=,FlatScrollBox_t,int,int,int,int	niup: tiprect=(ih: FlatScrollBox_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatScrollBox_t,int,int,int,int	niup: tiprect(ih: FlatScrollBox_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatScrollBox_t	niup: tiprect(ih: FlatScrollBox_t): string	
tipvisible=	niup.html#tipvisible=,FlatScrollBox_t,string	niup: tipvisible=(ih: FlatScrollBox_t; value: string)	
tipvisible	niup.html#tipvisible,FlatScrollBox_t,string	niup: tipvisible(ih: FlatScrollBox_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatScrollBox_t,bool	niup: tipvisible=(ih: FlatScrollBox_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatScrollBox_t,bool	niup: tipvisible(ih: FlatScrollBox_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatScrollBox_t	niup: tipvisible(ih: FlatScrollBox_t): bool	
touch=	niup.html#touch=,FlatScrollBox_t,string	niup: touch=(ih: FlatScrollBox_t; value: string)	
touch	niup.html#touch,FlatScrollBox_t,string	niup: touch(ih: FlatScrollBox_t; value: string)	
touch=	niup.html#touch=,FlatScrollBox_t,bool	niup: touch=(ih: FlatScrollBox_t; yes: bool)	
touch	niup.html#touch,FlatScrollBox_t,bool	niup: touch(ih: FlatScrollBox_t; yes: bool)	
touch	niup.html#touch,FlatScrollBox_t	niup: touch(ih: FlatScrollBox_t): bool	
usersize=	niup.html#usersize=,FlatScrollBox_t,string	niup: usersize=(ih: FlatScrollBox_t; value: string)	
usersize	niup.html#usersize,FlatScrollBox_t,string	niup: usersize(ih: FlatScrollBox_t; value: string)	
usersize=	niup.html#usersize=,FlatScrollBox_t,int,int	niup: usersize=(ih: FlatScrollBox_t; width, height: int)	
usersize	niup.html#usersize,FlatScrollBox_t,int,int	niup: usersize(ih: FlatScrollBox_t; width, height: int)	
usersize	niup.html#usersize,FlatScrollBox_t	niup: usersize(ih: FlatScrollBox_t): string	
visible=	niup.html#visible=,FlatScrollBox_t,string	niup: visible=(ih: FlatScrollBox_t; value: string)	
visible	niup.html#visible,FlatScrollBox_t,string	niup: visible(ih: FlatScrollBox_t; value: string)	
visible=	niup.html#visible=,FlatScrollBox_t,bool	niup: visible=(ih: FlatScrollBox_t; yes: bool)	
visible	niup.html#visible,FlatScrollBox_t,bool	niup: visible(ih: FlatScrollBox_t; yes: bool)	
visible	niup.html#visible,FlatScrollBox_t	niup: visible(ih: FlatScrollBox_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatScrollBox_t,string	niup: wheeldropfocus=(ih: FlatScrollBox_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatScrollBox_t,string	niup: wheeldropfocus(ih: FlatScrollBox_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatScrollBox_t,bool	niup: wheeldropfocus=(ih: FlatScrollBox_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatScrollBox_t,bool	niup: wheeldropfocus(ih: FlatScrollBox_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatScrollBox_t	niup: wheeldropfocus(ih: FlatScrollBox_t): bool	
wid	niup.html#wid,FlatScrollBox_t	niup: wid(ih: FlatScrollBox_t): string	
x	niup.html#x,FlatScrollBox_t	niup: x(ih: FlatScrollBox_t): string	
xautohide	niup.html#xautohide,FlatScrollBox_t	niup: xautohide(ih: FlatScrollBox_t): bool	
xdisplay	niup.html#xdisplay,FlatScrollBox_t	niup: xdisplay(ih: FlatScrollBox_t): string	
xfontid	niup.html#xfontid,FlatScrollBox_t	niup: xfontid(ih: FlatScrollBox_t): string	
xhidden	niup.html#xhidden,FlatScrollBox_t	niup: xhidden(ih: FlatScrollBox_t): bool	
xmax=	niup.html#xmax=,FlatScrollBox_t,string	niup: xmax=(ih: FlatScrollBox_t; value: string)	
xmax	niup.html#xmax,FlatScrollBox_t,string	niup: xmax(ih: FlatScrollBox_t; value: string)	
xmax=	niup.html#xmax=,FlatScrollBox_t,int	niup: xmax=(ih: FlatScrollBox_t; x: int)	
xmax	niup.html#xmax,FlatScrollBox_t,int	niup: xmax(ih: FlatScrollBox_t; x: int)	
xmax	niup.html#xmax,FlatScrollBox_t	niup: xmax(ih: FlatScrollBox_t): string	
xmin=	niup.html#xmin=,FlatScrollBox_t,string	niup: xmin=(ih: FlatScrollBox_t; value: string)	
xmin	niup.html#xmin,FlatScrollBox_t,string	niup: xmin(ih: FlatScrollBox_t; value: string)	
xmin=	niup.html#xmin=,FlatScrollBox_t,int	niup: xmin=(ih: FlatScrollBox_t; x: int)	
xmin	niup.html#xmin,FlatScrollBox_t,int	niup: xmin(ih: FlatScrollBox_t; x: int)	
xmin	niup.html#xmin,FlatScrollBox_t	niup: xmin(ih: FlatScrollBox_t): string	
xwindow	niup.html#xwindow,FlatScrollBox_t	niup: xwindow(ih: FlatScrollBox_t): string	
y	niup.html#y,FlatScrollBox_t	niup: y(ih: FlatScrollBox_t): string	
yautohide	niup.html#yautohide,FlatScrollBox_t	niup: yautohide(ih: FlatScrollBox_t): bool	
yhidden	niup.html#yhidden,FlatScrollBox_t	niup: yhidden(ih: FlatScrollBox_t): bool	
ymax=	niup.html#ymax=,FlatScrollBox_t,string	niup: ymax=(ih: FlatScrollBox_t; value: string)	
ymax	niup.html#ymax,FlatScrollBox_t,string	niup: ymax(ih: FlatScrollBox_t; value: string)	
ymax=	niup.html#ymax=,FlatScrollBox_t,int	niup: ymax=(ih: FlatScrollBox_t; x: int)	
ymax	niup.html#ymax,FlatScrollBox_t,int	niup: ymax(ih: FlatScrollBox_t; x: int)	
ymax	niup.html#ymax,FlatScrollBox_t	niup: ymax(ih: FlatScrollBox_t): string	
ymin=	niup.html#ymin=,FlatScrollBox_t,string	niup: ymin=(ih: FlatScrollBox_t; value: string)	
ymin	niup.html#ymin,FlatScrollBox_t,string	niup: ymin(ih: FlatScrollBox_t; value: string)	
ymin=	niup.html#ymin=,FlatScrollBox_t,int	niup: ymin=(ih: FlatScrollBox_t; x: int)	
ymin	niup.html#ymin,FlatScrollBox_t,int	niup: ymin(ih: FlatScrollBox_t; x: int)	
ymin	niup.html#ymin,FlatScrollBox_t	niup: ymin(ih: FlatScrollBox_t): string	
zorder=	niup.html#zorder=,FlatScrollBox_t,string	niup: zorder=(ih: FlatScrollBox_t; value: string)	
zorder	niup.html#zorder,FlatScrollBox_t,string	niup: zorder(ih: FlatScrollBox_t; value: string)	
action=	niup.html#action=,FlatScrollBox_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatScrollBox_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatScrollBox_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatScrollBox_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatScrollBox_t	niup: action(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatScrollBox_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,FlatScrollBox_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,FlatScrollBox_t	niup: button_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatScrollBox_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatScrollBox_t,proc(PIhandle)	niup: destroy_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatScrollBox_t	niup: destroy_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatScrollBox_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatScrollBox_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatScrollBox_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatScrollBox_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatScrollBox_t	niup: dragbegin_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatScrollBox_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatScrollBox_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatScrollBox_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatScrollBox_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatScrollBox_t	niup: dragdatasize_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatScrollBox_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatScrollBox_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatScrollBox_t	niup: dragdata_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatScrollBox_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatScrollBox_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatScrollBox_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatScrollBox_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatScrollBox_t	niup: dragend_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatScrollBox_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatScrollBox_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatScrollBox_t	niup: dropdata_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatScrollBox_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatScrollBox_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatScrollBox_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatScrollBox_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatScrollBox_t	niup: dropfiles_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatScrollBox_t	niup: dropmotion_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatScrollBox_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatScrollBox_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatScrollBox_t	niup: enterwindow_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatScrollBox_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatScrollBox_t;\n          cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatScrollBox_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatScrollBox_t;\n         cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatScrollBox_t	niup: focus_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatScrollBox_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatScrollBox_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatScrollBox_t	niup: getfocus_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatScrollBox_t,proc(PIhandle)	niup: help_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatScrollBox_t,proc(PIhandle)	niup: help_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatScrollBox_t	niup: help_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatScrollBox_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatScrollBox_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatScrollBox_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatScrollBox_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatScrollBox_t	niup: keypress_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatScrollBox_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatScrollBox_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatScrollBox_t	niup: killfocus_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatScrollBox_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatScrollBox_t,proc(PIhandle,cint)	niup: k_any(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatScrollBox_t	niup: k_any(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
layoutupdate_cb=	niup.html#layoutupdate_cb=,FlatScrollBox_t,proc(PIhandle)	niup: layoutupdate_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
layoutupdate_cb	niup.html#layoutupdate_cb,FlatScrollBox_t,proc(PIhandle)	niup: layoutupdate_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
layoutupdate_cb	niup.html#layoutupdate_cb,FlatScrollBox_t	niup: layoutupdate_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatScrollBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatScrollBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatScrollBox_t	niup: ldestroy_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatScrollBox_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatScrollBox_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatScrollBox_t	niup: leavewindow_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatScrollBox_t,proc(PIhandle)	niup: map_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatScrollBox_t,proc(PIhandle)	niup: map_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatScrollBox_t	niup: map_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatScrollBox_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatScrollBox_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatScrollBox_t	niup: motion_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatScrollBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatScrollBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatScrollBox_t	niup: postmessage_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatScrollBox_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatScrollBox_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatScrollBox_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatScrollBox_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatScrollBox_t	niup: resize_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatScrollBox_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatScrollBox_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatScrollBox_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatScrollBox_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatScrollBox_t	niup: scroll_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatScrollBox_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatScrollBox_t,proc(PIhandle)	niup: unmap_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatScrollBox_t	niup: unmap_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatScrollBox_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; delta: cfloat;\n    x, y: cint; status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatScrollBox_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatScrollBox_t	niup: wheel_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatScrollBox_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatScrollBox_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatScrollBox_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatScrollBox_t	niup: wom_cb(ih: FlatScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatSeparator	niup.html#FlatSeparator_2	niup: FlatSeparator(): FlatSeparator_t	
active=	niup.html#active=,FlatSeparator_t,string	niup: active=(ih: FlatSeparator_t; value: string)	
active	niup.html#active,FlatSeparator_t,string	niup: active(ih: FlatSeparator_t; value: string)	
active=	niup.html#active=,FlatSeparator_t,bool	niup: active=(ih: FlatSeparator_t; yes: bool)	
active	niup.html#active,FlatSeparator_t,bool	niup: active(ih: FlatSeparator_t; yes: bool)	
active	niup.html#active,FlatSeparator_t	niup: active(ih: FlatSeparator_t): bool	
backingstore=	niup.html#backingstore=,FlatSeparator_t,string	niup: backingstore=(ih: FlatSeparator_t; value: string)	
backingstore	niup.html#backingstore,FlatSeparator_t,string	niup: backingstore(ih: FlatSeparator_t; value: string)	
backingstore=	niup.html#backingstore=,FlatSeparator_t,bool	niup: backingstore=(ih: FlatSeparator_t; yes: bool)	
backingstore	niup.html#backingstore,FlatSeparator_t,bool	niup: backingstore(ih: FlatSeparator_t; yes: bool)	
backingstore	niup.html#backingstore,FlatSeparator_t	niup: backingstore(ih: FlatSeparator_t): bool	
barsize=	niup.html#barsize=,FlatSeparator_t,string	niup: barsize=(ih: FlatSeparator_t; value: string)	
barsize	niup.html#barsize,FlatSeparator_t,string	niup: barsize(ih: FlatSeparator_t; value: string)	
barsize=	niup.html#barsize=,FlatSeparator_t,int	niup: barsize=(ih: FlatSeparator_t; x: int)	
barsize	niup.html#barsize,FlatSeparator_t,int	niup: barsize(ih: FlatSeparator_t; x: int)	
barsize	niup.html#barsize,FlatSeparator_t	niup: barsize(ih: FlatSeparator_t): string	
bgcolor=	niup.html#bgcolor=,FlatSeparator_t,string	niup: bgcolor=(ih: FlatSeparator_t; value: string)	
bgcolor	niup.html#bgcolor,FlatSeparator_t,string	niup: bgcolor(ih: FlatSeparator_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatSeparator_t,int,int,int,int	niup: bgcolor=(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatSeparator_t,int,int,int,int	niup: bgcolor(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatSeparator_t	niup: bgcolor(ih: FlatSeparator_t): string	
border=	niup.html#border=,FlatSeparator_t,string	niup: border=(ih: FlatSeparator_t; value: string)	
border	niup.html#border,FlatSeparator_t,string	niup: border(ih: FlatSeparator_t; value: string)	
border=	niup.html#border=,FlatSeparator_t,bool	niup: border=(ih: FlatSeparator_t; yes: bool)	
border	niup.html#border,FlatSeparator_t,bool	niup: border(ih: FlatSeparator_t; yes: bool)	
border	niup.html#border,FlatSeparator_t	niup: border(ih: FlatSeparator_t): bool	
canfocus=	niup.html#canfocus=,FlatSeparator_t,string	niup: canfocus=(ih: FlatSeparator_t; value: string)	
canfocus	niup.html#canfocus,FlatSeparator_t,string	niup: canfocus(ih: FlatSeparator_t; value: string)	
canfocus=	niup.html#canfocus=,FlatSeparator_t,bool	niup: canfocus=(ih: FlatSeparator_t; yes: bool)	
canfocus	niup.html#canfocus,FlatSeparator_t,bool	niup: canfocus(ih: FlatSeparator_t; yes: bool)	
canfocus	niup.html#canfocus,FlatSeparator_t	niup: canfocus(ih: FlatSeparator_t): bool	
charsize	niup.html#charsize,FlatSeparator_t	niup: charsize(ih: FlatSeparator_t): string	
color=	niup.html#color=,FlatSeparator_t,string	niup: color=(ih: FlatSeparator_t; value: string)	
color	niup.html#color,FlatSeparator_t,string	niup: color(ih: FlatSeparator_t; value: string)	
color=	niup.html#color=,FlatSeparator_t,int,int,int,int	niup: color=(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,FlatSeparator_t,int,int,int,int	niup: color(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,FlatSeparator_t	niup: color(ih: FlatSeparator_t): string	
cursor=	niup.html#cursor=,FlatSeparator_t,	niup: cursor=(ih: FlatSeparator_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatSeparator_t,	niup: cursor(ih: FlatSeparator_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatSeparator_t	niup: cursor(ih: FlatSeparator_t): string	
dragdrop=	niup.html#dragdrop=,FlatSeparator_t,string	niup: dragdrop=(ih: FlatSeparator_t; value: string)	
dragdrop	niup.html#dragdrop,FlatSeparator_t,string	niup: dragdrop(ih: FlatSeparator_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatSeparator_t,bool	niup: dragdrop=(ih: FlatSeparator_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatSeparator_t,bool	niup: dragdrop(ih: FlatSeparator_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatSeparator_t	niup: dragdrop(ih: FlatSeparator_t): bool	
dragsource=	niup.html#dragsource=,FlatSeparator_t,string	niup: dragsource=(ih: FlatSeparator_t; value: string)	
dragsource	niup.html#dragsource,FlatSeparator_t,string	niup: dragsource(ih: FlatSeparator_t; value: string)	
dragsource=	niup.html#dragsource=,FlatSeparator_t,bool	niup: dragsource=(ih: FlatSeparator_t; yes: bool)	
dragsource	niup.html#dragsource,FlatSeparator_t,bool	niup: dragsource(ih: FlatSeparator_t; yes: bool)	
dragsource	niup.html#dragsource,FlatSeparator_t	niup: dragsource(ih: FlatSeparator_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatSeparator_t,string	niup: dragsourcemove=(ih: FlatSeparator_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatSeparator_t,string	niup: dragsourcemove(ih: FlatSeparator_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatSeparator_t,bool	niup: dragsourcemove=(ih: FlatSeparator_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatSeparator_t,bool	niup: dragsourcemove(ih: FlatSeparator_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatSeparator_t	niup: dragsourcemove(ih: FlatSeparator_t): bool	
dragtypes=	niup.html#dragtypes=,FlatSeparator_t,string	niup: dragtypes=(ih: FlatSeparator_t; value: string)	
dragtypes	niup.html#dragtypes,FlatSeparator_t,string	niup: dragtypes(ih: FlatSeparator_t; value: string)	
dragtypes	niup.html#dragtypes,FlatSeparator_t	niup: dragtypes(ih: FlatSeparator_t): string	
drawable	niup.html#drawable,FlatSeparator_t	niup: drawable(ih: FlatSeparator_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatSeparator_t,string	niup: drawbgcolor=(ih: FlatSeparator_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatSeparator_t,string	niup: drawbgcolor(ih: FlatSeparator_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatSeparator_t,int,int,int,int	niup: drawbgcolor=(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatSeparator_t,int,int,int,int	niup: drawbgcolor(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatSeparator_t	niup: drawbgcolor(ih: FlatSeparator_t): string	
drawcolor=	niup.html#drawcolor=,FlatSeparator_t,string	niup: drawcolor=(ih: FlatSeparator_t; value: string)	
drawcolor	niup.html#drawcolor,FlatSeparator_t,string	niup: drawcolor(ih: FlatSeparator_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatSeparator_t,int,int,int,int	niup: drawcolor=(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatSeparator_t,int,int,int,int	niup: drawcolor(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatSeparator_t	niup: drawcolor(ih: FlatSeparator_t): string	
drawdriver	niup.html#drawdriver,FlatSeparator_t	niup: drawdriver(ih: FlatSeparator_t): string	
drawfont=	niup.html#drawfont=,FlatSeparator_t,string	niup: drawfont=(ih: FlatSeparator_t; value: string)	
drawfont	niup.html#drawfont,FlatSeparator_t,string	niup: drawfont(ih: FlatSeparator_t; value: string)	
drawfont	niup.html#drawfont,FlatSeparator_t	niup: drawfont(ih: FlatSeparator_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatSeparator_t,string	niup: drawlinewidth=(ih: FlatSeparator_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatSeparator_t,string	niup: drawlinewidth(ih: FlatSeparator_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatSeparator_t,int	niup: drawlinewidth=(ih: FlatSeparator_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatSeparator_t,int	niup: drawlinewidth(ih: FlatSeparator_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatSeparator_t	niup: drawlinewidth(ih: FlatSeparator_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatSeparator_t,string	niup: drawmakeinactive=(ih: FlatSeparator_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatSeparator_t,string	niup: drawmakeinactive(ih: FlatSeparator_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatSeparator_t,bool	niup: drawmakeinactive=(ih: FlatSeparator_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatSeparator_t,bool	niup: drawmakeinactive(ih: FlatSeparator_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatSeparator_t	niup: drawmakeinactive(ih: FlatSeparator_t): bool	
drawsize	niup.html#drawsize,FlatSeparator_t	niup: drawsize(ih: FlatSeparator_t): string	
drawstyle=	niup.html#drawstyle=,FlatSeparator_t,string	niup: drawstyle=(ih: FlatSeparator_t; value: string)	
drawstyle	niup.html#drawstyle,FlatSeparator_t,string	niup: drawstyle(ih: FlatSeparator_t; value: string)	
drawstyle	niup.html#drawstyle,FlatSeparator_t	niup: drawstyle(ih: FlatSeparator_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatSeparator_t,string	niup: drawtextalignment=(ih: FlatSeparator_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatSeparator_t,string	niup: drawtextalignment(ih: FlatSeparator_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatSeparator_t	niup: drawtextalignment(ih: FlatSeparator_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatSeparator_t,string	niup: drawtextclip=(ih: FlatSeparator_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatSeparator_t,string	niup: drawtextclip(ih: FlatSeparator_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatSeparator_t,bool	niup: drawtextclip=(ih: FlatSeparator_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatSeparator_t,bool	niup: drawtextclip(ih: FlatSeparator_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatSeparator_t	niup: drawtextclip(ih: FlatSeparator_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatSeparator_t,string	niup: drawtextellipsis=(ih: FlatSeparator_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatSeparator_t,string	niup: drawtextellipsis(ih: FlatSeparator_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatSeparator_t,bool	niup: drawtextellipsis=(ih: FlatSeparator_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatSeparator_t,bool	niup: drawtextellipsis(ih: FlatSeparator_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatSeparator_t	niup: drawtextellipsis(ih: FlatSeparator_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatSeparator_t,string	niup: drawtextlayoutcenter=(ih: FlatSeparator_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatSeparator_t,string	niup: drawtextlayoutcenter(ih: FlatSeparator_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatSeparator_t,bool	niup: drawtextlayoutcenter=(ih: FlatSeparator_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatSeparator_t,bool	niup: drawtextlayoutcenter(ih: FlatSeparator_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatSeparator_t	niup: drawtextlayoutcenter(ih: FlatSeparator_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatSeparator_t,string	niup: drawtextorientation=(ih: FlatSeparator_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatSeparator_t,string	niup: drawtextorientation(ih: FlatSeparator_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatSeparator_t,int64	niup: drawtextorientation=(ih: FlatSeparator_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatSeparator_t,int64	niup: drawtextorientation(ih: FlatSeparator_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatSeparator_t	niup: drawtextorientation(ih: FlatSeparator_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatSeparator_t,string	niup: drawtextwrap=(ih: FlatSeparator_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatSeparator_t,string	niup: drawtextwrap(ih: FlatSeparator_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatSeparator_t,bool	niup: drawtextwrap=(ih: FlatSeparator_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatSeparator_t,bool	niup: drawtextwrap(ih: FlatSeparator_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatSeparator_t	niup: drawtextwrap(ih: FlatSeparator_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatSeparator_t,string	niup: dropfilestarget=(ih: FlatSeparator_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatSeparator_t,string	niup: dropfilestarget(ih: FlatSeparator_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatSeparator_t,bool	niup: dropfilestarget=(ih: FlatSeparator_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatSeparator_t,bool	niup: dropfilestarget(ih: FlatSeparator_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatSeparator_t	niup: dropfilestarget(ih: FlatSeparator_t): bool	
droptarget=	niup.html#droptarget=,FlatSeparator_t,string	niup: droptarget=(ih: FlatSeparator_t; value: string)	
droptarget	niup.html#droptarget,FlatSeparator_t,string	niup: droptarget(ih: FlatSeparator_t; value: string)	
droptarget=	niup.html#droptarget=,FlatSeparator_t,bool	niup: droptarget=(ih: FlatSeparator_t; yes: bool)	
droptarget	niup.html#droptarget,FlatSeparator_t,bool	niup: droptarget(ih: FlatSeparator_t; yes: bool)	
droptarget	niup.html#droptarget,FlatSeparator_t	niup: droptarget(ih: FlatSeparator_t): bool	
droptypes=	niup.html#droptypes=,FlatSeparator_t,string	niup: droptypes=(ih: FlatSeparator_t; value: string)	
droptypes	niup.html#droptypes,FlatSeparator_t,string	niup: droptypes(ih: FlatSeparator_t; value: string)	
droptypes	niup.html#droptypes,FlatSeparator_t	niup: droptypes(ih: FlatSeparator_t): string	
dx=	niup.html#dx=,FlatSeparator_t,string	niup: dx=(ih: FlatSeparator_t; value: string)	
dx	niup.html#dx,FlatSeparator_t,string	niup: dx(ih: FlatSeparator_t; value: string)	
dx=	niup.html#dx=,FlatSeparator_t,int64	niup: dx=(ih: FlatSeparator_t; x: int64)	
dx	niup.html#dx,FlatSeparator_t,int64	niup: dx(ih: FlatSeparator_t; x: int64)	
dx	niup.html#dx,FlatSeparator_t	niup: dx(ih: FlatSeparator_t): string	
dy=	niup.html#dy=,FlatSeparator_t,string	niup: dy=(ih: FlatSeparator_t; value: string)	
dy	niup.html#dy,FlatSeparator_t,string	niup: dy(ih: FlatSeparator_t; value: string)	
dy=	niup.html#dy=,FlatSeparator_t,int64	niup: dy=(ih: FlatSeparator_t; x: int64)	
dy	niup.html#dy,FlatSeparator_t,int64	niup: dy(ih: FlatSeparator_t; x: int64)	
dy	niup.html#dy,FlatSeparator_t	niup: dy(ih: FlatSeparator_t): string	
expand=	niup.html#expand=,FlatSeparator_t,string	niup: expand=(ih: FlatSeparator_t; value: string)	
expand	niup.html#expand,FlatSeparator_t,string	niup: expand(ih: FlatSeparator_t; value: string)	
expand	niup.html#expand,FlatSeparator_t	niup: expand(ih: FlatSeparator_t): string	
expandweight=	niup.html#expandweight=,FlatSeparator_t,string	niup: expandweight=(ih: FlatSeparator_t; value: string)	
expandweight	niup.html#expandweight,FlatSeparator_t,string	niup: expandweight(ih: FlatSeparator_t; value: string)	
expandweight=	niup.html#expandweight=,FlatSeparator_t,int64	niup: expandweight=(ih: FlatSeparator_t; x: int64)	
expandweight	niup.html#expandweight,FlatSeparator_t,int64	niup: expandweight(ih: FlatSeparator_t; x: int64)	
expandweight	niup.html#expandweight,FlatSeparator_t	niup: expandweight(ih: FlatSeparator_t): string	
floating=	niup.html#floating=,FlatSeparator_t,string	niup: floating=(ih: FlatSeparator_t; value: string)	
floating	niup.html#floating,FlatSeparator_t,string	niup: floating(ih: FlatSeparator_t; value: string)	
floating	niup.html#floating,FlatSeparator_t	niup: floating(ih: FlatSeparator_t): string	
font=	niup.html#font=,FlatSeparator_t,string	niup: font=(ih: FlatSeparator_t; value: string)	
font	niup.html#font,FlatSeparator_t,string	niup: font(ih: FlatSeparator_t; value: string)	
font	niup.html#font,FlatSeparator_t	niup: font(ih: FlatSeparator_t): string	
fontface=	niup.html#fontface=,FlatSeparator_t,string	niup: fontface=(ih: FlatSeparator_t; value: string)	
fontface	niup.html#fontface,FlatSeparator_t,string	niup: fontface(ih: FlatSeparator_t; value: string)	
fontface	niup.html#fontface,FlatSeparator_t	niup: fontface(ih: FlatSeparator_t): string	
fontsize=	niup.html#fontsize=,FlatSeparator_t,string	niup: fontsize=(ih: FlatSeparator_t; value: string)	
fontsize	niup.html#fontsize,FlatSeparator_t,string	niup: fontsize(ih: FlatSeparator_t; value: string)	
fontsize=	niup.html#fontsize=,FlatSeparator_t,int	niup: fontsize=(ih: FlatSeparator_t; x: int)	
fontsize	niup.html#fontsize,FlatSeparator_t,int	niup: fontsize(ih: FlatSeparator_t; x: int)	
fontsize	niup.html#fontsize,FlatSeparator_t	niup: fontsize(ih: FlatSeparator_t): string	
fontstyle=	niup.html#fontstyle=,FlatSeparator_t,string	niup: fontstyle=(ih: FlatSeparator_t; value: string)	
fontstyle	niup.html#fontstyle,FlatSeparator_t,string	niup: fontstyle(ih: FlatSeparator_t; value: string)	
fontstyle	niup.html#fontstyle,FlatSeparator_t	niup: fontstyle(ih: FlatSeparator_t): string	
handlename=	niup.html#handlename=,FlatSeparator_t,string	niup: handlename=(ih: FlatSeparator_t; value: string)	
handlename	niup.html#handlename,FlatSeparator_t,string	niup: handlename(ih: FlatSeparator_t; value: string)	
handlename	niup.html#handlename,FlatSeparator_t	niup: handlename(ih: FlatSeparator_t): string	
linex=	niup.html#linex=,FlatSeparator_t,string	niup: linex=(ih: FlatSeparator_t; value: string)	
linex	niup.html#linex,FlatSeparator_t,string	niup: linex(ih: FlatSeparator_t; value: string)	
linex=	niup.html#linex=,FlatSeparator_t,int64	niup: linex=(ih: FlatSeparator_t; x: int64)	
linex	niup.html#linex,FlatSeparator_t,int64	niup: linex(ih: FlatSeparator_t; x: int64)	
linex	niup.html#linex,FlatSeparator_t	niup: linex(ih: FlatSeparator_t): string	
liney=	niup.html#liney=,FlatSeparator_t,string	niup: liney=(ih: FlatSeparator_t; value: string)	
liney	niup.html#liney,FlatSeparator_t,string	niup: liney(ih: FlatSeparator_t; value: string)	
liney=	niup.html#liney=,FlatSeparator_t,int64	niup: liney=(ih: FlatSeparator_t; x: int64)	
liney	niup.html#liney,FlatSeparator_t,int64	niup: liney(ih: FlatSeparator_t; x: int64)	
liney	niup.html#liney,FlatSeparator_t	niup: liney(ih: FlatSeparator_t): string	
maxsize=	niup.html#maxsize=,FlatSeparator_t,string	niup: maxsize=(ih: FlatSeparator_t; value: string)	
maxsize	niup.html#maxsize,FlatSeparator_t,string	niup: maxsize(ih: FlatSeparator_t; value: string)	
maxsize=	niup.html#maxsize=,FlatSeparator_t,int,int	niup: maxsize=(ih: FlatSeparator_t; width, height: int)	
maxsize	niup.html#maxsize,FlatSeparator_t,int,int	niup: maxsize(ih: FlatSeparator_t; width, height: int)	
maxsize	niup.html#maxsize,FlatSeparator_t	niup: maxsize(ih: FlatSeparator_t): string	
minsize=	niup.html#minsize=,FlatSeparator_t,string	niup: minsize=(ih: FlatSeparator_t; value: string)	
minsize	niup.html#minsize,FlatSeparator_t,string	niup: minsize(ih: FlatSeparator_t; value: string)	
minsize=	niup.html#minsize=,FlatSeparator_t,int,int	niup: minsize=(ih: FlatSeparator_t; width, height: int)	
minsize	niup.html#minsize,FlatSeparator_t,int,int	niup: minsize(ih: FlatSeparator_t; width, height: int)	
minsize	niup.html#minsize,FlatSeparator_t	niup: minsize(ih: FlatSeparator_t): string	
name=	niup.html#name=,FlatSeparator_t,string	niup: name=(ih: FlatSeparator_t; value: string)	
name	niup.html#name,FlatSeparator_t,string	niup: name(ih: FlatSeparator_t; value: string)	
name	niup.html#name,FlatSeparator_t	niup: name(ih: FlatSeparator_t): string	
naturalsize	niup.html#naturalsize,FlatSeparator_t	niup: naturalsize(ih: FlatSeparator_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatSeparator_t,string	niup: normalizergroup=(ih: FlatSeparator_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatSeparator_t,string	niup: normalizergroup(ih: FlatSeparator_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatSeparator_t	niup: normalizergroup(ih: FlatSeparator_t): string	
ntheme=	niup.html#ntheme=,FlatSeparator_t,string	niup: ntheme=(ih: FlatSeparator_t; value: string)	
ntheme	niup.html#ntheme,FlatSeparator_t,string	niup: ntheme(ih: FlatSeparator_t; value: string)	
ntheme	niup.html#ntheme,FlatSeparator_t	niup: ntheme(ih: FlatSeparator_t): string	
orientation=	niup.html#orientation=,FlatSeparator_t,string	niup: orientation=(ih: FlatSeparator_t; value: string)	
orientation	niup.html#orientation,FlatSeparator_t,string	niup: orientation(ih: FlatSeparator_t; value: string)	
orientation	niup.html#orientation,FlatSeparator_t	niup: orientation(ih: FlatSeparator_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatSeparator_t	niup: pangofontdesc(ih: FlatSeparator_t): string	
pangolayout	niup.html#pangolayout,FlatSeparator_t	niup: pangolayout(ih: FlatSeparator_t): string	
position=	niup.html#position=,FlatSeparator_t,string	niup: position=(ih: FlatSeparator_t; value: string)	
position	niup.html#position,FlatSeparator_t,string	niup: position(ih: FlatSeparator_t; value: string)	
position=	niup.html#position=,FlatSeparator_t,int,int	niup: position=(ih: FlatSeparator_t; x, y: int)	
position	niup.html#position,FlatSeparator_t,int,int	niup: position(ih: FlatSeparator_t; x, y: int)	
position	niup.html#position,FlatSeparator_t	niup: position(ih: FlatSeparator_t): string	
posx=	niup.html#posx=,FlatSeparator_t,string	niup: posx=(ih: FlatSeparator_t; value: string)	
posx	niup.html#posx,FlatSeparator_t,string	niup: posx(ih: FlatSeparator_t; value: string)	
posx=	niup.html#posx=,FlatSeparator_t,int64	niup: posx=(ih: FlatSeparator_t; x: int64)	
posx	niup.html#posx,FlatSeparator_t,int64	niup: posx(ih: FlatSeparator_t; x: int64)	
posx	niup.html#posx,FlatSeparator_t	niup: posx(ih: FlatSeparator_t): string	
posy=	niup.html#posy=,FlatSeparator_t,string	niup: posy=(ih: FlatSeparator_t; value: string)	
posy	niup.html#posy,FlatSeparator_t,string	niup: posy(ih: FlatSeparator_t; value: string)	
posy=	niup.html#posy=,FlatSeparator_t,int64	niup: posy=(ih: FlatSeparator_t; x: int64)	
posy	niup.html#posy,FlatSeparator_t,int64	niup: posy(ih: FlatSeparator_t; x: int64)	
posy	niup.html#posy,FlatSeparator_t	niup: posy(ih: FlatSeparator_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatSeparator_t,string	niup: propagatefocus=(ih: FlatSeparator_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatSeparator_t,string	niup: propagatefocus(ih: FlatSeparator_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatSeparator_t,bool	niup: propagatefocus=(ih: FlatSeparator_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatSeparator_t,bool	niup: propagatefocus(ih: FlatSeparator_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatSeparator_t	niup: propagatefocus(ih: FlatSeparator_t): bool	
rastersize=	niup.html#rastersize=,FlatSeparator_t,string	niup: rastersize=(ih: FlatSeparator_t; value: string)	
rastersize	niup.html#rastersize,FlatSeparator_t,string	niup: rastersize(ih: FlatSeparator_t; value: string)	
rastersize=	niup.html#rastersize=,FlatSeparator_t,int,int	niup: rastersize=(ih: FlatSeparator_t; width, height: int)	
rastersize	niup.html#rastersize,FlatSeparator_t,int,int	niup: rastersize(ih: FlatSeparator_t; width, height: int)	
rastersize	niup.html#rastersize,FlatSeparator_t	niup: rastersize(ih: FlatSeparator_t): string	
sb_resize	niup.html#sb_resize,FlatSeparator_t	niup: sb_resize(ih: FlatSeparator_t): string	
screenposition	niup.html#screenposition,FlatSeparator_t	niup: screenposition(ih: FlatSeparator_t): string	
scrollbar=	niup.html#scrollbar=,FlatSeparator_t,string	niup: scrollbar=(ih: FlatSeparator_t; value: string)	
scrollbar	niup.html#scrollbar,FlatSeparator_t,string	niup: scrollbar(ih: FlatSeparator_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatSeparator_t,bool	niup: scrollbar=(ih: FlatSeparator_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatSeparator_t,bool	niup: scrollbar(ih: FlatSeparator_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatSeparator_t	niup: scrollbar(ih: FlatSeparator_t): bool	
size=	niup.html#size=,FlatSeparator_t,string	niup: size=(ih: FlatSeparator_t; value: string)	
size	niup.html#size,FlatSeparator_t,string	niup: size(ih: FlatSeparator_t; value: string)	
size=	niup.html#size=,FlatSeparator_t,int,int	niup: size=(ih: FlatSeparator_t; width, height: int)	
size	niup.html#size,FlatSeparator_t,int,int	niup: size(ih: FlatSeparator_t; width, height: int)	
size	niup.html#size,FlatSeparator_t	niup: size(ih: FlatSeparator_t): string	
style	niup.html#style,FlatSeparator_t	niup: style(ih: FlatSeparator_t): string	
theme=	niup.html#theme=,FlatSeparator_t,string	niup: theme=(ih: FlatSeparator_t; value: string)	
theme	niup.html#theme,FlatSeparator_t,string	niup: theme(ih: FlatSeparator_t; value: string)	
theme	niup.html#theme,FlatSeparator_t	niup: theme(ih: FlatSeparator_t): string	
tip=	niup.html#tip=,FlatSeparator_t,string	niup: tip=(ih: FlatSeparator_t; value: string)	
tip	niup.html#tip,FlatSeparator_t,string	niup: tip(ih: FlatSeparator_t; value: string)	
tip	niup.html#tip,FlatSeparator_t	niup: tip(ih: FlatSeparator_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatSeparator_t,string	niup: tipbgcolor=(ih: FlatSeparator_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatSeparator_t,string	niup: tipbgcolor(ih: FlatSeparator_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatSeparator_t,int,int,int,int	niup: tipbgcolor=(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatSeparator_t,int,int,int,int	niup: tipbgcolor(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatSeparator_t	niup: tipbgcolor(ih: FlatSeparator_t): string	
tipdelay=	niup.html#tipdelay=,FlatSeparator_t,string	niup: tipdelay=(ih: FlatSeparator_t; value: string)	
tipdelay	niup.html#tipdelay,FlatSeparator_t,string	niup: tipdelay(ih: FlatSeparator_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatSeparator_t,int	niup: tipdelay=(ih: FlatSeparator_t; x: int)	
tipdelay	niup.html#tipdelay,FlatSeparator_t,int	niup: tipdelay(ih: FlatSeparator_t; x: int)	
tipdelay	niup.html#tipdelay,FlatSeparator_t	niup: tipdelay(ih: FlatSeparator_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatSeparator_t,string	niup: tipfgcolor=(ih: FlatSeparator_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatSeparator_t,string	niup: tipfgcolor(ih: FlatSeparator_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatSeparator_t,int,int,int,int	niup: tipfgcolor=(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatSeparator_t,int,int,int,int	niup: tipfgcolor(ih: FlatSeparator_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatSeparator_t	niup: tipfgcolor(ih: FlatSeparator_t): string	
tipicon=	niup.html#tipicon=,FlatSeparator_t,string	niup: tipicon=(ih: FlatSeparator_t; value: string)	
tipicon	niup.html#tipicon,FlatSeparator_t,string	niup: tipicon(ih: FlatSeparator_t; value: string)	
tipicon	niup.html#tipicon,FlatSeparator_t	niup: tipicon(ih: FlatSeparator_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatSeparator_t,string	niup: tipmarkup=(ih: FlatSeparator_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatSeparator_t,string	niup: tipmarkup(ih: FlatSeparator_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatSeparator_t	niup: tipmarkup(ih: FlatSeparator_t): string	
tiprect=	niup.html#tiprect=,FlatSeparator_t,string	niup: tiprect=(ih: FlatSeparator_t; value: string)	
tiprect	niup.html#tiprect,FlatSeparator_t,string	niup: tiprect(ih: FlatSeparator_t; value: string)	
tiprect=	niup.html#tiprect=,FlatSeparator_t,int,int,int,int	niup: tiprect=(ih: FlatSeparator_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatSeparator_t,int,int,int,int	niup: tiprect(ih: FlatSeparator_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatSeparator_t	niup: tiprect(ih: FlatSeparator_t): string	
tipvisible=	niup.html#tipvisible=,FlatSeparator_t,string	niup: tipvisible=(ih: FlatSeparator_t; value: string)	
tipvisible	niup.html#tipvisible,FlatSeparator_t,string	niup: tipvisible(ih: FlatSeparator_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatSeparator_t,bool	niup: tipvisible=(ih: FlatSeparator_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatSeparator_t,bool	niup: tipvisible(ih: FlatSeparator_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatSeparator_t	niup: tipvisible(ih: FlatSeparator_t): bool	
touch=	niup.html#touch=,FlatSeparator_t,string	niup: touch=(ih: FlatSeparator_t; value: string)	
touch	niup.html#touch,FlatSeparator_t,string	niup: touch(ih: FlatSeparator_t; value: string)	
touch=	niup.html#touch=,FlatSeparator_t,bool	niup: touch=(ih: FlatSeparator_t; yes: bool)	
touch	niup.html#touch,FlatSeparator_t,bool	niup: touch(ih: FlatSeparator_t; yes: bool)	
touch	niup.html#touch,FlatSeparator_t	niup: touch(ih: FlatSeparator_t): bool	
usersize=	niup.html#usersize=,FlatSeparator_t,string	niup: usersize=(ih: FlatSeparator_t; value: string)	
usersize	niup.html#usersize,FlatSeparator_t,string	niup: usersize(ih: FlatSeparator_t; value: string)	
usersize=	niup.html#usersize=,FlatSeparator_t,int,int	niup: usersize=(ih: FlatSeparator_t; width, height: int)	
usersize	niup.html#usersize,FlatSeparator_t,int,int	niup: usersize(ih: FlatSeparator_t; width, height: int)	
usersize	niup.html#usersize,FlatSeparator_t	niup: usersize(ih: FlatSeparator_t): string	
visible=	niup.html#visible=,FlatSeparator_t,string	niup: visible=(ih: FlatSeparator_t; value: string)	
visible	niup.html#visible,FlatSeparator_t,string	niup: visible(ih: FlatSeparator_t; value: string)	
visible=	niup.html#visible=,FlatSeparator_t,bool	niup: visible=(ih: FlatSeparator_t; yes: bool)	
visible	niup.html#visible,FlatSeparator_t,bool	niup: visible(ih: FlatSeparator_t; yes: bool)	
visible	niup.html#visible,FlatSeparator_t	niup: visible(ih: FlatSeparator_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatSeparator_t,string	niup: wheeldropfocus=(ih: FlatSeparator_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatSeparator_t,string	niup: wheeldropfocus(ih: FlatSeparator_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatSeparator_t,bool	niup: wheeldropfocus=(ih: FlatSeparator_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatSeparator_t,bool	niup: wheeldropfocus(ih: FlatSeparator_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatSeparator_t	niup: wheeldropfocus(ih: FlatSeparator_t): bool	
wid	niup.html#wid,FlatSeparator_t	niup: wid(ih: FlatSeparator_t): string	
x	niup.html#x,FlatSeparator_t	niup: x(ih: FlatSeparator_t): string	
xautohide=	niup.html#xautohide=,FlatSeparator_t,string	niup: xautohide=(ih: FlatSeparator_t; value: string)	
xautohide	niup.html#xautohide,FlatSeparator_t,string	niup: xautohide(ih: FlatSeparator_t; value: string)	
xautohide=	niup.html#xautohide=,FlatSeparator_t,bool	niup: xautohide=(ih: FlatSeparator_t; yes: bool)	
xautohide	niup.html#xautohide,FlatSeparator_t,bool	niup: xautohide(ih: FlatSeparator_t; yes: bool)	
xautohide	niup.html#xautohide,FlatSeparator_t	niup: xautohide(ih: FlatSeparator_t): bool	
xdisplay	niup.html#xdisplay,FlatSeparator_t	niup: xdisplay(ih: FlatSeparator_t): string	
xfontid	niup.html#xfontid,FlatSeparator_t	niup: xfontid(ih: FlatSeparator_t): string	
xhidden	niup.html#xhidden,FlatSeparator_t	niup: xhidden(ih: FlatSeparator_t): bool	
xmax=	niup.html#xmax=,FlatSeparator_t,string	niup: xmax=(ih: FlatSeparator_t; value: string)	
xmax	niup.html#xmax,FlatSeparator_t,string	niup: xmax(ih: FlatSeparator_t; value: string)	
xmax=	niup.html#xmax=,FlatSeparator_t,int	niup: xmax=(ih: FlatSeparator_t; x: int)	
xmax	niup.html#xmax,FlatSeparator_t,int	niup: xmax(ih: FlatSeparator_t; x: int)	
xmax	niup.html#xmax,FlatSeparator_t	niup: xmax(ih: FlatSeparator_t): string	
xmin=	niup.html#xmin=,FlatSeparator_t,string	niup: xmin=(ih: FlatSeparator_t; value: string)	
xmin	niup.html#xmin,FlatSeparator_t,string	niup: xmin(ih: FlatSeparator_t; value: string)	
xmin=	niup.html#xmin=,FlatSeparator_t,int	niup: xmin=(ih: FlatSeparator_t; x: int)	
xmin	niup.html#xmin,FlatSeparator_t,int	niup: xmin(ih: FlatSeparator_t; x: int)	
xmin	niup.html#xmin,FlatSeparator_t	niup: xmin(ih: FlatSeparator_t): string	
xwindow	niup.html#xwindow,FlatSeparator_t	niup: xwindow(ih: FlatSeparator_t): string	
y	niup.html#y,FlatSeparator_t	niup: y(ih: FlatSeparator_t): string	
yautohide=	niup.html#yautohide=,FlatSeparator_t,string	niup: yautohide=(ih: FlatSeparator_t; value: string)	
yautohide	niup.html#yautohide,FlatSeparator_t,string	niup: yautohide(ih: FlatSeparator_t; value: string)	
yautohide=	niup.html#yautohide=,FlatSeparator_t,bool	niup: yautohide=(ih: FlatSeparator_t; yes: bool)	
yautohide	niup.html#yautohide,FlatSeparator_t,bool	niup: yautohide(ih: FlatSeparator_t; yes: bool)	
yautohide	niup.html#yautohide,FlatSeparator_t	niup: yautohide(ih: FlatSeparator_t): bool	
yhidden	niup.html#yhidden,FlatSeparator_t	niup: yhidden(ih: FlatSeparator_t): bool	
ymax=	niup.html#ymax=,FlatSeparator_t,string	niup: ymax=(ih: FlatSeparator_t; value: string)	
ymax	niup.html#ymax,FlatSeparator_t,string	niup: ymax(ih: FlatSeparator_t; value: string)	
ymax=	niup.html#ymax=,FlatSeparator_t,int	niup: ymax=(ih: FlatSeparator_t; x: int)	
ymax	niup.html#ymax,FlatSeparator_t,int	niup: ymax(ih: FlatSeparator_t; x: int)	
ymax	niup.html#ymax,FlatSeparator_t	niup: ymax(ih: FlatSeparator_t): string	
ymin=	niup.html#ymin=,FlatSeparator_t,string	niup: ymin=(ih: FlatSeparator_t; value: string)	
ymin	niup.html#ymin,FlatSeparator_t,string	niup: ymin(ih: FlatSeparator_t; value: string)	
ymin=	niup.html#ymin=,FlatSeparator_t,int	niup: ymin=(ih: FlatSeparator_t; x: int)	
ymin	niup.html#ymin,FlatSeparator_t,int	niup: ymin(ih: FlatSeparator_t; x: int)	
ymin	niup.html#ymin,FlatSeparator_t	niup: ymin(ih: FlatSeparator_t): string	
zorder=	niup.html#zorder=,FlatSeparator_t,string	niup: zorder=(ih: FlatSeparator_t; value: string)	
zorder	niup.html#zorder,FlatSeparator_t,string	niup: zorder(ih: FlatSeparator_t; value: string)	
action=	niup.html#action=,FlatSeparator_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatSeparator_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatSeparator_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatSeparator_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatSeparator_t	niup: action(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatSeparator_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,FlatSeparator_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
button_cb	niup.html#button_cb,FlatSeparator_t	niup: button_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatSeparator_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatSeparator_t,proc(PIhandle)	niup: destroy_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatSeparator_t	niup: destroy_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatSeparator_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatSeparator_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatSeparator_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatSeparator_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatSeparator_t	niup: dragbegin_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatSeparator_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatSeparator_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatSeparator_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatSeparator_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatSeparator_t	niup: dragdatasize_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatSeparator_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatSeparator_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatSeparator_t	niup: dragdata_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatSeparator_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatSeparator_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatSeparator_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatSeparator_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatSeparator_t	niup: dragend_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatSeparator_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatSeparator_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatSeparator_t	niup: dropdata_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatSeparator_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatSeparator_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatSeparator_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatSeparator_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatSeparator_t	niup: dropfiles_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatSeparator_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatSeparator_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatSeparator_t	niup: dropmotion_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatSeparator_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatSeparator_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatSeparator_t	niup: enterwindow_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatSeparator_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatSeparator_t;\n          cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatSeparator_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatSeparator_t;\n         cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatSeparator_t	niup: focus_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatSeparator_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatSeparator_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatSeparator_t	niup: getfocus_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatSeparator_t,proc(PIhandle)	niup: help_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatSeparator_t,proc(PIhandle)	niup: help_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatSeparator_t	niup: help_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatSeparator_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatSeparator_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatSeparator_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatSeparator_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatSeparator_t	niup: keypress_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatSeparator_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatSeparator_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatSeparator_t	niup: killfocus_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatSeparator_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatSeparator_t,proc(PIhandle,cint)	niup: k_any(ih: FlatSeparator_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatSeparator_t	niup: k_any(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatSeparator_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatSeparator_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatSeparator_t	niup: ldestroy_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatSeparator_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatSeparator_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatSeparator_t	niup: leavewindow_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatSeparator_t,proc(PIhandle)	niup: map_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatSeparator_t,proc(PIhandle)	niup: map_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatSeparator_t	niup: map_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatSeparator_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatSeparator_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatSeparator_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatSeparator_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatSeparator_t	niup: motion_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatSeparator_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatSeparator_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatSeparator_t	niup: postmessage_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatSeparator_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatSeparator_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatSeparator_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatSeparator_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatSeparator_t	niup: resize_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatSeparator_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatSeparator_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatSeparator_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatSeparator_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatSeparator_t	niup: scroll_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatSeparator_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatSeparator_t,proc(PIhandle)	niup: unmap_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatSeparator_t	niup: unmap_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatSeparator_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; delta: cfloat;\n    x, y: cint; status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatSeparator_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatSeparator_t	niup: wheel_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatSeparator_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatSeparator_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatSeparator_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatSeparator_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatSeparator_t	niup: wom_cb(ih: FlatSeparator_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatTabs	niup.html#FlatTabs.m,varargs[untyped]	niup: FlatTabs(args: varargs[untyped]): FlatTabs_t	
active=	niup.html#active=,FlatTabs_t,string	niup: active=(ih: FlatTabs_t; value: string)	
active	niup.html#active,FlatTabs_t,string	niup: active(ih: FlatTabs_t; value: string)	
active=	niup.html#active=,FlatTabs_t,bool	niup: active=(ih: FlatTabs_t; yes: bool)	
active	niup.html#active,FlatTabs_t,bool	niup: active(ih: FlatTabs_t; yes: bool)	
active	niup.html#active,FlatTabs_t	niup: active(ih: FlatTabs_t): bool	
backingstore=	niup.html#backingstore=,FlatTabs_t,string	niup: backingstore=(ih: FlatTabs_t; value: string)	
backingstore	niup.html#backingstore,FlatTabs_t,string	niup: backingstore(ih: FlatTabs_t; value: string)	
backingstore=	niup.html#backingstore=,FlatTabs_t,bool	niup: backingstore=(ih: FlatTabs_t; yes: bool)	
backingstore	niup.html#backingstore,FlatTabs_t,bool	niup: backingstore(ih: FlatTabs_t; yes: bool)	
backingstore	niup.html#backingstore,FlatTabs_t	niup: backingstore(ih: FlatTabs_t): bool	
bgcolor=	niup.html#bgcolor=,FlatTabs_t,string	niup: bgcolor=(ih: FlatTabs_t; value: string)	
bgcolor	niup.html#bgcolor,FlatTabs_t,string	niup: bgcolor(ih: FlatTabs_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatTabs_t,int,int,int,int	niup: bgcolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatTabs_t,int,int,int,int	niup: bgcolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatTabs_t	niup: bgcolor(ih: FlatTabs_t): string	
border	niup.html#border,FlatTabs_t	niup: border(ih: FlatTabs_t): bool	
canfocus=	niup.html#canfocus=,FlatTabs_t,string	niup: canfocus=(ih: FlatTabs_t; value: string)	
canfocus	niup.html#canfocus,FlatTabs_t,string	niup: canfocus(ih: FlatTabs_t; value: string)	
canfocus=	niup.html#canfocus=,FlatTabs_t,bool	niup: canfocus=(ih: FlatTabs_t; yes: bool)	
canfocus	niup.html#canfocus,FlatTabs_t,bool	niup: canfocus(ih: FlatTabs_t; yes: bool)	
canfocus	niup.html#canfocus,FlatTabs_t	niup: canfocus(ih: FlatTabs_t): bool	
charsize	niup.html#charsize,FlatTabs_t	niup: charsize(ih: FlatTabs_t): string	
childoffset=	niup.html#childoffset=,FlatTabs_t,string	niup: childoffset=(ih: FlatTabs_t; value: string)	
childoffset	niup.html#childoffset,FlatTabs_t,string	niup: childoffset(ih: FlatTabs_t; value: string)	
childoffset=	niup.html#childoffset=,FlatTabs_t,int,int	niup: childoffset=(ih: FlatTabs_t; width, height: int)	
childoffset	niup.html#childoffset,FlatTabs_t,int,int	niup: childoffset(ih: FlatTabs_t; width, height: int)	
childoffset	niup.html#childoffset,FlatTabs_t	niup: childoffset(ih: FlatTabs_t): string	
childsizeall=	niup.html#childsizeall=,FlatTabs_t,string	niup: childsizeall=(ih: FlatTabs_t; value: string)	
childsizeall	niup.html#childsizeall,FlatTabs_t,string	niup: childsizeall(ih: FlatTabs_t; value: string)	
childsizeall=	niup.html#childsizeall=,FlatTabs_t,bool	niup: childsizeall=(ih: FlatTabs_t; yes: bool)	
childsizeall	niup.html#childsizeall,FlatTabs_t,bool	niup: childsizeall(ih: FlatTabs_t; yes: bool)	
childsizeall	niup.html#childsizeall,FlatTabs_t	niup: childsizeall(ih: FlatTabs_t): bool	
clientoffset	niup.html#clientoffset,FlatTabs_t	niup: clientoffset(ih: FlatTabs_t): string	
clientsize	niup.html#clientsize,FlatTabs_t	niup: clientsize(ih: FlatTabs_t): string	
closehighcolor	niup.html#closehighcolor,FlatTabs_t	niup: closehighcolor(ih: FlatTabs_t): string	
closeimage=	niup.html#closeimage=,FlatTabs_t,	niup: closeimage=(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimage	niup.html#closeimage,FlatTabs_t,	niup: closeimage(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimage	niup.html#closeimage,FlatTabs_t	niup: closeimage(ih: FlatTabs_t): string	
closeimagehighlight=	niup.html#closeimagehighlight=,FlatTabs_t,	niup: closeimagehighlight=(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimagehighlight	niup.html#closeimagehighlight,FlatTabs_t,	niup: closeimagehighlight(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimagehighlight	niup.html#closeimagehighlight,FlatTabs_t	niup: closeimagehighlight(ih: FlatTabs_t): string	
closeimageinactive=	niup.html#closeimageinactive=,FlatTabs_t,	niup: closeimageinactive=(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimageinactive	niup.html#closeimageinactive,FlatTabs_t,	niup: closeimageinactive(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimageinactive	niup.html#closeimageinactive,FlatTabs_t	niup: closeimageinactive(ih: FlatTabs_t): string	
closeimagepress=	niup.html#closeimagepress=,FlatTabs_t,	niup: closeimagepress=(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimagepress	niup.html#closeimagepress,FlatTabs_t,	niup: closeimagepress(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
closeimagepress	niup.html#closeimagepress,FlatTabs_t	niup: closeimagepress(ih: FlatTabs_t): string	
closepresscolor	niup.html#closepresscolor,FlatTabs_t	niup: closepresscolor(ih: FlatTabs_t): string	
count	niup.html#count,FlatTabs_t	niup: count(ih: FlatTabs_t): string	
cursor=	niup.html#cursor=,FlatTabs_t,	niup: cursor=(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatTabs_t,	niup: cursor(ih: FlatTabs_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatTabs_t	niup: cursor(ih: FlatTabs_t): string	
dragdrop=	niup.html#dragdrop=,FlatTabs_t,string	niup: dragdrop=(ih: FlatTabs_t; value: string)	
dragdrop	niup.html#dragdrop,FlatTabs_t,string	niup: dragdrop(ih: FlatTabs_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatTabs_t,bool	niup: dragdrop=(ih: FlatTabs_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatTabs_t,bool	niup: dragdrop(ih: FlatTabs_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatTabs_t	niup: dragdrop(ih: FlatTabs_t): bool	
dragsource=	niup.html#dragsource=,FlatTabs_t,string	niup: dragsource=(ih: FlatTabs_t; value: string)	
dragsource	niup.html#dragsource,FlatTabs_t,string	niup: dragsource(ih: FlatTabs_t; value: string)	
dragsource=	niup.html#dragsource=,FlatTabs_t,bool	niup: dragsource=(ih: FlatTabs_t; yes: bool)	
dragsource	niup.html#dragsource,FlatTabs_t,bool	niup: dragsource(ih: FlatTabs_t; yes: bool)	
dragsource	niup.html#dragsource,FlatTabs_t	niup: dragsource(ih: FlatTabs_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatTabs_t,string	niup: dragsourcemove=(ih: FlatTabs_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatTabs_t,string	niup: dragsourcemove(ih: FlatTabs_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatTabs_t,bool	niup: dragsourcemove=(ih: FlatTabs_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatTabs_t,bool	niup: dragsourcemove(ih: FlatTabs_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatTabs_t	niup: dragsourcemove(ih: FlatTabs_t): bool	
dragtypes=	niup.html#dragtypes=,FlatTabs_t,string	niup: dragtypes=(ih: FlatTabs_t; value: string)	
dragtypes	niup.html#dragtypes,FlatTabs_t,string	niup: dragtypes(ih: FlatTabs_t; value: string)	
dragtypes	niup.html#dragtypes,FlatTabs_t	niup: dragtypes(ih: FlatTabs_t): string	
drawable	niup.html#drawable,FlatTabs_t	niup: drawable(ih: FlatTabs_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatTabs_t,string	niup: drawbgcolor=(ih: FlatTabs_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatTabs_t,string	niup: drawbgcolor(ih: FlatTabs_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatTabs_t,int,int,int,int	niup: drawbgcolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatTabs_t,int,int,int,int	niup: drawbgcolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatTabs_t	niup: drawbgcolor(ih: FlatTabs_t): string	
drawcolor=	niup.html#drawcolor=,FlatTabs_t,string	niup: drawcolor=(ih: FlatTabs_t; value: string)	
drawcolor	niup.html#drawcolor,FlatTabs_t,string	niup: drawcolor(ih: FlatTabs_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatTabs_t,int,int,int,int	niup: drawcolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatTabs_t,int,int,int,int	niup: drawcolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatTabs_t	niup: drawcolor(ih: FlatTabs_t): string	
drawdriver	niup.html#drawdriver,FlatTabs_t	niup: drawdriver(ih: FlatTabs_t): string	
drawfont=	niup.html#drawfont=,FlatTabs_t,string	niup: drawfont=(ih: FlatTabs_t; value: string)	
drawfont	niup.html#drawfont,FlatTabs_t,string	niup: drawfont(ih: FlatTabs_t; value: string)	
drawfont	niup.html#drawfont,FlatTabs_t	niup: drawfont(ih: FlatTabs_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatTabs_t,string	niup: drawlinewidth=(ih: FlatTabs_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatTabs_t,string	niup: drawlinewidth(ih: FlatTabs_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatTabs_t,int	niup: drawlinewidth=(ih: FlatTabs_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatTabs_t,int	niup: drawlinewidth(ih: FlatTabs_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatTabs_t	niup: drawlinewidth(ih: FlatTabs_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatTabs_t,string	niup: drawmakeinactive=(ih: FlatTabs_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatTabs_t,string	niup: drawmakeinactive(ih: FlatTabs_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatTabs_t,bool	niup: drawmakeinactive=(ih: FlatTabs_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatTabs_t,bool	niup: drawmakeinactive(ih: FlatTabs_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatTabs_t	niup: drawmakeinactive(ih: FlatTabs_t): bool	
drawsize	niup.html#drawsize,FlatTabs_t	niup: drawsize(ih: FlatTabs_t): string	
drawstyle=	niup.html#drawstyle=,FlatTabs_t,string	niup: drawstyle=(ih: FlatTabs_t; value: string)	
drawstyle	niup.html#drawstyle,FlatTabs_t,string	niup: drawstyle(ih: FlatTabs_t; value: string)	
drawstyle	niup.html#drawstyle,FlatTabs_t	niup: drawstyle(ih: FlatTabs_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatTabs_t,string	niup: drawtextalignment=(ih: FlatTabs_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatTabs_t,string	niup: drawtextalignment(ih: FlatTabs_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatTabs_t	niup: drawtextalignment(ih: FlatTabs_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatTabs_t,string	niup: drawtextclip=(ih: FlatTabs_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatTabs_t,string	niup: drawtextclip(ih: FlatTabs_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatTabs_t,bool	niup: drawtextclip=(ih: FlatTabs_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatTabs_t,bool	niup: drawtextclip(ih: FlatTabs_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatTabs_t	niup: drawtextclip(ih: FlatTabs_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatTabs_t,string	niup: drawtextellipsis=(ih: FlatTabs_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatTabs_t,string	niup: drawtextellipsis(ih: FlatTabs_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatTabs_t,bool	niup: drawtextellipsis=(ih: FlatTabs_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatTabs_t,bool	niup: drawtextellipsis(ih: FlatTabs_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatTabs_t	niup: drawtextellipsis(ih: FlatTabs_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatTabs_t,string	niup: drawtextlayoutcenter=(ih: FlatTabs_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatTabs_t,string	niup: drawtextlayoutcenter(ih: FlatTabs_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatTabs_t,bool	niup: drawtextlayoutcenter=(ih: FlatTabs_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatTabs_t,bool	niup: drawtextlayoutcenter(ih: FlatTabs_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatTabs_t	niup: drawtextlayoutcenter(ih: FlatTabs_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatTabs_t,string	niup: drawtextorientation=(ih: FlatTabs_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatTabs_t,string	niup: drawtextorientation(ih: FlatTabs_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatTabs_t,int64	niup: drawtextorientation=(ih: FlatTabs_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatTabs_t,int64	niup: drawtextorientation(ih: FlatTabs_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatTabs_t	niup: drawtextorientation(ih: FlatTabs_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatTabs_t,string	niup: drawtextwrap=(ih: FlatTabs_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatTabs_t,string	niup: drawtextwrap(ih: FlatTabs_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatTabs_t,bool	niup: drawtextwrap=(ih: FlatTabs_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatTabs_t,bool	niup: drawtextwrap(ih: FlatTabs_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatTabs_t	niup: drawtextwrap(ih: FlatTabs_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatTabs_t,string	niup: dropfilestarget=(ih: FlatTabs_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatTabs_t,string	niup: dropfilestarget(ih: FlatTabs_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatTabs_t,bool	niup: dropfilestarget=(ih: FlatTabs_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatTabs_t,bool	niup: dropfilestarget(ih: FlatTabs_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatTabs_t	niup: dropfilestarget(ih: FlatTabs_t): bool	
droptarget=	niup.html#droptarget=,FlatTabs_t,string	niup: droptarget=(ih: FlatTabs_t; value: string)	
droptarget	niup.html#droptarget,FlatTabs_t,string	niup: droptarget(ih: FlatTabs_t; value: string)	
droptarget=	niup.html#droptarget=,FlatTabs_t,bool	niup: droptarget=(ih: FlatTabs_t; yes: bool)	
droptarget	niup.html#droptarget,FlatTabs_t,bool	niup: droptarget(ih: FlatTabs_t; yes: bool)	
droptarget	niup.html#droptarget,FlatTabs_t	niup: droptarget(ih: FlatTabs_t): bool	
droptypes=	niup.html#droptypes=,FlatTabs_t,string	niup: droptypes=(ih: FlatTabs_t; value: string)	
droptypes	niup.html#droptypes,FlatTabs_t,string	niup: droptypes(ih: FlatTabs_t; value: string)	
droptypes	niup.html#droptypes,FlatTabs_t	niup: droptypes(ih: FlatTabs_t): string	
dx=	niup.html#dx=,FlatTabs_t,string	niup: dx=(ih: FlatTabs_t; value: string)	
dx	niup.html#dx,FlatTabs_t,string	niup: dx(ih: FlatTabs_t; value: string)	
dx=	niup.html#dx=,FlatTabs_t,int64	niup: dx=(ih: FlatTabs_t; x: int64)	
dx	niup.html#dx,FlatTabs_t,int64	niup: dx(ih: FlatTabs_t; x: int64)	
dx	niup.html#dx,FlatTabs_t	niup: dx(ih: FlatTabs_t): string	
dy=	niup.html#dy=,FlatTabs_t,string	niup: dy=(ih: FlatTabs_t; value: string)	
dy	niup.html#dy,FlatTabs_t,string	niup: dy(ih: FlatTabs_t; value: string)	
dy=	niup.html#dy=,FlatTabs_t,int64	niup: dy=(ih: FlatTabs_t; x: int64)	
dy	niup.html#dy,FlatTabs_t,int64	niup: dy(ih: FlatTabs_t; x: int64)	
dy	niup.html#dy,FlatTabs_t	niup: dy(ih: FlatTabs_t): string	
expand=	niup.html#expand=,FlatTabs_t,string	niup: expand=(ih: FlatTabs_t; value: string)	
expand	niup.html#expand,FlatTabs_t,string	niup: expand(ih: FlatTabs_t; value: string)	
expand	niup.html#expand,FlatTabs_t	niup: expand(ih: FlatTabs_t): string	
expandbutton	niup.html#expandbutton,FlatTabs_t	niup: expandbutton(ih: FlatTabs_t): string	
expandbuttonpos	niup.html#expandbuttonpos,FlatTabs_t	niup: expandbuttonpos(ih: FlatTabs_t): string	
expandbuttonstate	niup.html#expandbuttonstate,FlatTabs_t	niup: expandbuttonstate(ih: FlatTabs_t): string	
expandweight=	niup.html#expandweight=,FlatTabs_t,string	niup: expandweight=(ih: FlatTabs_t; value: string)	
expandweight	niup.html#expandweight,FlatTabs_t,string	niup: expandweight(ih: FlatTabs_t; value: string)	
expandweight=	niup.html#expandweight=,FlatTabs_t,int64	niup: expandweight=(ih: FlatTabs_t; x: int64)	
expandweight	niup.html#expandweight,FlatTabs_t,int64	niup: expandweight(ih: FlatTabs_t; x: int64)	
expandweight	niup.html#expandweight,FlatTabs_t	niup: expandweight(ih: FlatTabs_t): string	
extrabuttons=	niup.html#extrabuttons=,FlatTabs_t,string	niup: extrabuttons=(ih: FlatTabs_t; value: string)	
extrabuttons	niup.html#extrabuttons,FlatTabs_t,string	niup: extrabuttons(ih: FlatTabs_t; value: string)	
extrabuttons=	niup.html#extrabuttons=,FlatTabs_t,int	niup: extrabuttons=(ih: FlatTabs_t; x: int)	
extrabuttons	niup.html#extrabuttons,FlatTabs_t,int	niup: extrabuttons(ih: FlatTabs_t; x: int)	
extrabuttons	niup.html#extrabuttons,FlatTabs_t	niup: extrabuttons(ih: FlatTabs_t): string	
fixedwidth	niup.html#fixedwidth,FlatTabs_t	niup: fixedwidth(ih: FlatTabs_t): string	
floating=	niup.html#floating=,FlatTabs_t,string	niup: floating=(ih: FlatTabs_t; value: string)	
floating	niup.html#floating,FlatTabs_t,string	niup: floating(ih: FlatTabs_t; value: string)	
floating	niup.html#floating,FlatTabs_t	niup: floating(ih: FlatTabs_t): string	
focusfeedback=	niup.html#focusfeedback=,FlatTabs_t,string	niup: focusfeedback=(ih: FlatTabs_t; value: string)	
focusfeedback	niup.html#focusfeedback,FlatTabs_t,string	niup: focusfeedback(ih: FlatTabs_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,FlatTabs_t,bool	niup: focusfeedback=(ih: FlatTabs_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatTabs_t,bool	niup: focusfeedback(ih: FlatTabs_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatTabs_t	niup: focusfeedback(ih: FlatTabs_t): bool	
font=	niup.html#font=,FlatTabs_t,string	niup: font=(ih: FlatTabs_t; value: string)	
font	niup.html#font,FlatTabs_t,string	niup: font(ih: FlatTabs_t; value: string)	
font	niup.html#font,FlatTabs_t	niup: font(ih: FlatTabs_t): string	
fontface=	niup.html#fontface=,FlatTabs_t,string	niup: fontface=(ih: FlatTabs_t; value: string)	
fontface	niup.html#fontface,FlatTabs_t,string	niup: fontface(ih: FlatTabs_t; value: string)	
fontface	niup.html#fontface,FlatTabs_t	niup: fontface(ih: FlatTabs_t): string	
fontsize=	niup.html#fontsize=,FlatTabs_t,string	niup: fontsize=(ih: FlatTabs_t; value: string)	
fontsize	niup.html#fontsize,FlatTabs_t,string	niup: fontsize(ih: FlatTabs_t; value: string)	
fontsize=	niup.html#fontsize=,FlatTabs_t,int	niup: fontsize=(ih: FlatTabs_t; x: int)	
fontsize	niup.html#fontsize,FlatTabs_t,int	niup: fontsize(ih: FlatTabs_t; x: int)	
fontsize	niup.html#fontsize,FlatTabs_t	niup: fontsize(ih: FlatTabs_t): string	
fontstyle=	niup.html#fontstyle=,FlatTabs_t,string	niup: fontstyle=(ih: FlatTabs_t; value: string)	
fontstyle	niup.html#fontstyle,FlatTabs_t,string	niup: fontstyle(ih: FlatTabs_t; value: string)	
fontstyle	niup.html#fontstyle,FlatTabs_t	niup: fontstyle(ih: FlatTabs_t): string	
forecolor=	niup.html#forecolor=,FlatTabs_t,string	niup: forecolor=(ih: FlatTabs_t; value: string)	
forecolor	niup.html#forecolor,FlatTabs_t,string	niup: forecolor(ih: FlatTabs_t; value: string)	
forecolor=	niup.html#forecolor=,FlatTabs_t,int,int,int,int	niup: forecolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
forecolor	niup.html#forecolor,FlatTabs_t,int,int,int,int	niup: forecolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
forecolor	niup.html#forecolor,FlatTabs_t	niup: forecolor(ih: FlatTabs_t): string	
handlename=	niup.html#handlename=,FlatTabs_t,string	niup: handlename=(ih: FlatTabs_t; value: string)	
handlename	niup.html#handlename,FlatTabs_t,string	niup: handlename(ih: FlatTabs_t; value: string)	
handlename	niup.html#handlename,FlatTabs_t	niup: handlename(ih: FlatTabs_t): string	
hasfocus	niup.html#hasfocus,FlatTabs_t	niup: hasfocus(ih: FlatTabs_t): bool	
highcolor=	niup.html#highcolor=,FlatTabs_t,string	niup: highcolor=(ih: FlatTabs_t; value: string)	
highcolor	niup.html#highcolor,FlatTabs_t,string	niup: highcolor(ih: FlatTabs_t; value: string)	
highcolor=	niup.html#highcolor=,FlatTabs_t,int,int,int,int	niup: highcolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
highcolor	niup.html#highcolor,FlatTabs_t,int,int,int,int	niup: highcolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
highcolor	niup.html#highcolor,FlatTabs_t	niup: highcolor(ih: FlatTabs_t): string	
linex=	niup.html#linex=,FlatTabs_t,string	niup: linex=(ih: FlatTabs_t; value: string)	
linex	niup.html#linex,FlatTabs_t,string	niup: linex(ih: FlatTabs_t; value: string)	
linex=	niup.html#linex=,FlatTabs_t,int64	niup: linex=(ih: FlatTabs_t; x: int64)	
linex	niup.html#linex,FlatTabs_t,int64	niup: linex(ih: FlatTabs_t; x: int64)	
linex	niup.html#linex,FlatTabs_t	niup: linex(ih: FlatTabs_t): string	
liney=	niup.html#liney=,FlatTabs_t,string	niup: liney=(ih: FlatTabs_t; value: string)	
liney	niup.html#liney,FlatTabs_t,string	niup: liney(ih: FlatTabs_t; value: string)	
liney=	niup.html#liney=,FlatTabs_t,int64	niup: liney=(ih: FlatTabs_t; x: int64)	
liney	niup.html#liney,FlatTabs_t,int64	niup: liney(ih: FlatTabs_t; x: int64)	
liney	niup.html#liney,FlatTabs_t	niup: liney(ih: FlatTabs_t): string	
maxsize=	niup.html#maxsize=,FlatTabs_t,string	niup: maxsize=(ih: FlatTabs_t; value: string)	
maxsize	niup.html#maxsize,FlatTabs_t,string	niup: maxsize(ih: FlatTabs_t; value: string)	
maxsize=	niup.html#maxsize=,FlatTabs_t,int,int	niup: maxsize=(ih: FlatTabs_t; width, height: int)	
maxsize	niup.html#maxsize,FlatTabs_t,int,int	niup: maxsize(ih: FlatTabs_t; width, height: int)	
maxsize	niup.html#maxsize,FlatTabs_t	niup: maxsize(ih: FlatTabs_t): string	
minsize=	niup.html#minsize=,FlatTabs_t,string	niup: minsize=(ih: FlatTabs_t; value: string)	
minsize	niup.html#minsize,FlatTabs_t,string	niup: minsize(ih: FlatTabs_t; value: string)	
minsize=	niup.html#minsize=,FlatTabs_t,int,int	niup: minsize=(ih: FlatTabs_t; width, height: int)	
minsize	niup.html#minsize,FlatTabs_t,int,int	niup: minsize(ih: FlatTabs_t; width, height: int)	
minsize	niup.html#minsize,FlatTabs_t	niup: minsize(ih: FlatTabs_t): string	
name=	niup.html#name=,FlatTabs_t,string	niup: name=(ih: FlatTabs_t; value: string)	
name	niup.html#name,FlatTabs_t,string	niup: name(ih: FlatTabs_t; value: string)	
name	niup.html#name,FlatTabs_t	niup: name(ih: FlatTabs_t): string	
naturalsize	niup.html#naturalsize,FlatTabs_t	niup: naturalsize(ih: FlatTabs_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatTabs_t,string	niup: normalizergroup=(ih: FlatTabs_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatTabs_t,string	niup: normalizergroup(ih: FlatTabs_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatTabs_t	niup: normalizergroup(ih: FlatTabs_t): string	
ntheme=	niup.html#ntheme=,FlatTabs_t,string	niup: ntheme=(ih: FlatTabs_t; value: string)	
ntheme	niup.html#ntheme,FlatTabs_t,string	niup: ntheme(ih: FlatTabs_t; value: string)	
ntheme	niup.html#ntheme,FlatTabs_t	niup: ntheme(ih: FlatTabs_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatTabs_t	niup: pangofontdesc(ih: FlatTabs_t): string	
pangolayout	niup.html#pangolayout,FlatTabs_t	niup: pangolayout(ih: FlatTabs_t): string	
position=	niup.html#position=,FlatTabs_t,string	niup: position=(ih: FlatTabs_t; value: string)	
position	niup.html#position,FlatTabs_t,string	niup: position(ih: FlatTabs_t; value: string)	
position=	niup.html#position=,FlatTabs_t,int,int	niup: position=(ih: FlatTabs_t; x, y: int)	
position	niup.html#position,FlatTabs_t,int,int	niup: position(ih: FlatTabs_t; x, y: int)	
position	niup.html#position,FlatTabs_t	niup: position(ih: FlatTabs_t): string	
posx=	niup.html#posx=,FlatTabs_t,string	niup: posx=(ih: FlatTabs_t; value: string)	
posx	niup.html#posx,FlatTabs_t,string	niup: posx(ih: FlatTabs_t; value: string)	
posx=	niup.html#posx=,FlatTabs_t,int64	niup: posx=(ih: FlatTabs_t; x: int64)	
posx	niup.html#posx,FlatTabs_t,int64	niup: posx(ih: FlatTabs_t; x: int64)	
posx	niup.html#posx,FlatTabs_t	niup: posx(ih: FlatTabs_t): string	
posy=	niup.html#posy=,FlatTabs_t,string	niup: posy=(ih: FlatTabs_t; value: string)	
posy	niup.html#posy,FlatTabs_t,string	niup: posy(ih: FlatTabs_t; value: string)	
posy=	niup.html#posy=,FlatTabs_t,int64	niup: posy=(ih: FlatTabs_t; x: int64)	
posy	niup.html#posy,FlatTabs_t,int64	niup: posy(ih: FlatTabs_t; x: int64)	
posy	niup.html#posy,FlatTabs_t	niup: posy(ih: FlatTabs_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatTabs_t,string	niup: propagatefocus=(ih: FlatTabs_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatTabs_t,string	niup: propagatefocus(ih: FlatTabs_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatTabs_t,bool	niup: propagatefocus=(ih: FlatTabs_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatTabs_t,bool	niup: propagatefocus(ih: FlatTabs_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatTabs_t	niup: propagatefocus(ih: FlatTabs_t): bool	
rastersize=	niup.html#rastersize=,FlatTabs_t,string	niup: rastersize=(ih: FlatTabs_t; value: string)	
rastersize	niup.html#rastersize,FlatTabs_t,string	niup: rastersize(ih: FlatTabs_t; value: string)	
rastersize=	niup.html#rastersize=,FlatTabs_t,int,int	niup: rastersize=(ih: FlatTabs_t; width, height: int)	
rastersize	niup.html#rastersize,FlatTabs_t,int,int	niup: rastersize(ih: FlatTabs_t; width, height: int)	
rastersize	niup.html#rastersize,FlatTabs_t	niup: rastersize(ih: FlatTabs_t): string	
sb_resize	niup.html#sb_resize,FlatTabs_t	niup: sb_resize(ih: FlatTabs_t): string	
screenposition	niup.html#screenposition,FlatTabs_t	niup: screenposition(ih: FlatTabs_t): string	
scrollbar	niup.html#scrollbar,FlatTabs_t	niup: scrollbar(ih: FlatTabs_t): bool	
showclose=	niup.html#showclose=,FlatTabs_t,string	niup: showclose=(ih: FlatTabs_t; value: string)	
showclose	niup.html#showclose,FlatTabs_t,string	niup: showclose(ih: FlatTabs_t; value: string)	
showclose=	niup.html#showclose=,FlatTabs_t,bool	niup: showclose=(ih: FlatTabs_t; yes: bool)	
showclose	niup.html#showclose,FlatTabs_t,bool	niup: showclose(ih: FlatTabs_t; yes: bool)	
showclose	niup.html#showclose,FlatTabs_t	niup: showclose(ih: FlatTabs_t): bool	
showlines	niup.html#showlines,FlatTabs_t	niup: showlines(ih: FlatTabs_t): string	
size=	niup.html#size=,FlatTabs_t,string	niup: size=(ih: FlatTabs_t; value: string)	
size	niup.html#size,FlatTabs_t,string	niup: size(ih: FlatTabs_t; value: string)	
size=	niup.html#size=,FlatTabs_t,int,int	niup: size=(ih: FlatTabs_t; width, height: int)	
size	niup.html#size,FlatTabs_t,int,int	niup: size(ih: FlatTabs_t; width, height: int)	
size	niup.html#size,FlatTabs_t	niup: size(ih: FlatTabs_t): string	
tabchangeoncheck	niup.html#tabchangeoncheck,FlatTabs_t	niup: tabchangeoncheck(ih: FlatTabs_t): string	
taborientation=	niup.html#taborientation=,FlatTabs_t,string	niup: taborientation=(ih: FlatTabs_t; value: string)	
taborientation	niup.html#taborientation,FlatTabs_t,string	niup: taborientation(ih: FlatTabs_t; value: string)	
taborientation	niup.html#taborientation,FlatTabs_t	niup: taborientation(ih: FlatTabs_t): string	
tabsalignment	niup.html#tabsalignment,FlatTabs_t	niup: tabsalignment(ih: FlatTabs_t): string	
tabsbackcolor	niup.html#tabsbackcolor,FlatTabs_t	niup: tabsbackcolor(ih: FlatTabs_t): string	
tabsfont	niup.html#tabsfont,FlatTabs_t	niup: tabsfont(ih: FlatTabs_t): string	
tabsfontsize=	niup.html#tabsfontsize=,FlatTabs_t,string	niup: tabsfontsize=(ih: FlatTabs_t; value: string)	
tabsfontsize	niup.html#tabsfontsize,FlatTabs_t,string	niup: tabsfontsize(ih: FlatTabs_t; value: string)	
tabsfontsize=	niup.html#tabsfontsize=,FlatTabs_t,int	niup: tabsfontsize=(ih: FlatTabs_t; x: int)	
tabsfontsize	niup.html#tabsfontsize,FlatTabs_t,int	niup: tabsfontsize(ih: FlatTabs_t; x: int)	
tabsfontsize	niup.html#tabsfontsize,FlatTabs_t	niup: tabsfontsize(ih: FlatTabs_t): string	
tabsfontstyle	niup.html#tabsfontstyle,FlatTabs_t	niup: tabsfontstyle(ih: FlatTabs_t): string	
tabsforecolor	niup.html#tabsforecolor,FlatTabs_t	niup: tabsforecolor(ih: FlatTabs_t): string	
tabshighcolor	niup.html#tabshighcolor,FlatTabs_t	niup: tabshighcolor(ih: FlatTabs_t): string	
tabsimageposition	niup.html#tabsimageposition,FlatTabs_t	niup: tabsimageposition(ih: FlatTabs_t): string	
tabsimagespacing	niup.html#tabsimagespacing,FlatTabs_t	niup: tabsimagespacing(ih: FlatTabs_t): string	
tabslinecolor	niup.html#tabslinecolor,FlatTabs_t	niup: tabslinecolor(ih: FlatTabs_t): string	
tabspadding	niup.html#tabspadding,FlatTabs_t	niup: tabspadding(ih: FlatTabs_t): string	
tabstextalignment	niup.html#tabstextalignment,FlatTabs_t	niup: tabstextalignment(ih: FlatTabs_t): string	
tabstextclip	niup.html#tabstextclip,FlatTabs_t	niup: tabstextclip(ih: FlatTabs_t): string	
tabstextellipsis	niup.html#tabstextellipsis,FlatTabs_t	niup: tabstextellipsis(ih: FlatTabs_t): string	
tabstextorientation	niup.html#tabstextorientation,FlatTabs_t	niup: tabstextorientation(ih: FlatTabs_t): string	
tabstextwrap	niup.html#tabstextwrap,FlatTabs_t	niup: tabstextwrap(ih: FlatTabs_t): string	
tabtype=	niup.html#tabtype=,FlatTabs_t,string	niup: tabtype=(ih: FlatTabs_t; value: string)	
tabtype	niup.html#tabtype,FlatTabs_t,string	niup: tabtype(ih: FlatTabs_t; value: string)	
tabtype	niup.html#tabtype,FlatTabs_t	niup: tabtype(ih: FlatTabs_t): string	
theme=	niup.html#theme=,FlatTabs_t,string	niup: theme=(ih: FlatTabs_t; value: string)	
theme	niup.html#theme,FlatTabs_t,string	niup: theme(ih: FlatTabs_t; value: string)	
theme	niup.html#theme,FlatTabs_t	niup: theme(ih: FlatTabs_t): string	
tip=	niup.html#tip=,FlatTabs_t,string	niup: tip=(ih: FlatTabs_t; value: string)	
tip	niup.html#tip,FlatTabs_t,string	niup: tip(ih: FlatTabs_t; value: string)	
tip	niup.html#tip,FlatTabs_t	niup: tip(ih: FlatTabs_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatTabs_t,string	niup: tipbgcolor=(ih: FlatTabs_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatTabs_t,string	niup: tipbgcolor(ih: FlatTabs_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatTabs_t,int,int,int,int	niup: tipbgcolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatTabs_t,int,int,int,int	niup: tipbgcolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatTabs_t	niup: tipbgcolor(ih: FlatTabs_t): string	
tipdelay=	niup.html#tipdelay=,FlatTabs_t,string	niup: tipdelay=(ih: FlatTabs_t; value: string)	
tipdelay	niup.html#tipdelay,FlatTabs_t,string	niup: tipdelay(ih: FlatTabs_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatTabs_t,int	niup: tipdelay=(ih: FlatTabs_t; x: int)	
tipdelay	niup.html#tipdelay,FlatTabs_t,int	niup: tipdelay(ih: FlatTabs_t; x: int)	
tipdelay	niup.html#tipdelay,FlatTabs_t	niup: tipdelay(ih: FlatTabs_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatTabs_t,string	niup: tipfgcolor=(ih: FlatTabs_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatTabs_t,string	niup: tipfgcolor(ih: FlatTabs_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatTabs_t,int,int,int,int	niup: tipfgcolor=(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatTabs_t,int,int,int,int	niup: tipfgcolor(ih: FlatTabs_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatTabs_t	niup: tipfgcolor(ih: FlatTabs_t): string	
tipicon=	niup.html#tipicon=,FlatTabs_t,string	niup: tipicon=(ih: FlatTabs_t; value: string)	
tipicon	niup.html#tipicon,FlatTabs_t,string	niup: tipicon(ih: FlatTabs_t; value: string)	
tipicon	niup.html#tipicon,FlatTabs_t	niup: tipicon(ih: FlatTabs_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatTabs_t,string	niup: tipmarkup=(ih: FlatTabs_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatTabs_t,string	niup: tipmarkup(ih: FlatTabs_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatTabs_t	niup: tipmarkup(ih: FlatTabs_t): string	
tiprect=	niup.html#tiprect=,FlatTabs_t,string	niup: tiprect=(ih: FlatTabs_t; value: string)	
tiprect	niup.html#tiprect,FlatTabs_t,string	niup: tiprect(ih: FlatTabs_t; value: string)	
tiprect=	niup.html#tiprect=,FlatTabs_t,int,int,int,int	niup: tiprect=(ih: FlatTabs_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatTabs_t,int,int,int,int	niup: tiprect(ih: FlatTabs_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatTabs_t	niup: tiprect(ih: FlatTabs_t): string	
tipvisible=	niup.html#tipvisible=,FlatTabs_t,string	niup: tipvisible=(ih: FlatTabs_t; value: string)	
tipvisible	niup.html#tipvisible,FlatTabs_t,string	niup: tipvisible(ih: FlatTabs_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatTabs_t,bool	niup: tipvisible=(ih: FlatTabs_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatTabs_t,bool	niup: tipvisible(ih: FlatTabs_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatTabs_t	niup: tipvisible(ih: FlatTabs_t): bool	
touch=	niup.html#touch=,FlatTabs_t,string	niup: touch=(ih: FlatTabs_t; value: string)	
touch	niup.html#touch,FlatTabs_t,string	niup: touch(ih: FlatTabs_t; value: string)	
touch=	niup.html#touch=,FlatTabs_t,bool	niup: touch=(ih: FlatTabs_t; yes: bool)	
touch	niup.html#touch,FlatTabs_t,bool	niup: touch(ih: FlatTabs_t; yes: bool)	
touch	niup.html#touch,FlatTabs_t	niup: touch(ih: FlatTabs_t): bool	
usersize=	niup.html#usersize=,FlatTabs_t,string	niup: usersize=(ih: FlatTabs_t; value: string)	
usersize	niup.html#usersize,FlatTabs_t,string	niup: usersize(ih: FlatTabs_t; value: string)	
usersize=	niup.html#usersize=,FlatTabs_t,int,int	niup: usersize=(ih: FlatTabs_t; width, height: int)	
usersize	niup.html#usersize,FlatTabs_t,int,int	niup: usersize(ih: FlatTabs_t; width, height: int)	
usersize	niup.html#usersize,FlatTabs_t	niup: usersize(ih: FlatTabs_t): string	
value=	niup.html#value=,FlatTabs_t,string	niup: value=(ih: FlatTabs_t; value: string)	
value	niup.html#value,FlatTabs_t,string	niup: value(ih: FlatTabs_t; value: string)	
value	niup.html#value,FlatTabs_t	niup: value(ih: FlatTabs_t): string	
valuepos=	niup.html#valuepos=,FlatTabs_t,string	niup: valuepos=(ih: FlatTabs_t; value: string)	
valuepos	niup.html#valuepos,FlatTabs_t,string	niup: valuepos(ih: FlatTabs_t; value: string)	
valuepos=	niup.html#valuepos=,FlatTabs_t,int	niup: valuepos=(ih: FlatTabs_t; x: int)	
valuepos	niup.html#valuepos,FlatTabs_t,int	niup: valuepos(ih: FlatTabs_t; x: int)	
valuepos	niup.html#valuepos,FlatTabs_t	niup: valuepos(ih: FlatTabs_t): string	
value_handle=	niup.html#value_handle=,FlatTabs_t,User_t	niup: value_handle=(ih: FlatTabs_t; handle: User_t)	
value_handle	niup.html#value_handle,FlatTabs_t,User_t	niup: value_handle(ih: FlatTabs_t; handle: User_t)	
value_handle	niup.html#value_handle,FlatTabs_t	niup: value_handle(ih: FlatTabs_t): string	
visible=	niup.html#visible=,FlatTabs_t,string	niup: visible=(ih: FlatTabs_t; value: string)	
visible	niup.html#visible,FlatTabs_t,string	niup: visible(ih: FlatTabs_t; value: string)	
visible=	niup.html#visible=,FlatTabs_t,bool	niup: visible=(ih: FlatTabs_t; yes: bool)	
visible	niup.html#visible,FlatTabs_t,bool	niup: visible(ih: FlatTabs_t; yes: bool)	
visible	niup.html#visible,FlatTabs_t	niup: visible(ih: FlatTabs_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatTabs_t,string	niup: wheeldropfocus=(ih: FlatTabs_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatTabs_t,string	niup: wheeldropfocus(ih: FlatTabs_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatTabs_t,bool	niup: wheeldropfocus=(ih: FlatTabs_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatTabs_t,bool	niup: wheeldropfocus(ih: FlatTabs_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatTabs_t	niup: wheeldropfocus(ih: FlatTabs_t): bool	
wid	niup.html#wid,FlatTabs_t	niup: wid(ih: FlatTabs_t): string	
x	niup.html#x,FlatTabs_t	niup: x(ih: FlatTabs_t): string	
xautohide=	niup.html#xautohide=,FlatTabs_t,string	niup: xautohide=(ih: FlatTabs_t; value: string)	
xautohide	niup.html#xautohide,FlatTabs_t,string	niup: xautohide(ih: FlatTabs_t; value: string)	
xautohide=	niup.html#xautohide=,FlatTabs_t,bool	niup: xautohide=(ih: FlatTabs_t; yes: bool)	
xautohide	niup.html#xautohide,FlatTabs_t,bool	niup: xautohide(ih: FlatTabs_t; yes: bool)	
xautohide	niup.html#xautohide,FlatTabs_t	niup: xautohide(ih: FlatTabs_t): bool	
xdisplay	niup.html#xdisplay,FlatTabs_t	niup: xdisplay(ih: FlatTabs_t): string	
xfontid	niup.html#xfontid,FlatTabs_t	niup: xfontid(ih: FlatTabs_t): string	
xhidden	niup.html#xhidden,FlatTabs_t	niup: xhidden(ih: FlatTabs_t): bool	
xmax=	niup.html#xmax=,FlatTabs_t,string	niup: xmax=(ih: FlatTabs_t; value: string)	
xmax	niup.html#xmax,FlatTabs_t,string	niup: xmax(ih: FlatTabs_t; value: string)	
xmax=	niup.html#xmax=,FlatTabs_t,int	niup: xmax=(ih: FlatTabs_t; x: int)	
xmax	niup.html#xmax,FlatTabs_t,int	niup: xmax(ih: FlatTabs_t; x: int)	
xmax	niup.html#xmax,FlatTabs_t	niup: xmax(ih: FlatTabs_t): string	
xmin=	niup.html#xmin=,FlatTabs_t,string	niup: xmin=(ih: FlatTabs_t; value: string)	
xmin	niup.html#xmin,FlatTabs_t,string	niup: xmin(ih: FlatTabs_t; value: string)	
xmin=	niup.html#xmin=,FlatTabs_t,int	niup: xmin=(ih: FlatTabs_t; x: int)	
xmin	niup.html#xmin,FlatTabs_t,int	niup: xmin(ih: FlatTabs_t; x: int)	
xmin	niup.html#xmin,FlatTabs_t	niup: xmin(ih: FlatTabs_t): string	
xwindow	niup.html#xwindow,FlatTabs_t	niup: xwindow(ih: FlatTabs_t): string	
y	niup.html#y,FlatTabs_t	niup: y(ih: FlatTabs_t): string	
yautohide=	niup.html#yautohide=,FlatTabs_t,string	niup: yautohide=(ih: FlatTabs_t; value: string)	
yautohide	niup.html#yautohide,FlatTabs_t,string	niup: yautohide(ih: FlatTabs_t; value: string)	
yautohide=	niup.html#yautohide=,FlatTabs_t,bool	niup: yautohide=(ih: FlatTabs_t; yes: bool)	
yautohide	niup.html#yautohide,FlatTabs_t,bool	niup: yautohide(ih: FlatTabs_t; yes: bool)	
yautohide	niup.html#yautohide,FlatTabs_t	niup: yautohide(ih: FlatTabs_t): bool	
yhidden	niup.html#yhidden,FlatTabs_t	niup: yhidden(ih: FlatTabs_t): bool	
ymax=	niup.html#ymax=,FlatTabs_t,string	niup: ymax=(ih: FlatTabs_t; value: string)	
ymax	niup.html#ymax,FlatTabs_t,string	niup: ymax(ih: FlatTabs_t; value: string)	
ymax=	niup.html#ymax=,FlatTabs_t,int	niup: ymax=(ih: FlatTabs_t; x: int)	
ymax	niup.html#ymax,FlatTabs_t,int	niup: ymax(ih: FlatTabs_t; x: int)	
ymax	niup.html#ymax,FlatTabs_t	niup: ymax(ih: FlatTabs_t): string	
ymin=	niup.html#ymin=,FlatTabs_t,string	niup: ymin=(ih: FlatTabs_t; value: string)	
ymin	niup.html#ymin,FlatTabs_t,string	niup: ymin(ih: FlatTabs_t; value: string)	
ymin=	niup.html#ymin=,FlatTabs_t,int	niup: ymin=(ih: FlatTabs_t; x: int)	
ymin	niup.html#ymin,FlatTabs_t,int	niup: ymin(ih: FlatTabs_t; x: int)	
ymin	niup.html#ymin,FlatTabs_t	niup: ymin(ih: FlatTabs_t): string	
zorder=	niup.html#zorder=,FlatTabs_t,string	niup: zorder=(ih: FlatTabs_t; value: string)	
zorder	niup.html#zorder,FlatTabs_t,string	niup: zorder(ih: FlatTabs_t; value: string)	
action=	niup.html#action=,FlatTabs_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatTabs_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatTabs_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatTabs_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatTabs_t	niup: action(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatTabs_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatTabs_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                    arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatTabs_t	niup: button_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatTabs_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatTabs_t,proc(PIhandle)	niup: destroy_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatTabs_t	niup: destroy_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatTabs_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatTabs_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatTabs_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatTabs_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatTabs_t	niup: dragbegin_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatTabs_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatTabs_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatTabs_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatTabs_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatTabs_t	niup: dragdatasize_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatTabs_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatTabs_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatTabs_t	niup: dragdata_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatTabs_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatTabs_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatTabs_t	niup: dragend_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatTabs_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatTabs_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatTabs_t	niup: dropdata_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatTabs_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatTabs_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatTabs_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatTabs_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatTabs_t	niup: dropfiles_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatTabs_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatTabs_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatTabs_t	niup: dropmotion_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatTabs_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatTabs_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatTabs_t	niup: enterwindow_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
extrabutton_cb=	niup.html#extrabutton_cb=,FlatTabs_t,proc(PIhandle,cint,cint)	niup: extrabutton_cb=(ih: FlatTabs_t;\n                cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
extrabutton_cb	niup.html#extrabutton_cb,FlatTabs_t,proc(PIhandle,cint,cint)	niup: extrabutton_cb(ih: FlatTabs_t;\n               cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
extrabutton_cb	niup.html#extrabutton_cb,FlatTabs_t	niup: extrabutton_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,FlatTabs_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatTabs_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatTabs_t	niup: flat_button_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_getfocus_cb=	niup.html#flat_getfocus_cb=,FlatTabs_t,proc(PIhandle)	niup: flat_getfocus_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_getfocus_cb	niup.html#flat_getfocus_cb,FlatTabs_t,proc(PIhandle)	niup: flat_getfocus_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_getfocus_cb	niup.html#flat_getfocus_cb,FlatTabs_t	niup: flat_getfocus_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_killfocus_cb=	niup.html#flat_killfocus_cb=,FlatTabs_t,proc(PIhandle)	niup: flat_killfocus_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_killfocus_cb	niup.html#flat_killfocus_cb,FlatTabs_t,proc(PIhandle)	niup: flat_killfocus_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_killfocus_cb	niup.html#flat_killfocus_cb,FlatTabs_t	niup: flat_killfocus_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,FlatTabs_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatTabs_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatTabs_t	niup: flat_leavewindow_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,FlatTabs_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatTabs_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatTabs_t	niup: flat_motion_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatTabs_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatTabs_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatTabs_t	niup: focus_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatTabs_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatTabs_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatTabs_t	niup: getfocus_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatTabs_t,proc(PIhandle)	niup: help_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatTabs_t,proc(PIhandle)	niup: help_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatTabs_t	niup: help_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatTabs_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatTabs_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatTabs_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatTabs_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatTabs_t	niup: keypress_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatTabs_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatTabs_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatTabs_t	niup: killfocus_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatTabs_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatTabs_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatTabs_t,proc(PIhandle,cint)	niup: k_any(ih: FlatTabs_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatTabs_t	niup: k_any(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatTabs_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatTabs_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatTabs_t	niup: ldestroy_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatTabs_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatTabs_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatTabs_t	niup: leavewindow_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatTabs_t,proc(PIhandle)	niup: map_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatTabs_t,proc(PIhandle)	niup: map_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatTabs_t	niup: map_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatTabs_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatTabs_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatTabs_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatTabs_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatTabs_t	niup: motion_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatTabs_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatTabs_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatTabs_t	niup: postmessage_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatTabs_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatTabs_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatTabs_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatTabs_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatTabs_t	niup: resize_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
rightclick_cb=	niup.html#rightclick_cb=,FlatTabs_t,proc(PIhandle,cint)	niup: rightclick_cb=(ih: FlatTabs_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,FlatTabs_t,proc(PIhandle,cint)	niup: rightclick_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,FlatTabs_t	niup: rightclick_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatTabs_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatTabs_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatTabs_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatTabs_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatTabs_t	niup: scroll_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
tabchangepos_cb=	niup.html#tabchangepos_cb=,FlatTabs_t,proc(PIhandle,cint,cint)	niup: tabchangepos_cb=(ih: FlatTabs_t;\n                 cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
tabchangepos_cb	niup.html#tabchangepos_cb,FlatTabs_t,proc(PIhandle,cint,cint)	niup: tabchangepos_cb(ih: FlatTabs_t;\n                cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
tabchangepos_cb	niup.html#tabchangepos_cb,FlatTabs_t	niup: tabchangepos_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
tabchange_cb=	niup.html#tabchange_cb=,FlatTabs_t,proc(PIhandle,PIhandle,PIhandle)	niup: tabchange_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: PIhandle;\n                                        arg3: PIhandle): cint {.cdecl.})	
tabchange_cb	niup.html#tabchange_cb,FlatTabs_t,proc(PIhandle,PIhandle,PIhandle)	niup: tabchange_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: PIhandle;\n                                       arg3: PIhandle): cint {.cdecl.})	
tabchange_cb	niup.html#tabchange_cb,FlatTabs_t	niup: tabchange_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
tabclose_cb=	niup.html#tabclose_cb=,FlatTabs_t,proc(PIhandle,cint)	niup: tabclose_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
tabclose_cb	niup.html#tabclose_cb,FlatTabs_t,proc(PIhandle,cint)	niup: tabclose_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
tabclose_cb	niup.html#tabclose_cb,FlatTabs_t	niup: tabclose_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatTabs_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatTabs_t,proc(PIhandle)	niup: unmap_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatTabs_t	niup: unmap_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatTabs_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatTabs_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                   status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatTabs_t	niup: wheel_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatTabs_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatTabs_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatTabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatTabs_t	niup: wom_cb(ih: FlatTabs_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatToggle	niup.html#FlatToggle,string	niup: FlatToggle(title: string): FlatToggle_t	
active=	niup.html#active=,FlatToggle_t,string	niup: active=(ih: FlatToggle_t; value: string)	
active	niup.html#active,FlatToggle_t,string	niup: active(ih: FlatToggle_t; value: string)	
active=	niup.html#active=,FlatToggle_t,bool	niup: active=(ih: FlatToggle_t; yes: bool)	
active	niup.html#active,FlatToggle_t,bool	niup: active(ih: FlatToggle_t; yes: bool)	
active	niup.html#active,FlatToggle_t	niup: active(ih: FlatToggle_t): bool	
alignment=	niup.html#alignment=,FlatToggle_t,string	niup: alignment=(ih: FlatToggle_t; value: string)	
alignment	niup.html#alignment,FlatToggle_t,string	niup: alignment(ih: FlatToggle_t; value: string)	
alignment	niup.html#alignment,FlatToggle_t	niup: alignment(ih: FlatToggle_t): string	
backimage=	niup.html#backimage=,FlatToggle_t,	niup: backimage=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatToggle_t,	niup: backimage(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatToggle_t	niup: backimage(ih: FlatToggle_t): string	
backimagehighlight=	niup.html#backimagehighlight=,FlatToggle_t,	niup: backimagehighlight=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagehighlight	niup.html#backimagehighlight,FlatToggle_t,	niup: backimagehighlight(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagehighlight	niup.html#backimagehighlight,FlatToggle_t	niup: backimagehighlight(ih: FlatToggle_t): string	
backimageinactive=	niup.html#backimageinactive=,FlatToggle_t,	niup: backimageinactive=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimageinactive	niup.html#backimageinactive,FlatToggle_t,	niup: backimageinactive(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimageinactive	niup.html#backimageinactive,FlatToggle_t	niup: backimageinactive(ih: FlatToggle_t): string	
backimagepress=	niup.html#backimagepress=,FlatToggle_t,	niup: backimagepress=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagepress	niup.html#backimagepress,FlatToggle_t,	niup: backimagepress(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimagepress	niup.html#backimagepress,FlatToggle_t	niup: backimagepress(ih: FlatToggle_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatToggle_t,string	niup: backimagezoom=(ih: FlatToggle_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatToggle_t,string	niup: backimagezoom(ih: FlatToggle_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatToggle_t,bool	niup: backimagezoom=(ih: FlatToggle_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatToggle_t,bool	niup: backimagezoom(ih: FlatToggle_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatToggle_t	niup: backimagezoom(ih: FlatToggle_t): bool	
backingstore=	niup.html#backingstore=,FlatToggle_t,string	niup: backingstore=(ih: FlatToggle_t; value: string)	
backingstore	niup.html#backingstore,FlatToggle_t,string	niup: backingstore(ih: FlatToggle_t; value: string)	
backingstore=	niup.html#backingstore=,FlatToggle_t,bool	niup: backingstore=(ih: FlatToggle_t; yes: bool)	
backingstore	niup.html#backingstore,FlatToggle_t,bool	niup: backingstore(ih: FlatToggle_t; yes: bool)	
backingstore	niup.html#backingstore,FlatToggle_t	niup: backingstore(ih: FlatToggle_t): bool	
bgcolor=	niup.html#bgcolor=,FlatToggle_t,string	niup: bgcolor=(ih: FlatToggle_t; value: string)	
bgcolor	niup.html#bgcolor,FlatToggle_t,string	niup: bgcolor(ih: FlatToggle_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatToggle_t,int,int,int,int	niup: bgcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatToggle_t,int,int,int,int	niup: bgcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatToggle_t	niup: bgcolor(ih: FlatToggle_t): string	
border=	niup.html#border=,FlatToggle_t,string	niup: border=(ih: FlatToggle_t; value: string)	
border	niup.html#border,FlatToggle_t,string	niup: border(ih: FlatToggle_t; value: string)	
border=	niup.html#border=,FlatToggle_t,bool	niup: border=(ih: FlatToggle_t; yes: bool)	
border	niup.html#border,FlatToggle_t,bool	niup: border(ih: FlatToggle_t; yes: bool)	
border	niup.html#border,FlatToggle_t	niup: border(ih: FlatToggle_t): bool	
bordercolor=	niup.html#bordercolor=,FlatToggle_t,string	niup: bordercolor=(ih: FlatToggle_t; value: string)	
bordercolor	niup.html#bordercolor,FlatToggle_t,string	niup: bordercolor(ih: FlatToggle_t; value: string)	
bordercolor=	niup.html#bordercolor=,FlatToggle_t,int,int,int,int	niup: bordercolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatToggle_t,int,int,int,int	niup: bordercolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatToggle_t	niup: bordercolor(ih: FlatToggle_t): string	
borderhlcolor=	niup.html#borderhlcolor=,FlatToggle_t,string	niup: borderhlcolor=(ih: FlatToggle_t; value: string)	
borderhlcolor	niup.html#borderhlcolor,FlatToggle_t,string	niup: borderhlcolor(ih: FlatToggle_t; value: string)	
borderhlcolor=	niup.html#borderhlcolor=,FlatToggle_t,int,int,int,int	niup: borderhlcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,FlatToggle_t,int,int,int,int	niup: borderhlcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,FlatToggle_t	niup: borderhlcolor(ih: FlatToggle_t): string	
borderpscolor=	niup.html#borderpscolor=,FlatToggle_t,string	niup: borderpscolor=(ih: FlatToggle_t; value: string)	
borderpscolor	niup.html#borderpscolor,FlatToggle_t,string	niup: borderpscolor(ih: FlatToggle_t; value: string)	
borderpscolor=	niup.html#borderpscolor=,FlatToggle_t,int,int,int,int	niup: borderpscolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,FlatToggle_t,int,int,int,int	niup: borderpscolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,FlatToggle_t	niup: borderpscolor(ih: FlatToggle_t): string	
borderwidth=	niup.html#borderwidth=,FlatToggle_t,string	niup: borderwidth=(ih: FlatToggle_t; value: string)	
borderwidth	niup.html#borderwidth,FlatToggle_t,string	niup: borderwidth(ih: FlatToggle_t; value: string)	
borderwidth=	niup.html#borderwidth=,FlatToggle_t,int	niup: borderwidth=(ih: FlatToggle_t; x: int)	
borderwidth	niup.html#borderwidth,FlatToggle_t,int	niup: borderwidth(ih: FlatToggle_t; x: int)	
borderwidth	niup.html#borderwidth,FlatToggle_t	niup: borderwidth(ih: FlatToggle_t): string	
canfocus=	niup.html#canfocus=,FlatToggle_t,string	niup: canfocus=(ih: FlatToggle_t; value: string)	
canfocus	niup.html#canfocus,FlatToggle_t,string	niup: canfocus(ih: FlatToggle_t; value: string)	
canfocus=	niup.html#canfocus=,FlatToggle_t,bool	niup: canfocus=(ih: FlatToggle_t; yes: bool)	
canfocus	niup.html#canfocus,FlatToggle_t,bool	niup: canfocus(ih: FlatToggle_t; yes: bool)	
canfocus	niup.html#canfocus,FlatToggle_t	niup: canfocus(ih: FlatToggle_t): bool	
charsize	niup.html#charsize,FlatToggle_t	niup: charsize(ih: FlatToggle_t): string	
checkalign	niup.html#checkalign,FlatToggle_t	niup: checkalign(ih: FlatToggle_t): string	
checkbgcolor	niup.html#checkbgcolor,FlatToggle_t	niup: checkbgcolor(ih: FlatToggle_t): string	
checkfgcolor	niup.html#checkfgcolor,FlatToggle_t	niup: checkfgcolor(ih: FlatToggle_t): string	
checkhlcolor	niup.html#checkhlcolor,FlatToggle_t	niup: checkhlcolor(ih: FlatToggle_t): string	
checkimage=	niup.html#checkimage=,FlatToggle_t,	niup: checkimage=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimage	niup.html#checkimage,FlatToggle_t,	niup: checkimage(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimage	niup.html#checkimage,FlatToggle_t	niup: checkimage(ih: FlatToggle_t): string	
checkimagehighlight=	niup.html#checkimagehighlight=,FlatToggle_t,	niup: checkimagehighlight=(ih: FlatToggle_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagehighlight	niup.html#checkimagehighlight,FlatToggle_t,	niup: checkimagehighlight(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagehighlight	niup.html#checkimagehighlight,FlatToggle_t	niup: checkimagehighlight(ih: FlatToggle_t): string	
checkimageinactive=	niup.html#checkimageinactive=,FlatToggle_t,	niup: checkimageinactive=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageinactive	niup.html#checkimageinactive,FlatToggle_t,	niup: checkimageinactive(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageinactive	niup.html#checkimageinactive,FlatToggle_t	niup: checkimageinactive(ih: FlatToggle_t): string	
checkimagenotdef=	niup.html#checkimagenotdef=,FlatToggle_t,	niup: checkimagenotdef=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdef	niup.html#checkimagenotdef,FlatToggle_t,	niup: checkimagenotdef(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdef	niup.html#checkimagenotdef,FlatToggle_t	niup: checkimagenotdef(ih: FlatToggle_t): string	
checkimagenotdefhighlight=	niup.html#checkimagenotdefhighlight=,FlatToggle_t,	niup: checkimagenotdefhighlight=(ih: FlatToggle_t;\n                           handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdefhighlight	niup.html#checkimagenotdefhighlight,FlatToggle_t,	niup: checkimagenotdefhighlight(ih: FlatToggle_t;\n                          handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdefhighlight	niup.html#checkimagenotdefhighlight,FlatToggle_t	niup: checkimagenotdefhighlight(ih: FlatToggle_t): string	
checkimagenotdefinactive=	niup.html#checkimagenotdefinactive=,FlatToggle_t,	niup: checkimagenotdefinactive=(ih: FlatToggle_t;\n                          handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdefinactive	niup.html#checkimagenotdefinactive,FlatToggle_t,	niup: checkimagenotdefinactive(ih: FlatToggle_t;\n                         handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdefinactive	niup.html#checkimagenotdefinactive,FlatToggle_t	niup: checkimagenotdefinactive(ih: FlatToggle_t): string	
checkimagenotdefpress=	niup.html#checkimagenotdefpress=,FlatToggle_t,	niup: checkimagenotdefpress=(ih: FlatToggle_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdefpress	niup.html#checkimagenotdefpress,FlatToggle_t,	niup: checkimagenotdefpress(ih: FlatToggle_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagenotdefpress	niup.html#checkimagenotdefpress,FlatToggle_t	niup: checkimagenotdefpress(ih: FlatToggle_t): string	
checkimageon=	niup.html#checkimageon=,FlatToggle_t,	niup: checkimageon=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageon	niup.html#checkimageon,FlatToggle_t,	niup: checkimageon(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageon	niup.html#checkimageon,FlatToggle_t	niup: checkimageon(ih: FlatToggle_t): string	
checkimageonhighlight=	niup.html#checkimageonhighlight=,FlatToggle_t,	niup: checkimageonhighlight=(ih: FlatToggle_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageonhighlight	niup.html#checkimageonhighlight,FlatToggle_t,	niup: checkimageonhighlight(ih: FlatToggle_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageonhighlight	niup.html#checkimageonhighlight,FlatToggle_t	niup: checkimageonhighlight(ih: FlatToggle_t): string	
checkimageoninactive=	niup.html#checkimageoninactive=,FlatToggle_t,	niup: checkimageoninactive=(ih: FlatToggle_t;\n                      handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageoninactive	niup.html#checkimageoninactive,FlatToggle_t,	niup: checkimageoninactive(ih: FlatToggle_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageoninactive	niup.html#checkimageoninactive,FlatToggle_t	niup: checkimageoninactive(ih: FlatToggle_t): string	
checkimageonpress=	niup.html#checkimageonpress=,FlatToggle_t,	niup: checkimageonpress=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageonpress	niup.html#checkimageonpress,FlatToggle_t,	niup: checkimageonpress(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimageonpress	niup.html#checkimageonpress,FlatToggle_t	niup: checkimageonpress(ih: FlatToggle_t): string	
checkimagepress=	niup.html#checkimagepress=,FlatToggle_t,	niup: checkimagepress=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagepress	niup.html#checkimagepress,FlatToggle_t,	niup: checkimagepress(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
checkimagepress	niup.html#checkimagepress,FlatToggle_t	niup: checkimagepress(ih: FlatToggle_t): string	
checkpscolor	niup.html#checkpscolor,FlatToggle_t	niup: checkpscolor(ih: FlatToggle_t): string	
checkright	niup.html#checkright,FlatToggle_t	niup: checkright(ih: FlatToggle_t): string	
checksize	niup.html#checksize,FlatToggle_t	niup: checksize(ih: FlatToggle_t): string	
checkspacing	niup.html#checkspacing,FlatToggle_t	niup: checkspacing(ih: FlatToggle_t): string	
cpadding=	niup.html#cpadding=,FlatToggle_t,string	niup: cpadding=(ih: FlatToggle_t; value: string)	
cpadding	niup.html#cpadding,FlatToggle_t,string	niup: cpadding(ih: FlatToggle_t; value: string)	
cpadding=	niup.html#cpadding=,FlatToggle_t,int,int	niup: cpadding=(ih: FlatToggle_t; width, height: int)	
cpadding	niup.html#cpadding,FlatToggle_t,int,int	niup: cpadding(ih: FlatToggle_t; width, height: int)	
cpadding	niup.html#cpadding,FlatToggle_t	niup: cpadding(ih: FlatToggle_t): string	
cspacing=	niup.html#cspacing=,FlatToggle_t,string	niup: cspacing=(ih: FlatToggle_t; value: string)	
cspacing	niup.html#cspacing,FlatToggle_t,string	niup: cspacing(ih: FlatToggle_t; value: string)	
cspacing=	niup.html#cspacing=,FlatToggle_t,int	niup: cspacing=(ih: FlatToggle_t; x: int)	
cspacing	niup.html#cspacing,FlatToggle_t,int	niup: cspacing(ih: FlatToggle_t; x: int)	
cspacing	niup.html#cspacing,FlatToggle_t	niup: cspacing(ih: FlatToggle_t): string	
cursor=	niup.html#cursor=,FlatToggle_t,	niup: cursor=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatToggle_t,	niup: cursor(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatToggle_t	niup: cursor(ih: FlatToggle_t): string	
dragdrop=	niup.html#dragdrop=,FlatToggle_t,string	niup: dragdrop=(ih: FlatToggle_t; value: string)	
dragdrop	niup.html#dragdrop,FlatToggle_t,string	niup: dragdrop(ih: FlatToggle_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatToggle_t,bool	niup: dragdrop=(ih: FlatToggle_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatToggle_t,bool	niup: dragdrop(ih: FlatToggle_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatToggle_t	niup: dragdrop(ih: FlatToggle_t): bool	
dragsource=	niup.html#dragsource=,FlatToggle_t,string	niup: dragsource=(ih: FlatToggle_t; value: string)	
dragsource	niup.html#dragsource,FlatToggle_t,string	niup: dragsource(ih: FlatToggle_t; value: string)	
dragsource=	niup.html#dragsource=,FlatToggle_t,bool	niup: dragsource=(ih: FlatToggle_t; yes: bool)	
dragsource	niup.html#dragsource,FlatToggle_t,bool	niup: dragsource(ih: FlatToggle_t; yes: bool)	
dragsource	niup.html#dragsource,FlatToggle_t	niup: dragsource(ih: FlatToggle_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatToggle_t,string	niup: dragsourcemove=(ih: FlatToggle_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatToggle_t,string	niup: dragsourcemove(ih: FlatToggle_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatToggle_t,bool	niup: dragsourcemove=(ih: FlatToggle_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatToggle_t,bool	niup: dragsourcemove(ih: FlatToggle_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatToggle_t	niup: dragsourcemove(ih: FlatToggle_t): bool	
dragtypes=	niup.html#dragtypes=,FlatToggle_t,string	niup: dragtypes=(ih: FlatToggle_t; value: string)	
dragtypes	niup.html#dragtypes,FlatToggle_t,string	niup: dragtypes(ih: FlatToggle_t; value: string)	
dragtypes	niup.html#dragtypes,FlatToggle_t	niup: dragtypes(ih: FlatToggle_t): string	
drawable	niup.html#drawable,FlatToggle_t	niup: drawable(ih: FlatToggle_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatToggle_t,string	niup: drawbgcolor=(ih: FlatToggle_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatToggle_t,string	niup: drawbgcolor(ih: FlatToggle_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatToggle_t,int,int,int,int	niup: drawbgcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatToggle_t,int,int,int,int	niup: drawbgcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatToggle_t	niup: drawbgcolor(ih: FlatToggle_t): string	
drawcolor=	niup.html#drawcolor=,FlatToggle_t,string	niup: drawcolor=(ih: FlatToggle_t; value: string)	
drawcolor	niup.html#drawcolor,FlatToggle_t,string	niup: drawcolor(ih: FlatToggle_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatToggle_t,int,int,int,int	niup: drawcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatToggle_t,int,int,int,int	niup: drawcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatToggle_t	niup: drawcolor(ih: FlatToggle_t): string	
drawdriver	niup.html#drawdriver,FlatToggle_t	niup: drawdriver(ih: FlatToggle_t): string	
drawfont=	niup.html#drawfont=,FlatToggle_t,string	niup: drawfont=(ih: FlatToggle_t; value: string)	
drawfont	niup.html#drawfont,FlatToggle_t,string	niup: drawfont(ih: FlatToggle_t; value: string)	
drawfont	niup.html#drawfont,FlatToggle_t	niup: drawfont(ih: FlatToggle_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatToggle_t,string	niup: drawlinewidth=(ih: FlatToggle_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatToggle_t,string	niup: drawlinewidth(ih: FlatToggle_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatToggle_t,int	niup: drawlinewidth=(ih: FlatToggle_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatToggle_t,int	niup: drawlinewidth(ih: FlatToggle_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatToggle_t	niup: drawlinewidth(ih: FlatToggle_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatToggle_t,string	niup: drawmakeinactive=(ih: FlatToggle_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatToggle_t,string	niup: drawmakeinactive(ih: FlatToggle_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatToggle_t,bool	niup: drawmakeinactive=(ih: FlatToggle_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatToggle_t,bool	niup: drawmakeinactive(ih: FlatToggle_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatToggle_t	niup: drawmakeinactive(ih: FlatToggle_t): bool	
drawsize	niup.html#drawsize,FlatToggle_t	niup: drawsize(ih: FlatToggle_t): string	
drawstyle=	niup.html#drawstyle=,FlatToggle_t,string	niup: drawstyle=(ih: FlatToggle_t; value: string)	
drawstyle	niup.html#drawstyle,FlatToggle_t,string	niup: drawstyle(ih: FlatToggle_t; value: string)	
drawstyle	niup.html#drawstyle,FlatToggle_t	niup: drawstyle(ih: FlatToggle_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatToggle_t,string	niup: drawtextalignment=(ih: FlatToggle_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatToggle_t,string	niup: drawtextalignment(ih: FlatToggle_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatToggle_t	niup: drawtextalignment(ih: FlatToggle_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatToggle_t,string	niup: drawtextclip=(ih: FlatToggle_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatToggle_t,string	niup: drawtextclip(ih: FlatToggle_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatToggle_t,bool	niup: drawtextclip=(ih: FlatToggle_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatToggle_t,bool	niup: drawtextclip(ih: FlatToggle_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatToggle_t	niup: drawtextclip(ih: FlatToggle_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatToggle_t,string	niup: drawtextellipsis=(ih: FlatToggle_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatToggle_t,string	niup: drawtextellipsis(ih: FlatToggle_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatToggle_t,bool	niup: drawtextellipsis=(ih: FlatToggle_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatToggle_t,bool	niup: drawtextellipsis(ih: FlatToggle_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatToggle_t	niup: drawtextellipsis(ih: FlatToggle_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatToggle_t,string	niup: drawtextlayoutcenter=(ih: FlatToggle_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatToggle_t,string	niup: drawtextlayoutcenter(ih: FlatToggle_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatToggle_t,bool	niup: drawtextlayoutcenter=(ih: FlatToggle_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatToggle_t,bool	niup: drawtextlayoutcenter(ih: FlatToggle_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatToggle_t	niup: drawtextlayoutcenter(ih: FlatToggle_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatToggle_t,string	niup: drawtextorientation=(ih: FlatToggle_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatToggle_t,string	niup: drawtextorientation(ih: FlatToggle_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatToggle_t,int64	niup: drawtextorientation=(ih: FlatToggle_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatToggle_t,int64	niup: drawtextorientation(ih: FlatToggle_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatToggle_t	niup: drawtextorientation(ih: FlatToggle_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatToggle_t,string	niup: drawtextwrap=(ih: FlatToggle_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatToggle_t,string	niup: drawtextwrap(ih: FlatToggle_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatToggle_t,bool	niup: drawtextwrap=(ih: FlatToggle_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatToggle_t,bool	niup: drawtextwrap(ih: FlatToggle_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatToggle_t	niup: drawtextwrap(ih: FlatToggle_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatToggle_t,string	niup: dropfilestarget=(ih: FlatToggle_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatToggle_t,string	niup: dropfilestarget(ih: FlatToggle_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatToggle_t,bool	niup: dropfilestarget=(ih: FlatToggle_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatToggle_t,bool	niup: dropfilestarget(ih: FlatToggle_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatToggle_t	niup: dropfilestarget(ih: FlatToggle_t): bool	
droptarget=	niup.html#droptarget=,FlatToggle_t,string	niup: droptarget=(ih: FlatToggle_t; value: string)	
droptarget	niup.html#droptarget,FlatToggle_t,string	niup: droptarget(ih: FlatToggle_t; value: string)	
droptarget=	niup.html#droptarget=,FlatToggle_t,bool	niup: droptarget=(ih: FlatToggle_t; yes: bool)	
droptarget	niup.html#droptarget,FlatToggle_t,bool	niup: droptarget(ih: FlatToggle_t; yes: bool)	
droptarget	niup.html#droptarget,FlatToggle_t	niup: droptarget(ih: FlatToggle_t): bool	
droptypes=	niup.html#droptypes=,FlatToggle_t,string	niup: droptypes=(ih: FlatToggle_t; value: string)	
droptypes	niup.html#droptypes,FlatToggle_t,string	niup: droptypes(ih: FlatToggle_t; value: string)	
droptypes	niup.html#droptypes,FlatToggle_t	niup: droptypes(ih: FlatToggle_t): string	
dx=	niup.html#dx=,FlatToggle_t,string	niup: dx=(ih: FlatToggle_t; value: string)	
dx	niup.html#dx,FlatToggle_t,string	niup: dx(ih: FlatToggle_t; value: string)	
dx=	niup.html#dx=,FlatToggle_t,int64	niup: dx=(ih: FlatToggle_t; x: int64)	
dx	niup.html#dx,FlatToggle_t,int64	niup: dx(ih: FlatToggle_t; x: int64)	
dx	niup.html#dx,FlatToggle_t	niup: dx(ih: FlatToggle_t): string	
dy=	niup.html#dy=,FlatToggle_t,string	niup: dy=(ih: FlatToggle_t; value: string)	
dy	niup.html#dy,FlatToggle_t,string	niup: dy(ih: FlatToggle_t; value: string)	
dy=	niup.html#dy=,FlatToggle_t,int64	niup: dy=(ih: FlatToggle_t; x: int64)	
dy	niup.html#dy,FlatToggle_t,int64	niup: dy(ih: FlatToggle_t; x: int64)	
dy	niup.html#dy,FlatToggle_t	niup: dy(ih: FlatToggle_t): string	
expand=	niup.html#expand=,FlatToggle_t,string	niup: expand=(ih: FlatToggle_t; value: string)	
expand	niup.html#expand,FlatToggle_t,string	niup: expand(ih: FlatToggle_t; value: string)	
expand	niup.html#expand,FlatToggle_t	niup: expand(ih: FlatToggle_t): string	
expandweight=	niup.html#expandweight=,FlatToggle_t,string	niup: expandweight=(ih: FlatToggle_t; value: string)	
expandweight	niup.html#expandweight,FlatToggle_t,string	niup: expandweight(ih: FlatToggle_t; value: string)	
expandweight=	niup.html#expandweight=,FlatToggle_t,int64	niup: expandweight=(ih: FlatToggle_t; x: int64)	
expandweight	niup.html#expandweight,FlatToggle_t,int64	niup: expandweight(ih: FlatToggle_t; x: int64)	
expandweight	niup.html#expandweight,FlatToggle_t	niup: expandweight(ih: FlatToggle_t): string	
fgcolor=	niup.html#fgcolor=,FlatToggle_t,string	niup: fgcolor=(ih: FlatToggle_t; value: string)	
fgcolor	niup.html#fgcolor,FlatToggle_t,string	niup: fgcolor(ih: FlatToggle_t; value: string)	
fgcolor=	niup.html#fgcolor=,FlatToggle_t,int,int,int,int	niup: fgcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatToggle_t,int,int,int,int	niup: fgcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatToggle_t	niup: fgcolor(ih: FlatToggle_t): string	
fittobackimage=	niup.html#fittobackimage=,FlatToggle_t,string	niup: fittobackimage=(ih: FlatToggle_t; value: string)	
fittobackimage	niup.html#fittobackimage,FlatToggle_t,string	niup: fittobackimage(ih: FlatToggle_t; value: string)	
fittobackimage=	niup.html#fittobackimage=,FlatToggle_t,bool	niup: fittobackimage=(ih: FlatToggle_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatToggle_t,bool	niup: fittobackimage(ih: FlatToggle_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatToggle_t	niup: fittobackimage(ih: FlatToggle_t): bool	
floating=	niup.html#floating=,FlatToggle_t,string	niup: floating=(ih: FlatToggle_t; value: string)	
floating	niup.html#floating,FlatToggle_t,string	niup: floating(ih: FlatToggle_t; value: string)	
floating	niup.html#floating,FlatToggle_t	niup: floating(ih: FlatToggle_t): string	
focusfeedback=	niup.html#focusfeedback=,FlatToggle_t,string	niup: focusfeedback=(ih: FlatToggle_t; value: string)	
focusfeedback	niup.html#focusfeedback,FlatToggle_t,string	niup: focusfeedback(ih: FlatToggle_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,FlatToggle_t,bool	niup: focusfeedback=(ih: FlatToggle_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatToggle_t,bool	niup: focusfeedback(ih: FlatToggle_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatToggle_t	niup: focusfeedback(ih: FlatToggle_t): bool	
font=	niup.html#font=,FlatToggle_t,string	niup: font=(ih: FlatToggle_t; value: string)	
font	niup.html#font,FlatToggle_t,string	niup: font(ih: FlatToggle_t; value: string)	
font	niup.html#font,FlatToggle_t	niup: font(ih: FlatToggle_t): string	
fontface=	niup.html#fontface=,FlatToggle_t,string	niup: fontface=(ih: FlatToggle_t; value: string)	
fontface	niup.html#fontface,FlatToggle_t,string	niup: fontface(ih: FlatToggle_t; value: string)	
fontface	niup.html#fontface,FlatToggle_t	niup: fontface(ih: FlatToggle_t): string	
fontsize=	niup.html#fontsize=,FlatToggle_t,string	niup: fontsize=(ih: FlatToggle_t; value: string)	
fontsize	niup.html#fontsize,FlatToggle_t,string	niup: fontsize(ih: FlatToggle_t; value: string)	
fontsize=	niup.html#fontsize=,FlatToggle_t,int	niup: fontsize=(ih: FlatToggle_t; x: int)	
fontsize	niup.html#fontsize,FlatToggle_t,int	niup: fontsize(ih: FlatToggle_t; x: int)	
fontsize	niup.html#fontsize,FlatToggle_t	niup: fontsize(ih: FlatToggle_t): string	
fontstyle=	niup.html#fontstyle=,FlatToggle_t,string	niup: fontstyle=(ih: FlatToggle_t; value: string)	
fontstyle	niup.html#fontstyle,FlatToggle_t,string	niup: fontstyle(ih: FlatToggle_t; value: string)	
fontstyle	niup.html#fontstyle,FlatToggle_t	niup: fontstyle(ih: FlatToggle_t): string	
frontimage=	niup.html#frontimage=,FlatToggle_t,	niup: frontimage=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,FlatToggle_t,	niup: frontimage(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimage	niup.html#frontimage,FlatToggle_t	niup: frontimage(ih: FlatToggle_t): string	
frontimagehighlight=	niup.html#frontimagehighlight=,FlatToggle_t,	niup: frontimagehighlight=(ih: FlatToggle_t;\n                     handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagehighlight	niup.html#frontimagehighlight,FlatToggle_t,	niup: frontimagehighlight(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagehighlight	niup.html#frontimagehighlight,FlatToggle_t	niup: frontimagehighlight(ih: FlatToggle_t): string	
frontimageinactive=	niup.html#frontimageinactive=,FlatToggle_t,	niup: frontimageinactive=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,FlatToggle_t,	niup: frontimageinactive(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimageinactive	niup.html#frontimageinactive,FlatToggle_t	niup: frontimageinactive(ih: FlatToggle_t): string	
frontimagepress=	niup.html#frontimagepress=,FlatToggle_t,	niup: frontimagepress=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagepress	niup.html#frontimagepress,FlatToggle_t,	niup: frontimagepress(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
frontimagepress	niup.html#frontimagepress,FlatToggle_t	niup: frontimagepress(ih: FlatToggle_t): string	
handlename=	niup.html#handlename=,FlatToggle_t,string	niup: handlename=(ih: FlatToggle_t; value: string)	
handlename	niup.html#handlename,FlatToggle_t,string	niup: handlename(ih: FlatToggle_t; value: string)	
handlename	niup.html#handlename,FlatToggle_t	niup: handlename(ih: FlatToggle_t): string	
hasfocus	niup.html#hasfocus,FlatToggle_t	niup: hasfocus(ih: FlatToggle_t): bool	
highlighted	niup.html#highlighted,FlatToggle_t	niup: highlighted(ih: FlatToggle_t): bool	
hlcolor=	niup.html#hlcolor=,FlatToggle_t,string	niup: hlcolor=(ih: FlatToggle_t; value: string)	
hlcolor	niup.html#hlcolor,FlatToggle_t,string	niup: hlcolor(ih: FlatToggle_t; value: string)	
hlcolor=	niup.html#hlcolor=,FlatToggle_t,int,int,int,int	niup: hlcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatToggle_t,int,int,int,int	niup: hlcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatToggle_t	niup: hlcolor(ih: FlatToggle_t): string	
ignoreradio=	niup.html#ignoreradio=,FlatToggle_t,string	niup: ignoreradio=(ih: FlatToggle_t; value: string)	
ignoreradio	niup.html#ignoreradio,FlatToggle_t,string	niup: ignoreradio(ih: FlatToggle_t; value: string)	
ignoreradio=	niup.html#ignoreradio=,FlatToggle_t,bool	niup: ignoreradio=(ih: FlatToggle_t; yes: bool)	
ignoreradio	niup.html#ignoreradio,FlatToggle_t,bool	niup: ignoreradio(ih: FlatToggle_t; yes: bool)	
ignoreradio	niup.html#ignoreradio,FlatToggle_t	niup: ignoreradio(ih: FlatToggle_t): bool	
image=	niup.html#image=,FlatToggle_t,	niup: image=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatToggle_t,	niup: image(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatToggle_t	niup: image(ih: FlatToggle_t): string	
imagehighlight=	niup.html#imagehighlight=,FlatToggle_t,	niup: imagehighlight=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,FlatToggle_t,	niup: imagehighlight(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,FlatToggle_t	niup: imagehighlight(ih: FlatToggle_t): string	
imageinactive=	niup.html#imageinactive=,FlatToggle_t,	niup: imageinactive=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatToggle_t,	niup: imageinactive(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatToggle_t	niup: imageinactive(ih: FlatToggle_t): string	
imageposition=	niup.html#imageposition=,FlatToggle_t,string	niup: imageposition=(ih: FlatToggle_t; value: string)	
imageposition	niup.html#imageposition,FlatToggle_t,string	niup: imageposition(ih: FlatToggle_t; value: string)	
imageposition	niup.html#imageposition,FlatToggle_t	niup: imageposition(ih: FlatToggle_t): string	
imagepress=	niup.html#imagepress=,FlatToggle_t,	niup: imagepress=(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,FlatToggle_t,	niup: imagepress(ih: FlatToggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,FlatToggle_t	niup: imagepress(ih: FlatToggle_t): string	
linex=	niup.html#linex=,FlatToggle_t,string	niup: linex=(ih: FlatToggle_t; value: string)	
linex	niup.html#linex,FlatToggle_t,string	niup: linex(ih: FlatToggle_t; value: string)	
linex=	niup.html#linex=,FlatToggle_t,int64	niup: linex=(ih: FlatToggle_t; x: int64)	
linex	niup.html#linex,FlatToggle_t,int64	niup: linex(ih: FlatToggle_t; x: int64)	
linex	niup.html#linex,FlatToggle_t	niup: linex(ih: FlatToggle_t): string	
liney=	niup.html#liney=,FlatToggle_t,string	niup: liney=(ih: FlatToggle_t; value: string)	
liney	niup.html#liney,FlatToggle_t,string	niup: liney(ih: FlatToggle_t; value: string)	
liney=	niup.html#liney=,FlatToggle_t,int64	niup: liney=(ih: FlatToggle_t; x: int64)	
liney	niup.html#liney,FlatToggle_t,int64	niup: liney(ih: FlatToggle_t; x: int64)	
liney	niup.html#liney,FlatToggle_t	niup: liney(ih: FlatToggle_t): string	
maxsize=	niup.html#maxsize=,FlatToggle_t,string	niup: maxsize=(ih: FlatToggle_t; value: string)	
maxsize	niup.html#maxsize,FlatToggle_t,string	niup: maxsize(ih: FlatToggle_t; value: string)	
maxsize=	niup.html#maxsize=,FlatToggle_t,int,int	niup: maxsize=(ih: FlatToggle_t; width, height: int)	
maxsize	niup.html#maxsize,FlatToggle_t,int,int	niup: maxsize(ih: FlatToggle_t; width, height: int)	
maxsize	niup.html#maxsize,FlatToggle_t	niup: maxsize(ih: FlatToggle_t): string	
minsize=	niup.html#minsize=,FlatToggle_t,string	niup: minsize=(ih: FlatToggle_t; value: string)	
minsize	niup.html#minsize,FlatToggle_t,string	niup: minsize(ih: FlatToggle_t; value: string)	
minsize=	niup.html#minsize=,FlatToggle_t,int,int	niup: minsize=(ih: FlatToggle_t; width, height: int)	
minsize	niup.html#minsize,FlatToggle_t,int,int	niup: minsize(ih: FlatToggle_t; width, height: int)	
minsize	niup.html#minsize,FlatToggle_t	niup: minsize(ih: FlatToggle_t): string	
name=	niup.html#name=,FlatToggle_t,string	niup: name=(ih: FlatToggle_t; value: string)	
name	niup.html#name,FlatToggle_t,string	niup: name(ih: FlatToggle_t; value: string)	
name	niup.html#name,FlatToggle_t	niup: name(ih: FlatToggle_t): string	
naturalsize	niup.html#naturalsize,FlatToggle_t	niup: naturalsize(ih: FlatToggle_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatToggle_t,string	niup: normalizergroup=(ih: FlatToggle_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatToggle_t,string	niup: normalizergroup(ih: FlatToggle_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatToggle_t	niup: normalizergroup(ih: FlatToggle_t): string	
ntheme=	niup.html#ntheme=,FlatToggle_t,string	niup: ntheme=(ih: FlatToggle_t; value: string)	
ntheme	niup.html#ntheme,FlatToggle_t,string	niup: ntheme(ih: FlatToggle_t; value: string)	
ntheme	niup.html#ntheme,FlatToggle_t	niup: ntheme(ih: FlatToggle_t): string	
padding=	niup.html#padding=,FlatToggle_t,string	niup: padding=(ih: FlatToggle_t; value: string)	
padding	niup.html#padding,FlatToggle_t,string	niup: padding(ih: FlatToggle_t; value: string)	
padding=	niup.html#padding=,FlatToggle_t,int,int	niup: padding=(ih: FlatToggle_t; width, height: int)	
padding	niup.html#padding,FlatToggle_t,int,int	niup: padding(ih: FlatToggle_t; width, height: int)	
padding	niup.html#padding,FlatToggle_t	niup: padding(ih: FlatToggle_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatToggle_t	niup: pangofontdesc(ih: FlatToggle_t): string	
pangolayout	niup.html#pangolayout,FlatToggle_t	niup: pangolayout(ih: FlatToggle_t): string	
position=	niup.html#position=,FlatToggle_t,string	niup: position=(ih: FlatToggle_t; value: string)	
position	niup.html#position,FlatToggle_t,string	niup: position(ih: FlatToggle_t; value: string)	
position=	niup.html#position=,FlatToggle_t,int,int	niup: position=(ih: FlatToggle_t; x, y: int)	
position	niup.html#position,FlatToggle_t,int,int	niup: position(ih: FlatToggle_t; x, y: int)	
position	niup.html#position,FlatToggle_t	niup: position(ih: FlatToggle_t): string	
posx=	niup.html#posx=,FlatToggle_t,string	niup: posx=(ih: FlatToggle_t; value: string)	
posx	niup.html#posx,FlatToggle_t,string	niup: posx(ih: FlatToggle_t; value: string)	
posx=	niup.html#posx=,FlatToggle_t,int64	niup: posx=(ih: FlatToggle_t; x: int64)	
posx	niup.html#posx,FlatToggle_t,int64	niup: posx(ih: FlatToggle_t; x: int64)	
posx	niup.html#posx,FlatToggle_t	niup: posx(ih: FlatToggle_t): string	
posy=	niup.html#posy=,FlatToggle_t,string	niup: posy=(ih: FlatToggle_t; value: string)	
posy	niup.html#posy,FlatToggle_t,string	niup: posy(ih: FlatToggle_t; value: string)	
posy=	niup.html#posy=,FlatToggle_t,int64	niup: posy=(ih: FlatToggle_t; x: int64)	
posy	niup.html#posy,FlatToggle_t,int64	niup: posy(ih: FlatToggle_t; x: int64)	
posy	niup.html#posy,FlatToggle_t	niup: posy(ih: FlatToggle_t): string	
pressed	niup.html#pressed,FlatToggle_t	niup: pressed(ih: FlatToggle_t): bool	
propagatefocus=	niup.html#propagatefocus=,FlatToggle_t,string	niup: propagatefocus=(ih: FlatToggle_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatToggle_t,string	niup: propagatefocus(ih: FlatToggle_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatToggle_t,bool	niup: propagatefocus=(ih: FlatToggle_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatToggle_t,bool	niup: propagatefocus(ih: FlatToggle_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatToggle_t	niup: propagatefocus(ih: FlatToggle_t): bool	
pscolor=	niup.html#pscolor=,FlatToggle_t,string	niup: pscolor=(ih: FlatToggle_t; value: string)	
pscolor	niup.html#pscolor,FlatToggle_t,string	niup: pscolor(ih: FlatToggle_t; value: string)	
pscolor=	niup.html#pscolor=,FlatToggle_t,int,int,int,int	niup: pscolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatToggle_t,int,int,int,int	niup: pscolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatToggle_t	niup: pscolor(ih: FlatToggle_t): string	
radio	niup.html#radio,FlatToggle_t	niup: radio(ih: FlatToggle_t): bool	
rastersize=	niup.html#rastersize=,FlatToggle_t,string	niup: rastersize=(ih: FlatToggle_t; value: string)	
rastersize	niup.html#rastersize,FlatToggle_t,string	niup: rastersize(ih: FlatToggle_t; value: string)	
rastersize=	niup.html#rastersize=,FlatToggle_t,int,int	niup: rastersize=(ih: FlatToggle_t; width, height: int)	
rastersize	niup.html#rastersize,FlatToggle_t,int,int	niup: rastersize(ih: FlatToggle_t; width, height: int)	
rastersize	niup.html#rastersize,FlatToggle_t	niup: rastersize(ih: FlatToggle_t): string	
sb_resize	niup.html#sb_resize,FlatToggle_t	niup: sb_resize(ih: FlatToggle_t): string	
screenposition	niup.html#screenposition,FlatToggle_t	niup: screenposition(ih: FlatToggle_t): string	
scrollbar=	niup.html#scrollbar=,FlatToggle_t,string	niup: scrollbar=(ih: FlatToggle_t; value: string)	
scrollbar	niup.html#scrollbar,FlatToggle_t,string	niup: scrollbar(ih: FlatToggle_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatToggle_t,bool	niup: scrollbar=(ih: FlatToggle_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatToggle_t,bool	niup: scrollbar(ih: FlatToggle_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatToggle_t	niup: scrollbar(ih: FlatToggle_t): bool	
selectednotify	niup.html#selectednotify,FlatToggle_t	niup: selectednotify(ih: FlatToggle_t): string	
showborder=	niup.html#showborder=,FlatToggle_t,string	niup: showborder=(ih: FlatToggle_t; value: string)	
showborder	niup.html#showborder,FlatToggle_t,string	niup: showborder(ih: FlatToggle_t; value: string)	
showborder=	niup.html#showborder=,FlatToggle_t,bool	niup: showborder=(ih: FlatToggle_t; yes: bool)	
showborder	niup.html#showborder,FlatToggle_t,bool	niup: showborder(ih: FlatToggle_t; yes: bool)	
showborder	niup.html#showborder,FlatToggle_t	niup: showborder(ih: FlatToggle_t): bool	
size=	niup.html#size=,FlatToggle_t,string	niup: size=(ih: FlatToggle_t; value: string)	
size	niup.html#size,FlatToggle_t,string	niup: size(ih: FlatToggle_t; value: string)	
size=	niup.html#size=,FlatToggle_t,int,int	niup: size=(ih: FlatToggle_t; width, height: int)	
size	niup.html#size,FlatToggle_t,int,int	niup: size(ih: FlatToggle_t; width, height: int)	
size	niup.html#size,FlatToggle_t	niup: size(ih: FlatToggle_t): string	
spacing=	niup.html#spacing=,FlatToggle_t,string	niup: spacing=(ih: FlatToggle_t; value: string)	
spacing	niup.html#spacing,FlatToggle_t,string	niup: spacing(ih: FlatToggle_t; value: string)	
spacing=	niup.html#spacing=,FlatToggle_t,int	niup: spacing=(ih: FlatToggle_t; x: int)	
spacing	niup.html#spacing,FlatToggle_t,int	niup: spacing(ih: FlatToggle_t; x: int)	
spacing	niup.html#spacing,FlatToggle_t	niup: spacing(ih: FlatToggle_t): string	
textalignment=	niup.html#textalignment=,FlatToggle_t,string	niup: textalignment=(ih: FlatToggle_t; value: string)	
textalignment	niup.html#textalignment,FlatToggle_t,string	niup: textalignment(ih: FlatToggle_t; value: string)	
textalignment	niup.html#textalignment,FlatToggle_t	niup: textalignment(ih: FlatToggle_t): string	
textclip	niup.html#textclip,FlatToggle_t	niup: textclip(ih: FlatToggle_t): string	
textellipsis=	niup.html#textellipsis=,FlatToggle_t,string	niup: textellipsis=(ih: FlatToggle_t; value: string)	
textellipsis	niup.html#textellipsis,FlatToggle_t,string	niup: textellipsis(ih: FlatToggle_t; value: string)	
textellipsis=	niup.html#textellipsis=,FlatToggle_t,bool	niup: textellipsis=(ih: FlatToggle_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatToggle_t,bool	niup: textellipsis(ih: FlatToggle_t; yes: bool)	
textellipsis	niup.html#textellipsis,FlatToggle_t	niup: textellipsis(ih: FlatToggle_t): bool	
texthlcolor=	niup.html#texthlcolor=,FlatToggle_t,string	niup: texthlcolor=(ih: FlatToggle_t; value: string)	
texthlcolor	niup.html#texthlcolor,FlatToggle_t,string	niup: texthlcolor(ih: FlatToggle_t; value: string)	
texthlcolor=	niup.html#texthlcolor=,FlatToggle_t,int,int,int,int	niup: texthlcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
texthlcolor	niup.html#texthlcolor,FlatToggle_t,int,int,int,int	niup: texthlcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
texthlcolor	niup.html#texthlcolor,FlatToggle_t	niup: texthlcolor(ih: FlatToggle_t): string	
textorientation=	niup.html#textorientation=,FlatToggle_t,string	niup: textorientation=(ih: FlatToggle_t; value: string)	
textorientation	niup.html#textorientation,FlatToggle_t,string	niup: textorientation(ih: FlatToggle_t; value: string)	
textorientation=	niup.html#textorientation=,FlatToggle_t,int64	niup: textorientation=(ih: FlatToggle_t; x: int64)	
textorientation	niup.html#textorientation,FlatToggle_t,int64	niup: textorientation(ih: FlatToggle_t; x: int64)	
textorientation	niup.html#textorientation,FlatToggle_t	niup: textorientation(ih: FlatToggle_t): string	
textpscolor=	niup.html#textpscolor=,FlatToggle_t,string	niup: textpscolor=(ih: FlatToggle_t; value: string)	
textpscolor	niup.html#textpscolor,FlatToggle_t,string	niup: textpscolor(ih: FlatToggle_t; value: string)	
textpscolor=	niup.html#textpscolor=,FlatToggle_t,int,int,int,int	niup: textpscolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatToggle_t,int,int,int,int	niup: textpscolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatToggle_t	niup: textpscolor(ih: FlatToggle_t): string	
textwrap=	niup.html#textwrap=,FlatToggle_t,string	niup: textwrap=(ih: FlatToggle_t; value: string)	
textwrap	niup.html#textwrap,FlatToggle_t,string	niup: textwrap(ih: FlatToggle_t; value: string)	
textwrap=	niup.html#textwrap=,FlatToggle_t,bool	niup: textwrap=(ih: FlatToggle_t; yes: bool)	
textwrap	niup.html#textwrap,FlatToggle_t,bool	niup: textwrap(ih: FlatToggle_t; yes: bool)	
textwrap	niup.html#textwrap,FlatToggle_t	niup: textwrap(ih: FlatToggle_t): bool	
theme=	niup.html#theme=,FlatToggle_t,string	niup: theme=(ih: FlatToggle_t; value: string)	
theme	niup.html#theme,FlatToggle_t,string	niup: theme(ih: FlatToggle_t; value: string)	
theme	niup.html#theme,FlatToggle_t	niup: theme(ih: FlatToggle_t): string	
tip=	niup.html#tip=,FlatToggle_t,string	niup: tip=(ih: FlatToggle_t; value: string)	
tip	niup.html#tip,FlatToggle_t,string	niup: tip(ih: FlatToggle_t; value: string)	
tip	niup.html#tip,FlatToggle_t	niup: tip(ih: FlatToggle_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatToggle_t,string	niup: tipbgcolor=(ih: FlatToggle_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatToggle_t,string	niup: tipbgcolor(ih: FlatToggle_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatToggle_t,int,int,int,int	niup: tipbgcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatToggle_t,int,int,int,int	niup: tipbgcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatToggle_t	niup: tipbgcolor(ih: FlatToggle_t): string	
tipdelay=	niup.html#tipdelay=,FlatToggle_t,string	niup: tipdelay=(ih: FlatToggle_t; value: string)	
tipdelay	niup.html#tipdelay,FlatToggle_t,string	niup: tipdelay(ih: FlatToggle_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatToggle_t,int	niup: tipdelay=(ih: FlatToggle_t; x: int)	
tipdelay	niup.html#tipdelay,FlatToggle_t,int	niup: tipdelay(ih: FlatToggle_t; x: int)	
tipdelay	niup.html#tipdelay,FlatToggle_t	niup: tipdelay(ih: FlatToggle_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatToggle_t,string	niup: tipfgcolor=(ih: FlatToggle_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatToggle_t,string	niup: tipfgcolor(ih: FlatToggle_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatToggle_t,int,int,int,int	niup: tipfgcolor=(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatToggle_t,int,int,int,int	niup: tipfgcolor(ih: FlatToggle_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatToggle_t	niup: tipfgcolor(ih: FlatToggle_t): string	
tipicon=	niup.html#tipicon=,FlatToggle_t,string	niup: tipicon=(ih: FlatToggle_t; value: string)	
tipicon	niup.html#tipicon,FlatToggle_t,string	niup: tipicon(ih: FlatToggle_t; value: string)	
tipicon	niup.html#tipicon,FlatToggle_t	niup: tipicon(ih: FlatToggle_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatToggle_t,string	niup: tipmarkup=(ih: FlatToggle_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatToggle_t,string	niup: tipmarkup(ih: FlatToggle_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatToggle_t	niup: tipmarkup(ih: FlatToggle_t): string	
tiprect=	niup.html#tiprect=,FlatToggle_t,string	niup: tiprect=(ih: FlatToggle_t; value: string)	
tiprect	niup.html#tiprect,FlatToggle_t,string	niup: tiprect(ih: FlatToggle_t; value: string)	
tiprect=	niup.html#tiprect=,FlatToggle_t,int,int,int,int	niup: tiprect=(ih: FlatToggle_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatToggle_t,int,int,int,int	niup: tiprect(ih: FlatToggle_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatToggle_t	niup: tiprect(ih: FlatToggle_t): string	
tipvisible=	niup.html#tipvisible=,FlatToggle_t,string	niup: tipvisible=(ih: FlatToggle_t; value: string)	
tipvisible	niup.html#tipvisible,FlatToggle_t,string	niup: tipvisible(ih: FlatToggle_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatToggle_t,bool	niup: tipvisible=(ih: FlatToggle_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatToggle_t,bool	niup: tipvisible(ih: FlatToggle_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatToggle_t	niup: tipvisible(ih: FlatToggle_t): bool	
title=	niup.html#title=,FlatToggle_t,string	niup: title=(ih: FlatToggle_t; value: string)	
title	niup.html#title,FlatToggle_t,string	niup: title(ih: FlatToggle_t; value: string)	
title	niup.html#title,FlatToggle_t	niup: title(ih: FlatToggle_t): string	
touch=	niup.html#touch=,FlatToggle_t,string	niup: touch=(ih: FlatToggle_t; value: string)	
touch	niup.html#touch,FlatToggle_t,string	niup: touch(ih: FlatToggle_t; value: string)	
touch=	niup.html#touch=,FlatToggle_t,bool	niup: touch=(ih: FlatToggle_t; yes: bool)	
touch	niup.html#touch,FlatToggle_t,bool	niup: touch(ih: FlatToggle_t; yes: bool)	
touch	niup.html#touch,FlatToggle_t	niup: touch(ih: FlatToggle_t): bool	
usersize=	niup.html#usersize=,FlatToggle_t,string	niup: usersize=(ih: FlatToggle_t; value: string)	
usersize	niup.html#usersize,FlatToggle_t,string	niup: usersize(ih: FlatToggle_t; value: string)	
usersize=	niup.html#usersize=,FlatToggle_t,int,int	niup: usersize=(ih: FlatToggle_t; width, height: int)	
usersize	niup.html#usersize,FlatToggle_t,int,int	niup: usersize(ih: FlatToggle_t; width, height: int)	
usersize	niup.html#usersize,FlatToggle_t	niup: usersize(ih: FlatToggle_t): string	
value=	niup.html#value=,FlatToggle_t,string	niup: value=(ih: FlatToggle_t; value: string)	
value	niup.html#value,FlatToggle_t,string	niup: value(ih: FlatToggle_t; value: string)	
value	niup.html#value,FlatToggle_t	niup: value(ih: FlatToggle_t): string	
visible=	niup.html#visible=,FlatToggle_t,string	niup: visible=(ih: FlatToggle_t; value: string)	
visible	niup.html#visible,FlatToggle_t,string	niup: visible(ih: FlatToggle_t; value: string)	
visible=	niup.html#visible=,FlatToggle_t,bool	niup: visible=(ih: FlatToggle_t; yes: bool)	
visible	niup.html#visible,FlatToggle_t,bool	niup: visible(ih: FlatToggle_t; yes: bool)	
visible	niup.html#visible,FlatToggle_t	niup: visible(ih: FlatToggle_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatToggle_t,string	niup: wheeldropfocus=(ih: FlatToggle_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatToggle_t,string	niup: wheeldropfocus(ih: FlatToggle_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatToggle_t,bool	niup: wheeldropfocus=(ih: FlatToggle_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatToggle_t,bool	niup: wheeldropfocus(ih: FlatToggle_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatToggle_t	niup: wheeldropfocus(ih: FlatToggle_t): bool	
wid	niup.html#wid,FlatToggle_t	niup: wid(ih: FlatToggle_t): string	
x	niup.html#x,FlatToggle_t	niup: x(ih: FlatToggle_t): string	
xautohide=	niup.html#xautohide=,FlatToggle_t,string	niup: xautohide=(ih: FlatToggle_t; value: string)	
xautohide	niup.html#xautohide,FlatToggle_t,string	niup: xautohide(ih: FlatToggle_t; value: string)	
xautohide=	niup.html#xautohide=,FlatToggle_t,bool	niup: xautohide=(ih: FlatToggle_t; yes: bool)	
xautohide	niup.html#xautohide,FlatToggle_t,bool	niup: xautohide(ih: FlatToggle_t; yes: bool)	
xautohide	niup.html#xautohide,FlatToggle_t	niup: xautohide(ih: FlatToggle_t): bool	
xdisplay	niup.html#xdisplay,FlatToggle_t	niup: xdisplay(ih: FlatToggle_t): string	
xfontid	niup.html#xfontid,FlatToggle_t	niup: xfontid(ih: FlatToggle_t): string	
xhidden	niup.html#xhidden,FlatToggle_t	niup: xhidden(ih: FlatToggle_t): bool	
xmax=	niup.html#xmax=,FlatToggle_t,string	niup: xmax=(ih: FlatToggle_t; value: string)	
xmax	niup.html#xmax,FlatToggle_t,string	niup: xmax(ih: FlatToggle_t; value: string)	
xmax=	niup.html#xmax=,FlatToggle_t,int	niup: xmax=(ih: FlatToggle_t; x: int)	
xmax	niup.html#xmax,FlatToggle_t,int	niup: xmax(ih: FlatToggle_t; x: int)	
xmax	niup.html#xmax,FlatToggle_t	niup: xmax(ih: FlatToggle_t): string	
xmin=	niup.html#xmin=,FlatToggle_t,string	niup: xmin=(ih: FlatToggle_t; value: string)	
xmin	niup.html#xmin,FlatToggle_t,string	niup: xmin(ih: FlatToggle_t; value: string)	
xmin=	niup.html#xmin=,FlatToggle_t,int	niup: xmin=(ih: FlatToggle_t; x: int)	
xmin	niup.html#xmin,FlatToggle_t,int	niup: xmin(ih: FlatToggle_t; x: int)	
xmin	niup.html#xmin,FlatToggle_t	niup: xmin(ih: FlatToggle_t): string	
xwindow	niup.html#xwindow,FlatToggle_t	niup: xwindow(ih: FlatToggle_t): string	
y	niup.html#y,FlatToggle_t	niup: y(ih: FlatToggle_t): string	
yautohide=	niup.html#yautohide=,FlatToggle_t,string	niup: yautohide=(ih: FlatToggle_t; value: string)	
yautohide	niup.html#yautohide,FlatToggle_t,string	niup: yautohide(ih: FlatToggle_t; value: string)	
yautohide=	niup.html#yautohide=,FlatToggle_t,bool	niup: yautohide=(ih: FlatToggle_t; yes: bool)	
yautohide	niup.html#yautohide,FlatToggle_t,bool	niup: yautohide(ih: FlatToggle_t; yes: bool)	
yautohide	niup.html#yautohide,FlatToggle_t	niup: yautohide(ih: FlatToggle_t): bool	
yhidden	niup.html#yhidden,FlatToggle_t	niup: yhidden(ih: FlatToggle_t): bool	
ymax=	niup.html#ymax=,FlatToggle_t,string	niup: ymax=(ih: FlatToggle_t; value: string)	
ymax	niup.html#ymax,FlatToggle_t,string	niup: ymax(ih: FlatToggle_t; value: string)	
ymax=	niup.html#ymax=,FlatToggle_t,int	niup: ymax=(ih: FlatToggle_t; x: int)	
ymax	niup.html#ymax,FlatToggle_t,int	niup: ymax(ih: FlatToggle_t; x: int)	
ymax	niup.html#ymax,FlatToggle_t	niup: ymax(ih: FlatToggle_t): string	
ymin=	niup.html#ymin=,FlatToggle_t,string	niup: ymin=(ih: FlatToggle_t; value: string)	
ymin	niup.html#ymin,FlatToggle_t,string	niup: ymin(ih: FlatToggle_t; value: string)	
ymin=	niup.html#ymin=,FlatToggle_t,int	niup: ymin=(ih: FlatToggle_t; x: int)	
ymin	niup.html#ymin,FlatToggle_t,int	niup: ymin(ih: FlatToggle_t; x: int)	
ymin	niup.html#ymin,FlatToggle_t	niup: ymin(ih: FlatToggle_t): string	
zorder=	niup.html#zorder=,FlatToggle_t,string	niup: zorder=(ih: FlatToggle_t; value: string)	
zorder	niup.html#zorder,FlatToggle_t,string	niup: zorder(ih: FlatToggle_t; value: string)	
action=	niup.html#action=,FlatToggle_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatToggle_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatToggle_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatToggle_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatToggle_t	niup: action(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatToggle_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                       arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatToggle_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatToggle_t	niup: button_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatToggle_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatToggle_t,proc(PIhandle)	niup: destroy_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatToggle_t	niup: destroy_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatToggle_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatToggle_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatToggle_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatToggle_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatToggle_t	niup: dragbegin_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatToggle_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatToggle_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatToggle_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatToggle_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatToggle_t	niup: dragdatasize_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatToggle_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatToggle_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatToggle_t	niup: dragdata_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatToggle_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatToggle_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatToggle_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatToggle_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatToggle_t	niup: dragend_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatToggle_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatToggle_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatToggle_t	niup: dropdata_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatToggle_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatToggle_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatToggle_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatToggle_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatToggle_t	niup: dropfiles_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatToggle_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatToggle_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatToggle_t	niup: dropmotion_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatToggle_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatToggle_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatToggle_t	niup: enterwindow_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_action=	niup.html#flat_action=,FlatToggle_t,proc(PIhandle,cint)	niup: flat_action=(ih: FlatToggle_t;\n             cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_action	niup.html#flat_action,FlatToggle_t,proc(PIhandle,cint)	niup: flat_action(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_action	niup.html#flat_action,FlatToggle_t	niup: flat_action(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,FlatToggle_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint; arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatToggle_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatToggle_t	niup: flat_button_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_enterwindow_cb=	niup.html#flat_enterwindow_cb=,FlatToggle_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,FlatToggle_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,FlatToggle_t	niup: flat_enterwindow_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_focus_cb=	niup.html#flat_focus_cb=,FlatToggle_t,proc(PIhandle,cint)	niup: flat_focus_cb=(ih: FlatToggle_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatToggle_t,proc(PIhandle,cint)	niup: flat_focus_cb(ih: FlatToggle_t;\n              cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatToggle_t	niup: flat_focus_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,FlatToggle_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatToggle_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatToggle_t	niup: flat_leavewindow_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,FlatToggle_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint; arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatToggle_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatToggle_t	niup: flat_motion_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatToggle_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatToggle_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatToggle_t	niup: focus_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatToggle_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatToggle_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatToggle_t	niup: getfocus_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatToggle_t,proc(PIhandle)	niup: help_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatToggle_t,proc(PIhandle)	niup: help_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatToggle_t	niup: help_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatToggle_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatToggle_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatToggle_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatToggle_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatToggle_t	niup: keypress_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatToggle_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatToggle_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatToggle_t	niup: killfocus_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatToggle_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatToggle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatToggle_t,proc(PIhandle,cint)	niup: k_any(ih: FlatToggle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatToggle_t	niup: k_any(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatToggle_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatToggle_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatToggle_t	niup: ldestroy_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatToggle_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatToggle_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatToggle_t	niup: leavewindow_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatToggle_t,proc(PIhandle)	niup: map_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatToggle_t,proc(PIhandle)	niup: map_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatToggle_t	niup: map_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatToggle_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatToggle_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatToggle_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatToggle_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatToggle_t	niup: motion_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatToggle_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatToggle_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatToggle_t	niup: postmessage_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatToggle_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatToggle_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatToggle_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatToggle_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatToggle_t	niup: resize_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatToggle_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatToggle_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatToggle_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatToggle_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatToggle_t	niup: scroll_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatToggle_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatToggle_t,proc(PIhandle)	niup: unmap_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatToggle_t	niup: unmap_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,FlatToggle_t,proc(PIhandle)	niup: valuechanged_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatToggle_t,proc(PIhandle)	niup: valuechanged_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatToggle_t	niup: valuechanged_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatToggle_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                      status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatToggle_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                     status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatToggle_t	niup: wheel_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatToggle_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatToggle_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatToggle_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatToggle_t	niup: wom_cb(ih: FlatToggle_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatTree	niup.html#FlatTree_2	niup: FlatTree(): FlatTree_t	
active=	niup.html#active=,FlatTree_t,string	niup: active=(ih: FlatTree_t; value: string)	
active	niup.html#active,FlatTree_t,string	niup: active(ih: FlatTree_t; value: string)	
active=	niup.html#active=,FlatTree_t,bool	niup: active=(ih: FlatTree_t; yes: bool)	
active	niup.html#active,FlatTree_t,bool	niup: active(ih: FlatTree_t; yes: bool)	
active	niup.html#active,FlatTree_t	niup: active(ih: FlatTree_t): bool	
addexpanded=	niup.html#addexpanded=,FlatTree_t,string	niup: addexpanded=(ih: FlatTree_t; value: string)	
addexpanded	niup.html#addexpanded,FlatTree_t,string	niup: addexpanded(ih: FlatTree_t; value: string)	
addexpanded=	niup.html#addexpanded=,FlatTree_t,bool	niup: addexpanded=(ih: FlatTree_t; yes: bool)	
addexpanded	niup.html#addexpanded,FlatTree_t,bool	niup: addexpanded(ih: FlatTree_t; yes: bool)	
addexpanded	niup.html#addexpanded,FlatTree_t	niup: addexpanded(ih: FlatTree_t): bool	
arrowimages=	niup.html#arrowimages=,FlatTree_t,string	niup: arrowimages=(ih: FlatTree_t; value: string)	
arrowimages	niup.html#arrowimages,FlatTree_t,string	niup: arrowimages(ih: FlatTree_t; value: string)	
arrowimages=	niup.html#arrowimages=,FlatTree_t,int	niup: arrowimages=(ih: FlatTree_t; x: int)	
arrowimages	niup.html#arrowimages,FlatTree_t,int	niup: arrowimages(ih: FlatTree_t; x: int)	
arrowimages	niup.html#arrowimages,FlatTree_t	niup: arrowimages(ih: FlatTree_t): string	
autoredraw=	niup.html#autoredraw=,FlatTree_t,string	niup: autoredraw=(ih: FlatTree_t; value: string)	
autoredraw	niup.html#autoredraw,FlatTree_t,string	niup: autoredraw(ih: FlatTree_t; value: string)	
autoredraw=	niup.html#autoredraw=,FlatTree_t,bool	niup: autoredraw=(ih: FlatTree_t; yes: bool)	
autoredraw	niup.html#autoredraw,FlatTree_t,bool	niup: autoredraw(ih: FlatTree_t; yes: bool)	
backimage=	niup.html#backimage=,FlatTree_t,	niup: backimage=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatTree_t,	niup: backimage(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatTree_t	niup: backimage(ih: FlatTree_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatTree_t,string	niup: backimagezoom=(ih: FlatTree_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatTree_t,string	niup: backimagezoom(ih: FlatTree_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatTree_t,bool	niup: backimagezoom=(ih: FlatTree_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatTree_t,bool	niup: backimagezoom(ih: FlatTree_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatTree_t	niup: backimagezoom(ih: FlatTree_t): bool	
backingstore=	niup.html#backingstore=,FlatTree_t,string	niup: backingstore=(ih: FlatTree_t; value: string)	
backingstore	niup.html#backingstore,FlatTree_t,string	niup: backingstore(ih: FlatTree_t; value: string)	
backingstore=	niup.html#backingstore=,FlatTree_t,bool	niup: backingstore=(ih: FlatTree_t; yes: bool)	
backingstore	niup.html#backingstore,FlatTree_t,bool	niup: backingstore(ih: FlatTree_t; yes: bool)	
backingstore	niup.html#backingstore,FlatTree_t	niup: backingstore(ih: FlatTree_t): bool	
bgcolor=	niup.html#bgcolor=,FlatTree_t,string	niup: bgcolor=(ih: FlatTree_t; value: string)	
bgcolor	niup.html#bgcolor,FlatTree_t,string	niup: bgcolor(ih: FlatTree_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatTree_t,int,int,int,int	niup: bgcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatTree_t,int,int,int,int	niup: bgcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatTree_t	niup: bgcolor(ih: FlatTree_t): string	
border=	niup.html#border=,FlatTree_t,string	niup: border=(ih: FlatTree_t; value: string)	
border	niup.html#border,FlatTree_t,string	niup: border(ih: FlatTree_t; value: string)	
border=	niup.html#border=,FlatTree_t,bool	niup: border=(ih: FlatTree_t; yes: bool)	
border	niup.html#border,FlatTree_t,bool	niup: border(ih: FlatTree_t; yes: bool)	
border	niup.html#border,FlatTree_t	niup: border(ih: FlatTree_t): bool	
bordercolor=	niup.html#bordercolor=,FlatTree_t,string	niup: bordercolor=(ih: FlatTree_t; value: string)	
bordercolor	niup.html#bordercolor,FlatTree_t,string	niup: bordercolor(ih: FlatTree_t; value: string)	
bordercolor=	niup.html#bordercolor=,FlatTree_t,int,int,int,int	niup: bordercolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatTree_t,int,int,int,int	niup: bordercolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatTree_t	niup: bordercolor(ih: FlatTree_t): string	
borderwidth=	niup.html#borderwidth=,FlatTree_t,string	niup: borderwidth=(ih: FlatTree_t; value: string)	
borderwidth	niup.html#borderwidth,FlatTree_t,string	niup: borderwidth(ih: FlatTree_t; value: string)	
borderwidth=	niup.html#borderwidth=,FlatTree_t,int	niup: borderwidth=(ih: FlatTree_t; x: int)	
borderwidth	niup.html#borderwidth,FlatTree_t,int	niup: borderwidth(ih: FlatTree_t; x: int)	
borderwidth	niup.html#borderwidth,FlatTree_t	niup: borderwidth(ih: FlatTree_t): string	
buttonbgcolor	niup.html#buttonbgcolor,FlatTree_t	niup: buttonbgcolor(ih: FlatTree_t): string	
buttonbrdcolor	niup.html#buttonbrdcolor,FlatTree_t	niup: buttonbrdcolor(ih: FlatTree_t): string	
buttonfgcolor	niup.html#buttonfgcolor,FlatTree_t	niup: buttonfgcolor(ih: FlatTree_t): string	
buttonminusimage=	niup.html#buttonminusimage=,FlatTree_t,	niup: buttonminusimage=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
buttonminusimage	niup.html#buttonminusimage,FlatTree_t,	niup: buttonminusimage(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
buttonminusimage	niup.html#buttonminusimage,FlatTree_t	niup: buttonminusimage(ih: FlatTree_t): string	
buttonplusimage=	niup.html#buttonplusimage=,FlatTree_t,	niup: buttonplusimage=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
buttonplusimage	niup.html#buttonplusimage,FlatTree_t,	niup: buttonplusimage(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
buttonplusimage	niup.html#buttonplusimage,FlatTree_t	niup: buttonplusimage(ih: FlatTree_t): string	
buttonsize	niup.html#buttonsize,FlatTree_t	niup: buttonsize(ih: FlatTree_t): string	
canfocus=	niup.html#canfocus=,FlatTree_t,string	niup: canfocus=(ih: FlatTree_t; value: string)	
canfocus	niup.html#canfocus,FlatTree_t,string	niup: canfocus(ih: FlatTree_t; value: string)	
canfocus=	niup.html#canfocus=,FlatTree_t,bool	niup: canfocus=(ih: FlatTree_t; yes: bool)	
canfocus	niup.html#canfocus,FlatTree_t,bool	niup: canfocus(ih: FlatTree_t; yes: bool)	
canfocus	niup.html#canfocus,FlatTree_t	niup: canfocus(ih: FlatTree_t): bool	
charsize	niup.html#charsize,FlatTree_t	niup: charsize(ih: FlatTree_t): string	
count	niup.html#count,FlatTree_t	niup: count(ih: FlatTree_t): string	
cspacing=	niup.html#cspacing=,FlatTree_t,string	niup: cspacing=(ih: FlatTree_t; value: string)	
cspacing	niup.html#cspacing,FlatTree_t,string	niup: cspacing(ih: FlatTree_t; value: string)	
cspacing=	niup.html#cspacing=,FlatTree_t,int	niup: cspacing=(ih: FlatTree_t; x: int)	
cspacing	niup.html#cspacing,FlatTree_t,int	niup: cspacing(ih: FlatTree_t; x: int)	
cspacing	niup.html#cspacing,FlatTree_t	niup: cspacing(ih: FlatTree_t): string	
cursor=	niup.html#cursor=,FlatTree_t,	niup: cursor=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatTree_t,	niup: cursor(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatTree_t	niup: cursor(ih: FlatTree_t): string	
dragdrop=	niup.html#dragdrop=,FlatTree_t,string	niup: dragdrop=(ih: FlatTree_t; value: string)	
dragdrop	niup.html#dragdrop,FlatTree_t,string	niup: dragdrop(ih: FlatTree_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatTree_t,bool	niup: dragdrop=(ih: FlatTree_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatTree_t,bool	niup: dragdrop(ih: FlatTree_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatTree_t	niup: dragdrop(ih: FlatTree_t): bool	
dragdroptree=	niup.html#dragdroptree=,FlatTree_t,string	niup: dragdroptree=(ih: FlatTree_t; value: string)	
dragdroptree	niup.html#dragdroptree,FlatTree_t,string	niup: dragdroptree(ih: FlatTree_t; value: string)	
dragdroptree=	niup.html#dragdroptree=,FlatTree_t,bool	niup: dragdroptree=(ih: FlatTree_t; yes: bool)	
dragdroptree	niup.html#dragdroptree,FlatTree_t,bool	niup: dragdroptree(ih: FlatTree_t; yes: bool)	
dragdroptree	niup.html#dragdroptree,FlatTree_t	niup: dragdroptree(ih: FlatTree_t): bool	
dragsource=	niup.html#dragsource=,FlatTree_t,string	niup: dragsource=(ih: FlatTree_t; value: string)	
dragsource	niup.html#dragsource,FlatTree_t,string	niup: dragsource(ih: FlatTree_t; value: string)	
dragsource=	niup.html#dragsource=,FlatTree_t,bool	niup: dragsource=(ih: FlatTree_t; yes: bool)	
dragsource	niup.html#dragsource,FlatTree_t,bool	niup: dragsource(ih: FlatTree_t; yes: bool)	
dragsource	niup.html#dragsource,FlatTree_t	niup: dragsource(ih: FlatTree_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatTree_t,string	niup: dragsourcemove=(ih: FlatTree_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatTree_t,string	niup: dragsourcemove(ih: FlatTree_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatTree_t,bool	niup: dragsourcemove=(ih: FlatTree_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatTree_t,bool	niup: dragsourcemove(ih: FlatTree_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatTree_t	niup: dragsourcemove(ih: FlatTree_t): bool	
dragtypes=	niup.html#dragtypes=,FlatTree_t,string	niup: dragtypes=(ih: FlatTree_t; value: string)	
dragtypes	niup.html#dragtypes,FlatTree_t,string	niup: dragtypes(ih: FlatTree_t; value: string)	
dragtypes	niup.html#dragtypes,FlatTree_t	niup: dragtypes(ih: FlatTree_t): string	
drawable	niup.html#drawable,FlatTree_t	niup: drawable(ih: FlatTree_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatTree_t,string	niup: drawbgcolor=(ih: FlatTree_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatTree_t,string	niup: drawbgcolor(ih: FlatTree_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatTree_t,int,int,int,int	niup: drawbgcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatTree_t,int,int,int,int	niup: drawbgcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatTree_t	niup: drawbgcolor(ih: FlatTree_t): string	
drawcolor=	niup.html#drawcolor=,FlatTree_t,string	niup: drawcolor=(ih: FlatTree_t; value: string)	
drawcolor	niup.html#drawcolor,FlatTree_t,string	niup: drawcolor(ih: FlatTree_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatTree_t,int,int,int,int	niup: drawcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatTree_t,int,int,int,int	niup: drawcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatTree_t	niup: drawcolor(ih: FlatTree_t): string	
drawdriver	niup.html#drawdriver,FlatTree_t	niup: drawdriver(ih: FlatTree_t): string	
drawfont=	niup.html#drawfont=,FlatTree_t,string	niup: drawfont=(ih: FlatTree_t; value: string)	
drawfont	niup.html#drawfont,FlatTree_t,string	niup: drawfont(ih: FlatTree_t; value: string)	
drawfont	niup.html#drawfont,FlatTree_t	niup: drawfont(ih: FlatTree_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatTree_t,string	niup: drawlinewidth=(ih: FlatTree_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatTree_t,string	niup: drawlinewidth(ih: FlatTree_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatTree_t,int	niup: drawlinewidth=(ih: FlatTree_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatTree_t,int	niup: drawlinewidth(ih: FlatTree_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatTree_t	niup: drawlinewidth(ih: FlatTree_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatTree_t,string	niup: drawmakeinactive=(ih: FlatTree_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatTree_t,string	niup: drawmakeinactive(ih: FlatTree_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatTree_t,bool	niup: drawmakeinactive=(ih: FlatTree_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatTree_t,bool	niup: drawmakeinactive(ih: FlatTree_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatTree_t	niup: drawmakeinactive(ih: FlatTree_t): bool	
drawsize	niup.html#drawsize,FlatTree_t	niup: drawsize(ih: FlatTree_t): string	
drawstyle=	niup.html#drawstyle=,FlatTree_t,string	niup: drawstyle=(ih: FlatTree_t; value: string)	
drawstyle	niup.html#drawstyle,FlatTree_t,string	niup: drawstyle(ih: FlatTree_t; value: string)	
drawstyle	niup.html#drawstyle,FlatTree_t	niup: drawstyle(ih: FlatTree_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatTree_t,string	niup: drawtextalignment=(ih: FlatTree_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatTree_t,string	niup: drawtextalignment(ih: FlatTree_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatTree_t	niup: drawtextalignment(ih: FlatTree_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatTree_t,string	niup: drawtextclip=(ih: FlatTree_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatTree_t,string	niup: drawtextclip(ih: FlatTree_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatTree_t,bool	niup: drawtextclip=(ih: FlatTree_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatTree_t,bool	niup: drawtextclip(ih: FlatTree_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatTree_t	niup: drawtextclip(ih: FlatTree_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatTree_t,string	niup: drawtextellipsis=(ih: FlatTree_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatTree_t,string	niup: drawtextellipsis(ih: FlatTree_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatTree_t,bool	niup: drawtextellipsis=(ih: FlatTree_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatTree_t,bool	niup: drawtextellipsis(ih: FlatTree_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatTree_t	niup: drawtextellipsis(ih: FlatTree_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatTree_t,string	niup: drawtextlayoutcenter=(ih: FlatTree_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatTree_t,string	niup: drawtextlayoutcenter(ih: FlatTree_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatTree_t,bool	niup: drawtextlayoutcenter=(ih: FlatTree_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatTree_t,bool	niup: drawtextlayoutcenter(ih: FlatTree_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatTree_t	niup: drawtextlayoutcenter(ih: FlatTree_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatTree_t,string	niup: drawtextorientation=(ih: FlatTree_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatTree_t,string	niup: drawtextorientation(ih: FlatTree_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatTree_t,int64	niup: drawtextorientation=(ih: FlatTree_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatTree_t,int64	niup: drawtextorientation(ih: FlatTree_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatTree_t	niup: drawtextorientation(ih: FlatTree_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatTree_t,string	niup: drawtextwrap=(ih: FlatTree_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatTree_t,string	niup: drawtextwrap(ih: FlatTree_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatTree_t,bool	niup: drawtextwrap=(ih: FlatTree_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatTree_t,bool	niup: drawtextwrap(ih: FlatTree_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatTree_t	niup: drawtextwrap(ih: FlatTree_t): bool	
dropequaldrag=	niup.html#dropequaldrag=,FlatTree_t,string	niup: dropequaldrag=(ih: FlatTree_t; value: string)	
dropequaldrag	niup.html#dropequaldrag,FlatTree_t,string	niup: dropequaldrag(ih: FlatTree_t; value: string)	
dropequaldrag=	niup.html#dropequaldrag=,FlatTree_t,bool	niup: dropequaldrag=(ih: FlatTree_t; yes: bool)	
dropequaldrag	niup.html#dropequaldrag,FlatTree_t,bool	niup: dropequaldrag(ih: FlatTree_t; yes: bool)	
dropequaldrag	niup.html#dropequaldrag,FlatTree_t	niup: dropequaldrag(ih: FlatTree_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatTree_t,string	niup: dropfilestarget=(ih: FlatTree_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatTree_t,string	niup: dropfilestarget(ih: FlatTree_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatTree_t,bool	niup: dropfilestarget=(ih: FlatTree_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatTree_t,bool	niup: dropfilestarget(ih: FlatTree_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatTree_t	niup: dropfilestarget(ih: FlatTree_t): bool	
droptarget=	niup.html#droptarget=,FlatTree_t,string	niup: droptarget=(ih: FlatTree_t; value: string)	
droptarget	niup.html#droptarget,FlatTree_t,string	niup: droptarget(ih: FlatTree_t; value: string)	
droptarget=	niup.html#droptarget=,FlatTree_t,bool	niup: droptarget=(ih: FlatTree_t; yes: bool)	
droptarget	niup.html#droptarget,FlatTree_t,bool	niup: droptarget(ih: FlatTree_t; yes: bool)	
droptarget	niup.html#droptarget,FlatTree_t	niup: droptarget(ih: FlatTree_t): bool	
droptypes=	niup.html#droptypes=,FlatTree_t,string	niup: droptypes=(ih: FlatTree_t; value: string)	
droptypes	niup.html#droptypes,FlatTree_t,string	niup: droptypes(ih: FlatTree_t; value: string)	
droptypes	niup.html#droptypes,FlatTree_t	niup: droptypes(ih: FlatTree_t): string	
dx=	niup.html#dx=,FlatTree_t,string	niup: dx=(ih: FlatTree_t; value: string)	
dx	niup.html#dx,FlatTree_t,string	niup: dx(ih: FlatTree_t; value: string)	
dx=	niup.html#dx=,FlatTree_t,int64	niup: dx=(ih: FlatTree_t; x: int64)	
dx	niup.html#dx,FlatTree_t,int64	niup: dx(ih: FlatTree_t; x: int64)	
dx	niup.html#dx,FlatTree_t	niup: dx(ih: FlatTree_t): string	
dy=	niup.html#dy=,FlatTree_t,string	niup: dy=(ih: FlatTree_t; value: string)	
dy	niup.html#dy,FlatTree_t,string	niup: dy(ih: FlatTree_t; value: string)	
dy=	niup.html#dy=,FlatTree_t,int64	niup: dy=(ih: FlatTree_t; x: int64)	
dy	niup.html#dy,FlatTree_t,int64	niup: dy(ih: FlatTree_t; x: int64)	
dy	niup.html#dy,FlatTree_t	niup: dy(ih: FlatTree_t): string	
emptytoggle	niup.html#emptytoggle,FlatTree_t	niup: emptytoggle(ih: FlatTree_t): string	
expand=	niup.html#expand=,FlatTree_t,string	niup: expand=(ih: FlatTree_t; value: string)	
expand	niup.html#expand,FlatTree_t,string	niup: expand(ih: FlatTree_t; value: string)	
expand	niup.html#expand,FlatTree_t	niup: expand(ih: FlatTree_t): string	
expandall=	niup.html#expandall=,FlatTree_t	niup: expandall=(ih: FlatTree_t)	
expandall	niup.html#expandall,FlatTree_t	niup: expandall(ih: FlatTree_t)	
expandweight=	niup.html#expandweight=,FlatTree_t,string	niup: expandweight=(ih: FlatTree_t; value: string)	
expandweight	niup.html#expandweight,FlatTree_t,string	niup: expandweight(ih: FlatTree_t; value: string)	
expandweight=	niup.html#expandweight=,FlatTree_t,int64	niup: expandweight=(ih: FlatTree_t; x: int64)	
expandweight	niup.html#expandweight,FlatTree_t,int64	niup: expandweight(ih: FlatTree_t; x: int64)	
expandweight	niup.html#expandweight,FlatTree_t	niup: expandweight(ih: FlatTree_t): string	
extratextwidth	niup.html#extratextwidth,FlatTree_t	niup: extratextwidth(ih: FlatTree_t): string	
fgcolor=	niup.html#fgcolor=,FlatTree_t,string	niup: fgcolor=(ih: FlatTree_t; value: string)	
fgcolor	niup.html#fgcolor,FlatTree_t,string	niup: fgcolor(ih: FlatTree_t; value: string)	
fgcolor=	niup.html#fgcolor=,FlatTree_t,int,int,int,int	niup: fgcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatTree_t,int,int,int,int	niup: fgcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatTree_t	niup: fgcolor(ih: FlatTree_t): string	
flatscrollbar	niup.html#flatscrollbar,FlatTree_t	niup: flatscrollbar(ih: FlatTree_t): string	
floating=	niup.html#floating=,FlatTree_t,string	niup: floating=(ih: FlatTree_t; value: string)	
floating	niup.html#floating,FlatTree_t,string	niup: floating(ih: FlatTree_t; value: string)	
floating	niup.html#floating,FlatTree_t	niup: floating(ih: FlatTree_t): string	
floatingdelay	niup.html#floatingdelay,FlatTree_t	niup: floatingdelay(ih: FlatTree_t): string	
focusfeedback=	niup.html#focusfeedback=,FlatTree_t,string	niup: focusfeedback=(ih: FlatTree_t; value: string)	
focusfeedback	niup.html#focusfeedback,FlatTree_t,string	niup: focusfeedback(ih: FlatTree_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,FlatTree_t,bool	niup: focusfeedback=(ih: FlatTree_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatTree_t,bool	niup: focusfeedback(ih: FlatTree_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatTree_t	niup: focusfeedback(ih: FlatTree_t): bool	
font=	niup.html#font=,FlatTree_t,string	niup: font=(ih: FlatTree_t; value: string)	
font	niup.html#font,FlatTree_t,string	niup: font(ih: FlatTree_t; value: string)	
font	niup.html#font,FlatTree_t	niup: font(ih: FlatTree_t): string	
fontface=	niup.html#fontface=,FlatTree_t,string	niup: fontface=(ih: FlatTree_t; value: string)	
fontface	niup.html#fontface,FlatTree_t,string	niup: fontface(ih: FlatTree_t; value: string)	
fontface	niup.html#fontface,FlatTree_t	niup: fontface(ih: FlatTree_t): string	
fontsize=	niup.html#fontsize=,FlatTree_t,string	niup: fontsize=(ih: FlatTree_t; value: string)	
fontsize	niup.html#fontsize,FlatTree_t,string	niup: fontsize(ih: FlatTree_t; value: string)	
fontsize=	niup.html#fontsize=,FlatTree_t,int	niup: fontsize=(ih: FlatTree_t; x: int)	
fontsize	niup.html#fontsize,FlatTree_t,int	niup: fontsize(ih: FlatTree_t; x: int)	
fontsize	niup.html#fontsize,FlatTree_t	niup: fontsize(ih: FlatTree_t): string	
fontstyle=	niup.html#fontstyle=,FlatTree_t,string	niup: fontstyle=(ih: FlatTree_t; value: string)	
fontstyle	niup.html#fontstyle,FlatTree_t,string	niup: fontstyle(ih: FlatTree_t; value: string)	
fontstyle	niup.html#fontstyle,FlatTree_t	niup: fontstyle(ih: FlatTree_t): string	
handlename=	niup.html#handlename=,FlatTree_t,string	niup: handlename=(ih: FlatTree_t; value: string)	
handlename	niup.html#handlename,FlatTree_t,string	niup: handlename(ih: FlatTree_t; value: string)	
handlename	niup.html#handlename,FlatTree_t	niup: handlename(ih: FlatTree_t): string	
hasfocus	niup.html#hasfocus,FlatTree_t	niup: hasfocus(ih: FlatTree_t): bool	
hidebuttons=	niup.html#hidebuttons=,FlatTree_t,string	niup: hidebuttons=(ih: FlatTree_t; value: string)	
hidebuttons	niup.html#hidebuttons,FlatTree_t,string	niup: hidebuttons(ih: FlatTree_t; value: string)	
hidebuttons=	niup.html#hidebuttons=,FlatTree_t,bool	niup: hidebuttons=(ih: FlatTree_t; yes: bool)	
hidebuttons	niup.html#hidebuttons,FlatTree_t,bool	niup: hidebuttons(ih: FlatTree_t; yes: bool)	
hidebuttons	niup.html#hidebuttons,FlatTree_t	niup: hidebuttons(ih: FlatTree_t): bool	
hidelines=	niup.html#hidelines=,FlatTree_t,string	niup: hidelines=(ih: FlatTree_t; value: string)	
hidelines	niup.html#hidelines,FlatTree_t,string	niup: hidelines(ih: FlatTree_t; value: string)	
hidelines=	niup.html#hidelines=,FlatTree_t,bool	niup: hidelines=(ih: FlatTree_t; yes: bool)	
hidelines	niup.html#hidelines,FlatTree_t,bool	niup: hidelines(ih: FlatTree_t; yes: bool)	
hidelines	niup.html#hidelines,FlatTree_t	niup: hidelines(ih: FlatTree_t): bool	
hlcolor=	niup.html#hlcolor=,FlatTree_t,string	niup: hlcolor=(ih: FlatTree_t; value: string)	
hlcolor	niup.html#hlcolor,FlatTree_t,string	niup: hlcolor(ih: FlatTree_t; value: string)	
hlcolor=	niup.html#hlcolor=,FlatTree_t,int,int,int,int	niup: hlcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatTree_t,int,int,int,int	niup: hlcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatTree_t	niup: hlcolor(ih: FlatTree_t): string	
hlcoloralpha=	niup.html#hlcoloralpha=,FlatTree_t,string	niup: hlcoloralpha=(ih: FlatTree_t; value: string)	
hlcoloralpha	niup.html#hlcoloralpha,FlatTree_t,string	niup: hlcoloralpha(ih: FlatTree_t; value: string)	
hlcoloralpha=	niup.html#hlcoloralpha=,FlatTree_t,int	niup: hlcoloralpha=(ih: FlatTree_t; x: int)	
hlcoloralpha	niup.html#hlcoloralpha,FlatTree_t,int	niup: hlcoloralpha(ih: FlatTree_t; x: int)	
hlcoloralpha	niup.html#hlcoloralpha,FlatTree_t	niup: hlcoloralpha(ih: FlatTree_t): string	
iconspacing=	niup.html#iconspacing=,FlatTree_t,string	niup: iconspacing=(ih: FlatTree_t; value: string)	
iconspacing	niup.html#iconspacing,FlatTree_t,string	niup: iconspacing(ih: FlatTree_t; value: string)	
iconspacing=	niup.html#iconspacing=,FlatTree_t,int	niup: iconspacing=(ih: FlatTree_t; x: int)	
iconspacing	niup.html#iconspacing,FlatTree_t,int	niup: iconspacing(ih: FlatTree_t; x: int)	
iconspacing	niup.html#iconspacing,FlatTree_t	niup: iconspacing(ih: FlatTree_t): string	
imagebranchcollapsed=	niup.html#imagebranchcollapsed=,FlatTree_t,	niup: imagebranchcollapsed=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchcollapsed	niup.html#imagebranchcollapsed,FlatTree_t,	niup: imagebranchcollapsed(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchcollapsed	niup.html#imagebranchcollapsed,FlatTree_t	niup: imagebranchcollapsed(ih: FlatTree_t): string	
imagebranchexpanded=	niup.html#imagebranchexpanded=,FlatTree_t,	niup: imagebranchexpanded=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchexpanded	niup.html#imagebranchexpanded,FlatTree_t,	niup: imagebranchexpanded(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchexpanded	niup.html#imagebranchexpanded,FlatTree_t	niup: imagebranchexpanded(ih: FlatTree_t): string	
imageleaf=	niup.html#imageleaf=,FlatTree_t,	niup: imageleaf=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageleaf	niup.html#imageleaf,FlatTree_t,	niup: imageleaf(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageleaf	niup.html#imageleaf,FlatTree_t	niup: imageleaf(ih: FlatTree_t): string	
indentation=	niup.html#indentation=,FlatTree_t,string	niup: indentation=(ih: FlatTree_t; value: string)	
indentation	niup.html#indentation,FlatTree_t,string	niup: indentation(ih: FlatTree_t; value: string)	
indentation=	niup.html#indentation=,FlatTree_t,int	niup: indentation=(ih: FlatTree_t; x: int)	
indentation	niup.html#indentation,FlatTree_t,int	niup: indentation(ih: FlatTree_t; x: int)	
indentation	niup.html#indentation,FlatTree_t	niup: indentation(ih: FlatTree_t): string	
lastaddnode	niup.html#lastaddnode,FlatTree_t	niup: lastaddnode(ih: FlatTree_t): string	
linecolor	niup.html#linecolor,FlatTree_t	niup: linecolor(ih: FlatTree_t): string	
linex=	niup.html#linex=,FlatTree_t,string	niup: linex=(ih: FlatTree_t; value: string)	
linex	niup.html#linex,FlatTree_t,string	niup: linex(ih: FlatTree_t; value: string)	
linex=	niup.html#linex=,FlatTree_t,int64	niup: linex=(ih: FlatTree_t; x: int64)	
linex	niup.html#linex,FlatTree_t,int64	niup: linex(ih: FlatTree_t; x: int64)	
linex	niup.html#linex,FlatTree_t	niup: linex(ih: FlatTree_t): string	
liney=	niup.html#liney=,FlatTree_t,string	niup: liney=(ih: FlatTree_t; value: string)	
liney	niup.html#liney,FlatTree_t,string	niup: liney(ih: FlatTree_t; value: string)	
liney=	niup.html#liney=,FlatTree_t,int64	niup: liney=(ih: FlatTree_t; x: int64)	
liney	niup.html#liney,FlatTree_t,int64	niup: liney(ih: FlatTree_t; x: int64)	
liney	niup.html#liney,FlatTree_t	niup: liney(ih: FlatTree_t): string	
mark=	niup.html#mark=,FlatTree_t,string	niup: mark=(ih: FlatTree_t; value: string)	
mark	niup.html#mark,FlatTree_t,string	niup: mark(ih: FlatTree_t; value: string)	
markednodes=	niup.html#markednodes=,FlatTree_t,string	niup: markednodes=(ih: FlatTree_t; value: string)	
markednodes	niup.html#markednodes,FlatTree_t,string	niup: markednodes(ih: FlatTree_t; value: string)	
markednodes	niup.html#markednodes,FlatTree_t	niup: markednodes(ih: FlatTree_t): string	
markmode=	niup.html#markmode=,FlatTree_t,string	niup: markmode=(ih: FlatTree_t; value: string)	
markmode	niup.html#markmode,FlatTree_t,string	niup: markmode(ih: FlatTree_t; value: string)	
markmode	niup.html#markmode,FlatTree_t	niup: markmode(ih: FlatTree_t): string	
markstart=	niup.html#markstart=,FlatTree_t,string	niup: markstart=(ih: FlatTree_t; value: string)	
markstart	niup.html#markstart,FlatTree_t,string	niup: markstart(ih: FlatTree_t; value: string)	
markstart=	niup.html#markstart=,FlatTree_t,bool	niup: markstart=(ih: FlatTree_t; yes: bool)	
markstart	niup.html#markstart,FlatTree_t,bool	niup: markstart(ih: FlatTree_t; yes: bool)	
markstart	niup.html#markstart,FlatTree_t	niup: markstart(ih: FlatTree_t): bool	
markwhentoggle=	niup.html#markwhentoggle=,FlatTree_t,string	niup: markwhentoggle=(ih: FlatTree_t; value: string)	
markwhentoggle	niup.html#markwhentoggle,FlatTree_t,string	niup: markwhentoggle(ih: FlatTree_t; value: string)	
markwhentoggle=	niup.html#markwhentoggle=,FlatTree_t,bool	niup: markwhentoggle=(ih: FlatTree_t; yes: bool)	
markwhentoggle	niup.html#markwhentoggle,FlatTree_t,bool	niup: markwhentoggle(ih: FlatTree_t; yes: bool)	
markwhentoggle	niup.html#markwhentoggle,FlatTree_t	niup: markwhentoggle(ih: FlatTree_t): bool	
maxsize=	niup.html#maxsize=,FlatTree_t,string	niup: maxsize=(ih: FlatTree_t; value: string)	
maxsize	niup.html#maxsize,FlatTree_t,string	niup: maxsize(ih: FlatTree_t; value: string)	
maxsize=	niup.html#maxsize=,FlatTree_t,int,int	niup: maxsize=(ih: FlatTree_t; width, height: int)	
maxsize	niup.html#maxsize,FlatTree_t,int,int	niup: maxsize(ih: FlatTree_t; width, height: int)	
maxsize	niup.html#maxsize,FlatTree_t	niup: maxsize(ih: FlatTree_t): string	
minsize=	niup.html#minsize=,FlatTree_t,string	niup: minsize=(ih: FlatTree_t; value: string)	
minsize	niup.html#minsize,FlatTree_t,string	niup: minsize(ih: FlatTree_t; value: string)	
minsize=	niup.html#minsize=,FlatTree_t,int,int	niup: minsize=(ih: FlatTree_t; width, height: int)	
minsize	niup.html#minsize,FlatTree_t,int,int	niup: minsize(ih: FlatTree_t; width, height: int)	
minsize	niup.html#minsize,FlatTree_t	niup: minsize(ih: FlatTree_t): string	
name=	niup.html#name=,FlatTree_t,string	niup: name=(ih: FlatTree_t; value: string)	
name	niup.html#name,FlatTree_t,string	niup: name(ih: FlatTree_t; value: string)	
name	niup.html#name,FlatTree_t	niup: name(ih: FlatTree_t): string	
naturalsize	niup.html#naturalsize,FlatTree_t	niup: naturalsize(ih: FlatTree_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatTree_t,string	niup: normalizergroup=(ih: FlatTree_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatTree_t,string	niup: normalizergroup(ih: FlatTree_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatTree_t	niup: normalizergroup(ih: FlatTree_t): string	
ntheme=	niup.html#ntheme=,FlatTree_t,string	niup: ntheme=(ih: FlatTree_t; value: string)	
ntheme	niup.html#ntheme,FlatTree_t,string	niup: ntheme(ih: FlatTree_t; value: string)	
ntheme	niup.html#ntheme,FlatTree_t	niup: ntheme(ih: FlatTree_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatTree_t	niup: pangofontdesc(ih: FlatTree_t): string	
pangolayout	niup.html#pangolayout,FlatTree_t	niup: pangolayout(ih: FlatTree_t): string	
position=	niup.html#position=,FlatTree_t,string	niup: position=(ih: FlatTree_t; value: string)	
position	niup.html#position,FlatTree_t,string	niup: position(ih: FlatTree_t; value: string)	
position=	niup.html#position=,FlatTree_t,int,int	niup: position=(ih: FlatTree_t; x, y: int)	
position	niup.html#position,FlatTree_t,int,int	niup: position(ih: FlatTree_t; x, y: int)	
position	niup.html#position,FlatTree_t	niup: position(ih: FlatTree_t): string	
posx=	niup.html#posx=,FlatTree_t,string	niup: posx=(ih: FlatTree_t; value: string)	
posx	niup.html#posx,FlatTree_t,string	niup: posx(ih: FlatTree_t; value: string)	
posx=	niup.html#posx=,FlatTree_t,int64	niup: posx=(ih: FlatTree_t; x: int64)	
posx	niup.html#posx,FlatTree_t,int64	niup: posx(ih: FlatTree_t; x: int64)	
posx	niup.html#posx,FlatTree_t	niup: posx(ih: FlatTree_t): string	
posy=	niup.html#posy=,FlatTree_t,string	niup: posy=(ih: FlatTree_t; value: string)	
posy	niup.html#posy,FlatTree_t,string	niup: posy(ih: FlatTree_t; value: string)	
posy=	niup.html#posy=,FlatTree_t,int64	niup: posy=(ih: FlatTree_t; x: int64)	
posy	niup.html#posy,FlatTree_t,int64	niup: posy(ih: FlatTree_t; x: int64)	
posy	niup.html#posy,FlatTree_t	niup: posy(ih: FlatTree_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatTree_t,string	niup: propagatefocus=(ih: FlatTree_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatTree_t,string	niup: propagatefocus(ih: FlatTree_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatTree_t,bool	niup: propagatefocus=(ih: FlatTree_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatTree_t,bool	niup: propagatefocus(ih: FlatTree_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatTree_t	niup: propagatefocus(ih: FlatTree_t): bool	
pscolor=	niup.html#pscolor=,FlatTree_t,string	niup: pscolor=(ih: FlatTree_t; value: string)	
pscolor	niup.html#pscolor,FlatTree_t,string	niup: pscolor(ih: FlatTree_t; value: string)	
pscolor=	niup.html#pscolor=,FlatTree_t,int,int,int,int	niup: pscolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatTree_t,int,int,int,int	niup: pscolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatTree_t	niup: pscolor(ih: FlatTree_t): string	
rastersize=	niup.html#rastersize=,FlatTree_t,string	niup: rastersize=(ih: FlatTree_t; value: string)	
rastersize	niup.html#rastersize,FlatTree_t,string	niup: rastersize(ih: FlatTree_t; value: string)	
rastersize=	niup.html#rastersize=,FlatTree_t,int,int	niup: rastersize=(ih: FlatTree_t; width, height: int)	
rastersize	niup.html#rastersize,FlatTree_t,int,int	niup: rastersize(ih: FlatTree_t; width, height: int)	
rastersize	niup.html#rastersize,FlatTree_t	niup: rastersize(ih: FlatTree_t): string	
rename=	niup.html#rename=,FlatTree_t	niup: rename=(ih: FlatTree_t)	
rename	niup.html#rename,FlatTree_t	niup: rename(ih: FlatTree_t)	
renamecaret=	niup.html#renamecaret=,FlatTree_t,string	niup: renamecaret=(ih: FlatTree_t; value: string)	
renamecaret	niup.html#renamecaret,FlatTree_t,string	niup: renamecaret(ih: FlatTree_t; value: string)	
renamecaret	niup.html#renamecaret,FlatTree_t	niup: renamecaret(ih: FlatTree_t): string	
renameselection=	niup.html#renameselection=,FlatTree_t,string	niup: renameselection=(ih: FlatTree_t; value: string)	
renameselection	niup.html#renameselection,FlatTree_t,string	niup: renameselection(ih: FlatTree_t; value: string)	
renameselection	niup.html#renameselection,FlatTree_t	niup: renameselection(ih: FlatTree_t): string	
rootcount	niup.html#rootcount,FlatTree_t	niup: rootcount(ih: FlatTree_t): string	
sb_backcolor	niup.html#sb_backcolor,FlatTree_t	niup: sb_backcolor(ih: FlatTree_t): string	
sb_forecolor	niup.html#sb_forecolor,FlatTree_t	niup: sb_forecolor(ih: FlatTree_t): string	
sb_highcolor	niup.html#sb_highcolor,FlatTree_t	niup: sb_highcolor(ih: FlatTree_t): string	
sb_imagebottom=	niup.html#sb_imagebottom=,FlatTree_t,	niup: sb_imagebottom=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottom	niup.html#sb_imagebottom,FlatTree_t,	niup: sb_imagebottom(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottom	niup.html#sb_imagebottom,FlatTree_t	niup: sb_imagebottom(ih: FlatTree_t): string	
sb_imagebottomhighlight=	niup.html#sb_imagebottomhighlight=,FlatTree_t,	niup: sb_imagebottomhighlight=(ih: FlatTree_t;\n                         handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottomhighlight	niup.html#sb_imagebottomhighlight,FlatTree_t,	niup: sb_imagebottomhighlight(ih: FlatTree_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottomhighlight	niup.html#sb_imagebottomhighlight,FlatTree_t	niup: sb_imagebottomhighlight(ih: FlatTree_t): string	
sb_imagebottominactive=	niup.html#sb_imagebottominactive=,FlatTree_t,	niup: sb_imagebottominactive=(ih: FlatTree_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottominactive	niup.html#sb_imagebottominactive,FlatTree_t,	niup: sb_imagebottominactive(ih: FlatTree_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottominactive	niup.html#sb_imagebottominactive,FlatTree_t	niup: sb_imagebottominactive(ih: FlatTree_t): string	
sb_imagebottompress=	niup.html#sb_imagebottompress=,FlatTree_t,	niup: sb_imagebottompress=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottompress	niup.html#sb_imagebottompress,FlatTree_t,	niup: sb_imagebottompress(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagebottompress	niup.html#sb_imagebottompress,FlatTree_t	niup: sb_imagebottompress(ih: FlatTree_t): string	
sb_imageleft=	niup.html#sb_imageleft=,FlatTree_t,	niup: sb_imageleft=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleft	niup.html#sb_imageleft,FlatTree_t,	niup: sb_imageleft(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleft	niup.html#sb_imageleft,FlatTree_t	niup: sb_imageleft(ih: FlatTree_t): string	
sb_imagelefthighlight=	niup.html#sb_imagelefthighlight=,FlatTree_t,	niup: sb_imagelefthighlight=(ih: FlatTree_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagelefthighlight	niup.html#sb_imagelefthighlight,FlatTree_t,	niup: sb_imagelefthighlight(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagelefthighlight	niup.html#sb_imagelefthighlight,FlatTree_t	niup: sb_imagelefthighlight(ih: FlatTree_t): string	
sb_imageleftinactive=	niup.html#sb_imageleftinactive=,FlatTree_t,	niup: sb_imageleftinactive=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftinactive	niup.html#sb_imageleftinactive,FlatTree_t,	niup: sb_imageleftinactive(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftinactive	niup.html#sb_imageleftinactive,FlatTree_t	niup: sb_imageleftinactive(ih: FlatTree_t): string	
sb_imageleftpress=	niup.html#sb_imageleftpress=,FlatTree_t,	niup: sb_imageleftpress=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftpress	niup.html#sb_imageleftpress,FlatTree_t,	niup: sb_imageleftpress(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageleftpress	niup.html#sb_imageleftpress,FlatTree_t	niup: sb_imageleftpress(ih: FlatTree_t): string	
sb_imageright=	niup.html#sb_imageright=,FlatTree_t,	niup: sb_imageright=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageright	niup.html#sb_imageright,FlatTree_t,	niup: sb_imageright(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imageright	niup.html#sb_imageright,FlatTree_t	niup: sb_imageright(ih: FlatTree_t): string	
sb_imagerighthighlight=	niup.html#sb_imagerighthighlight=,FlatTree_t,	niup: sb_imagerighthighlight=(ih: FlatTree_t;\n                        handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerighthighlight	niup.html#sb_imagerighthighlight,FlatTree_t,	niup: sb_imagerighthighlight(ih: FlatTree_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerighthighlight	niup.html#sb_imagerighthighlight,FlatTree_t	niup: sb_imagerighthighlight(ih: FlatTree_t): string	
sb_imagerightinactive=	niup.html#sb_imagerightinactive=,FlatTree_t,	niup: sb_imagerightinactive=(ih: FlatTree_t;\n                       handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightinactive	niup.html#sb_imagerightinactive,FlatTree_t,	niup: sb_imagerightinactive(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightinactive	niup.html#sb_imagerightinactive,FlatTree_t	niup: sb_imagerightinactive(ih: FlatTree_t): string	
sb_imagerightpress=	niup.html#sb_imagerightpress=,FlatTree_t,	niup: sb_imagerightpress=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightpress	niup.html#sb_imagerightpress,FlatTree_t,	niup: sb_imagerightpress(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagerightpress	niup.html#sb_imagerightpress,FlatTree_t	niup: sb_imagerightpress(ih: FlatTree_t): string	
sb_imagetop=	niup.html#sb_imagetop=,FlatTree_t,	niup: sb_imagetop=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetop	niup.html#sb_imagetop,FlatTree_t,	niup: sb_imagetop(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetop	niup.html#sb_imagetop,FlatTree_t	niup: sb_imagetop(ih: FlatTree_t): string	
sb_imagetophighlight=	niup.html#sb_imagetophighlight=,FlatTree_t,	niup: sb_imagetophighlight=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetophighlight	niup.html#sb_imagetophighlight,FlatTree_t,	niup: sb_imagetophighlight(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetophighlight	niup.html#sb_imagetophighlight,FlatTree_t	niup: sb_imagetophighlight(ih: FlatTree_t): string	
sb_imagetopinactive=	niup.html#sb_imagetopinactive=,FlatTree_t,	niup: sb_imagetopinactive=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetopinactive	niup.html#sb_imagetopinactive,FlatTree_t,	niup: sb_imagetopinactive(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetopinactive	niup.html#sb_imagetopinactive,FlatTree_t	niup: sb_imagetopinactive(ih: FlatTree_t): string	
sb_imagetoppress=	niup.html#sb_imagetoppress=,FlatTree_t,	niup: sb_imagetoppress=(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetoppress	niup.html#sb_imagetoppress,FlatTree_t,	niup: sb_imagetoppress(ih: FlatTree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
sb_imagetoppress	niup.html#sb_imagetoppress,FlatTree_t	niup: sb_imagetoppress(ih: FlatTree_t): string	
sb_presscolor	niup.html#sb_presscolor,FlatTree_t	niup: sb_presscolor(ih: FlatTree_t): string	
sb_resize	niup.html#sb_resize,FlatTree_t	niup: sb_resize(ih: FlatTree_t): string	
screenposition	niup.html#screenposition,FlatTree_t	niup: screenposition(ih: FlatTree_t): string	
scrollbar=	niup.html#scrollbar=,FlatTree_t,string	niup: scrollbar=(ih: FlatTree_t; value: string)	
scrollbar	niup.html#scrollbar,FlatTree_t,string	niup: scrollbar(ih: FlatTree_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatTree_t,bool	niup: scrollbar=(ih: FlatTree_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatTree_t,bool	niup: scrollbar(ih: FlatTree_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatTree_t	niup: scrollbar(ih: FlatTree_t): bool	
scrollbarsize	niup.html#scrollbarsize,FlatTree_t	niup: scrollbarsize(ih: FlatTree_t): string	
showarrows	niup.html#showarrows,FlatTree_t	niup: showarrows(ih: FlatTree_t): string	
showdragdrop=	niup.html#showdragdrop=,FlatTree_t,string	niup: showdragdrop=(ih: FlatTree_t; value: string)	
showdragdrop	niup.html#showdragdrop,FlatTree_t,string	niup: showdragdrop(ih: FlatTree_t; value: string)	
showdragdrop=	niup.html#showdragdrop=,FlatTree_t,bool	niup: showdragdrop=(ih: FlatTree_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,FlatTree_t,bool	niup: showdragdrop(ih: FlatTree_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,FlatTree_t	niup: showdragdrop(ih: FlatTree_t): bool	
showfloating	niup.html#showfloating,FlatTree_t	niup: showfloating(ih: FlatTree_t): string	
showrename=	niup.html#showrename=,FlatTree_t,string	niup: showrename=(ih: FlatTree_t; value: string)	
showrename	niup.html#showrename,FlatTree_t,string	niup: showrename(ih: FlatTree_t; value: string)	
showrename=	niup.html#showrename=,FlatTree_t,bool	niup: showrename=(ih: FlatTree_t; yes: bool)	
showrename	niup.html#showrename,FlatTree_t,bool	niup: showrename(ih: FlatTree_t; yes: bool)	
showrename	niup.html#showrename,FlatTree_t	niup: showrename(ih: FlatTree_t): bool	
showtoggle=	niup.html#showtoggle=,FlatTree_t,string	niup: showtoggle=(ih: FlatTree_t; value: string)	
showtoggle	niup.html#showtoggle,FlatTree_t,string	niup: showtoggle(ih: FlatTree_t; value: string)	
showtoggle=	niup.html#showtoggle=,FlatTree_t,bool	niup: showtoggle=(ih: FlatTree_t; yes: bool)	
showtoggle	niup.html#showtoggle,FlatTree_t,bool	niup: showtoggle(ih: FlatTree_t; yes: bool)	
showtoggle	niup.html#showtoggle,FlatTree_t	niup: showtoggle(ih: FlatTree_t): bool	
showtransparent	niup.html#showtransparent,FlatTree_t	niup: showtransparent(ih: FlatTree_t): string	
size=	niup.html#size=,FlatTree_t,string	niup: size=(ih: FlatTree_t; value: string)	
size	niup.html#size,FlatTree_t,string	niup: size(ih: FlatTree_t; value: string)	
size=	niup.html#size=,FlatTree_t,int,int	niup: size=(ih: FlatTree_t; width, height: int)	
size	niup.html#size,FlatTree_t,int,int	niup: size(ih: FlatTree_t; width, height: int)	
size	niup.html#size,FlatTree_t	niup: size(ih: FlatTree_t): string	
spacing=	niup.html#spacing=,FlatTree_t,string	niup: spacing=(ih: FlatTree_t; value: string)	
spacing	niup.html#spacing,FlatTree_t,string	niup: spacing(ih: FlatTree_t; value: string)	
spacing=	niup.html#spacing=,FlatTree_t,int	niup: spacing=(ih: FlatTree_t; x: int)	
spacing	niup.html#spacing,FlatTree_t,int	niup: spacing(ih: FlatTree_t; x: int)	
spacing	niup.html#spacing,FlatTree_t	niup: spacing(ih: FlatTree_t): string	
textpscolor=	niup.html#textpscolor=,FlatTree_t,string	niup: textpscolor=(ih: FlatTree_t; value: string)	
textpscolor	niup.html#textpscolor,FlatTree_t,string	niup: textpscolor(ih: FlatTree_t; value: string)	
textpscolor=	niup.html#textpscolor=,FlatTree_t,int,int,int,int	niup: textpscolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatTree_t,int,int,int,int	niup: textpscolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
textpscolor	niup.html#textpscolor,FlatTree_t	niup: textpscolor(ih: FlatTree_t): string	
theme=	niup.html#theme=,FlatTree_t,string	niup: theme=(ih: FlatTree_t; value: string)	
theme	niup.html#theme,FlatTree_t,string	niup: theme(ih: FlatTree_t; value: string)	
theme	niup.html#theme,FlatTree_t	niup: theme(ih: FlatTree_t): string	
tip=	niup.html#tip=,FlatTree_t,string	niup: tip=(ih: FlatTree_t; value: string)	
tip	niup.html#tip,FlatTree_t,string	niup: tip(ih: FlatTree_t; value: string)	
tip	niup.html#tip,FlatTree_t	niup: tip(ih: FlatTree_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatTree_t,string	niup: tipbgcolor=(ih: FlatTree_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatTree_t,string	niup: tipbgcolor(ih: FlatTree_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatTree_t,int,int,int,int	niup: tipbgcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatTree_t,int,int,int,int	niup: tipbgcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatTree_t	niup: tipbgcolor(ih: FlatTree_t): string	
tipdelay=	niup.html#tipdelay=,FlatTree_t,string	niup: tipdelay=(ih: FlatTree_t; value: string)	
tipdelay	niup.html#tipdelay,FlatTree_t,string	niup: tipdelay(ih: FlatTree_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatTree_t,int	niup: tipdelay=(ih: FlatTree_t; x: int)	
tipdelay	niup.html#tipdelay,FlatTree_t,int	niup: tipdelay(ih: FlatTree_t; x: int)	
tipdelay	niup.html#tipdelay,FlatTree_t	niup: tipdelay(ih: FlatTree_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatTree_t,string	niup: tipfgcolor=(ih: FlatTree_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatTree_t,string	niup: tipfgcolor(ih: FlatTree_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatTree_t,int,int,int,int	niup: tipfgcolor=(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatTree_t,int,int,int,int	niup: tipfgcolor(ih: FlatTree_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatTree_t	niup: tipfgcolor(ih: FlatTree_t): string	
tipicon=	niup.html#tipicon=,FlatTree_t,string	niup: tipicon=(ih: FlatTree_t; value: string)	
tipicon	niup.html#tipicon,FlatTree_t,string	niup: tipicon(ih: FlatTree_t; value: string)	
tipicon	niup.html#tipicon,FlatTree_t	niup: tipicon(ih: FlatTree_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatTree_t,string	niup: tipmarkup=(ih: FlatTree_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatTree_t,string	niup: tipmarkup(ih: FlatTree_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatTree_t	niup: tipmarkup(ih: FlatTree_t): string	
tiprect=	niup.html#tiprect=,FlatTree_t,string	niup: tiprect=(ih: FlatTree_t; value: string)	
tiprect	niup.html#tiprect,FlatTree_t,string	niup: tiprect(ih: FlatTree_t; value: string)	
tiprect=	niup.html#tiprect=,FlatTree_t,int,int,int,int	niup: tiprect=(ih: FlatTree_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatTree_t,int,int,int,int	niup: tiprect(ih: FlatTree_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatTree_t	niup: tiprect(ih: FlatTree_t): string	
tipvisible=	niup.html#tipvisible=,FlatTree_t,string	niup: tipvisible=(ih: FlatTree_t; value: string)	
tipvisible	niup.html#tipvisible,FlatTree_t,string	niup: tipvisible(ih: FlatTree_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatTree_t,bool	niup: tipvisible=(ih: FlatTree_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatTree_t,bool	niup: tipvisible(ih: FlatTree_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatTree_t	niup: tipvisible(ih: FlatTree_t): bool	
togglebgcolor	niup.html#togglebgcolor,FlatTree_t	niup: togglebgcolor(ih: FlatTree_t): string	
togglefgcolor	niup.html#togglefgcolor,FlatTree_t	niup: togglefgcolor(ih: FlatTree_t): string	
togglesize	niup.html#togglesize,FlatTree_t	niup: togglesize(ih: FlatTree_t): string	
topitem=	niup.html#topitem=,FlatTree_t,string	niup: topitem=(ih: FlatTree_t; value: string)	
topitem	niup.html#topitem,FlatTree_t,string	niup: topitem(ih: FlatTree_t; value: string)	
topitem=	niup.html#topitem=,FlatTree_t,int	niup: topitem=(ih: FlatTree_t; x: int)	
topitem	niup.html#topitem,FlatTree_t,int	niup: topitem(ih: FlatTree_t; x: int)	
touch=	niup.html#touch=,FlatTree_t,string	niup: touch=(ih: FlatTree_t; value: string)	
touch	niup.html#touch,FlatTree_t,string	niup: touch(ih: FlatTree_t; value: string)	
touch=	niup.html#touch=,FlatTree_t,bool	niup: touch=(ih: FlatTree_t; yes: bool)	
touch	niup.html#touch,FlatTree_t,bool	niup: touch(ih: FlatTree_t; yes: bool)	
touch	niup.html#touch,FlatTree_t	niup: touch(ih: FlatTree_t): bool	
usersize=	niup.html#usersize=,FlatTree_t,string	niup: usersize=(ih: FlatTree_t; value: string)	
usersize	niup.html#usersize,FlatTree_t,string	niup: usersize(ih: FlatTree_t; value: string)	
usersize=	niup.html#usersize=,FlatTree_t,int,int	niup: usersize=(ih: FlatTree_t; width, height: int)	
usersize	niup.html#usersize,FlatTree_t,int,int	niup: usersize(ih: FlatTree_t; width, height: int)	
usersize	niup.html#usersize,FlatTree_t	niup: usersize(ih: FlatTree_t): string	
value=	niup.html#value=,FlatTree_t,string	niup: value=(ih: FlatTree_t; value: string)	
value	niup.html#value,FlatTree_t,string	niup: value(ih: FlatTree_t; value: string)	
value=	niup.html#value=,FlatTree_t,int	niup: value=(ih: FlatTree_t; x: int)	
value	niup.html#value,FlatTree_t,int	niup: value(ih: FlatTree_t; x: int)	
value	niup.html#value,FlatTree_t	niup: value(ih: FlatTree_t): string	
visible=	niup.html#visible=,FlatTree_t,string	niup: visible=(ih: FlatTree_t; value: string)	
visible	niup.html#visible,FlatTree_t,string	niup: visible(ih: FlatTree_t; value: string)	
visible=	niup.html#visible=,FlatTree_t,bool	niup: visible=(ih: FlatTree_t; yes: bool)	
visible	niup.html#visible,FlatTree_t,bool	niup: visible(ih: FlatTree_t; yes: bool)	
visible	niup.html#visible,FlatTree_t	niup: visible(ih: FlatTree_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatTree_t,string	niup: wheeldropfocus=(ih: FlatTree_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatTree_t,string	niup: wheeldropfocus(ih: FlatTree_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatTree_t,bool	niup: wheeldropfocus=(ih: FlatTree_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatTree_t,bool	niup: wheeldropfocus(ih: FlatTree_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatTree_t	niup: wheeldropfocus(ih: FlatTree_t): bool	
wid	niup.html#wid,FlatTree_t	niup: wid(ih: FlatTree_t): string	
x	niup.html#x,FlatTree_t	niup: x(ih: FlatTree_t): string	
xautohide	niup.html#xautohide,FlatTree_t	niup: xautohide(ih: FlatTree_t): bool	
xdisplay	niup.html#xdisplay,FlatTree_t	niup: xdisplay(ih: FlatTree_t): string	
xfontid	niup.html#xfontid,FlatTree_t	niup: xfontid(ih: FlatTree_t): string	
xhidden	niup.html#xhidden,FlatTree_t	niup: xhidden(ih: FlatTree_t): bool	
xmax=	niup.html#xmax=,FlatTree_t,string	niup: xmax=(ih: FlatTree_t; value: string)	
xmax	niup.html#xmax,FlatTree_t,string	niup: xmax(ih: FlatTree_t; value: string)	
xmax=	niup.html#xmax=,FlatTree_t,int	niup: xmax=(ih: FlatTree_t; x: int)	
xmax	niup.html#xmax,FlatTree_t,int	niup: xmax(ih: FlatTree_t; x: int)	
xmax	niup.html#xmax,FlatTree_t	niup: xmax(ih: FlatTree_t): string	
xmin=	niup.html#xmin=,FlatTree_t,string	niup: xmin=(ih: FlatTree_t; value: string)	
xmin	niup.html#xmin,FlatTree_t,string	niup: xmin(ih: FlatTree_t; value: string)	
xmin=	niup.html#xmin=,FlatTree_t,int	niup: xmin=(ih: FlatTree_t; x: int)	
xmin	niup.html#xmin,FlatTree_t,int	niup: xmin(ih: FlatTree_t; x: int)	
xmin	niup.html#xmin,FlatTree_t	niup: xmin(ih: FlatTree_t): string	
xwindow	niup.html#xwindow,FlatTree_t	niup: xwindow(ih: FlatTree_t): string	
y	niup.html#y,FlatTree_t	niup: y(ih: FlatTree_t): string	
yautohide	niup.html#yautohide,FlatTree_t	niup: yautohide(ih: FlatTree_t): bool	
yhidden	niup.html#yhidden,FlatTree_t	niup: yhidden(ih: FlatTree_t): bool	
ymax=	niup.html#ymax=,FlatTree_t,string	niup: ymax=(ih: FlatTree_t; value: string)	
ymax	niup.html#ymax,FlatTree_t,string	niup: ymax(ih: FlatTree_t; value: string)	
ymax=	niup.html#ymax=,FlatTree_t,int	niup: ymax=(ih: FlatTree_t; x: int)	
ymax	niup.html#ymax,FlatTree_t,int	niup: ymax(ih: FlatTree_t; x: int)	
ymax	niup.html#ymax,FlatTree_t	niup: ymax(ih: FlatTree_t): string	
ymin=	niup.html#ymin=,FlatTree_t,string	niup: ymin=(ih: FlatTree_t; value: string)	
ymin	niup.html#ymin,FlatTree_t,string	niup: ymin(ih: FlatTree_t; value: string)	
ymin=	niup.html#ymin=,FlatTree_t,int	niup: ymin=(ih: FlatTree_t; x: int)	
ymin	niup.html#ymin,FlatTree_t,int	niup: ymin(ih: FlatTree_t; x: int)	
ymin	niup.html#ymin,FlatTree_t	niup: ymin(ih: FlatTree_t): string	
zorder=	niup.html#zorder=,FlatTree_t,string	niup: zorder=(ih: FlatTree_t; value: string)	
zorder	niup.html#zorder,FlatTree_t,string	niup: zorder(ih: FlatTree_t; value: string)	
action=	niup.html#action=,FlatTree_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatTree_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatTree_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatTree_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatTree_t	niup: action(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
branchclose_cb=	niup.html#branchclose_cb=,FlatTree_t,proc(PIhandle,cint)	niup: branchclose_cb=(ih: FlatTree_t;\n                cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchclose_cb	niup.html#branchclose_cb,FlatTree_t,proc(PIhandle,cint)	niup: branchclose_cb(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchclose_cb	niup.html#branchclose_cb,FlatTree_t	niup: branchclose_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
branchopen_cb=	niup.html#branchopen_cb=,FlatTree_t,proc(PIhandle,cint)	niup: branchopen_cb=(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchopen_cb	niup.html#branchopen_cb,FlatTree_t,proc(PIhandle,cint)	niup: branchopen_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchopen_cb	niup.html#branchopen_cb,FlatTree_t	niup: branchopen_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatTree_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatTree_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                    arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatTree_t	niup: button_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatTree_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatTree_t,proc(PIhandle)	niup: destroy_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatTree_t	niup: destroy_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatTree_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatTree_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatTree_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatTree_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatTree_t	niup: dragbegin_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatTree_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatTree_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatTree_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatTree_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatTree_t	niup: dragdatasize_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatTree_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatTree_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatTree_t	niup: dragdata_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdrop_cb=	niup.html#dragdrop_cb=,FlatTree_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; drag_id, drop_id, isshift,\n    iscontrol: cint): cint {.cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,FlatTree_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; drag_id, drop_id, isshift,\n    iscontrol: cint): cint {.cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,FlatTree_t	niup: dragdrop_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatTree_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatTree_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatTree_t	niup: dragend_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatTree_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatTree_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatTree_t	niup: dropdata_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatTree_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatTree_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatTree_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatTree_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatTree_t	niup: dropfiles_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatTree_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatTree_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatTree_t	niup: dropmotion_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatTree_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatTree_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatTree_t	niup: enterwindow_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
executebranch_cb=	niup.html#executebranch_cb=,FlatTree_t,proc(PIhandle,cint)	niup: executebranch_cb=(ih: FlatTree_t;\n                  cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executebranch_cb	niup.html#executebranch_cb,FlatTree_t,proc(PIhandle,cint)	niup: executebranch_cb(ih: FlatTree_t;\n                 cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executebranch_cb	niup.html#executebranch_cb,FlatTree_t	niup: executebranch_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
executeleaf_cb=	niup.html#executeleaf_cb=,FlatTree_t,proc(PIhandle,cint)	niup: executeleaf_cb=(ih: FlatTree_t;\n                cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executeleaf_cb	niup.html#executeleaf_cb,FlatTree_t,proc(PIhandle,cint)	niup: executeleaf_cb(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executeleaf_cb	niup.html#executeleaf_cb,FlatTree_t	niup: executeleaf_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,FlatTree_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatTree_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatTree_t	niup: flat_button_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_focus_cb=	niup.html#flat_focus_cb=,FlatTree_t,proc(PIhandle,cint)	niup: flat_focus_cb=(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatTree_t,proc(PIhandle,cint)	niup: flat_focus_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatTree_t	niup: flat_focus_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,FlatTree_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatTree_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatTree_t	niup: flat_leavewindow_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,FlatTree_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatTree_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatTree_t	niup: flat_motion_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatTree_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatTree_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatTree_t	niup: focus_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatTree_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatTree_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatTree_t	niup: getfocus_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatTree_t,proc(PIhandle)	niup: help_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatTree_t,proc(PIhandle)	niup: help_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatTree_t	niup: help_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatTree_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatTree_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatTree_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatTree_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatTree_t	niup: keypress_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatTree_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatTree_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatTree_t	niup: killfocus_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatTree_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatTree_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatTree_t,proc(PIhandle,cint)	niup: k_any(ih: FlatTree_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatTree_t	niup: k_any(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatTree_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatTree_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatTree_t	niup: ldestroy_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatTree_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatTree_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatTree_t	niup: leavewindow_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatTree_t,proc(PIhandle)	niup: map_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatTree_t,proc(PIhandle)	niup: map_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatTree_t	niup: map_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatTree_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatTree_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatTree_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatTree_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatTree_t	niup: motion_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
multiselection_cb=	niup.html#multiselection_cb=,FlatTree_t,proc(PIhandle,ptr.cint,cint)	niup: multiselection_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiselection_cb	niup.html#multiselection_cb,FlatTree_t,proc(PIhandle,ptr.cint,cint)	niup: multiselection_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiselection_cb	niup.html#multiselection_cb,FlatTree_t	niup: multiselection_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
multiunselection_cb=	niup.html#multiunselection_cb=,FlatTree_t,proc(PIhandle,ptr.cint,cint)	niup: multiunselection_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiunselection_cb	niup.html#multiunselection_cb,FlatTree_t,proc(PIhandle,ptr.cint,cint)	niup: multiunselection_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiunselection_cb	niup.html#multiunselection_cb,FlatTree_t	niup: multiunselection_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
noderemoved_cb=	niup.html#noderemoved_cb=,FlatTree_t,proc(PIhandle,cstring)	niup: noderemoved_cb=(ih: FlatTree_t;\n                cb: proc (ih: PIhandle; arg2: cstring): cint {.cdecl.})	
noderemoved_cb	niup.html#noderemoved_cb,FlatTree_t,proc(PIhandle,cstring)	niup: noderemoved_cb(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cstring): cint {.cdecl.})	
noderemoved_cb	niup.html#noderemoved_cb,FlatTree_t	niup: noderemoved_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatTree_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatTree_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatTree_t	niup: postmessage_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
rename_cb=	niup.html#rename_cb=,FlatTree_t,proc(PIhandle,cint,cstring)	niup: rename_cb=(ih: FlatTree_t;\n           cb: proc (ih: PIhandle; arg2: cint; arg3: cstring): cint {.cdecl.})	
rename_cb	niup.html#rename_cb,FlatTree_t,proc(PIhandle,cint,cstring)	niup: rename_cb(ih: FlatTree_t;\n          cb: proc (ih: PIhandle; arg2: cint; arg3: cstring): cint {.cdecl.})	
rename_cb	niup.html#rename_cb,FlatTree_t	niup: rename_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatTree_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatTree_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatTree_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatTree_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatTree_t	niup: resize_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
rightclick_cb=	niup.html#rightclick_cb=,FlatTree_t,proc(PIhandle,cint)	niup: rightclick_cb=(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,FlatTree_t,proc(PIhandle,cint)	niup: rightclick_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,FlatTree_t	niup: rightclick_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatTree_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatTree_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatTree_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatTree_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatTree_t	niup: scroll_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
selection_cb=	niup.html#selection_cb=,FlatTree_t,proc(PIhandle,cint,cint)	niup: selection_cb=(ih: FlatTree_t;\n              cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
selection_cb	niup.html#selection_cb,FlatTree_t,proc(PIhandle,cint,cint)	niup: selection_cb(ih: FlatTree_t;\n             cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
selection_cb	niup.html#selection_cb,FlatTree_t	niup: selection_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
showrename_cb=	niup.html#showrename_cb=,FlatTree_t,proc(PIhandle,cint)	niup: showrename_cb=(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
showrename_cb	niup.html#showrename_cb,FlatTree_t,proc(PIhandle,cint)	niup: showrename_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
showrename_cb	niup.html#showrename_cb,FlatTree_t	niup: showrename_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
togglevalue_cb=	niup.html#togglevalue_cb=,FlatTree_t,proc(PIhandle,cint,cint)	niup: togglevalue_cb=(ih: FlatTree_t;\n                cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
togglevalue_cb	niup.html#togglevalue_cb,FlatTree_t,proc(PIhandle,cint,cint)	niup: togglevalue_cb(ih: FlatTree_t;\n               cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
togglevalue_cb	niup.html#togglevalue_cb,FlatTree_t	niup: togglevalue_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatTree_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatTree_t,proc(PIhandle)	niup: unmap_cb(ih: FlatTree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatTree_t	niup: unmap_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatTree_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatTree_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                   status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatTree_t	niup: wheel_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatTree_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatTree_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatTree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatTree_t	niup: wom_cb(ih: FlatTree_t): proc (ih: PIhandle): cint {.cdecl.}	
FlatVal	niup.html#FlatVal,string	niup: FlatVal(type: string): FlatVal_t	
active=	niup.html#active=,FlatVal_t,string	niup: active=(ih: FlatVal_t; value: string)	
active	niup.html#active,FlatVal_t,string	niup: active(ih: FlatVal_t; value: string)	
active=	niup.html#active=,FlatVal_t,bool	niup: active=(ih: FlatVal_t; yes: bool)	
active	niup.html#active,FlatVal_t,bool	niup: active(ih: FlatVal_t; yes: bool)	
active	niup.html#active,FlatVal_t	niup: active(ih: FlatVal_t): bool	
backimage=	niup.html#backimage=,FlatVal_t,	niup: backimage=(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatVal_t,	niup: backimage(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
backimage	niup.html#backimage,FlatVal_t	niup: backimage(ih: FlatVal_t): string	
backimagezoom=	niup.html#backimagezoom=,FlatVal_t,string	niup: backimagezoom=(ih: FlatVal_t; value: string)	
backimagezoom	niup.html#backimagezoom,FlatVal_t,string	niup: backimagezoom(ih: FlatVal_t; value: string)	
backimagezoom=	niup.html#backimagezoom=,FlatVal_t,bool	niup: backimagezoom=(ih: FlatVal_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatVal_t,bool	niup: backimagezoom(ih: FlatVal_t; yes: bool)	
backimagezoom	niup.html#backimagezoom,FlatVal_t	niup: backimagezoom(ih: FlatVal_t): bool	
backingstore=	niup.html#backingstore=,FlatVal_t,string	niup: backingstore=(ih: FlatVal_t; value: string)	
backingstore	niup.html#backingstore,FlatVal_t,string	niup: backingstore(ih: FlatVal_t; value: string)	
backingstore=	niup.html#backingstore=,FlatVal_t,bool	niup: backingstore=(ih: FlatVal_t; yes: bool)	
backingstore	niup.html#backingstore,FlatVal_t,bool	niup: backingstore(ih: FlatVal_t; yes: bool)	
backingstore	niup.html#backingstore,FlatVal_t	niup: backingstore(ih: FlatVal_t): bool	
bgcolor=	niup.html#bgcolor=,FlatVal_t,string	niup: bgcolor=(ih: FlatVal_t; value: string)	
bgcolor	niup.html#bgcolor,FlatVal_t,string	niup: bgcolor(ih: FlatVal_t; value: string)	
bgcolor=	niup.html#bgcolor=,FlatVal_t,int,int,int,int	niup: bgcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatVal_t,int,int,int,int	niup: bgcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FlatVal_t	niup: bgcolor(ih: FlatVal_t): string	
border	niup.html#border,FlatVal_t	niup: border(ih: FlatVal_t): bool	
bordercolor=	niup.html#bordercolor=,FlatVal_t,string	niup: bordercolor=(ih: FlatVal_t; value: string)	
bordercolor	niup.html#bordercolor,FlatVal_t,string	niup: bordercolor(ih: FlatVal_t; value: string)	
bordercolor=	niup.html#bordercolor=,FlatVal_t,int,int,int,int	niup: bordercolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatVal_t,int,int,int,int	niup: bordercolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
bordercolor	niup.html#bordercolor,FlatVal_t	niup: bordercolor(ih: FlatVal_t): string	
borderhlcolor=	niup.html#borderhlcolor=,FlatVal_t,string	niup: borderhlcolor=(ih: FlatVal_t; value: string)	
borderhlcolor	niup.html#borderhlcolor,FlatVal_t,string	niup: borderhlcolor(ih: FlatVal_t; value: string)	
borderhlcolor=	niup.html#borderhlcolor=,FlatVal_t,int,int,int,int	niup: borderhlcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,FlatVal_t,int,int,int,int	niup: borderhlcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
borderhlcolor	niup.html#borderhlcolor,FlatVal_t	niup: borderhlcolor(ih: FlatVal_t): string	
borderpscolor=	niup.html#borderpscolor=,FlatVal_t,string	niup: borderpscolor=(ih: FlatVal_t; value: string)	
borderpscolor	niup.html#borderpscolor,FlatVal_t,string	niup: borderpscolor(ih: FlatVal_t; value: string)	
borderpscolor=	niup.html#borderpscolor=,FlatVal_t,int,int,int,int	niup: borderpscolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,FlatVal_t,int,int,int,int	niup: borderpscolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
borderpscolor	niup.html#borderpscolor,FlatVal_t	niup: borderpscolor(ih: FlatVal_t): string	
borderwidth=	niup.html#borderwidth=,FlatVal_t,string	niup: borderwidth=(ih: FlatVal_t; value: string)	
borderwidth	niup.html#borderwidth,FlatVal_t,string	niup: borderwidth(ih: FlatVal_t; value: string)	
borderwidth=	niup.html#borderwidth=,FlatVal_t,int	niup: borderwidth=(ih: FlatVal_t; x: int)	
borderwidth	niup.html#borderwidth,FlatVal_t,int	niup: borderwidth(ih: FlatVal_t; x: int)	
borderwidth	niup.html#borderwidth,FlatVal_t	niup: borderwidth(ih: FlatVal_t): string	
canfocus=	niup.html#canfocus=,FlatVal_t,string	niup: canfocus=(ih: FlatVal_t; value: string)	
canfocus	niup.html#canfocus,FlatVal_t,string	niup: canfocus(ih: FlatVal_t; value: string)	
canfocus=	niup.html#canfocus=,FlatVal_t,bool	niup: canfocus=(ih: FlatVal_t; yes: bool)	
canfocus	niup.html#canfocus,FlatVal_t,bool	niup: canfocus(ih: FlatVal_t; yes: bool)	
canfocus	niup.html#canfocus,FlatVal_t	niup: canfocus(ih: FlatVal_t): bool	
charsize	niup.html#charsize,FlatVal_t	niup: charsize(ih: FlatVal_t): string	
cursor=	niup.html#cursor=,FlatVal_t,	niup: cursor=(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatVal_t,	niup: cursor(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FlatVal_t	niup: cursor(ih: FlatVal_t): string	
dragdrop=	niup.html#dragdrop=,FlatVal_t,string	niup: dragdrop=(ih: FlatVal_t; value: string)	
dragdrop	niup.html#dragdrop,FlatVal_t,string	niup: dragdrop(ih: FlatVal_t; value: string)	
dragdrop=	niup.html#dragdrop=,FlatVal_t,bool	niup: dragdrop=(ih: FlatVal_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatVal_t,bool	niup: dragdrop(ih: FlatVal_t; yes: bool)	
dragdrop	niup.html#dragdrop,FlatVal_t	niup: dragdrop(ih: FlatVal_t): bool	
dragsource=	niup.html#dragsource=,FlatVal_t,string	niup: dragsource=(ih: FlatVal_t; value: string)	
dragsource	niup.html#dragsource,FlatVal_t,string	niup: dragsource(ih: FlatVal_t; value: string)	
dragsource=	niup.html#dragsource=,FlatVal_t,bool	niup: dragsource=(ih: FlatVal_t; yes: bool)	
dragsource	niup.html#dragsource,FlatVal_t,bool	niup: dragsource(ih: FlatVal_t; yes: bool)	
dragsource	niup.html#dragsource,FlatVal_t	niup: dragsource(ih: FlatVal_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FlatVal_t,string	niup: dragsourcemove=(ih: FlatVal_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FlatVal_t,string	niup: dragsourcemove(ih: FlatVal_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FlatVal_t,bool	niup: dragsourcemove=(ih: FlatVal_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatVal_t,bool	niup: dragsourcemove(ih: FlatVal_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FlatVal_t	niup: dragsourcemove(ih: FlatVal_t): bool	
dragtypes=	niup.html#dragtypes=,FlatVal_t,string	niup: dragtypes=(ih: FlatVal_t; value: string)	
dragtypes	niup.html#dragtypes,FlatVal_t,string	niup: dragtypes(ih: FlatVal_t; value: string)	
dragtypes	niup.html#dragtypes,FlatVal_t	niup: dragtypes(ih: FlatVal_t): string	
drawable	niup.html#drawable,FlatVal_t	niup: drawable(ih: FlatVal_t): string	
drawbgcolor=	niup.html#drawbgcolor=,FlatVal_t,string	niup: drawbgcolor=(ih: FlatVal_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,FlatVal_t,string	niup: drawbgcolor(ih: FlatVal_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,FlatVal_t,int,int,int,int	niup: drawbgcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatVal_t,int,int,int,int	niup: drawbgcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,FlatVal_t	niup: drawbgcolor(ih: FlatVal_t): string	
drawcolor=	niup.html#drawcolor=,FlatVal_t,string	niup: drawcolor=(ih: FlatVal_t; value: string)	
drawcolor	niup.html#drawcolor,FlatVal_t,string	niup: drawcolor(ih: FlatVal_t; value: string)	
drawcolor=	niup.html#drawcolor=,FlatVal_t,int,int,int,int	niup: drawcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatVal_t,int,int,int,int	niup: drawcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,FlatVal_t	niup: drawcolor(ih: FlatVal_t): string	
drawdriver	niup.html#drawdriver,FlatVal_t	niup: drawdriver(ih: FlatVal_t): string	
drawfont=	niup.html#drawfont=,FlatVal_t,string	niup: drawfont=(ih: FlatVal_t; value: string)	
drawfont	niup.html#drawfont,FlatVal_t,string	niup: drawfont(ih: FlatVal_t; value: string)	
drawfont	niup.html#drawfont,FlatVal_t	niup: drawfont(ih: FlatVal_t): string	
drawlinewidth=	niup.html#drawlinewidth=,FlatVal_t,string	niup: drawlinewidth=(ih: FlatVal_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,FlatVal_t,string	niup: drawlinewidth(ih: FlatVal_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,FlatVal_t,int	niup: drawlinewidth=(ih: FlatVal_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatVal_t,int	niup: drawlinewidth(ih: FlatVal_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,FlatVal_t	niup: drawlinewidth(ih: FlatVal_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatVal_t,string	niup: drawmakeinactive=(ih: FlatVal_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,FlatVal_t,string	niup: drawmakeinactive(ih: FlatVal_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,FlatVal_t,bool	niup: drawmakeinactive=(ih: FlatVal_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatVal_t,bool	niup: drawmakeinactive(ih: FlatVal_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,FlatVal_t	niup: drawmakeinactive(ih: FlatVal_t): bool	
drawsize	niup.html#drawsize,FlatVal_t	niup: drawsize(ih: FlatVal_t): string	
drawstyle=	niup.html#drawstyle=,FlatVal_t,string	niup: drawstyle=(ih: FlatVal_t; value: string)	
drawstyle	niup.html#drawstyle,FlatVal_t,string	niup: drawstyle(ih: FlatVal_t; value: string)	
drawstyle	niup.html#drawstyle,FlatVal_t	niup: drawstyle(ih: FlatVal_t): string	
drawtextalignment=	niup.html#drawtextalignment=,FlatVal_t,string	niup: drawtextalignment=(ih: FlatVal_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatVal_t,string	niup: drawtextalignment(ih: FlatVal_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,FlatVal_t	niup: drawtextalignment(ih: FlatVal_t): string	
drawtextclip=	niup.html#drawtextclip=,FlatVal_t,string	niup: drawtextclip=(ih: FlatVal_t; value: string)	
drawtextclip	niup.html#drawtextclip,FlatVal_t,string	niup: drawtextclip(ih: FlatVal_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,FlatVal_t,bool	niup: drawtextclip=(ih: FlatVal_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatVal_t,bool	niup: drawtextclip(ih: FlatVal_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,FlatVal_t	niup: drawtextclip(ih: FlatVal_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatVal_t,string	niup: drawtextellipsis=(ih: FlatVal_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,FlatVal_t,string	niup: drawtextellipsis(ih: FlatVal_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,FlatVal_t,bool	niup: drawtextellipsis=(ih: FlatVal_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatVal_t,bool	niup: drawtextellipsis(ih: FlatVal_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,FlatVal_t	niup: drawtextellipsis(ih: FlatVal_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatVal_t,string	niup: drawtextlayoutcenter=(ih: FlatVal_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatVal_t,string	niup: drawtextlayoutcenter(ih: FlatVal_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,FlatVal_t,bool	niup: drawtextlayoutcenter=(ih: FlatVal_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatVal_t,bool	niup: drawtextlayoutcenter(ih: FlatVal_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,FlatVal_t	niup: drawtextlayoutcenter(ih: FlatVal_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,FlatVal_t,string	niup: drawtextorientation=(ih: FlatVal_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,FlatVal_t,string	niup: drawtextorientation(ih: FlatVal_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,FlatVal_t,int64	niup: drawtextorientation=(ih: FlatVal_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatVal_t,int64	niup: drawtextorientation(ih: FlatVal_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,FlatVal_t	niup: drawtextorientation(ih: FlatVal_t): string	
drawtextwrap=	niup.html#drawtextwrap=,FlatVal_t,string	niup: drawtextwrap=(ih: FlatVal_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,FlatVal_t,string	niup: drawtextwrap(ih: FlatVal_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,FlatVal_t,bool	niup: drawtextwrap=(ih: FlatVal_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatVal_t,bool	niup: drawtextwrap(ih: FlatVal_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,FlatVal_t	niup: drawtextwrap(ih: FlatVal_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,FlatVal_t,string	niup: dropfilestarget=(ih: FlatVal_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FlatVal_t,string	niup: dropfilestarget(ih: FlatVal_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FlatVal_t,bool	niup: dropfilestarget=(ih: FlatVal_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatVal_t,bool	niup: dropfilestarget(ih: FlatVal_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FlatVal_t	niup: dropfilestarget(ih: FlatVal_t): bool	
droptarget=	niup.html#droptarget=,FlatVal_t,string	niup: droptarget=(ih: FlatVal_t; value: string)	
droptarget	niup.html#droptarget,FlatVal_t,string	niup: droptarget(ih: FlatVal_t; value: string)	
droptarget=	niup.html#droptarget=,FlatVal_t,bool	niup: droptarget=(ih: FlatVal_t; yes: bool)	
droptarget	niup.html#droptarget,FlatVal_t,bool	niup: droptarget(ih: FlatVal_t; yes: bool)	
droptarget	niup.html#droptarget,FlatVal_t	niup: droptarget(ih: FlatVal_t): bool	
droptypes=	niup.html#droptypes=,FlatVal_t,string	niup: droptypes=(ih: FlatVal_t; value: string)	
droptypes	niup.html#droptypes,FlatVal_t,string	niup: droptypes(ih: FlatVal_t; value: string)	
droptypes	niup.html#droptypes,FlatVal_t	niup: droptypes(ih: FlatVal_t): string	
dx=	niup.html#dx=,FlatVal_t,string	niup: dx=(ih: FlatVal_t; value: string)	
dx	niup.html#dx,FlatVal_t,string	niup: dx(ih: FlatVal_t; value: string)	
dx=	niup.html#dx=,FlatVal_t,int64	niup: dx=(ih: FlatVal_t; x: int64)	
dx	niup.html#dx,FlatVal_t,int64	niup: dx(ih: FlatVal_t; x: int64)	
dx	niup.html#dx,FlatVal_t	niup: dx(ih: FlatVal_t): string	
dy=	niup.html#dy=,FlatVal_t,string	niup: dy=(ih: FlatVal_t; value: string)	
dy	niup.html#dy,FlatVal_t,string	niup: dy(ih: FlatVal_t; value: string)	
dy=	niup.html#dy=,FlatVal_t,int64	niup: dy=(ih: FlatVal_t; x: int64)	
dy	niup.html#dy,FlatVal_t,int64	niup: dy(ih: FlatVal_t; x: int64)	
dy	niup.html#dy,FlatVal_t	niup: dy(ih: FlatVal_t): string	
expand=	niup.html#expand=,FlatVal_t,string	niup: expand=(ih: FlatVal_t; value: string)	
expand	niup.html#expand,FlatVal_t,string	niup: expand(ih: FlatVal_t; value: string)	
expand	niup.html#expand,FlatVal_t	niup: expand(ih: FlatVal_t): string	
expandweight=	niup.html#expandweight=,FlatVal_t,string	niup: expandweight=(ih: FlatVal_t; value: string)	
expandweight	niup.html#expandweight,FlatVal_t,string	niup: expandweight(ih: FlatVal_t; value: string)	
expandweight=	niup.html#expandweight=,FlatVal_t,int64	niup: expandweight=(ih: FlatVal_t; x: int64)	
expandweight	niup.html#expandweight,FlatVal_t,int64	niup: expandweight(ih: FlatVal_t; x: int64)	
expandweight	niup.html#expandweight,FlatVal_t	niup: expandweight(ih: FlatVal_t): string	
fgcolor=	niup.html#fgcolor=,FlatVal_t,string	niup: fgcolor=(ih: FlatVal_t; value: string)	
fgcolor	niup.html#fgcolor,FlatVal_t,string	niup: fgcolor(ih: FlatVal_t; value: string)	
fgcolor=	niup.html#fgcolor=,FlatVal_t,int,int,int,int	niup: fgcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatVal_t,int,int,int,int	niup: fgcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,FlatVal_t	niup: fgcolor(ih: FlatVal_t): string	
fittobackimage=	niup.html#fittobackimage=,FlatVal_t,string	niup: fittobackimage=(ih: FlatVal_t; value: string)	
fittobackimage	niup.html#fittobackimage,FlatVal_t,string	niup: fittobackimage(ih: FlatVal_t; value: string)	
fittobackimage=	niup.html#fittobackimage=,FlatVal_t,bool	niup: fittobackimage=(ih: FlatVal_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatVal_t,bool	niup: fittobackimage(ih: FlatVal_t; yes: bool)	
fittobackimage	niup.html#fittobackimage,FlatVal_t	niup: fittobackimage(ih: FlatVal_t): bool	
floating=	niup.html#floating=,FlatVal_t,string	niup: floating=(ih: FlatVal_t; value: string)	
floating	niup.html#floating,FlatVal_t,string	niup: floating(ih: FlatVal_t; value: string)	
floating	niup.html#floating,FlatVal_t	niup: floating(ih: FlatVal_t): string	
focusfeedback=	niup.html#focusfeedback=,FlatVal_t,string	niup: focusfeedback=(ih: FlatVal_t; value: string)	
focusfeedback	niup.html#focusfeedback,FlatVal_t,string	niup: focusfeedback(ih: FlatVal_t; value: string)	
focusfeedback=	niup.html#focusfeedback=,FlatVal_t,bool	niup: focusfeedback=(ih: FlatVal_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatVal_t,bool	niup: focusfeedback(ih: FlatVal_t; yes: bool)	
focusfeedback	niup.html#focusfeedback,FlatVal_t	niup: focusfeedback(ih: FlatVal_t): bool	
font=	niup.html#font=,FlatVal_t,string	niup: font=(ih: FlatVal_t; value: string)	
font	niup.html#font,FlatVal_t,string	niup: font(ih: FlatVal_t; value: string)	
font	niup.html#font,FlatVal_t	niup: font(ih: FlatVal_t): string	
fontface=	niup.html#fontface=,FlatVal_t,string	niup: fontface=(ih: FlatVal_t; value: string)	
fontface	niup.html#fontface,FlatVal_t,string	niup: fontface(ih: FlatVal_t; value: string)	
fontface	niup.html#fontface,FlatVal_t	niup: fontface(ih: FlatVal_t): string	
fontsize=	niup.html#fontsize=,FlatVal_t,string	niup: fontsize=(ih: FlatVal_t; value: string)	
fontsize	niup.html#fontsize,FlatVal_t,string	niup: fontsize(ih: FlatVal_t; value: string)	
fontsize=	niup.html#fontsize=,FlatVal_t,int	niup: fontsize=(ih: FlatVal_t; x: int)	
fontsize	niup.html#fontsize,FlatVal_t,int	niup: fontsize(ih: FlatVal_t; x: int)	
fontsize	niup.html#fontsize,FlatVal_t	niup: fontsize(ih: FlatVal_t): string	
fontstyle=	niup.html#fontstyle=,FlatVal_t,string	niup: fontstyle=(ih: FlatVal_t; value: string)	
fontstyle	niup.html#fontstyle,FlatVal_t,string	niup: fontstyle(ih: FlatVal_t; value: string)	
fontstyle	niup.html#fontstyle,FlatVal_t	niup: fontstyle(ih: FlatVal_t): string	
handlename=	niup.html#handlename=,FlatVal_t,string	niup: handlename=(ih: FlatVal_t; value: string)	
handlename	niup.html#handlename,FlatVal_t,string	niup: handlename(ih: FlatVal_t; value: string)	
handlename	niup.html#handlename,FlatVal_t	niup: handlename(ih: FlatVal_t): string	
handlersize	niup.html#handlersize,FlatVal_t	niup: handlersize(ih: FlatVal_t): string	
hasfocus	niup.html#hasfocus,FlatVal_t	niup: hasfocus(ih: FlatVal_t): bool	
hlcolor=	niup.html#hlcolor=,FlatVal_t,string	niup: hlcolor=(ih: FlatVal_t; value: string)	
hlcolor	niup.html#hlcolor,FlatVal_t,string	niup: hlcolor(ih: FlatVal_t; value: string)	
hlcolor=	niup.html#hlcolor=,FlatVal_t,int,int,int,int	niup: hlcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatVal_t,int,int,int,int	niup: hlcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
hlcolor	niup.html#hlcolor,FlatVal_t	niup: hlcolor(ih: FlatVal_t): string	
image=	niup.html#image=,FlatVal_t,	niup: image=(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatVal_t,	niup: image(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,FlatVal_t	niup: image(ih: FlatVal_t): string	
imagehighlight=	niup.html#imagehighlight=,FlatVal_t,	niup: imagehighlight=(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,FlatVal_t,	niup: imagehighlight(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagehighlight	niup.html#imagehighlight,FlatVal_t	niup: imagehighlight(ih: FlatVal_t): string	
imageinactive=	niup.html#imageinactive=,FlatVal_t,	niup: imageinactive=(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatVal_t,	niup: imageinactive(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageinactive	niup.html#imageinactive,FlatVal_t	niup: imageinactive(ih: FlatVal_t): string	
imagepress=	niup.html#imagepress=,FlatVal_t,	niup: imagepress=(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,FlatVal_t,	niup: imagepress(ih: FlatVal_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagepress	niup.html#imagepress,FlatVal_t	niup: imagepress(ih: FlatVal_t): string	
linex=	niup.html#linex=,FlatVal_t,string	niup: linex=(ih: FlatVal_t; value: string)	
linex	niup.html#linex,FlatVal_t,string	niup: linex(ih: FlatVal_t; value: string)	
linex=	niup.html#linex=,FlatVal_t,int64	niup: linex=(ih: FlatVal_t; x: int64)	
linex	niup.html#linex,FlatVal_t,int64	niup: linex(ih: FlatVal_t; x: int64)	
linex	niup.html#linex,FlatVal_t	niup: linex(ih: FlatVal_t): string	
liney=	niup.html#liney=,FlatVal_t,string	niup: liney=(ih: FlatVal_t; value: string)	
liney	niup.html#liney,FlatVal_t,string	niup: liney(ih: FlatVal_t; value: string)	
liney=	niup.html#liney=,FlatVal_t,int64	niup: liney=(ih: FlatVal_t; x: int64)	
liney	niup.html#liney,FlatVal_t,int64	niup: liney(ih: FlatVal_t; x: int64)	
liney	niup.html#liney,FlatVal_t	niup: liney(ih: FlatVal_t): string	
max=	niup.html#max=,FlatVal_t,string	niup: max=(ih: FlatVal_t; value: string)	
max	niup.html#max,FlatVal_t,string	niup: max(ih: FlatVal_t; value: string)	
max=	niup.html#max=,FlatVal_t,int64	niup: max=(ih: FlatVal_t; x: int64)	
max	niup.html#max,FlatVal_t,int64	niup: max(ih: FlatVal_t; x: int64)	
max	niup.html#max,FlatVal_t	niup: max(ih: FlatVal_t): string	
maxsize=	niup.html#maxsize=,FlatVal_t,string	niup: maxsize=(ih: FlatVal_t; value: string)	
maxsize	niup.html#maxsize,FlatVal_t,string	niup: maxsize(ih: FlatVal_t; value: string)	
maxsize=	niup.html#maxsize=,FlatVal_t,int,int	niup: maxsize=(ih: FlatVal_t; width, height: int)	
maxsize	niup.html#maxsize,FlatVal_t,int,int	niup: maxsize(ih: FlatVal_t; width, height: int)	
maxsize	niup.html#maxsize,FlatVal_t	niup: maxsize(ih: FlatVal_t): string	
min=	niup.html#min=,FlatVal_t,string	niup: min=(ih: FlatVal_t; value: string)	
min	niup.html#min,FlatVal_t,string	niup: min(ih: FlatVal_t; value: string)	
min=	niup.html#min=,FlatVal_t,int64	niup: min=(ih: FlatVal_t; x: int64)	
min	niup.html#min,FlatVal_t,int64	niup: min(ih: FlatVal_t; x: int64)	
min	niup.html#min,FlatVal_t	niup: min(ih: FlatVal_t): string	
minsize=	niup.html#minsize=,FlatVal_t,string	niup: minsize=(ih: FlatVal_t; value: string)	
minsize	niup.html#minsize,FlatVal_t,string	niup: minsize(ih: FlatVal_t; value: string)	
minsize=	niup.html#minsize=,FlatVal_t,int,int	niup: minsize=(ih: FlatVal_t; width, height: int)	
minsize	niup.html#minsize,FlatVal_t,int,int	niup: minsize(ih: FlatVal_t; width, height: int)	
minsize	niup.html#minsize,FlatVal_t	niup: minsize(ih: FlatVal_t): string	
name=	niup.html#name=,FlatVal_t,string	niup: name=(ih: FlatVal_t; value: string)	
name	niup.html#name,FlatVal_t,string	niup: name(ih: FlatVal_t; value: string)	
name	niup.html#name,FlatVal_t	niup: name(ih: FlatVal_t): string	
naturalsize	niup.html#naturalsize,FlatVal_t	niup: naturalsize(ih: FlatVal_t): string	
normalizergroup=	niup.html#normalizergroup=,FlatVal_t,string	niup: normalizergroup=(ih: FlatVal_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatVal_t,string	niup: normalizergroup(ih: FlatVal_t; value: string)	
normalizergroup	niup.html#normalizergroup,FlatVal_t	niup: normalizergroup(ih: FlatVal_t): string	
ntheme=	niup.html#ntheme=,FlatVal_t,string	niup: ntheme=(ih: FlatVal_t; value: string)	
ntheme	niup.html#ntheme,FlatVal_t,string	niup: ntheme(ih: FlatVal_t; value: string)	
ntheme	niup.html#ntheme,FlatVal_t	niup: ntheme(ih: FlatVal_t): string	
orientation=	niup.html#orientation=,FlatVal_t,string	niup: orientation=(ih: FlatVal_t; value: string)	
orientation	niup.html#orientation,FlatVal_t,string	niup: orientation(ih: FlatVal_t; value: string)	
orientation	niup.html#orientation,FlatVal_t	niup: orientation(ih: FlatVal_t): string	
pagestep	niup.html#pagestep,FlatVal_t	niup: pagestep(ih: FlatVal_t): string	
pangofontdesc	niup.html#pangofontdesc,FlatVal_t	niup: pangofontdesc(ih: FlatVal_t): string	
pangolayout	niup.html#pangolayout,FlatVal_t	niup: pangolayout(ih: FlatVal_t): string	
position=	niup.html#position=,FlatVal_t,string	niup: position=(ih: FlatVal_t; value: string)	
position	niup.html#position,FlatVal_t,string	niup: position(ih: FlatVal_t; value: string)	
position=	niup.html#position=,FlatVal_t,int,int	niup: position=(ih: FlatVal_t; x, y: int)	
position	niup.html#position,FlatVal_t,int,int	niup: position(ih: FlatVal_t; x, y: int)	
position	niup.html#position,FlatVal_t	niup: position(ih: FlatVal_t): string	
posx=	niup.html#posx=,FlatVal_t,string	niup: posx=(ih: FlatVal_t; value: string)	
posx	niup.html#posx,FlatVal_t,string	niup: posx(ih: FlatVal_t; value: string)	
posx=	niup.html#posx=,FlatVal_t,int64	niup: posx=(ih: FlatVal_t; x: int64)	
posx	niup.html#posx,FlatVal_t,int64	niup: posx(ih: FlatVal_t; x: int64)	
posx	niup.html#posx,FlatVal_t	niup: posx(ih: FlatVal_t): string	
posy=	niup.html#posy=,FlatVal_t,string	niup: posy=(ih: FlatVal_t; value: string)	
posy	niup.html#posy,FlatVal_t,string	niup: posy(ih: FlatVal_t; value: string)	
posy=	niup.html#posy=,FlatVal_t,int64	niup: posy=(ih: FlatVal_t; x: int64)	
posy	niup.html#posy,FlatVal_t,int64	niup: posy(ih: FlatVal_t; x: int64)	
posy	niup.html#posy,FlatVal_t	niup: posy(ih: FlatVal_t): string	
propagatefocus=	niup.html#propagatefocus=,FlatVal_t,string	niup: propagatefocus=(ih: FlatVal_t; value: string)	
propagatefocus	niup.html#propagatefocus,FlatVal_t,string	niup: propagatefocus(ih: FlatVal_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FlatVal_t,bool	niup: propagatefocus=(ih: FlatVal_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatVal_t,bool	niup: propagatefocus(ih: FlatVal_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FlatVal_t	niup: propagatefocus(ih: FlatVal_t): bool	
pscolor=	niup.html#pscolor=,FlatVal_t,string	niup: pscolor=(ih: FlatVal_t; value: string)	
pscolor	niup.html#pscolor,FlatVal_t,string	niup: pscolor(ih: FlatVal_t; value: string)	
pscolor=	niup.html#pscolor=,FlatVal_t,int,int,int,int	niup: pscolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatVal_t,int,int,int,int	niup: pscolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
pscolor	niup.html#pscolor,FlatVal_t	niup: pscolor(ih: FlatVal_t): string	
rastersize=	niup.html#rastersize=,FlatVal_t,string	niup: rastersize=(ih: FlatVal_t; value: string)	
rastersize	niup.html#rastersize,FlatVal_t,string	niup: rastersize(ih: FlatVal_t; value: string)	
rastersize=	niup.html#rastersize=,FlatVal_t,int,int	niup: rastersize=(ih: FlatVal_t; width, height: int)	
rastersize	niup.html#rastersize,FlatVal_t,int,int	niup: rastersize(ih: FlatVal_t; width, height: int)	
rastersize	niup.html#rastersize,FlatVal_t	niup: rastersize(ih: FlatVal_t): string	
sb_resize	niup.html#sb_resize,FlatVal_t	niup: sb_resize(ih: FlatVal_t): string	
screenposition	niup.html#screenposition,FlatVal_t	niup: screenposition(ih: FlatVal_t): string	
scrollbar=	niup.html#scrollbar=,FlatVal_t,string	niup: scrollbar=(ih: FlatVal_t; value: string)	
scrollbar	niup.html#scrollbar,FlatVal_t,string	niup: scrollbar(ih: FlatVal_t; value: string)	
scrollbar=	niup.html#scrollbar=,FlatVal_t,bool	niup: scrollbar=(ih: FlatVal_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatVal_t,bool	niup: scrollbar(ih: FlatVal_t; yes: bool)	
scrollbar	niup.html#scrollbar,FlatVal_t	niup: scrollbar(ih: FlatVal_t): bool	
size=	niup.html#size=,FlatVal_t,string	niup: size=(ih: FlatVal_t; value: string)	
size	niup.html#size,FlatVal_t,string	niup: size(ih: FlatVal_t; value: string)	
size=	niup.html#size=,FlatVal_t,int,int	niup: size=(ih: FlatVal_t; width, height: int)	
size	niup.html#size,FlatVal_t,int,int	niup: size(ih: FlatVal_t; width, height: int)	
size	niup.html#size,FlatVal_t	niup: size(ih: FlatVal_t): string	
sliderbordercolor	niup.html#sliderbordercolor,FlatVal_t	niup: sliderbordercolor(ih: FlatVal_t): string	
slidercolor	niup.html#slidercolor,FlatVal_t	niup: slidercolor(ih: FlatVal_t): string	
slidersize	niup.html#slidersize,FlatVal_t	niup: slidersize(ih: FlatVal_t): string	
step=	niup.html#step=,FlatVal_t,string	niup: step=(ih: FlatVal_t; value: string)	
step	niup.html#step,FlatVal_t,string	niup: step(ih: FlatVal_t; value: string)	
step=	niup.html#step=,FlatVal_t,int64	niup: step=(ih: FlatVal_t; x: int64)	
step	niup.html#step,FlatVal_t,int64	niup: step(ih: FlatVal_t; x: int64)	
step	niup.html#step,FlatVal_t	niup: step(ih: FlatVal_t): string	
theme=	niup.html#theme=,FlatVal_t,string	niup: theme=(ih: FlatVal_t; value: string)	
theme	niup.html#theme,FlatVal_t,string	niup: theme(ih: FlatVal_t; value: string)	
theme	niup.html#theme,FlatVal_t	niup: theme(ih: FlatVal_t): string	
tip=	niup.html#tip=,FlatVal_t,string	niup: tip=(ih: FlatVal_t; value: string)	
tip	niup.html#tip,FlatVal_t,string	niup: tip(ih: FlatVal_t; value: string)	
tip	niup.html#tip,FlatVal_t	niup: tip(ih: FlatVal_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FlatVal_t,string	niup: tipbgcolor=(ih: FlatVal_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FlatVal_t,string	niup: tipbgcolor(ih: FlatVal_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FlatVal_t,int,int,int,int	niup: tipbgcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatVal_t,int,int,int,int	niup: tipbgcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FlatVal_t	niup: tipbgcolor(ih: FlatVal_t): string	
tipdelay=	niup.html#tipdelay=,FlatVal_t,string	niup: tipdelay=(ih: FlatVal_t; value: string)	
tipdelay	niup.html#tipdelay,FlatVal_t,string	niup: tipdelay(ih: FlatVal_t; value: string)	
tipdelay=	niup.html#tipdelay=,FlatVal_t,int	niup: tipdelay=(ih: FlatVal_t; x: int)	
tipdelay	niup.html#tipdelay,FlatVal_t,int	niup: tipdelay(ih: FlatVal_t; x: int)	
tipdelay	niup.html#tipdelay,FlatVal_t	niup: tipdelay(ih: FlatVal_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FlatVal_t,string	niup: tipfgcolor=(ih: FlatVal_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FlatVal_t,string	niup: tipfgcolor(ih: FlatVal_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FlatVal_t,int,int,int,int	niup: tipfgcolor=(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatVal_t,int,int,int,int	niup: tipfgcolor(ih: FlatVal_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FlatVal_t	niup: tipfgcolor(ih: FlatVal_t): string	
tipicon=	niup.html#tipicon=,FlatVal_t,string	niup: tipicon=(ih: FlatVal_t; value: string)	
tipicon	niup.html#tipicon,FlatVal_t,string	niup: tipicon(ih: FlatVal_t; value: string)	
tipicon	niup.html#tipicon,FlatVal_t	niup: tipicon(ih: FlatVal_t): string	
tipmarkup=	niup.html#tipmarkup=,FlatVal_t,string	niup: tipmarkup=(ih: FlatVal_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatVal_t,string	niup: tipmarkup(ih: FlatVal_t; value: string)	
tipmarkup	niup.html#tipmarkup,FlatVal_t	niup: tipmarkup(ih: FlatVal_t): string	
tiprect=	niup.html#tiprect=,FlatVal_t,string	niup: tiprect=(ih: FlatVal_t; value: string)	
tiprect	niup.html#tiprect,FlatVal_t,string	niup: tiprect(ih: FlatVal_t; value: string)	
tiprect=	niup.html#tiprect=,FlatVal_t,int,int,int,int	niup: tiprect=(ih: FlatVal_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatVal_t,int,int,int,int	niup: tiprect(ih: FlatVal_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FlatVal_t	niup: tiprect(ih: FlatVal_t): string	
tipvisible=	niup.html#tipvisible=,FlatVal_t,string	niup: tipvisible=(ih: FlatVal_t; value: string)	
tipvisible	niup.html#tipvisible,FlatVal_t,string	niup: tipvisible(ih: FlatVal_t; value: string)	
tipvisible=	niup.html#tipvisible=,FlatVal_t,bool	niup: tipvisible=(ih: FlatVal_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatVal_t,bool	niup: tipvisible(ih: FlatVal_t; yes: bool)	
tipvisible	niup.html#tipvisible,FlatVal_t	niup: tipvisible(ih: FlatVal_t): bool	
touch=	niup.html#touch=,FlatVal_t,string	niup: touch=(ih: FlatVal_t; value: string)	
touch	niup.html#touch,FlatVal_t,string	niup: touch(ih: FlatVal_t; value: string)	
touch=	niup.html#touch=,FlatVal_t,bool	niup: touch=(ih: FlatVal_t; yes: bool)	
touch	niup.html#touch,FlatVal_t,bool	niup: touch(ih: FlatVal_t; yes: bool)	
touch	niup.html#touch,FlatVal_t	niup: touch(ih: FlatVal_t): bool	
usersize=	niup.html#usersize=,FlatVal_t,string	niup: usersize=(ih: FlatVal_t; value: string)	
usersize	niup.html#usersize,FlatVal_t,string	niup: usersize(ih: FlatVal_t; value: string)	
usersize=	niup.html#usersize=,FlatVal_t,int,int	niup: usersize=(ih: FlatVal_t; width, height: int)	
usersize	niup.html#usersize,FlatVal_t,int,int	niup: usersize(ih: FlatVal_t; width, height: int)	
usersize	niup.html#usersize,FlatVal_t	niup: usersize(ih: FlatVal_t): string	
value=	niup.html#value=,FlatVal_t,string	niup: value=(ih: FlatVal_t; value: string)	
value	niup.html#value,FlatVal_t,string	niup: value(ih: FlatVal_t; value: string)	
value	niup.html#value,FlatVal_t	niup: value(ih: FlatVal_t): string	
visible=	niup.html#visible=,FlatVal_t,string	niup: visible=(ih: FlatVal_t; value: string)	
visible	niup.html#visible,FlatVal_t,string	niup: visible(ih: FlatVal_t; value: string)	
visible=	niup.html#visible=,FlatVal_t,bool	niup: visible=(ih: FlatVal_t; yes: bool)	
visible	niup.html#visible,FlatVal_t,bool	niup: visible(ih: FlatVal_t; yes: bool)	
visible	niup.html#visible,FlatVal_t	niup: visible(ih: FlatVal_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatVal_t,string	niup: wheeldropfocus=(ih: FlatVal_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,FlatVal_t,string	niup: wheeldropfocus(ih: FlatVal_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,FlatVal_t,bool	niup: wheeldropfocus=(ih: FlatVal_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatVal_t,bool	niup: wheeldropfocus(ih: FlatVal_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,FlatVal_t	niup: wheeldropfocus(ih: FlatVal_t): bool	
wid	niup.html#wid,FlatVal_t	niup: wid(ih: FlatVal_t): string	
x	niup.html#x,FlatVal_t	niup: x(ih: FlatVal_t): string	
xautohide=	niup.html#xautohide=,FlatVal_t,string	niup: xautohide=(ih: FlatVal_t; value: string)	
xautohide	niup.html#xautohide,FlatVal_t,string	niup: xautohide(ih: FlatVal_t; value: string)	
xautohide=	niup.html#xautohide=,FlatVal_t,bool	niup: xautohide=(ih: FlatVal_t; yes: bool)	
xautohide	niup.html#xautohide,FlatVal_t,bool	niup: xautohide(ih: FlatVal_t; yes: bool)	
xautohide	niup.html#xautohide,FlatVal_t	niup: xautohide(ih: FlatVal_t): bool	
xdisplay	niup.html#xdisplay,FlatVal_t	niup: xdisplay(ih: FlatVal_t): string	
xfontid	niup.html#xfontid,FlatVal_t	niup: xfontid(ih: FlatVal_t): string	
xhidden	niup.html#xhidden,FlatVal_t	niup: xhidden(ih: FlatVal_t): bool	
xmax=	niup.html#xmax=,FlatVal_t,string	niup: xmax=(ih: FlatVal_t; value: string)	
xmax	niup.html#xmax,FlatVal_t,string	niup: xmax(ih: FlatVal_t; value: string)	
xmax=	niup.html#xmax=,FlatVal_t,int	niup: xmax=(ih: FlatVal_t; x: int)	
xmax	niup.html#xmax,FlatVal_t,int	niup: xmax(ih: FlatVal_t; x: int)	
xmax	niup.html#xmax,FlatVal_t	niup: xmax(ih: FlatVal_t): string	
xmin=	niup.html#xmin=,FlatVal_t,string	niup: xmin=(ih: FlatVal_t; value: string)	
xmin	niup.html#xmin,FlatVal_t,string	niup: xmin(ih: FlatVal_t; value: string)	
xmin=	niup.html#xmin=,FlatVal_t,int	niup: xmin=(ih: FlatVal_t; x: int)	
xmin	niup.html#xmin,FlatVal_t,int	niup: xmin(ih: FlatVal_t; x: int)	
xmin	niup.html#xmin,FlatVal_t	niup: xmin(ih: FlatVal_t): string	
xwindow	niup.html#xwindow,FlatVal_t	niup: xwindow(ih: FlatVal_t): string	
y	niup.html#y,FlatVal_t	niup: y(ih: FlatVal_t): string	
yautohide=	niup.html#yautohide=,FlatVal_t,string	niup: yautohide=(ih: FlatVal_t; value: string)	
yautohide	niup.html#yautohide,FlatVal_t,string	niup: yautohide(ih: FlatVal_t; value: string)	
yautohide=	niup.html#yautohide=,FlatVal_t,bool	niup: yautohide=(ih: FlatVal_t; yes: bool)	
yautohide	niup.html#yautohide,FlatVal_t,bool	niup: yautohide(ih: FlatVal_t; yes: bool)	
yautohide	niup.html#yautohide,FlatVal_t	niup: yautohide(ih: FlatVal_t): bool	
yhidden	niup.html#yhidden,FlatVal_t	niup: yhidden(ih: FlatVal_t): bool	
ymax=	niup.html#ymax=,FlatVal_t,string	niup: ymax=(ih: FlatVal_t; value: string)	
ymax	niup.html#ymax,FlatVal_t,string	niup: ymax(ih: FlatVal_t; value: string)	
ymax=	niup.html#ymax=,FlatVal_t,int	niup: ymax=(ih: FlatVal_t; x: int)	
ymax	niup.html#ymax,FlatVal_t,int	niup: ymax(ih: FlatVal_t; x: int)	
ymax	niup.html#ymax,FlatVal_t	niup: ymax(ih: FlatVal_t): string	
ymin=	niup.html#ymin=,FlatVal_t,string	niup: ymin=(ih: FlatVal_t; value: string)	
ymin	niup.html#ymin,FlatVal_t,string	niup: ymin(ih: FlatVal_t; value: string)	
ymin=	niup.html#ymin=,FlatVal_t,int	niup: ymin=(ih: FlatVal_t; x: int)	
ymin	niup.html#ymin,FlatVal_t,int	niup: ymin(ih: FlatVal_t; x: int)	
ymin	niup.html#ymin,FlatVal_t	niup: ymin(ih: FlatVal_t): string	
zorder=	niup.html#zorder=,FlatVal_t,string	niup: zorder=(ih: FlatVal_t; value: string)	
zorder	niup.html#zorder,FlatVal_t,string	niup: zorder(ih: FlatVal_t; value: string)	
action=	niup.html#action=,FlatVal_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: FlatVal_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatVal_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: FlatVal_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,FlatVal_t	niup: action(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,FlatVal_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                    arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatVal_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                   arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,FlatVal_t	niup: button_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FlatVal_t,proc(PIhandle)	niup: destroy_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatVal_t,proc(PIhandle)	niup: destroy_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FlatVal_t	niup: destroy_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FlatVal_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FlatVal_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatVal_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FlatVal_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FlatVal_t	niup: dragbegin_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FlatVal_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FlatVal_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatVal_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FlatVal_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FlatVal_t	niup: dragdatasize_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FlatVal_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatVal_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FlatVal_t	niup: dragdata_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FlatVal_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatVal_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FlatVal_t	niup: dragend_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FlatVal_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatVal_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FlatVal_t	niup: dropdata_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FlatVal_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FlatVal_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatVal_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FlatVal_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                      num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FlatVal_t	niup: dropfiles_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FlatVal_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatVal_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FlatVal_t	niup: dropmotion_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FlatVal_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatVal_t,proc(PIhandle)	niup: enterwindow_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FlatVal_t	niup: enterwindow_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_button_cb=	niup.html#flat_button_cb=,FlatVal_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cint; arg5: cint; arg6: cstring): cint {.cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatVal_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: flat_button_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                        arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
flat_button_cb	niup.html#flat_button_cb,FlatVal_t	niup: flat_button_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_enterwindow_cb=	niup.html#flat_enterwindow_cb=,FlatVal_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,FlatVal_t,proc(PIhandle,cint,cint)	niup: flat_enterwindow_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint;\n    arg3: cint): cint {.cdecl.})	
flat_enterwindow_cb	niup.html#flat_enterwindow_cb,FlatVal_t	niup: flat_enterwindow_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_focus_cb=	niup.html#flat_focus_cb=,FlatVal_t,proc(PIhandle,cint)	niup: flat_focus_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatVal_t,proc(PIhandle,cint)	niup: flat_focus_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
flat_focus_cb	niup.html#flat_focus_cb,FlatVal_t	niup: flat_focus_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_leavewindow_cb=	niup.html#flat_leavewindow_cb=,FlatVal_t,proc(PIhandle)	niup: flat_leavewindow_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatVal_t,proc(PIhandle)	niup: flat_leavewindow_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
flat_leavewindow_cb	niup.html#flat_leavewindow_cb,FlatVal_t	niup: flat_leavewindow_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_motion_cb=	niup.html#flat_motion_cb=,FlatVal_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n    arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatVal_t,proc(PIhandle,cint,cint,cstring)	niup: flat_motion_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                        arg4: cstring): cint {.cdecl.})	
flat_motion_cb	niup.html#flat_motion_cb,FlatVal_t	niup: flat_motion_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
flat_wheel_cb=	niup.html#flat_wheel_cb=,FlatVal_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: flat_wheel_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cfloat; arg3: cint;\n                                        arg4: cint; arg5: cstring): cint {.cdecl.})	
flat_wheel_cb	niup.html#flat_wheel_cb,FlatVal_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: flat_wheel_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cfloat; arg3: cint;\n                                       arg4: cint; arg5: cstring): cint {.cdecl.})	
flat_wheel_cb	niup.html#flat_wheel_cb,FlatVal_t	niup: flat_wheel_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FlatVal_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatVal_t,proc(PIhandle,cint)	niup: focus_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FlatVal_t	niup: focus_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FlatVal_t,proc(PIhandle)	niup: getfocus_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatVal_t,proc(PIhandle)	niup: getfocus_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FlatVal_t	niup: getfocus_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FlatVal_t,proc(PIhandle)	niup: help_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatVal_t,proc(PIhandle)	niup: help_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FlatVal_t	niup: help_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,FlatVal_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: FlatVal_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatVal_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: FlatVal_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,FlatVal_t	niup: keypress_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FlatVal_t,proc(PIhandle)	niup: killfocus_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatVal_t,proc(PIhandle)	niup: killfocus_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FlatVal_t	niup: killfocus_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FlatVal_t,proc(PIhandle,cint)	niup: k_any=(ih: FlatVal_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatVal_t,proc(PIhandle,cint)	niup: k_any(ih: FlatVal_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FlatVal_t	niup: k_any(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FlatVal_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatVal_t,proc(PIhandle)	niup: ldestroy_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FlatVal_t	niup: ldestroy_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FlatVal_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatVal_t,proc(PIhandle)	niup: leavewindow_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FlatVal_t	niup: leavewindow_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FlatVal_t,proc(PIhandle)	niup: map_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatVal_t,proc(PIhandle)	niup: map_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FlatVal_t	niup: map_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,FlatVal_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: FlatVal_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatVal_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: FlatVal_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,FlatVal_t	niup: motion_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FlatVal_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatVal_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FlatVal_t	niup: postmessage_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FlatVal_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FlatVal_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatVal_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FlatVal_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FlatVal_t	niup: resize_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,FlatVal_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: FlatVal_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatVal_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: FlatVal_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,FlatVal_t	niup: scroll_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FlatVal_t,proc(PIhandle)	niup: unmap_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatVal_t,proc(PIhandle)	niup: unmap_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FlatVal_t	niup: unmap_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,FlatVal_t,proc(PIhandle)	niup: valuechanged_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatVal_t,proc(PIhandle)	niup: valuechanged_cb(ih: FlatVal_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,FlatVal_t	niup: valuechanged_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanging_cb=	niup.html#valuechanging_cb=,FlatVal_t,proc(PIhandle,cint)	niup: valuechanging_cb=(ih: FlatVal_t;\n                  cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
valuechanging_cb	niup.html#valuechanging_cb,FlatVal_t,proc(PIhandle,cint)	niup: valuechanging_cb(ih: FlatVal_t;\n                 cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
valuechanging_cb	niup.html#valuechanging_cb,FlatVal_t	niup: valuechanging_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,FlatVal_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                   status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatVal_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                  status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,FlatVal_t	niup: wheel_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,FlatVal_t,proc(PIhandle,cint)	niup: wom_cb=(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatVal_t,proc(PIhandle,cint)	niup: wom_cb(ih: FlatVal_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,FlatVal_t	niup: wom_cb(ih: FlatVal_t): proc (ih: PIhandle): cint {.cdecl.}	
FontDlg	niup.html#FontDlg_2	niup: FontDlg(): FontDlg_t	
active=	niup.html#active=,FontDlg_t,string	niup: active=(ih: FontDlg_t; value: string)	
active	niup.html#active,FontDlg_t,string	niup: active(ih: FontDlg_t; value: string)	
active=	niup.html#active=,FontDlg_t,bool	niup: active=(ih: FontDlg_t; yes: bool)	
active	niup.html#active,FontDlg_t,bool	niup: active(ih: FontDlg_t; yes: bool)	
active	niup.html#active,FontDlg_t	niup: active(ih: FontDlg_t): bool	
activewindow	niup.html#activewindow,FontDlg_t	niup: activewindow(ih: FontDlg_t): bool	
background=	niup.html#background=,FontDlg_t,string	niup: background=(ih: FontDlg_t; value: string)	
background	niup.html#background,FontDlg_t,string	niup: background(ih: FontDlg_t; value: string)	
background=	niup.html#background=,FontDlg_t,int,int,int,int	niup: background=(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,FontDlg_t,int,int,int,int	niup: background(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,FontDlg_t	niup: background(ih: FontDlg_t): string	
bgcolor=	niup.html#bgcolor=,FontDlg_t,string	niup: bgcolor=(ih: FontDlg_t; value: string)	
bgcolor	niup.html#bgcolor,FontDlg_t,string	niup: bgcolor(ih: FontDlg_t; value: string)	
bgcolor=	niup.html#bgcolor=,FontDlg_t,int,int,int,int	niup: bgcolor=(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FontDlg_t,int,int,int,int	niup: bgcolor(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,FontDlg_t	niup: bgcolor(ih: FontDlg_t): string	
border=	niup.html#border=,FontDlg_t,string	niup: border=(ih: FontDlg_t; value: string)	
border	niup.html#border,FontDlg_t,string	niup: border(ih: FontDlg_t; value: string)	
border=	niup.html#border=,FontDlg_t,bool	niup: border=(ih: FontDlg_t; yes: bool)	
border	niup.html#border,FontDlg_t,bool	niup: border(ih: FontDlg_t; yes: bool)	
border	niup.html#border,FontDlg_t	niup: border(ih: FontDlg_t): bool	
bordersize	niup.html#bordersize,FontDlg_t	niup: bordersize(ih: FontDlg_t): string	
bringfront=	niup.html#bringfront=,FontDlg_t,string	niup: bringfront=(ih: FontDlg_t; value: string)	
bringfront	niup.html#bringfront,FontDlg_t,string	niup: bringfront(ih: FontDlg_t; value: string)	
bringfront=	niup.html#bringfront=,FontDlg_t,bool	niup: bringfront=(ih: FontDlg_t; yes: bool)	
bringfront	niup.html#bringfront,FontDlg_t,bool	niup: bringfront(ih: FontDlg_t; yes: bool)	
bringfront	niup.html#bringfront,FontDlg_t	niup: bringfront(ih: FontDlg_t): bool	
canfocus=	niup.html#canfocus=,FontDlg_t,string	niup: canfocus=(ih: FontDlg_t; value: string)	
canfocus	niup.html#canfocus,FontDlg_t,string	niup: canfocus(ih: FontDlg_t; value: string)	
canfocus=	niup.html#canfocus=,FontDlg_t,bool	niup: canfocus=(ih: FontDlg_t; yes: bool)	
canfocus	niup.html#canfocus,FontDlg_t,bool	niup: canfocus(ih: FontDlg_t; yes: bool)	
canfocus	niup.html#canfocus,FontDlg_t	niup: canfocus(ih: FontDlg_t): bool	
charsize	niup.html#charsize,FontDlg_t	niup: charsize(ih: FontDlg_t): string	
childoffset=	niup.html#childoffset=,FontDlg_t,string	niup: childoffset=(ih: FontDlg_t; value: string)	
childoffset	niup.html#childoffset,FontDlg_t,string	niup: childoffset(ih: FontDlg_t; value: string)	
childoffset=	niup.html#childoffset=,FontDlg_t,int,int	niup: childoffset=(ih: FontDlg_t; width, height: int)	
childoffset	niup.html#childoffset,FontDlg_t,int,int	niup: childoffset(ih: FontDlg_t; width, height: int)	
childoffset	niup.html#childoffset,FontDlg_t	niup: childoffset(ih: FontDlg_t): string	
clientoffset	niup.html#clientoffset,FontDlg_t	niup: clientoffset(ih: FontDlg_t): string	
clientsize=	niup.html#clientsize=,FontDlg_t,string	niup: clientsize=(ih: FontDlg_t; value: string)	
clientsize	niup.html#clientsize,FontDlg_t,string	niup: clientsize(ih: FontDlg_t; value: string)	
clientsize=	niup.html#clientsize=,FontDlg_t,int,int	niup: clientsize=(ih: FontDlg_t; width, height: int)	
clientsize	niup.html#clientsize,FontDlg_t,int,int	niup: clientsize(ih: FontDlg_t; width, height: int)	
clientsize	niup.html#clientsize,FontDlg_t	niup: clientsize(ih: FontDlg_t): string	
composited=	niup.html#composited=,FontDlg_t,string	niup: composited=(ih: FontDlg_t; value: string)	
composited	niup.html#composited,FontDlg_t,string	niup: composited(ih: FontDlg_t; value: string)	
composited=	niup.html#composited=,FontDlg_t,bool	niup: composited=(ih: FontDlg_t; yes: bool)	
composited	niup.html#composited,FontDlg_t,bool	niup: composited(ih: FontDlg_t; yes: bool)	
composited	niup.html#composited,FontDlg_t	niup: composited(ih: FontDlg_t): bool	
control=	niup.html#control=,FontDlg_t,string	niup: control=(ih: FontDlg_t; value: string)	
control	niup.html#control,FontDlg_t,string	niup: control(ih: FontDlg_t; value: string)	
control=	niup.html#control=,FontDlg_t,bool	niup: control=(ih: FontDlg_t; yes: bool)	
control	niup.html#control,FontDlg_t,bool	niup: control(ih: FontDlg_t; yes: bool)	
control	niup.html#control,FontDlg_t	niup: control(ih: FontDlg_t): bool	
cursor=	niup.html#cursor=,FontDlg_t,	niup: cursor=(ih: FontDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FontDlg_t,	niup: cursor(ih: FontDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,FontDlg_t	niup: cursor(ih: FontDlg_t): string	
customframe=	niup.html#customframe=,FontDlg_t,string	niup: customframe=(ih: FontDlg_t; value: string)	
customframe	niup.html#customframe,FontDlg_t,string	niup: customframe(ih: FontDlg_t; value: string)	
customframe=	niup.html#customframe=,FontDlg_t,bool	niup: customframe=(ih: FontDlg_t; yes: bool)	
customframe	niup.html#customframe,FontDlg_t,bool	niup: customframe(ih: FontDlg_t; yes: bool)	
customframe	niup.html#customframe,FontDlg_t	niup: customframe(ih: FontDlg_t): bool	
customframesimulate=	niup.html#customframesimulate=,FontDlg_t,string	niup: customframesimulate=(ih: FontDlg_t; value: string)	
customframesimulate	niup.html#customframesimulate,FontDlg_t,string	niup: customframesimulate(ih: FontDlg_t; value: string)	
customframesimulate=	niup.html#customframesimulate=,FontDlg_t,bool	niup: customframesimulate=(ih: FontDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,FontDlg_t,bool	niup: customframesimulate(ih: FontDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,FontDlg_t	niup: customframesimulate(ih: FontDlg_t): bool	
defaultenter=	niup.html#defaultenter=,FontDlg_t,IUPhandle_t	niup: defaultenter=(ih: FontDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,FontDlg_t,IUPhandle_t	niup: defaultenter(ih: FontDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,FontDlg_t	niup: defaultenter(ih: FontDlg_t): string	
defaultesc=	niup.html#defaultesc=,FontDlg_t,IUPhandle_t	niup: defaultesc=(ih: FontDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,FontDlg_t,IUPhandle_t	niup: defaultesc(ih: FontDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,FontDlg_t	niup: defaultesc(ih: FontDlg_t): string	
dialogframe=	niup.html#dialogframe=,FontDlg_t,string	niup: dialogframe=(ih: FontDlg_t; value: string)	
dialogframe	niup.html#dialogframe,FontDlg_t,string	niup: dialogframe(ih: FontDlg_t; value: string)	
dialogframe=	niup.html#dialogframe=,FontDlg_t,bool	niup: dialogframe=(ih: FontDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,FontDlg_t,bool	niup: dialogframe(ih: FontDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,FontDlg_t	niup: dialogframe(ih: FontDlg_t): bool	
dialoghint=	niup.html#dialoghint=,FontDlg_t,string	niup: dialoghint=(ih: FontDlg_t; value: string)	
dialoghint	niup.html#dialoghint,FontDlg_t,string	niup: dialoghint(ih: FontDlg_t; value: string)	
dialoghint=	niup.html#dialoghint=,FontDlg_t,bool	niup: dialoghint=(ih: FontDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,FontDlg_t,bool	niup: dialoghint(ih: FontDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,FontDlg_t	niup: dialoghint(ih: FontDlg_t): bool	
dragdrop=	niup.html#dragdrop=,FontDlg_t,string	niup: dragdrop=(ih: FontDlg_t; value: string)	
dragdrop	niup.html#dragdrop,FontDlg_t,string	niup: dragdrop(ih: FontDlg_t; value: string)	
dragdrop=	niup.html#dragdrop=,FontDlg_t,bool	niup: dragdrop=(ih: FontDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,FontDlg_t,bool	niup: dragdrop(ih: FontDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,FontDlg_t	niup: dragdrop(ih: FontDlg_t): bool	
dragsource=	niup.html#dragsource=,FontDlg_t,string	niup: dragsource=(ih: FontDlg_t; value: string)	
dragsource	niup.html#dragsource,FontDlg_t,string	niup: dragsource(ih: FontDlg_t; value: string)	
dragsource=	niup.html#dragsource=,FontDlg_t,bool	niup: dragsource=(ih: FontDlg_t; yes: bool)	
dragsource	niup.html#dragsource,FontDlg_t,bool	niup: dragsource(ih: FontDlg_t; yes: bool)	
dragsource	niup.html#dragsource,FontDlg_t	niup: dragsource(ih: FontDlg_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,FontDlg_t,string	niup: dragsourcemove=(ih: FontDlg_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,FontDlg_t,string	niup: dragsourcemove(ih: FontDlg_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,FontDlg_t,bool	niup: dragsourcemove=(ih: FontDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FontDlg_t,bool	niup: dragsourcemove(ih: FontDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,FontDlg_t	niup: dragsourcemove(ih: FontDlg_t): bool	
dragtypes=	niup.html#dragtypes=,FontDlg_t,string	niup: dragtypes=(ih: FontDlg_t; value: string)	
dragtypes	niup.html#dragtypes,FontDlg_t,string	niup: dragtypes(ih: FontDlg_t; value: string)	
dragtypes	niup.html#dragtypes,FontDlg_t	niup: dragtypes(ih: FontDlg_t): string	
dropfilestarget=	niup.html#dropfilestarget=,FontDlg_t,string	niup: dropfilestarget=(ih: FontDlg_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,FontDlg_t,string	niup: dropfilestarget(ih: FontDlg_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,FontDlg_t,bool	niup: dropfilestarget=(ih: FontDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FontDlg_t,bool	niup: dropfilestarget(ih: FontDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,FontDlg_t	niup: dropfilestarget(ih: FontDlg_t): bool	
droptarget=	niup.html#droptarget=,FontDlg_t,string	niup: droptarget=(ih: FontDlg_t; value: string)	
droptarget	niup.html#droptarget,FontDlg_t,string	niup: droptarget(ih: FontDlg_t; value: string)	
droptarget=	niup.html#droptarget=,FontDlg_t,bool	niup: droptarget=(ih: FontDlg_t; yes: bool)	
droptarget	niup.html#droptarget,FontDlg_t,bool	niup: droptarget(ih: FontDlg_t; yes: bool)	
droptarget	niup.html#droptarget,FontDlg_t	niup: droptarget(ih: FontDlg_t): bool	
droptypes=	niup.html#droptypes=,FontDlg_t,string	niup: droptypes=(ih: FontDlg_t; value: string)	
droptypes	niup.html#droptypes,FontDlg_t,string	niup: droptypes(ih: FontDlg_t; value: string)	
droptypes	niup.html#droptypes,FontDlg_t	niup: droptypes(ih: FontDlg_t): string	
expand=	niup.html#expand=,FontDlg_t,string	niup: expand=(ih: FontDlg_t; value: string)	
expand	niup.html#expand,FontDlg_t,string	niup: expand(ih: FontDlg_t; value: string)	
expand	niup.html#expand,FontDlg_t	niup: expand(ih: FontDlg_t): string	
expandweight=	niup.html#expandweight=,FontDlg_t,string	niup: expandweight=(ih: FontDlg_t; value: string)	
expandweight	niup.html#expandweight,FontDlg_t,string	niup: expandweight(ih: FontDlg_t; value: string)	
expandweight=	niup.html#expandweight=,FontDlg_t,int64	niup: expandweight=(ih: FontDlg_t; x: int64)	
expandweight	niup.html#expandweight,FontDlg_t,int64	niup: expandweight(ih: FontDlg_t; x: int64)	
expandweight	niup.html#expandweight,FontDlg_t	niup: expandweight(ih: FontDlg_t): string	
floating=	niup.html#floating=,FontDlg_t,string	niup: floating=(ih: FontDlg_t; value: string)	
floating	niup.html#floating,FontDlg_t,string	niup: floating(ih: FontDlg_t; value: string)	
floating	niup.html#floating,FontDlg_t	niup: floating(ih: FontDlg_t): string	
font=	niup.html#font=,FontDlg_t,string	niup: font=(ih: FontDlg_t; value: string)	
font	niup.html#font,FontDlg_t,string	niup: font(ih: FontDlg_t; value: string)	
font	niup.html#font,FontDlg_t	niup: font(ih: FontDlg_t): string	
fontface=	niup.html#fontface=,FontDlg_t,string	niup: fontface=(ih: FontDlg_t; value: string)	
fontface	niup.html#fontface,FontDlg_t,string	niup: fontface(ih: FontDlg_t; value: string)	
fontface	niup.html#fontface,FontDlg_t	niup: fontface(ih: FontDlg_t): string	
fontsize=	niup.html#fontsize=,FontDlg_t,string	niup: fontsize=(ih: FontDlg_t; value: string)	
fontsize	niup.html#fontsize,FontDlg_t,string	niup: fontsize(ih: FontDlg_t; value: string)	
fontsize=	niup.html#fontsize=,FontDlg_t,int	niup: fontsize=(ih: FontDlg_t; x: int)	
fontsize	niup.html#fontsize,FontDlg_t,int	niup: fontsize(ih: FontDlg_t; x: int)	
fontsize	niup.html#fontsize,FontDlg_t	niup: fontsize(ih: FontDlg_t): string	
fontstyle=	niup.html#fontstyle=,FontDlg_t,string	niup: fontstyle=(ih: FontDlg_t; value: string)	
fontstyle	niup.html#fontstyle,FontDlg_t,string	niup: fontstyle(ih: FontDlg_t; value: string)	
fontstyle	niup.html#fontstyle,FontDlg_t	niup: fontstyle(ih: FontDlg_t): string	
fullscreen=	niup.html#fullscreen=,FontDlg_t,string	niup: fullscreen=(ih: FontDlg_t; value: string)	
fullscreen	niup.html#fullscreen,FontDlg_t,string	niup: fullscreen(ih: FontDlg_t; value: string)	
fullscreen=	niup.html#fullscreen=,FontDlg_t,bool	niup: fullscreen=(ih: FontDlg_t; yes: bool)	
fullscreen	niup.html#fullscreen,FontDlg_t,bool	niup: fullscreen(ih: FontDlg_t; yes: bool)	
handlename=	niup.html#handlename=,FontDlg_t,string	niup: handlename=(ih: FontDlg_t; value: string)	
handlename	niup.html#handlename,FontDlg_t,string	niup: handlename(ih: FontDlg_t; value: string)	
handlename	niup.html#handlename,FontDlg_t	niup: handlename(ih: FontDlg_t): string	
helpbutton=	niup.html#helpbutton=,FontDlg_t,string	niup: helpbutton=(ih: FontDlg_t; value: string)	
helpbutton	niup.html#helpbutton,FontDlg_t,string	niup: helpbutton(ih: FontDlg_t; value: string)	
helpbutton=	niup.html#helpbutton=,FontDlg_t,bool	niup: helpbutton=(ih: FontDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,FontDlg_t,bool	niup: helpbutton(ih: FontDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,FontDlg_t	niup: helpbutton(ih: FontDlg_t): bool	
hidetaskbar=	niup.html#hidetaskbar=,FontDlg_t,string	niup: hidetaskbar=(ih: FontDlg_t; value: string)	
hidetaskbar	niup.html#hidetaskbar,FontDlg_t,string	niup: hidetaskbar(ih: FontDlg_t; value: string)	
hidetaskbar=	niup.html#hidetaskbar=,FontDlg_t,bool	niup: hidetaskbar=(ih: FontDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,FontDlg_t,bool	niup: hidetaskbar(ih: FontDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,FontDlg_t	niup: hidetaskbar(ih: FontDlg_t): bool	
hidetitlebar=	niup.html#hidetitlebar=,FontDlg_t,string	niup: hidetitlebar=(ih: FontDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,FontDlg_t,string	niup: hidetitlebar(ih: FontDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,FontDlg_t	niup: hidetitlebar(ih: FontDlg_t): string	
icon=	niup.html#icon=,FontDlg_t,string	niup: icon=(ih: FontDlg_t; value: string)	
icon	niup.html#icon,FontDlg_t,string	niup: icon(ih: FontDlg_t; value: string)	
icon	niup.html#icon,FontDlg_t	niup: icon(ih: FontDlg_t): string	
maxbox=	niup.html#maxbox=,FontDlg_t,string	niup: maxbox=(ih: FontDlg_t; value: string)	
maxbox	niup.html#maxbox,FontDlg_t,string	niup: maxbox(ih: FontDlg_t; value: string)	
maxbox=	niup.html#maxbox=,FontDlg_t,bool	niup: maxbox=(ih: FontDlg_t; yes: bool)	
maxbox	niup.html#maxbox,FontDlg_t,bool	niup: maxbox(ih: FontDlg_t; yes: bool)	
maxbox	niup.html#maxbox,FontDlg_t	niup: maxbox(ih: FontDlg_t): bool	
maximized	niup.html#maximized,FontDlg_t	niup: maximized(ih: FontDlg_t): bool	
maxsize=	niup.html#maxsize=,FontDlg_t,string	niup: maxsize=(ih: FontDlg_t; value: string)	
maxsize	niup.html#maxsize,FontDlg_t,string	niup: maxsize(ih: FontDlg_t; value: string)	
maxsize=	niup.html#maxsize=,FontDlg_t,int,int	niup: maxsize=(ih: FontDlg_t; width, height: int)	
maxsize	niup.html#maxsize,FontDlg_t,int,int	niup: maxsize(ih: FontDlg_t; width, height: int)	
maxsize	niup.html#maxsize,FontDlg_t	niup: maxsize(ih: FontDlg_t): string	
mdichild=	niup.html#mdichild=,FontDlg_t,string	niup: mdichild=(ih: FontDlg_t; value: string)	
mdichild	niup.html#mdichild,FontDlg_t,string	niup: mdichild(ih: FontDlg_t; value: string)	
mdichild=	niup.html#mdichild=,FontDlg_t,bool	niup: mdichild=(ih: FontDlg_t; yes: bool)	
mdichild	niup.html#mdichild,FontDlg_t,bool	niup: mdichild(ih: FontDlg_t; yes: bool)	
mdichild	niup.html#mdichild,FontDlg_t	niup: mdichild(ih: FontDlg_t): bool	
mdiclient=	niup.html#mdiclient=,FontDlg_t,string	niup: mdiclient=(ih: FontDlg_t; value: string)	
mdiclient	niup.html#mdiclient,FontDlg_t,string	niup: mdiclient(ih: FontDlg_t; value: string)	
mdiclient=	niup.html#mdiclient=,FontDlg_t,bool	niup: mdiclient=(ih: FontDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,FontDlg_t,bool	niup: mdiclient(ih: FontDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,FontDlg_t	niup: mdiclient(ih: FontDlg_t): bool	
mdiframe=	niup.html#mdiframe=,FontDlg_t,string	niup: mdiframe=(ih: FontDlg_t; value: string)	
mdiframe	niup.html#mdiframe,FontDlg_t,string	niup: mdiframe(ih: FontDlg_t; value: string)	
mdiframe=	niup.html#mdiframe=,FontDlg_t,bool	niup: mdiframe=(ih: FontDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,FontDlg_t,bool	niup: mdiframe(ih: FontDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,FontDlg_t	niup: mdiframe(ih: FontDlg_t): bool	
mdimenu=	niup.html#mdimenu=,FontDlg_t,Menu_t	niup: mdimenu=(ih: FontDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,FontDlg_t,Menu_t	niup: mdimenu(ih: FontDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,FontDlg_t	niup: mdimenu(ih: FontDlg_t): string	
menu=	niup.html#menu=,FontDlg_t,Menu_t	niup: menu=(ih: FontDlg_t; handle: Menu_t)	
menu	niup.html#menu,FontDlg_t,Menu_t	niup: menu(ih: FontDlg_t; handle: Menu_t)	
menu	niup.html#menu,FontDlg_t	niup: menu(ih: FontDlg_t): string	
menubox=	niup.html#menubox=,FontDlg_t,string	niup: menubox=(ih: FontDlg_t; value: string)	
menubox	niup.html#menubox,FontDlg_t,string	niup: menubox(ih: FontDlg_t; value: string)	
menubox=	niup.html#menubox=,FontDlg_t,bool	niup: menubox=(ih: FontDlg_t; yes: bool)	
menubox	niup.html#menubox,FontDlg_t,bool	niup: menubox(ih: FontDlg_t; yes: bool)	
menubox	niup.html#menubox,FontDlg_t	niup: menubox(ih: FontDlg_t): bool	
minbox=	niup.html#minbox=,FontDlg_t,string	niup: minbox=(ih: FontDlg_t; value: string)	
minbox	niup.html#minbox,FontDlg_t,string	niup: minbox(ih: FontDlg_t; value: string)	
minbox=	niup.html#minbox=,FontDlg_t,bool	niup: minbox=(ih: FontDlg_t; yes: bool)	
minbox	niup.html#minbox,FontDlg_t,bool	niup: minbox(ih: FontDlg_t; yes: bool)	
minbox	niup.html#minbox,FontDlg_t	niup: minbox(ih: FontDlg_t): bool	
minsize=	niup.html#minsize=,FontDlg_t,string	niup: minsize=(ih: FontDlg_t; value: string)	
minsize	niup.html#minsize,FontDlg_t,string	niup: minsize(ih: FontDlg_t; value: string)	
minsize=	niup.html#minsize=,FontDlg_t,int,int	niup: minsize=(ih: FontDlg_t; width, height: int)	
minsize	niup.html#minsize,FontDlg_t,int,int	niup: minsize(ih: FontDlg_t; width, height: int)	
minsize	niup.html#minsize,FontDlg_t	niup: minsize(ih: FontDlg_t): string	
modal	niup.html#modal,FontDlg_t	niup: modal(ih: FontDlg_t): bool	
nactive=	niup.html#nactive=,FontDlg_t,string	niup: nactive=(ih: FontDlg_t; value: string)	
nactive	niup.html#nactive,FontDlg_t,string	niup: nactive(ih: FontDlg_t; value: string)	
nactive=	niup.html#nactive=,FontDlg_t,bool	niup: nactive=(ih: FontDlg_t; yes: bool)	
nactive	niup.html#nactive,FontDlg_t,bool	niup: nactive(ih: FontDlg_t; yes: bool)	
nactive	niup.html#nactive,FontDlg_t	niup: nactive(ih: FontDlg_t): bool	
name=	niup.html#name=,FontDlg_t,string	niup: name=(ih: FontDlg_t; value: string)	
name	niup.html#name,FontDlg_t,string	niup: name(ih: FontDlg_t; value: string)	
name	niup.html#name,FontDlg_t	niup: name(ih: FontDlg_t): string	
nativeparent=	niup.html#nativeparent=,FontDlg_t,User_t	niup: nativeparent=(ih: FontDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,FontDlg_t,User_t	niup: nativeparent(ih: FontDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,FontDlg_t	niup: nativeparent(ih: FontDlg_t): string	
naturalsize	niup.html#naturalsize,FontDlg_t	niup: naturalsize(ih: FontDlg_t): string	
noflush=	niup.html#noflush=,FontDlg_t,string	niup: noflush=(ih: FontDlg_t; value: string)	
noflush	niup.html#noflush,FontDlg_t,string	niup: noflush(ih: FontDlg_t; value: string)	
noflush=	niup.html#noflush=,FontDlg_t,bool	niup: noflush=(ih: FontDlg_t; yes: bool)	
noflush	niup.html#noflush,FontDlg_t,bool	niup: noflush(ih: FontDlg_t; yes: bool)	
noflush	niup.html#noflush,FontDlg_t	niup: noflush(ih: FontDlg_t): bool	
normalizergroup=	niup.html#normalizergroup=,FontDlg_t,string	niup: normalizergroup=(ih: FontDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,FontDlg_t,string	niup: normalizergroup(ih: FontDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,FontDlg_t	niup: normalizergroup(ih: FontDlg_t): string	
ntheme=	niup.html#ntheme=,FontDlg_t,string	niup: ntheme=(ih: FontDlg_t; value: string)	
ntheme	niup.html#ntheme,FontDlg_t,string	niup: ntheme(ih: FontDlg_t; value: string)	
ntheme	niup.html#ntheme,FontDlg_t	niup: ntheme(ih: FontDlg_t): string	
opacity=	niup.html#opacity=,FontDlg_t,string	niup: opacity=(ih: FontDlg_t; value: string)	
opacity	niup.html#opacity,FontDlg_t,string	niup: opacity(ih: FontDlg_t; value: string)	
opacity=	niup.html#opacity=,FontDlg_t,int	niup: opacity=(ih: FontDlg_t; x: int)	
opacity	niup.html#opacity,FontDlg_t,int	niup: opacity(ih: FontDlg_t; x: int)	
opacity	niup.html#opacity,FontDlg_t	niup: opacity(ih: FontDlg_t): string	
opacityimage=	niup.html#opacityimage=,FontDlg_t,string	niup: opacityimage=(ih: FontDlg_t; value: string)	
opacityimage	niup.html#opacityimage,FontDlg_t,string	niup: opacityimage(ih: FontDlg_t; value: string)	
opacityimage	niup.html#opacityimage,FontDlg_t	niup: opacityimage(ih: FontDlg_t): string	
pangofontdesc	niup.html#pangofontdesc,FontDlg_t	niup: pangofontdesc(ih: FontDlg_t): string	
pangolayout	niup.html#pangolayout,FontDlg_t	niup: pangolayout(ih: FontDlg_t): string	
parentdialog=	niup.html#parentdialog=,FontDlg_t,IUPhandle_t	niup: parentdialog=(ih: FontDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,FontDlg_t,IUPhandle_t	niup: parentdialog(ih: FontDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,FontDlg_t	niup: parentdialog(ih: FontDlg_t): string	
placement=	niup.html#placement=,FontDlg_t,string	niup: placement=(ih: FontDlg_t; value: string)	
placement	niup.html#placement,FontDlg_t,string	niup: placement(ih: FontDlg_t; value: string)	
placement	niup.html#placement,FontDlg_t	niup: placement(ih: FontDlg_t): string	
position=	niup.html#position=,FontDlg_t,string	niup: position=(ih: FontDlg_t; value: string)	
position	niup.html#position,FontDlg_t,string	niup: position(ih: FontDlg_t; value: string)	
position=	niup.html#position=,FontDlg_t,int,int	niup: position=(ih: FontDlg_t; x, y: int)	
position	niup.html#position,FontDlg_t,int,int	niup: position(ih: FontDlg_t; x, y: int)	
position	niup.html#position,FontDlg_t	niup: position(ih: FontDlg_t): string	
previewtext=	niup.html#previewtext=,FontDlg_t,string	niup: previewtext=(ih: FontDlg_t; value: string)	
previewtext	niup.html#previewtext,FontDlg_t,string	niup: previewtext(ih: FontDlg_t; value: string)	
previewtext	niup.html#previewtext,FontDlg_t	niup: previewtext(ih: FontDlg_t): string	
propagatefocus=	niup.html#propagatefocus=,FontDlg_t,string	niup: propagatefocus=(ih: FontDlg_t; value: string)	
propagatefocus	niup.html#propagatefocus,FontDlg_t,string	niup: propagatefocus(ih: FontDlg_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,FontDlg_t,bool	niup: propagatefocus=(ih: FontDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FontDlg_t,bool	niup: propagatefocus(ih: FontDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,FontDlg_t	niup: propagatefocus(ih: FontDlg_t): bool	
rastersize=	niup.html#rastersize=,FontDlg_t,string	niup: rastersize=(ih: FontDlg_t; value: string)	
rastersize	niup.html#rastersize,FontDlg_t,string	niup: rastersize(ih: FontDlg_t; value: string)	
rastersize=	niup.html#rastersize=,FontDlg_t,int,int	niup: rastersize=(ih: FontDlg_t; width, height: int)	
rastersize	niup.html#rastersize,FontDlg_t,int,int	niup: rastersize(ih: FontDlg_t; width, height: int)	
rastersize	niup.html#rastersize,FontDlg_t	niup: rastersize(ih: FontDlg_t): string	
resize=	niup.html#resize=,FontDlg_t,string	niup: resize=(ih: FontDlg_t; value: string)	
resize	niup.html#resize,FontDlg_t,string	niup: resize(ih: FontDlg_t; value: string)	
resize=	niup.html#resize=,FontDlg_t,bool	niup: resize=(ih: FontDlg_t; yes: bool)	
resize	niup.html#resize,FontDlg_t,bool	niup: resize(ih: FontDlg_t; yes: bool)	
resize	niup.html#resize,FontDlg_t	niup: resize(ih: FontDlg_t): bool	
saveunder=	niup.html#saveunder=,FontDlg_t,string	niup: saveunder=(ih: FontDlg_t; value: string)	
saveunder	niup.html#saveunder,FontDlg_t,string	niup: saveunder(ih: FontDlg_t; value: string)	
saveunder=	niup.html#saveunder=,FontDlg_t,bool	niup: saveunder=(ih: FontDlg_t; yes: bool)	
saveunder	niup.html#saveunder,FontDlg_t,bool	niup: saveunder(ih: FontDlg_t; yes: bool)	
saveunder	niup.html#saveunder,FontDlg_t	niup: saveunder(ih: FontDlg_t): bool	
screenposition	niup.html#screenposition,FontDlg_t	niup: screenposition(ih: FontDlg_t): string	
shapeimage=	niup.html#shapeimage=,FontDlg_t,string	niup: shapeimage=(ih: FontDlg_t; value: string)	
shapeimage	niup.html#shapeimage,FontDlg_t,string	niup: shapeimage(ih: FontDlg_t; value: string)	
shapeimage	niup.html#shapeimage,FontDlg_t	niup: shapeimage(ih: FontDlg_t): string	
shownofocus=	niup.html#shownofocus=,FontDlg_t,string	niup: shownofocus=(ih: FontDlg_t; value: string)	
shownofocus	niup.html#shownofocus,FontDlg_t,string	niup: shownofocus(ih: FontDlg_t; value: string)	
shownofocus=	niup.html#shownofocus=,FontDlg_t,bool	niup: shownofocus=(ih: FontDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,FontDlg_t,bool	niup: shownofocus(ih: FontDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,FontDlg_t	niup: shownofocus(ih: FontDlg_t): bool	
shrink=	niup.html#shrink=,FontDlg_t,string	niup: shrink=(ih: FontDlg_t; value: string)	
shrink	niup.html#shrink,FontDlg_t,string	niup: shrink(ih: FontDlg_t; value: string)	
shrink=	niup.html#shrink=,FontDlg_t,bool	niup: shrink=(ih: FontDlg_t; yes: bool)	
shrink	niup.html#shrink,FontDlg_t,bool	niup: shrink(ih: FontDlg_t; yes: bool)	
shrink	niup.html#shrink,FontDlg_t	niup: shrink(ih: FontDlg_t): bool	
simulatemodal=	niup.html#simulatemodal=,FontDlg_t,string	niup: simulatemodal=(ih: FontDlg_t; value: string)	
simulatemodal	niup.html#simulatemodal,FontDlg_t,string	niup: simulatemodal(ih: FontDlg_t; value: string)	
simulatemodal=	niup.html#simulatemodal=,FontDlg_t,bool	niup: simulatemodal=(ih: FontDlg_t; yes: bool)	
simulatemodal	niup.html#simulatemodal,FontDlg_t,bool	niup: simulatemodal(ih: FontDlg_t; yes: bool)	
size=	niup.html#size=,FontDlg_t,string	niup: size=(ih: FontDlg_t; value: string)	
size	niup.html#size,FontDlg_t,string	niup: size(ih: FontDlg_t; value: string)	
size=	niup.html#size=,FontDlg_t,int,int	niup: size=(ih: FontDlg_t; width, height: int)	
size	niup.html#size,FontDlg_t,int,int	niup: size(ih: FontDlg_t; width, height: int)	
size=	niup.html#size=,FontDlg_t,string,int	niup: size=(ih: FontDlg_t; width: string; height: int)	
size	niup.html#size,FontDlg_t,string,int	niup: size(ih: FontDlg_t; width: string; height: int)	
size=	niup.html#size=,FontDlg_t,int,string	niup: size=(ih: FontDlg_t; width: int; height: string)	
size	niup.html#size,FontDlg_t,int,string	niup: size(ih: FontDlg_t; width: int; height: string)	
size	niup.html#size,FontDlg_t	niup: size(ih: FontDlg_t): string	
startfocus=	niup.html#startfocus=,FontDlg_t,string	niup: startfocus=(ih: FontDlg_t; value: string)	
startfocus	niup.html#startfocus,FontDlg_t,string	niup: startfocus(ih: FontDlg_t; value: string)	
startfocus	niup.html#startfocus,FontDlg_t	niup: startfocus(ih: FontDlg_t): string	
status	niup.html#status,FontDlg_t	niup: status(ih: FontDlg_t): string	
theme=	niup.html#theme=,FontDlg_t,string	niup: theme=(ih: FontDlg_t; value: string)	
theme	niup.html#theme,FontDlg_t,string	niup: theme(ih: FontDlg_t; value: string)	
theme	niup.html#theme,FontDlg_t	niup: theme(ih: FontDlg_t): string	
tip=	niup.html#tip=,FontDlg_t,string	niup: tip=(ih: FontDlg_t; value: string)	
tip	niup.html#tip,FontDlg_t,string	niup: tip(ih: FontDlg_t; value: string)	
tip	niup.html#tip,FontDlg_t	niup: tip(ih: FontDlg_t): string	
tipbgcolor=	niup.html#tipbgcolor=,FontDlg_t,string	niup: tipbgcolor=(ih: FontDlg_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,FontDlg_t,string	niup: tipbgcolor(ih: FontDlg_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,FontDlg_t,int,int,int,int	niup: tipbgcolor=(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FontDlg_t,int,int,int,int	niup: tipbgcolor(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,FontDlg_t	niup: tipbgcolor(ih: FontDlg_t): string	
tipdelay=	niup.html#tipdelay=,FontDlg_t,string	niup: tipdelay=(ih: FontDlg_t; value: string)	
tipdelay	niup.html#tipdelay,FontDlg_t,string	niup: tipdelay(ih: FontDlg_t; value: string)	
tipdelay=	niup.html#tipdelay=,FontDlg_t,int	niup: tipdelay=(ih: FontDlg_t; x: int)	
tipdelay	niup.html#tipdelay,FontDlg_t,int	niup: tipdelay(ih: FontDlg_t; x: int)	
tipdelay	niup.html#tipdelay,FontDlg_t	niup: tipdelay(ih: FontDlg_t): string	
tipfgcolor=	niup.html#tipfgcolor=,FontDlg_t,string	niup: tipfgcolor=(ih: FontDlg_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,FontDlg_t,string	niup: tipfgcolor(ih: FontDlg_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,FontDlg_t,int,int,int,int	niup: tipfgcolor=(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FontDlg_t,int,int,int,int	niup: tipfgcolor(ih: FontDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,FontDlg_t	niup: tipfgcolor(ih: FontDlg_t): string	
tipicon=	niup.html#tipicon=,FontDlg_t,string	niup: tipicon=(ih: FontDlg_t; value: string)	
tipicon	niup.html#tipicon,FontDlg_t,string	niup: tipicon(ih: FontDlg_t; value: string)	
tipicon	niup.html#tipicon,FontDlg_t	niup: tipicon(ih: FontDlg_t): string	
tipmarkup=	niup.html#tipmarkup=,FontDlg_t,string	niup: tipmarkup=(ih: FontDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,FontDlg_t,string	niup: tipmarkup(ih: FontDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,FontDlg_t	niup: tipmarkup(ih: FontDlg_t): string	
tiprect=	niup.html#tiprect=,FontDlg_t,string	niup: tiprect=(ih: FontDlg_t; value: string)	
tiprect	niup.html#tiprect,FontDlg_t,string	niup: tiprect(ih: FontDlg_t; value: string)	
tiprect=	niup.html#tiprect=,FontDlg_t,int,int,int,int	niup: tiprect=(ih: FontDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FontDlg_t,int,int,int,int	niup: tiprect(ih: FontDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,FontDlg_t	niup: tiprect(ih: FontDlg_t): string	
tipvisible=	niup.html#tipvisible=,FontDlg_t,string	niup: tipvisible=(ih: FontDlg_t; value: string)	
tipvisible	niup.html#tipvisible,FontDlg_t,string	niup: tipvisible(ih: FontDlg_t; value: string)	
tipvisible=	niup.html#tipvisible=,FontDlg_t,bool	niup: tipvisible=(ih: FontDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,FontDlg_t,bool	niup: tipvisible(ih: FontDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,FontDlg_t	niup: tipvisible(ih: FontDlg_t): bool	
title=	niup.html#title=,FontDlg_t,string	niup: title=(ih: FontDlg_t; value: string)	
title	niup.html#title,FontDlg_t,string	niup: title(ih: FontDlg_t; value: string)	
title	niup.html#title,FontDlg_t	niup: title(ih: FontDlg_t): string	
toolbox=	niup.html#toolbox=,FontDlg_t,string	niup: toolbox=(ih: FontDlg_t; value: string)	
toolbox	niup.html#toolbox,FontDlg_t,string	niup: toolbox(ih: FontDlg_t; value: string)	
toolbox=	niup.html#toolbox=,FontDlg_t,bool	niup: toolbox=(ih: FontDlg_t; yes: bool)	
toolbox	niup.html#toolbox,FontDlg_t,bool	niup: toolbox(ih: FontDlg_t; yes: bool)	
toolbox	niup.html#toolbox,FontDlg_t	niup: toolbox(ih: FontDlg_t): bool	
topmost=	niup.html#topmost=,FontDlg_t,string	niup: topmost=(ih: FontDlg_t; value: string)	
topmost	niup.html#topmost,FontDlg_t,string	niup: topmost(ih: FontDlg_t; value: string)	
topmost=	niup.html#topmost=,FontDlg_t,bool	niup: topmost=(ih: FontDlg_t; yes: bool)	
topmost	niup.html#topmost,FontDlg_t,bool	niup: topmost(ih: FontDlg_t; yes: bool)	
tray=	niup.html#tray=,FontDlg_t,string	niup: tray=(ih: FontDlg_t; value: string)	
tray	niup.html#tray,FontDlg_t,string	niup: tray(ih: FontDlg_t; value: string)	
tray=	niup.html#tray=,FontDlg_t,bool	niup: tray=(ih: FontDlg_t; yes: bool)	
tray	niup.html#tray,FontDlg_t,bool	niup: tray(ih: FontDlg_t; yes: bool)	
tray	niup.html#tray,FontDlg_t	niup: tray(ih: FontDlg_t): bool	
trayimage=	niup.html#trayimage=,FontDlg_t,	niup: trayimage=(ih: FontDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,FontDlg_t,	niup: trayimage(ih: FontDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,FontDlg_t	niup: trayimage(ih: FontDlg_t): string	
traytip=	niup.html#traytip=,FontDlg_t,string	niup: traytip=(ih: FontDlg_t; value: string)	
traytip	niup.html#traytip,FontDlg_t,string	niup: traytip(ih: FontDlg_t; value: string)	
traytip	niup.html#traytip,FontDlg_t	niup: traytip(ih: FontDlg_t): string	
traytipmarkup=	niup.html#traytipmarkup=,FontDlg_t,string	niup: traytipmarkup=(ih: FontDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,FontDlg_t,string	niup: traytipmarkup(ih: FontDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,FontDlg_t	niup: traytipmarkup(ih: FontDlg_t): string	
usersize=	niup.html#usersize=,FontDlg_t,string	niup: usersize=(ih: FontDlg_t; value: string)	
usersize	niup.html#usersize,FontDlg_t,string	niup: usersize(ih: FontDlg_t; value: string)	
usersize=	niup.html#usersize=,FontDlg_t,int,int	niup: usersize=(ih: FontDlg_t; width, height: int)	
usersize	niup.html#usersize,FontDlg_t,int,int	niup: usersize(ih: FontDlg_t; width, height: int)	
usersize	niup.html#usersize,FontDlg_t	niup: usersize(ih: FontDlg_t): string	
value=	niup.html#value=,FontDlg_t,string	niup: value=(ih: FontDlg_t; value: string)	
value	niup.html#value,FontDlg_t,string	niup: value(ih: FontDlg_t; value: string)	
value	niup.html#value,FontDlg_t	niup: value(ih: FontDlg_t): string	
visible=	niup.html#visible=,FontDlg_t,string	niup: visible=(ih: FontDlg_t; value: string)	
visible	niup.html#visible,FontDlg_t,string	niup: visible(ih: FontDlg_t; value: string)	
visible=	niup.html#visible=,FontDlg_t,bool	niup: visible=(ih: FontDlg_t; yes: bool)	
visible	niup.html#visible,FontDlg_t,bool	niup: visible(ih: FontDlg_t; yes: bool)	
visible	niup.html#visible,FontDlg_t	niup: visible(ih: FontDlg_t): bool	
wid	niup.html#wid,FontDlg_t	niup: wid(ih: FontDlg_t): string	
x	niup.html#x,FontDlg_t	niup: x(ih: FontDlg_t): string	
xfontid	niup.html#xfontid,FontDlg_t	niup: xfontid(ih: FontDlg_t): string	
xwindow	niup.html#xwindow,FontDlg_t	niup: xwindow(ih: FontDlg_t): string	
y	niup.html#y,FontDlg_t	niup: y(ih: FontDlg_t): string	
zorder=	niup.html#zorder=,FontDlg_t,string	niup: zorder=(ih: FontDlg_t; value: string)	
zorder	niup.html#zorder,FontDlg_t,string	niup: zorder(ih: FontDlg_t; value: string)	
close_cb=	niup.html#close_cb=,FontDlg_t,proc(PIhandle)	niup: close_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,FontDlg_t,proc(PIhandle)	niup: close_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,FontDlg_t	niup: close_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,FontDlg_t,proc(PIhandle)	niup: destroy_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FontDlg_t,proc(PIhandle)	niup: destroy_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,FontDlg_t	niup: destroy_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,FontDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: FontDlg_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FontDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: FontDlg_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,FontDlg_t	niup: dragbegin_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,FontDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: FontDlg_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FontDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: FontDlg_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,FontDlg_t	niup: dragdatasize_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,FontDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FontDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,FontDlg_t	niup: dragdata_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,FontDlg_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FontDlg_t,proc(PIhandle,cint)	niup: dragend_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,FontDlg_t	niup: dragend_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,FontDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                      data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FontDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                     data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,FontDlg_t	niup: dropdata_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,FontDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: FontDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                       num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FontDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: FontDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                      num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,FontDlg_t	niup: dropfiles_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,FontDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n                                        status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FontDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,FontDlg_t	niup: dropmotion_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,FontDlg_t,proc(PIhandle)	niup: enterwindow_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FontDlg_t,proc(PIhandle)	niup: enterwindow_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,FontDlg_t	niup: enterwindow_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,FontDlg_t,proc(PIhandle,cint)	niup: focus_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FontDlg_t,proc(PIhandle,cint)	niup: focus_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,FontDlg_t	niup: focus_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,FontDlg_t,proc(PIhandle)	niup: getfocus_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FontDlg_t,proc(PIhandle)	niup: getfocus_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,FontDlg_t	niup: getfocus_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,FontDlg_t,proc(PIhandle)	niup: help_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FontDlg_t,proc(PIhandle)	niup: help_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,FontDlg_t	niup: help_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,FontDlg_t,proc(PIhandle)	niup: killfocus_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FontDlg_t,proc(PIhandle)	niup: killfocus_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,FontDlg_t	niup: killfocus_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,FontDlg_t,proc(PIhandle,cint)	niup: k_any=(ih: FontDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FontDlg_t,proc(PIhandle,cint)	niup: k_any(ih: FontDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,FontDlg_t	niup: k_any(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,FontDlg_t,proc(PIhandle)	niup: ldestroy_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FontDlg_t,proc(PIhandle)	niup: ldestroy_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,FontDlg_t	niup: ldestroy_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,FontDlg_t,proc(PIhandle)	niup: leavewindow_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FontDlg_t,proc(PIhandle)	niup: leavewindow_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,FontDlg_t	niup: leavewindow_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,FontDlg_t,proc(PIhandle)	niup: map_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FontDlg_t,proc(PIhandle)	niup: map_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,FontDlg_t	niup: map_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,FontDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FontDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,FontDlg_t	niup: postmessage_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,FontDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: FontDlg_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FontDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: FontDlg_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,FontDlg_t	niup: resize_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
show_cb=	niup.html#show_cb=,FontDlg_t,proc(PIhandle,cint)	niup: show_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,FontDlg_t,proc(PIhandle,cint)	niup: show_cb(ih: FontDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,FontDlg_t	niup: show_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
trayclick_cb=	niup.html#trayclick_cb=,FontDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.\n    cdecl.})	
trayclick_cb	niup.html#trayclick_cb,FontDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb(ih: FontDlg_t;\n             cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,FontDlg_t	niup: trayclick_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,FontDlg_t,proc(PIhandle)	niup: unmap_cb=(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FontDlg_t,proc(PIhandle)	niup: unmap_cb(ih: FontDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,FontDlg_t	niup: unmap_cb(ih: FontDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
Frame	niup.html#Frame,IUPhandle_t	niup: Frame(child: IUPhandle_t): Frame_t	
active=	niup.html#active=,Frame_t,string	niup: active=(ih: Frame_t; value: string)	
active	niup.html#active,Frame_t,string	niup: active(ih: Frame_t; value: string)	
active=	niup.html#active=,Frame_t,bool	niup: active=(ih: Frame_t; yes: bool)	
active	niup.html#active,Frame_t,bool	niup: active(ih: Frame_t; yes: bool)	
active	niup.html#active,Frame_t	niup: active(ih: Frame_t): bool	
backcolor=	niup.html#backcolor=,Frame_t,string	niup: backcolor=(ih: Frame_t; value: string)	
backcolor	niup.html#backcolor,Frame_t,string	niup: backcolor(ih: Frame_t; value: string)	
backcolor=	niup.html#backcolor=,Frame_t,int,int,int,int	niup: backcolor=(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,Frame_t,int,int,int,int	niup: backcolor(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,Frame_t	niup: backcolor(ih: Frame_t): string	
bgcolor=	niup.html#bgcolor=,Frame_t,string	niup: bgcolor=(ih: Frame_t; value: string)	
bgcolor	niup.html#bgcolor,Frame_t,string	niup: bgcolor(ih: Frame_t; value: string)	
bgcolor=	niup.html#bgcolor=,Frame_t,int,int,int,int	niup: bgcolor=(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Frame_t,int,int,int,int	niup: bgcolor(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Frame_t	niup: bgcolor(ih: Frame_t): string	
canfocus=	niup.html#canfocus=,Frame_t,string	niup: canfocus=(ih: Frame_t; value: string)	
canfocus	niup.html#canfocus,Frame_t,string	niup: canfocus(ih: Frame_t; value: string)	
canfocus=	niup.html#canfocus=,Frame_t,bool	niup: canfocus=(ih: Frame_t; yes: bool)	
canfocus	niup.html#canfocus,Frame_t,bool	niup: canfocus(ih: Frame_t; yes: bool)	
canfocus	niup.html#canfocus,Frame_t	niup: canfocus(ih: Frame_t): bool	
charsize	niup.html#charsize,Frame_t	niup: charsize(ih: Frame_t): string	
childoffset=	niup.html#childoffset=,Frame_t,string	niup: childoffset=(ih: Frame_t; value: string)	
childoffset	niup.html#childoffset,Frame_t,string	niup: childoffset(ih: Frame_t; value: string)	
childoffset=	niup.html#childoffset=,Frame_t,int,int	niup: childoffset=(ih: Frame_t; width, height: int)	
childoffset	niup.html#childoffset,Frame_t,int,int	niup: childoffset(ih: Frame_t; width, height: int)	
childoffset	niup.html#childoffset,Frame_t	niup: childoffset(ih: Frame_t): string	
clientoffset	niup.html#clientoffset,Frame_t	niup: clientoffset(ih: Frame_t): string	
clientsize	niup.html#clientsize,Frame_t	niup: clientsize(ih: Frame_t): string	
expand=	niup.html#expand=,Frame_t,string	niup: expand=(ih: Frame_t; value: string)	
expand	niup.html#expand,Frame_t,string	niup: expand(ih: Frame_t; value: string)	
expand	niup.html#expand,Frame_t	niup: expand(ih: Frame_t): string	
expandweight=	niup.html#expandweight=,Frame_t,string	niup: expandweight=(ih: Frame_t; value: string)	
expandweight	niup.html#expandweight,Frame_t,string	niup: expandweight(ih: Frame_t; value: string)	
expandweight=	niup.html#expandweight=,Frame_t,int64	niup: expandweight=(ih: Frame_t; x: int64)	
expandweight	niup.html#expandweight,Frame_t,int64	niup: expandweight(ih: Frame_t; x: int64)	
expandweight	niup.html#expandweight,Frame_t	niup: expandweight(ih: Frame_t): string	
fgcolor=	niup.html#fgcolor=,Frame_t,string	niup: fgcolor=(ih: Frame_t; value: string)	
fgcolor	niup.html#fgcolor,Frame_t,string	niup: fgcolor(ih: Frame_t; value: string)	
fgcolor=	niup.html#fgcolor=,Frame_t,int,int,int,int	niup: fgcolor=(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Frame_t,int,int,int,int	niup: fgcolor(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Frame_t	niup: fgcolor(ih: Frame_t): string	
floating=	niup.html#floating=,Frame_t,string	niup: floating=(ih: Frame_t; value: string)	
floating	niup.html#floating,Frame_t,string	niup: floating(ih: Frame_t; value: string)	
floating	niup.html#floating,Frame_t	niup: floating(ih: Frame_t): string	
font=	niup.html#font=,Frame_t,string	niup: font=(ih: Frame_t; value: string)	
font	niup.html#font,Frame_t,string	niup: font(ih: Frame_t; value: string)	
font	niup.html#font,Frame_t	niup: font(ih: Frame_t): string	
fontface=	niup.html#fontface=,Frame_t,string	niup: fontface=(ih: Frame_t; value: string)	
fontface	niup.html#fontface,Frame_t,string	niup: fontface(ih: Frame_t; value: string)	
fontface	niup.html#fontface,Frame_t	niup: fontface(ih: Frame_t): string	
fontsize=	niup.html#fontsize=,Frame_t,string	niup: fontsize=(ih: Frame_t; value: string)	
fontsize	niup.html#fontsize,Frame_t,string	niup: fontsize(ih: Frame_t; value: string)	
fontsize=	niup.html#fontsize=,Frame_t,int	niup: fontsize=(ih: Frame_t; x: int)	
fontsize	niup.html#fontsize,Frame_t,int	niup: fontsize(ih: Frame_t; x: int)	
fontsize	niup.html#fontsize,Frame_t	niup: fontsize(ih: Frame_t): string	
fontstyle=	niup.html#fontstyle=,Frame_t,string	niup: fontstyle=(ih: Frame_t; value: string)	
fontstyle	niup.html#fontstyle,Frame_t,string	niup: fontstyle(ih: Frame_t; value: string)	
fontstyle	niup.html#fontstyle,Frame_t	niup: fontstyle(ih: Frame_t): string	
handlename=	niup.html#handlename=,Frame_t,string	niup: handlename=(ih: Frame_t; value: string)	
handlename	niup.html#handlename,Frame_t,string	niup: handlename(ih: Frame_t; value: string)	
handlename	niup.html#handlename,Frame_t	niup: handlename(ih: Frame_t): string	
maxsize=	niup.html#maxsize=,Frame_t,string	niup: maxsize=(ih: Frame_t; value: string)	
maxsize	niup.html#maxsize,Frame_t,string	niup: maxsize(ih: Frame_t; value: string)	
maxsize=	niup.html#maxsize=,Frame_t,int,int	niup: maxsize=(ih: Frame_t; width, height: int)	
maxsize	niup.html#maxsize,Frame_t,int,int	niup: maxsize(ih: Frame_t; width, height: int)	
maxsize	niup.html#maxsize,Frame_t	niup: maxsize(ih: Frame_t): string	
minsize=	niup.html#minsize=,Frame_t,string	niup: minsize=(ih: Frame_t; value: string)	
minsize	niup.html#minsize,Frame_t,string	niup: minsize(ih: Frame_t; value: string)	
minsize=	niup.html#minsize=,Frame_t,int,int	niup: minsize=(ih: Frame_t; width, height: int)	
minsize	niup.html#minsize,Frame_t,int,int	niup: minsize(ih: Frame_t; width, height: int)	
minsize	niup.html#minsize,Frame_t	niup: minsize(ih: Frame_t): string	
name=	niup.html#name=,Frame_t,string	niup: name=(ih: Frame_t; value: string)	
name	niup.html#name,Frame_t,string	niup: name(ih: Frame_t; value: string)	
name	niup.html#name,Frame_t	niup: name(ih: Frame_t): string	
naturalsize	niup.html#naturalsize,Frame_t	niup: naturalsize(ih: Frame_t): string	
normalizergroup=	niup.html#normalizergroup=,Frame_t,string	niup: normalizergroup=(ih: Frame_t; value: string)	
normalizergroup	niup.html#normalizergroup,Frame_t,string	niup: normalizergroup(ih: Frame_t; value: string)	
normalizergroup	niup.html#normalizergroup,Frame_t	niup: normalizergroup(ih: Frame_t): string	
ntheme=	niup.html#ntheme=,Frame_t,string	niup: ntheme=(ih: Frame_t; value: string)	
ntheme	niup.html#ntheme,Frame_t,string	niup: ntheme(ih: Frame_t; value: string)	
ntheme	niup.html#ntheme,Frame_t	niup: ntheme(ih: Frame_t): string	
pangofontdesc	niup.html#pangofontdesc,Frame_t	niup: pangofontdesc(ih: Frame_t): string	
pangolayout	niup.html#pangolayout,Frame_t	niup: pangolayout(ih: Frame_t): string	
position=	niup.html#position=,Frame_t,string	niup: position=(ih: Frame_t; value: string)	
position	niup.html#position,Frame_t,string	niup: position(ih: Frame_t; value: string)	
position=	niup.html#position=,Frame_t,int,int	niup: position=(ih: Frame_t; x, y: int)	
position	niup.html#position,Frame_t,int,int	niup: position(ih: Frame_t; x, y: int)	
position	niup.html#position,Frame_t	niup: position(ih: Frame_t): string	
propagatefocus=	niup.html#propagatefocus=,Frame_t,string	niup: propagatefocus=(ih: Frame_t; value: string)	
propagatefocus	niup.html#propagatefocus,Frame_t,string	niup: propagatefocus(ih: Frame_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Frame_t,bool	niup: propagatefocus=(ih: Frame_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Frame_t,bool	niup: propagatefocus(ih: Frame_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Frame_t	niup: propagatefocus(ih: Frame_t): bool	
rastersize=	niup.html#rastersize=,Frame_t,string	niup: rastersize=(ih: Frame_t; value: string)	
rastersize	niup.html#rastersize,Frame_t,string	niup: rastersize(ih: Frame_t; value: string)	
rastersize=	niup.html#rastersize=,Frame_t,int,int	niup: rastersize=(ih: Frame_t; width, height: int)	
rastersize	niup.html#rastersize,Frame_t,int,int	niup: rastersize(ih: Frame_t; width, height: int)	
rastersize	niup.html#rastersize,Frame_t	niup: rastersize(ih: Frame_t): string	
screenposition	niup.html#screenposition,Frame_t	niup: screenposition(ih: Frame_t): string	
size=	niup.html#size=,Frame_t,string	niup: size=(ih: Frame_t; value: string)	
size	niup.html#size,Frame_t,string	niup: size(ih: Frame_t; value: string)	
size=	niup.html#size=,Frame_t,int,int	niup: size=(ih: Frame_t; width, height: int)	
size	niup.html#size,Frame_t,int,int	niup: size(ih: Frame_t; width, height: int)	
size	niup.html#size,Frame_t	niup: size(ih: Frame_t): string	
sunken	niup.html#sunken,Frame_t	niup: sunken(ih: Frame_t): string	
theme=	niup.html#theme=,Frame_t,string	niup: theme=(ih: Frame_t; value: string)	
theme	niup.html#theme,Frame_t,string	niup: theme(ih: Frame_t; value: string)	
theme	niup.html#theme,Frame_t	niup: theme(ih: Frame_t): string	
tip=	niup.html#tip=,Frame_t,string	niup: tip=(ih: Frame_t; value: string)	
tip	niup.html#tip,Frame_t,string	niup: tip(ih: Frame_t; value: string)	
tip	niup.html#tip,Frame_t	niup: tip(ih: Frame_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Frame_t,string	niup: tipbgcolor=(ih: Frame_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Frame_t,string	niup: tipbgcolor(ih: Frame_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Frame_t,int,int,int,int	niup: tipbgcolor=(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Frame_t,int,int,int,int	niup: tipbgcolor(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Frame_t	niup: tipbgcolor(ih: Frame_t): string	
tipdelay=	niup.html#tipdelay=,Frame_t,string	niup: tipdelay=(ih: Frame_t; value: string)	
tipdelay	niup.html#tipdelay,Frame_t,string	niup: tipdelay(ih: Frame_t; value: string)	
tipdelay=	niup.html#tipdelay=,Frame_t,int	niup: tipdelay=(ih: Frame_t; x: int)	
tipdelay	niup.html#tipdelay,Frame_t,int	niup: tipdelay(ih: Frame_t; x: int)	
tipdelay	niup.html#tipdelay,Frame_t	niup: tipdelay(ih: Frame_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Frame_t,string	niup: tipfgcolor=(ih: Frame_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Frame_t,string	niup: tipfgcolor(ih: Frame_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Frame_t,int,int,int,int	niup: tipfgcolor=(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Frame_t,int,int,int,int	niup: tipfgcolor(ih: Frame_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Frame_t	niup: tipfgcolor(ih: Frame_t): string	
tipicon=	niup.html#tipicon=,Frame_t,string	niup: tipicon=(ih: Frame_t; value: string)	
tipicon	niup.html#tipicon,Frame_t,string	niup: tipicon(ih: Frame_t; value: string)	
tipicon	niup.html#tipicon,Frame_t	niup: tipicon(ih: Frame_t): string	
tipmarkup=	niup.html#tipmarkup=,Frame_t,string	niup: tipmarkup=(ih: Frame_t; value: string)	
tipmarkup	niup.html#tipmarkup,Frame_t,string	niup: tipmarkup(ih: Frame_t; value: string)	
tipmarkup	niup.html#tipmarkup,Frame_t	niup: tipmarkup(ih: Frame_t): string	
tiprect=	niup.html#tiprect=,Frame_t,string	niup: tiprect=(ih: Frame_t; value: string)	
tiprect	niup.html#tiprect,Frame_t,string	niup: tiprect(ih: Frame_t; value: string)	
tiprect=	niup.html#tiprect=,Frame_t,int,int,int,int	niup: tiprect=(ih: Frame_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Frame_t,int,int,int,int	niup: tiprect(ih: Frame_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Frame_t	niup: tiprect(ih: Frame_t): string	
tipvisible=	niup.html#tipvisible=,Frame_t,string	niup: tipvisible=(ih: Frame_t; value: string)	
tipvisible	niup.html#tipvisible,Frame_t,string	niup: tipvisible(ih: Frame_t; value: string)	
tipvisible=	niup.html#tipvisible=,Frame_t,bool	niup: tipvisible=(ih: Frame_t; yes: bool)	
tipvisible	niup.html#tipvisible,Frame_t,bool	niup: tipvisible(ih: Frame_t; yes: bool)	
tipvisible	niup.html#tipvisible,Frame_t	niup: tipvisible(ih: Frame_t): bool	
title=	niup.html#title=,Frame_t,string	niup: title=(ih: Frame_t; value: string)	
title	niup.html#title,Frame_t,string	niup: title(ih: Frame_t; value: string)	
title	niup.html#title,Frame_t	niup: title(ih: Frame_t): string	
usersize=	niup.html#usersize=,Frame_t,string	niup: usersize=(ih: Frame_t; value: string)	
usersize	niup.html#usersize,Frame_t,string	niup: usersize(ih: Frame_t; value: string)	
usersize=	niup.html#usersize=,Frame_t,int,int	niup: usersize=(ih: Frame_t; width, height: int)	
usersize	niup.html#usersize,Frame_t,int,int	niup: usersize(ih: Frame_t; width, height: int)	
usersize	niup.html#usersize,Frame_t	niup: usersize(ih: Frame_t): string	
visible=	niup.html#visible=,Frame_t,string	niup: visible=(ih: Frame_t; value: string)	
visible	niup.html#visible,Frame_t,string	niup: visible(ih: Frame_t; value: string)	
visible=	niup.html#visible=,Frame_t,bool	niup: visible=(ih: Frame_t; yes: bool)	
visible	niup.html#visible,Frame_t,bool	niup: visible(ih: Frame_t; yes: bool)	
visible	niup.html#visible,Frame_t	niup: visible(ih: Frame_t): bool	
wid	niup.html#wid,Frame_t	niup: wid(ih: Frame_t): string	
x	niup.html#x,Frame_t	niup: x(ih: Frame_t): string	
xfontid	niup.html#xfontid,Frame_t	niup: xfontid(ih: Frame_t): string	
y	niup.html#y,Frame_t	niup: y(ih: Frame_t): string	
zorder=	niup.html#zorder=,Frame_t,string	niup: zorder=(ih: Frame_t; value: string)	
zorder	niup.html#zorder,Frame_t,string	niup: zorder(ih: Frame_t; value: string)	
focus_cb=	niup.html#focus_cb=,Frame_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Frame_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Frame_t,proc(PIhandle,cint)	niup: focus_cb(ih: Frame_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Frame_t	niup: focus_cb(ih: Frame_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Frame_t,proc(PIhandle)	niup: map_cb=(ih: Frame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Frame_t,proc(PIhandle)	niup: map_cb(ih: Frame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Frame_t	niup: map_cb(ih: Frame_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Frame_t,proc(PIhandle)	niup: unmap_cb=(ih: Frame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Frame_t,proc(PIhandle)	niup: unmap_cb(ih: Frame_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Frame_t	niup: unmap_cb(ih: Frame_t): proc (ih: PIhandle): cint {.cdecl.}	
Gauge	niup.html#Gauge_2	niup: Gauge(): Gauge_t	
active=	niup.html#active=,Gauge_t,string	niup: active=(ih: Gauge_t; value: string)	
active	niup.html#active,Gauge_t,string	niup: active(ih: Gauge_t; value: string)	
active=	niup.html#active=,Gauge_t,bool	niup: active=(ih: Gauge_t; yes: bool)	
active	niup.html#active,Gauge_t,bool	niup: active(ih: Gauge_t; yes: bool)	
active	niup.html#active,Gauge_t	niup: active(ih: Gauge_t): bool	
backcolor=	niup.html#backcolor=,Gauge_t,string	niup: backcolor=(ih: Gauge_t; value: string)	
backcolor	niup.html#backcolor,Gauge_t,string	niup: backcolor(ih: Gauge_t; value: string)	
backcolor=	niup.html#backcolor=,Gauge_t,int,int,int,int	niup: backcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,Gauge_t,int,int,int,int	niup: backcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
backcolor	niup.html#backcolor,Gauge_t	niup: backcolor(ih: Gauge_t): string	
backingstore=	niup.html#backingstore=,Gauge_t,string	niup: backingstore=(ih: Gauge_t; value: string)	
backingstore	niup.html#backingstore,Gauge_t,string	niup: backingstore(ih: Gauge_t; value: string)	
backingstore=	niup.html#backingstore=,Gauge_t,bool	niup: backingstore=(ih: Gauge_t; yes: bool)	
backingstore	niup.html#backingstore,Gauge_t,bool	niup: backingstore(ih: Gauge_t; yes: bool)	
backingstore	niup.html#backingstore,Gauge_t	niup: backingstore(ih: Gauge_t): bool	
bgcolor=	niup.html#bgcolor=,Gauge_t,string	niup: bgcolor=(ih: Gauge_t; value: string)	
bgcolor	niup.html#bgcolor,Gauge_t,string	niup: bgcolor(ih: Gauge_t; value: string)	
bgcolor=	niup.html#bgcolor=,Gauge_t,int,int,int,int	niup: bgcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Gauge_t,int,int,int,int	niup: bgcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Gauge_t	niup: bgcolor(ih: Gauge_t): string	
border	niup.html#border,Gauge_t	niup: border(ih: Gauge_t): bool	
canfocus=	niup.html#canfocus=,Gauge_t,string	niup: canfocus=(ih: Gauge_t; value: string)	
canfocus	niup.html#canfocus,Gauge_t,string	niup: canfocus(ih: Gauge_t; value: string)	
canfocus=	niup.html#canfocus=,Gauge_t,bool	niup: canfocus=(ih: Gauge_t; yes: bool)	
canfocus	niup.html#canfocus,Gauge_t,bool	niup: canfocus(ih: Gauge_t; yes: bool)	
canfocus	niup.html#canfocus,Gauge_t	niup: canfocus(ih: Gauge_t): bool	
charsize	niup.html#charsize,Gauge_t	niup: charsize(ih: Gauge_t): string	
cpadding=	niup.html#cpadding=,Gauge_t,string	niup: cpadding=(ih: Gauge_t; value: string)	
cpadding	niup.html#cpadding,Gauge_t,string	niup: cpadding(ih: Gauge_t; value: string)	
cpadding=	niup.html#cpadding=,Gauge_t,int,int	niup: cpadding=(ih: Gauge_t; width, height: int)	
cpadding	niup.html#cpadding,Gauge_t,int,int	niup: cpadding(ih: Gauge_t; width, height: int)	
cpadding	niup.html#cpadding,Gauge_t	niup: cpadding(ih: Gauge_t): string	
cursor=	niup.html#cursor=,Gauge_t,	niup: cursor=(ih: Gauge_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Gauge_t,	niup: cursor(ih: Gauge_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Gauge_t	niup: cursor(ih: Gauge_t): string	
dashed=	niup.html#dashed=,Gauge_t,string	niup: dashed=(ih: Gauge_t; value: string)	
dashed	niup.html#dashed,Gauge_t,string	niup: dashed(ih: Gauge_t; value: string)	
dashed=	niup.html#dashed=,Gauge_t,bool	niup: dashed=(ih: Gauge_t; yes: bool)	
dashed	niup.html#dashed,Gauge_t,bool	niup: dashed(ih: Gauge_t; yes: bool)	
dashed	niup.html#dashed,Gauge_t	niup: dashed(ih: Gauge_t): bool	
dragdrop=	niup.html#dragdrop=,Gauge_t,string	niup: dragdrop=(ih: Gauge_t; value: string)	
dragdrop	niup.html#dragdrop,Gauge_t,string	niup: dragdrop(ih: Gauge_t; value: string)	
dragdrop=	niup.html#dragdrop=,Gauge_t,bool	niup: dragdrop=(ih: Gauge_t; yes: bool)	
dragdrop	niup.html#dragdrop,Gauge_t,bool	niup: dragdrop(ih: Gauge_t; yes: bool)	
dragdrop	niup.html#dragdrop,Gauge_t	niup: dragdrop(ih: Gauge_t): bool	
dragsource=	niup.html#dragsource=,Gauge_t,string	niup: dragsource=(ih: Gauge_t; value: string)	
dragsource	niup.html#dragsource,Gauge_t,string	niup: dragsource(ih: Gauge_t; value: string)	
dragsource=	niup.html#dragsource=,Gauge_t,bool	niup: dragsource=(ih: Gauge_t; yes: bool)	
dragsource	niup.html#dragsource,Gauge_t,bool	niup: dragsource(ih: Gauge_t; yes: bool)	
dragsource	niup.html#dragsource,Gauge_t	niup: dragsource(ih: Gauge_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Gauge_t,string	niup: dragsourcemove=(ih: Gauge_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Gauge_t,string	niup: dragsourcemove(ih: Gauge_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Gauge_t,bool	niup: dragsourcemove=(ih: Gauge_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Gauge_t,bool	niup: dragsourcemove(ih: Gauge_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Gauge_t	niup: dragsourcemove(ih: Gauge_t): bool	
dragtypes=	niup.html#dragtypes=,Gauge_t,string	niup: dragtypes=(ih: Gauge_t; value: string)	
dragtypes	niup.html#dragtypes,Gauge_t,string	niup: dragtypes(ih: Gauge_t; value: string)	
dragtypes	niup.html#dragtypes,Gauge_t	niup: dragtypes(ih: Gauge_t): string	
drawable	niup.html#drawable,Gauge_t	niup: drawable(ih: Gauge_t): string	
drawbgcolor=	niup.html#drawbgcolor=,Gauge_t,string	niup: drawbgcolor=(ih: Gauge_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,Gauge_t,string	niup: drawbgcolor(ih: Gauge_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,Gauge_t,int,int,int,int	niup: drawbgcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Gauge_t,int,int,int,int	niup: drawbgcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,Gauge_t	niup: drawbgcolor(ih: Gauge_t): string	
drawcolor=	niup.html#drawcolor=,Gauge_t,string	niup: drawcolor=(ih: Gauge_t; value: string)	
drawcolor	niup.html#drawcolor,Gauge_t,string	niup: drawcolor(ih: Gauge_t; value: string)	
drawcolor=	niup.html#drawcolor=,Gauge_t,int,int,int,int	niup: drawcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Gauge_t,int,int,int,int	niup: drawcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,Gauge_t	niup: drawcolor(ih: Gauge_t): string	
drawdriver	niup.html#drawdriver,Gauge_t	niup: drawdriver(ih: Gauge_t): string	
drawfont=	niup.html#drawfont=,Gauge_t,string	niup: drawfont=(ih: Gauge_t; value: string)	
drawfont	niup.html#drawfont,Gauge_t,string	niup: drawfont(ih: Gauge_t; value: string)	
drawfont	niup.html#drawfont,Gauge_t	niup: drawfont(ih: Gauge_t): string	
drawlinewidth=	niup.html#drawlinewidth=,Gauge_t,string	niup: drawlinewidth=(ih: Gauge_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,Gauge_t,string	niup: drawlinewidth(ih: Gauge_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,Gauge_t,int	niup: drawlinewidth=(ih: Gauge_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Gauge_t,int	niup: drawlinewidth(ih: Gauge_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,Gauge_t	niup: drawlinewidth(ih: Gauge_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,Gauge_t,string	niup: drawmakeinactive=(ih: Gauge_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,Gauge_t,string	niup: drawmakeinactive(ih: Gauge_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,Gauge_t,bool	niup: drawmakeinactive=(ih: Gauge_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Gauge_t,bool	niup: drawmakeinactive(ih: Gauge_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,Gauge_t	niup: drawmakeinactive(ih: Gauge_t): bool	
drawsize	niup.html#drawsize,Gauge_t	niup: drawsize(ih: Gauge_t): string	
drawstyle=	niup.html#drawstyle=,Gauge_t,string	niup: drawstyle=(ih: Gauge_t; value: string)	
drawstyle	niup.html#drawstyle,Gauge_t,string	niup: drawstyle(ih: Gauge_t; value: string)	
drawstyle	niup.html#drawstyle,Gauge_t	niup: drawstyle(ih: Gauge_t): string	
drawtextalignment=	niup.html#drawtextalignment=,Gauge_t,string	niup: drawtextalignment=(ih: Gauge_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Gauge_t,string	niup: drawtextalignment(ih: Gauge_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,Gauge_t	niup: drawtextalignment(ih: Gauge_t): string	
drawtextclip=	niup.html#drawtextclip=,Gauge_t,string	niup: drawtextclip=(ih: Gauge_t; value: string)	
drawtextclip	niup.html#drawtextclip,Gauge_t,string	niup: drawtextclip(ih: Gauge_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,Gauge_t,bool	niup: drawtextclip=(ih: Gauge_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Gauge_t,bool	niup: drawtextclip(ih: Gauge_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,Gauge_t	niup: drawtextclip(ih: Gauge_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,Gauge_t,string	niup: drawtextellipsis=(ih: Gauge_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,Gauge_t,string	niup: drawtextellipsis(ih: Gauge_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,Gauge_t,bool	niup: drawtextellipsis=(ih: Gauge_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Gauge_t,bool	niup: drawtextellipsis(ih: Gauge_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,Gauge_t	niup: drawtextellipsis(ih: Gauge_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Gauge_t,string	niup: drawtextlayoutcenter=(ih: Gauge_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Gauge_t,string	niup: drawtextlayoutcenter(ih: Gauge_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,Gauge_t,bool	niup: drawtextlayoutcenter=(ih: Gauge_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Gauge_t,bool	niup: drawtextlayoutcenter(ih: Gauge_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,Gauge_t	niup: drawtextlayoutcenter(ih: Gauge_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,Gauge_t,string	niup: drawtextorientation=(ih: Gauge_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,Gauge_t,string	niup: drawtextorientation(ih: Gauge_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,Gauge_t,int64	niup: drawtextorientation=(ih: Gauge_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Gauge_t,int64	niup: drawtextorientation(ih: Gauge_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,Gauge_t	niup: drawtextorientation(ih: Gauge_t): string	
drawtextwrap=	niup.html#drawtextwrap=,Gauge_t,string	niup: drawtextwrap=(ih: Gauge_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,Gauge_t,string	niup: drawtextwrap(ih: Gauge_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,Gauge_t,bool	niup: drawtextwrap=(ih: Gauge_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Gauge_t,bool	niup: drawtextwrap(ih: Gauge_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,Gauge_t	niup: drawtextwrap(ih: Gauge_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,Gauge_t,string	niup: dropfilestarget=(ih: Gauge_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Gauge_t,string	niup: dropfilestarget(ih: Gauge_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Gauge_t,bool	niup: dropfilestarget=(ih: Gauge_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Gauge_t,bool	niup: dropfilestarget(ih: Gauge_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Gauge_t	niup: dropfilestarget(ih: Gauge_t): bool	
droptarget=	niup.html#droptarget=,Gauge_t,string	niup: droptarget=(ih: Gauge_t; value: string)	
droptarget	niup.html#droptarget,Gauge_t,string	niup: droptarget(ih: Gauge_t; value: string)	
droptarget=	niup.html#droptarget=,Gauge_t,bool	niup: droptarget=(ih: Gauge_t; yes: bool)	
droptarget	niup.html#droptarget,Gauge_t,bool	niup: droptarget(ih: Gauge_t; yes: bool)	
droptarget	niup.html#droptarget,Gauge_t	niup: droptarget(ih: Gauge_t): bool	
droptypes=	niup.html#droptypes=,Gauge_t,string	niup: droptypes=(ih: Gauge_t; value: string)	
droptypes	niup.html#droptypes,Gauge_t,string	niup: droptypes(ih: Gauge_t; value: string)	
droptypes	niup.html#droptypes,Gauge_t	niup: droptypes(ih: Gauge_t): string	
dx=	niup.html#dx=,Gauge_t,string	niup: dx=(ih: Gauge_t; value: string)	
dx	niup.html#dx,Gauge_t,string	niup: dx(ih: Gauge_t; value: string)	
dx=	niup.html#dx=,Gauge_t,int64	niup: dx=(ih: Gauge_t; x: int64)	
dx	niup.html#dx,Gauge_t,int64	niup: dx(ih: Gauge_t; x: int64)	
dx	niup.html#dx,Gauge_t	niup: dx(ih: Gauge_t): string	
dy=	niup.html#dy=,Gauge_t,string	niup: dy=(ih: Gauge_t; value: string)	
dy	niup.html#dy,Gauge_t,string	niup: dy(ih: Gauge_t; value: string)	
dy=	niup.html#dy=,Gauge_t,int64	niup: dy=(ih: Gauge_t; x: int64)	
dy	niup.html#dy,Gauge_t,int64	niup: dy(ih: Gauge_t; x: int64)	
dy	niup.html#dy,Gauge_t	niup: dy(ih: Gauge_t): string	
expand=	niup.html#expand=,Gauge_t,string	niup: expand=(ih: Gauge_t; value: string)	
expand	niup.html#expand,Gauge_t,string	niup: expand(ih: Gauge_t; value: string)	
expand	niup.html#expand,Gauge_t	niup: expand(ih: Gauge_t): string	
expandweight=	niup.html#expandweight=,Gauge_t,string	niup: expandweight=(ih: Gauge_t; value: string)	
expandweight	niup.html#expandweight,Gauge_t,string	niup: expandweight(ih: Gauge_t; value: string)	
expandweight=	niup.html#expandweight=,Gauge_t,int64	niup: expandweight=(ih: Gauge_t; x: int64)	
expandweight	niup.html#expandweight,Gauge_t,int64	niup: expandweight(ih: Gauge_t; x: int64)	
expandweight	niup.html#expandweight,Gauge_t	niup: expandweight(ih: Gauge_t): string	
fgcolor=	niup.html#fgcolor=,Gauge_t,string	niup: fgcolor=(ih: Gauge_t; value: string)	
fgcolor	niup.html#fgcolor,Gauge_t,string	niup: fgcolor(ih: Gauge_t; value: string)	
fgcolor=	niup.html#fgcolor=,Gauge_t,int,int,int,int	niup: fgcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Gauge_t,int,int,int,int	niup: fgcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Gauge_t	niup: fgcolor(ih: Gauge_t): string	
flat=	niup.html#flat=,Gauge_t,string	niup: flat=(ih: Gauge_t; value: string)	
flat	niup.html#flat,Gauge_t,string	niup: flat(ih: Gauge_t; value: string)	
flat=	niup.html#flat=,Gauge_t,bool	niup: flat=(ih: Gauge_t; yes: bool)	
flat	niup.html#flat,Gauge_t,bool	niup: flat(ih: Gauge_t; yes: bool)	
flat	niup.html#flat,Gauge_t	niup: flat(ih: Gauge_t): bool	
flatcolor=	niup.html#flatcolor=,Gauge_t,string	niup: flatcolor=(ih: Gauge_t; value: string)	
flatcolor	niup.html#flatcolor,Gauge_t,string	niup: flatcolor(ih: Gauge_t; value: string)	
flatcolor=	niup.html#flatcolor=,Gauge_t,int,int,int,int	niup: flatcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
flatcolor	niup.html#flatcolor,Gauge_t,int,int,int,int	niup: flatcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
flatcolor	niup.html#flatcolor,Gauge_t	niup: flatcolor(ih: Gauge_t): string	
floating=	niup.html#floating=,Gauge_t,string	niup: floating=(ih: Gauge_t; value: string)	
floating	niup.html#floating,Gauge_t,string	niup: floating(ih: Gauge_t; value: string)	
floating	niup.html#floating,Gauge_t	niup: floating(ih: Gauge_t): string	
font=	niup.html#font=,Gauge_t,string	niup: font=(ih: Gauge_t; value: string)	
font	niup.html#font,Gauge_t,string	niup: font(ih: Gauge_t; value: string)	
font	niup.html#font,Gauge_t	niup: font(ih: Gauge_t): string	
fontface=	niup.html#fontface=,Gauge_t,string	niup: fontface=(ih: Gauge_t; value: string)	
fontface	niup.html#fontface,Gauge_t,string	niup: fontface(ih: Gauge_t; value: string)	
fontface	niup.html#fontface,Gauge_t	niup: fontface(ih: Gauge_t): string	
fontsize=	niup.html#fontsize=,Gauge_t,string	niup: fontsize=(ih: Gauge_t; value: string)	
fontsize	niup.html#fontsize,Gauge_t,string	niup: fontsize(ih: Gauge_t; value: string)	
fontsize=	niup.html#fontsize=,Gauge_t,int	niup: fontsize=(ih: Gauge_t; x: int)	
fontsize	niup.html#fontsize,Gauge_t,int	niup: fontsize(ih: Gauge_t; x: int)	
fontsize	niup.html#fontsize,Gauge_t	niup: fontsize(ih: Gauge_t): string	
fontstyle=	niup.html#fontstyle=,Gauge_t,string	niup: fontstyle=(ih: Gauge_t; value: string)	
fontstyle	niup.html#fontstyle,Gauge_t,string	niup: fontstyle(ih: Gauge_t; value: string)	
fontstyle	niup.html#fontstyle,Gauge_t	niup: fontstyle(ih: Gauge_t): string	
handlename=	niup.html#handlename=,Gauge_t,string	niup: handlename=(ih: Gauge_t; value: string)	
handlename	niup.html#handlename,Gauge_t,string	niup: handlename(ih: Gauge_t; value: string)	
handlename	niup.html#handlename,Gauge_t	niup: handlename(ih: Gauge_t): string	
linex=	niup.html#linex=,Gauge_t,string	niup: linex=(ih: Gauge_t; value: string)	
linex	niup.html#linex,Gauge_t,string	niup: linex(ih: Gauge_t; value: string)	
linex=	niup.html#linex=,Gauge_t,int64	niup: linex=(ih: Gauge_t; x: int64)	
linex	niup.html#linex,Gauge_t,int64	niup: linex(ih: Gauge_t; x: int64)	
linex	niup.html#linex,Gauge_t	niup: linex(ih: Gauge_t): string	
liney=	niup.html#liney=,Gauge_t,string	niup: liney=(ih: Gauge_t; value: string)	
liney	niup.html#liney,Gauge_t,string	niup: liney(ih: Gauge_t; value: string)	
liney=	niup.html#liney=,Gauge_t,int64	niup: liney=(ih: Gauge_t; x: int64)	
liney	niup.html#liney,Gauge_t,int64	niup: liney(ih: Gauge_t; x: int64)	
liney	niup.html#liney,Gauge_t	niup: liney(ih: Gauge_t): string	
max=	niup.html#max=,Gauge_t,string	niup: max=(ih: Gauge_t; value: string)	
max	niup.html#max,Gauge_t,string	niup: max(ih: Gauge_t; value: string)	
max=	niup.html#max=,Gauge_t,int64	niup: max=(ih: Gauge_t; x: int64)	
max	niup.html#max,Gauge_t,int64	niup: max(ih: Gauge_t; x: int64)	
max	niup.html#max,Gauge_t	niup: max(ih: Gauge_t): string	
maxsize=	niup.html#maxsize=,Gauge_t,string	niup: maxsize=(ih: Gauge_t; value: string)	
maxsize	niup.html#maxsize,Gauge_t,string	niup: maxsize(ih: Gauge_t; value: string)	
maxsize=	niup.html#maxsize=,Gauge_t,int,int	niup: maxsize=(ih: Gauge_t; width, height: int)	
maxsize	niup.html#maxsize,Gauge_t,int,int	niup: maxsize(ih: Gauge_t; width, height: int)	
maxsize	niup.html#maxsize,Gauge_t	niup: maxsize(ih: Gauge_t): string	
min=	niup.html#min=,Gauge_t,string	niup: min=(ih: Gauge_t; value: string)	
min	niup.html#min,Gauge_t,string	niup: min(ih: Gauge_t; value: string)	
min=	niup.html#min=,Gauge_t,int64	niup: min=(ih: Gauge_t; x: int64)	
min	niup.html#min,Gauge_t,int64	niup: min(ih: Gauge_t; x: int64)	
min	niup.html#min,Gauge_t	niup: min(ih: Gauge_t): string	
minsize=	niup.html#minsize=,Gauge_t,string	niup: minsize=(ih: Gauge_t; value: string)	
minsize	niup.html#minsize,Gauge_t,string	niup: minsize(ih: Gauge_t; value: string)	
minsize=	niup.html#minsize=,Gauge_t,int,int	niup: minsize=(ih: Gauge_t; width, height: int)	
minsize	niup.html#minsize,Gauge_t,int,int	niup: minsize(ih: Gauge_t; width, height: int)	
minsize	niup.html#minsize,Gauge_t	niup: minsize(ih: Gauge_t): string	
name=	niup.html#name=,Gauge_t,string	niup: name=(ih: Gauge_t; value: string)	
name	niup.html#name,Gauge_t,string	niup: name(ih: Gauge_t; value: string)	
name	niup.html#name,Gauge_t	niup: name(ih: Gauge_t): string	
naturalsize	niup.html#naturalsize,Gauge_t	niup: naturalsize(ih: Gauge_t): string	
normalizergroup=	niup.html#normalizergroup=,Gauge_t,string	niup: normalizergroup=(ih: Gauge_t; value: string)	
normalizergroup	niup.html#normalizergroup,Gauge_t,string	niup: normalizergroup(ih: Gauge_t; value: string)	
normalizergroup	niup.html#normalizergroup,Gauge_t	niup: normalizergroup(ih: Gauge_t): string	
ntheme=	niup.html#ntheme=,Gauge_t,string	niup: ntheme=(ih: Gauge_t; value: string)	
ntheme	niup.html#ntheme,Gauge_t,string	niup: ntheme(ih: Gauge_t; value: string)	
ntheme	niup.html#ntheme,Gauge_t	niup: ntheme(ih: Gauge_t): string	
orientation=	niup.html#orientation=,Gauge_t,string	niup: orientation=(ih: Gauge_t; value: string)	
orientation	niup.html#orientation,Gauge_t,string	niup: orientation(ih: Gauge_t; value: string)	
orientation	niup.html#orientation,Gauge_t	niup: orientation(ih: Gauge_t): string	
padding=	niup.html#padding=,Gauge_t,string	niup: padding=(ih: Gauge_t; value: string)	
padding	niup.html#padding,Gauge_t,string	niup: padding(ih: Gauge_t; value: string)	
padding=	niup.html#padding=,Gauge_t,int,int	niup: padding=(ih: Gauge_t; width, height: int)	
padding	niup.html#padding,Gauge_t,int,int	niup: padding(ih: Gauge_t; width, height: int)	
padding	niup.html#padding,Gauge_t	niup: padding(ih: Gauge_t): string	
pangofontdesc	niup.html#pangofontdesc,Gauge_t	niup: pangofontdesc(ih: Gauge_t): string	
pangolayout	niup.html#pangolayout,Gauge_t	niup: pangolayout(ih: Gauge_t): string	
position=	niup.html#position=,Gauge_t,string	niup: position=(ih: Gauge_t; value: string)	
position	niup.html#position,Gauge_t,string	niup: position(ih: Gauge_t; value: string)	
position=	niup.html#position=,Gauge_t,int,int	niup: position=(ih: Gauge_t; x, y: int)	
position	niup.html#position,Gauge_t,int,int	niup: position(ih: Gauge_t; x, y: int)	
position	niup.html#position,Gauge_t	niup: position(ih: Gauge_t): string	
posx=	niup.html#posx=,Gauge_t,string	niup: posx=(ih: Gauge_t; value: string)	
posx	niup.html#posx,Gauge_t,string	niup: posx(ih: Gauge_t; value: string)	
posx=	niup.html#posx=,Gauge_t,int64	niup: posx=(ih: Gauge_t; x: int64)	
posx	niup.html#posx,Gauge_t,int64	niup: posx(ih: Gauge_t; x: int64)	
posx	niup.html#posx,Gauge_t	niup: posx(ih: Gauge_t): string	
posy=	niup.html#posy=,Gauge_t,string	niup: posy=(ih: Gauge_t; value: string)	
posy	niup.html#posy,Gauge_t,string	niup: posy(ih: Gauge_t; value: string)	
posy=	niup.html#posy=,Gauge_t,int64	niup: posy=(ih: Gauge_t; x: int64)	
posy	niup.html#posy,Gauge_t,int64	niup: posy(ih: Gauge_t; x: int64)	
posy	niup.html#posy,Gauge_t	niup: posy(ih: Gauge_t): string	
propagatefocus=	niup.html#propagatefocus=,Gauge_t,string	niup: propagatefocus=(ih: Gauge_t; value: string)	
propagatefocus	niup.html#propagatefocus,Gauge_t,string	niup: propagatefocus(ih: Gauge_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Gauge_t,bool	niup: propagatefocus=(ih: Gauge_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Gauge_t,bool	niup: propagatefocus(ih: Gauge_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Gauge_t	niup: propagatefocus(ih: Gauge_t): bool	
rastersize=	niup.html#rastersize=,Gauge_t,string	niup: rastersize=(ih: Gauge_t; value: string)	
rastersize	niup.html#rastersize,Gauge_t,string	niup: rastersize(ih: Gauge_t; value: string)	
rastersize=	niup.html#rastersize=,Gauge_t,int,int	niup: rastersize=(ih: Gauge_t; width, height: int)	
rastersize	niup.html#rastersize,Gauge_t,int,int	niup: rastersize(ih: Gauge_t; width, height: int)	
rastersize	niup.html#rastersize,Gauge_t	niup: rastersize(ih: Gauge_t): string	
sb_resize	niup.html#sb_resize,Gauge_t	niup: sb_resize(ih: Gauge_t): string	
screenposition	niup.html#screenposition,Gauge_t	niup: screenposition(ih: Gauge_t): string	
scrollbar=	niup.html#scrollbar=,Gauge_t,string	niup: scrollbar=(ih: Gauge_t; value: string)	
scrollbar	niup.html#scrollbar,Gauge_t,string	niup: scrollbar(ih: Gauge_t; value: string)	
scrollbar=	niup.html#scrollbar=,Gauge_t,bool	niup: scrollbar=(ih: Gauge_t; yes: bool)	
scrollbar	niup.html#scrollbar,Gauge_t,bool	niup: scrollbar(ih: Gauge_t; yes: bool)	
scrollbar	niup.html#scrollbar,Gauge_t	niup: scrollbar(ih: Gauge_t): bool	
showtext=	niup.html#showtext=,Gauge_t,string	niup: showtext=(ih: Gauge_t; value: string)	
showtext	niup.html#showtext,Gauge_t,string	niup: showtext(ih: Gauge_t; value: string)	
showtext=	niup.html#showtext=,Gauge_t,bool	niup: showtext=(ih: Gauge_t; yes: bool)	
showtext	niup.html#showtext,Gauge_t,bool	niup: showtext(ih: Gauge_t; yes: bool)	
showtext	niup.html#showtext,Gauge_t	niup: showtext(ih: Gauge_t): bool	
size=	niup.html#size=,Gauge_t,string	niup: size=(ih: Gauge_t; value: string)	
size	niup.html#size,Gauge_t,string	niup: size(ih: Gauge_t; value: string)	
size=	niup.html#size=,Gauge_t,int,int	niup: size=(ih: Gauge_t; width, height: int)	
size	niup.html#size,Gauge_t,int,int	niup: size(ih: Gauge_t; width, height: int)	
size	niup.html#size,Gauge_t	niup: size(ih: Gauge_t): string	
text=	niup.html#text=,Gauge_t,string	niup: text=(ih: Gauge_t; value: string)	
text	niup.html#text,Gauge_t,string	niup: text(ih: Gauge_t; value: string)	
text	niup.html#text,Gauge_t	niup: text(ih: Gauge_t): string	
theme=	niup.html#theme=,Gauge_t,string	niup: theme=(ih: Gauge_t; value: string)	
theme	niup.html#theme,Gauge_t,string	niup: theme(ih: Gauge_t; value: string)	
theme	niup.html#theme,Gauge_t	niup: theme(ih: Gauge_t): string	
tip=	niup.html#tip=,Gauge_t,string	niup: tip=(ih: Gauge_t; value: string)	
tip	niup.html#tip,Gauge_t,string	niup: tip(ih: Gauge_t; value: string)	
tip	niup.html#tip,Gauge_t	niup: tip(ih: Gauge_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Gauge_t,string	niup: tipbgcolor=(ih: Gauge_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Gauge_t,string	niup: tipbgcolor(ih: Gauge_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Gauge_t,int,int,int,int	niup: tipbgcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Gauge_t,int,int,int,int	niup: tipbgcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Gauge_t	niup: tipbgcolor(ih: Gauge_t): string	
tipdelay=	niup.html#tipdelay=,Gauge_t,string	niup: tipdelay=(ih: Gauge_t; value: string)	
tipdelay	niup.html#tipdelay,Gauge_t,string	niup: tipdelay(ih: Gauge_t; value: string)	
tipdelay=	niup.html#tipdelay=,Gauge_t,int	niup: tipdelay=(ih: Gauge_t; x: int)	
tipdelay	niup.html#tipdelay,Gauge_t,int	niup: tipdelay(ih: Gauge_t; x: int)	
tipdelay	niup.html#tipdelay,Gauge_t	niup: tipdelay(ih: Gauge_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Gauge_t,string	niup: tipfgcolor=(ih: Gauge_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Gauge_t,string	niup: tipfgcolor(ih: Gauge_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Gauge_t,int,int,int,int	niup: tipfgcolor=(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Gauge_t,int,int,int,int	niup: tipfgcolor(ih: Gauge_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Gauge_t	niup: tipfgcolor(ih: Gauge_t): string	
tipicon=	niup.html#tipicon=,Gauge_t,string	niup: tipicon=(ih: Gauge_t; value: string)	
tipicon	niup.html#tipicon,Gauge_t,string	niup: tipicon(ih: Gauge_t; value: string)	
tipicon	niup.html#tipicon,Gauge_t	niup: tipicon(ih: Gauge_t): string	
tipmarkup=	niup.html#tipmarkup=,Gauge_t,string	niup: tipmarkup=(ih: Gauge_t; value: string)	
tipmarkup	niup.html#tipmarkup,Gauge_t,string	niup: tipmarkup(ih: Gauge_t; value: string)	
tipmarkup	niup.html#tipmarkup,Gauge_t	niup: tipmarkup(ih: Gauge_t): string	
tiprect=	niup.html#tiprect=,Gauge_t,string	niup: tiprect=(ih: Gauge_t; value: string)	
tiprect	niup.html#tiprect,Gauge_t,string	niup: tiprect(ih: Gauge_t; value: string)	
tiprect=	niup.html#tiprect=,Gauge_t,int,int,int,int	niup: tiprect=(ih: Gauge_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Gauge_t,int,int,int,int	niup: tiprect(ih: Gauge_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Gauge_t	niup: tiprect(ih: Gauge_t): string	
tipvisible=	niup.html#tipvisible=,Gauge_t,string	niup: tipvisible=(ih: Gauge_t; value: string)	
tipvisible	niup.html#tipvisible,Gauge_t,string	niup: tipvisible(ih: Gauge_t; value: string)	
tipvisible=	niup.html#tipvisible=,Gauge_t,bool	niup: tipvisible=(ih: Gauge_t; yes: bool)	
tipvisible	niup.html#tipvisible,Gauge_t,bool	niup: tipvisible(ih: Gauge_t; yes: bool)	
tipvisible	niup.html#tipvisible,Gauge_t	niup: tipvisible(ih: Gauge_t): bool	
touch=	niup.html#touch=,Gauge_t,string	niup: touch=(ih: Gauge_t; value: string)	
touch	niup.html#touch,Gauge_t,string	niup: touch(ih: Gauge_t; value: string)	
touch=	niup.html#touch=,Gauge_t,bool	niup: touch=(ih: Gauge_t; yes: bool)	
touch	niup.html#touch,Gauge_t,bool	niup: touch(ih: Gauge_t; yes: bool)	
touch	niup.html#touch,Gauge_t	niup: touch(ih: Gauge_t): bool	
usersize=	niup.html#usersize=,Gauge_t,string	niup: usersize=(ih: Gauge_t; value: string)	
usersize	niup.html#usersize,Gauge_t,string	niup: usersize(ih: Gauge_t; value: string)	
usersize=	niup.html#usersize=,Gauge_t,int,int	niup: usersize=(ih: Gauge_t; width, height: int)	
usersize	niup.html#usersize,Gauge_t,int,int	niup: usersize(ih: Gauge_t; width, height: int)	
usersize	niup.html#usersize,Gauge_t	niup: usersize(ih: Gauge_t): string	
value=	niup.html#value=,Gauge_t,string	niup: value=(ih: Gauge_t; value: string)	
value	niup.html#value,Gauge_t,string	niup: value(ih: Gauge_t; value: string)	
value=	niup.html#value=,Gauge_t,int64	niup: value=(ih: Gauge_t; x: int64)	
value	niup.html#value,Gauge_t,int64	niup: value(ih: Gauge_t; x: int64)	
value	niup.html#value,Gauge_t	niup: value(ih: Gauge_t): string	
visible=	niup.html#visible=,Gauge_t,string	niup: visible=(ih: Gauge_t; value: string)	
visible	niup.html#visible,Gauge_t,string	niup: visible(ih: Gauge_t; value: string)	
visible=	niup.html#visible=,Gauge_t,bool	niup: visible=(ih: Gauge_t; yes: bool)	
visible	niup.html#visible,Gauge_t,bool	niup: visible(ih: Gauge_t; yes: bool)	
visible	niup.html#visible,Gauge_t	niup: visible(ih: Gauge_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,Gauge_t,string	niup: wheeldropfocus=(ih: Gauge_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,Gauge_t,string	niup: wheeldropfocus(ih: Gauge_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,Gauge_t,bool	niup: wheeldropfocus=(ih: Gauge_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Gauge_t,bool	niup: wheeldropfocus(ih: Gauge_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,Gauge_t	niup: wheeldropfocus(ih: Gauge_t): bool	
wid	niup.html#wid,Gauge_t	niup: wid(ih: Gauge_t): string	
x	niup.html#x,Gauge_t	niup: x(ih: Gauge_t): string	
xautohide=	niup.html#xautohide=,Gauge_t,string	niup: xautohide=(ih: Gauge_t; value: string)	
xautohide	niup.html#xautohide,Gauge_t,string	niup: xautohide(ih: Gauge_t; value: string)	
xautohide=	niup.html#xautohide=,Gauge_t,bool	niup: xautohide=(ih: Gauge_t; yes: bool)	
xautohide	niup.html#xautohide,Gauge_t,bool	niup: xautohide(ih: Gauge_t; yes: bool)	
xautohide	niup.html#xautohide,Gauge_t	niup: xautohide(ih: Gauge_t): bool	
xdisplay	niup.html#xdisplay,Gauge_t	niup: xdisplay(ih: Gauge_t): string	
xfontid	niup.html#xfontid,Gauge_t	niup: xfontid(ih: Gauge_t): string	
xhidden	niup.html#xhidden,Gauge_t	niup: xhidden(ih: Gauge_t): bool	
xmax=	niup.html#xmax=,Gauge_t,string	niup: xmax=(ih: Gauge_t; value: string)	
xmax	niup.html#xmax,Gauge_t,string	niup: xmax(ih: Gauge_t; value: string)	
xmax=	niup.html#xmax=,Gauge_t,int	niup: xmax=(ih: Gauge_t; x: int)	
xmax	niup.html#xmax,Gauge_t,int	niup: xmax(ih: Gauge_t; x: int)	
xmax	niup.html#xmax,Gauge_t	niup: xmax(ih: Gauge_t): string	
xmin=	niup.html#xmin=,Gauge_t,string	niup: xmin=(ih: Gauge_t; value: string)	
xmin	niup.html#xmin,Gauge_t,string	niup: xmin(ih: Gauge_t; value: string)	
xmin=	niup.html#xmin=,Gauge_t,int	niup: xmin=(ih: Gauge_t; x: int)	
xmin	niup.html#xmin,Gauge_t,int	niup: xmin(ih: Gauge_t; x: int)	
xmin	niup.html#xmin,Gauge_t	niup: xmin(ih: Gauge_t): string	
xwindow	niup.html#xwindow,Gauge_t	niup: xwindow(ih: Gauge_t): string	
y	niup.html#y,Gauge_t	niup: y(ih: Gauge_t): string	
yautohide=	niup.html#yautohide=,Gauge_t,string	niup: yautohide=(ih: Gauge_t; value: string)	
yautohide	niup.html#yautohide,Gauge_t,string	niup: yautohide(ih: Gauge_t; value: string)	
yautohide=	niup.html#yautohide=,Gauge_t,bool	niup: yautohide=(ih: Gauge_t; yes: bool)	
yautohide	niup.html#yautohide,Gauge_t,bool	niup: yautohide(ih: Gauge_t; yes: bool)	
yautohide	niup.html#yautohide,Gauge_t	niup: yautohide(ih: Gauge_t): bool	
yhidden	niup.html#yhidden,Gauge_t	niup: yhidden(ih: Gauge_t): bool	
ymax=	niup.html#ymax=,Gauge_t,string	niup: ymax=(ih: Gauge_t; value: string)	
ymax	niup.html#ymax,Gauge_t,string	niup: ymax(ih: Gauge_t; value: string)	
ymax=	niup.html#ymax=,Gauge_t,int	niup: ymax=(ih: Gauge_t; x: int)	
ymax	niup.html#ymax,Gauge_t,int	niup: ymax(ih: Gauge_t; x: int)	
ymax	niup.html#ymax,Gauge_t	niup: ymax(ih: Gauge_t): string	
ymin=	niup.html#ymin=,Gauge_t,string	niup: ymin=(ih: Gauge_t; value: string)	
ymin	niup.html#ymin,Gauge_t,string	niup: ymin(ih: Gauge_t; value: string)	
ymin=	niup.html#ymin=,Gauge_t,int	niup: ymin=(ih: Gauge_t; x: int)	
ymin	niup.html#ymin,Gauge_t,int	niup: ymin(ih: Gauge_t; x: int)	
ymin	niup.html#ymin,Gauge_t	niup: ymin(ih: Gauge_t): string	
zorder=	niup.html#zorder=,Gauge_t,string	niup: zorder=(ih: Gauge_t; value: string)	
zorder	niup.html#zorder,Gauge_t,string	niup: zorder(ih: Gauge_t; value: string)	
action=	niup.html#action=,Gauge_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: Gauge_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,Gauge_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: Gauge_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,Gauge_t	niup: action(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Gauge_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                  arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Gauge_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Gauge_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Gauge_t	niup: button_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Gauge_t,proc(PIhandle)	niup: destroy_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Gauge_t,proc(PIhandle)	niup: destroy_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Gauge_t	niup: destroy_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Gauge_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Gauge_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Gauge_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Gauge_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Gauge_t	niup: dragbegin_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Gauge_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Gauge_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Gauge_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Gauge_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Gauge_t	niup: dragdatasize_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Gauge_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Gauge_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Gauge_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Gauge_t	niup: dragdata_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Gauge_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Gauge_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Gauge_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Gauge_t	niup: dragend_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Gauge_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Gauge_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Gauge_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Gauge_t	niup: dropdata_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Gauge_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Gauge_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                     num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Gauge_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Gauge_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Gauge_t	niup: dropfiles_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Gauge_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Gauge_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Gauge_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Gauge_t	niup: dropmotion_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Gauge_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Gauge_t,proc(PIhandle)	niup: enterwindow_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Gauge_t	niup: enterwindow_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,Gauge_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Gauge_t,proc(PIhandle,cint)	niup: focus_cb(ih: Gauge_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Gauge_t	niup: focus_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Gauge_t,proc(PIhandle)	niup: getfocus_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Gauge_t,proc(PIhandle)	niup: getfocus_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Gauge_t	niup: getfocus_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Gauge_t,proc(PIhandle)	niup: help_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Gauge_t,proc(PIhandle)	niup: help_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Gauge_t	niup: help_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,Gauge_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Gauge_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: Gauge_t; cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,Gauge_t	niup: keypress_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Gauge_t,proc(PIhandle)	niup: killfocus_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Gauge_t,proc(PIhandle)	niup: killfocus_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Gauge_t	niup: killfocus_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Gauge_t,proc(PIhandle,cint)	niup: k_any=(ih: Gauge_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Gauge_t,proc(PIhandle,cint)	niup: k_any(ih: Gauge_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Gauge_t	niup: k_any(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Gauge_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Gauge_t,proc(PIhandle)	niup: ldestroy_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Gauge_t	niup: ldestroy_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Gauge_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Gauge_t,proc(PIhandle)	niup: leavewindow_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Gauge_t	niup: leavewindow_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Gauge_t,proc(PIhandle)	niup: map_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Gauge_t,proc(PIhandle)	niup: map_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Gauge_t	niup: map_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Gauge_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Gauge_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Gauge_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Gauge_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Gauge_t	niup: motion_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Gauge_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Gauge_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Gauge_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Gauge_t	niup: postmessage_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,Gauge_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: Gauge_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Gauge_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: Gauge_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,Gauge_t	niup: resize_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,Gauge_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: Gauge_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Gauge_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: Gauge_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,Gauge_t	niup: scroll_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Gauge_t,proc(PIhandle)	niup: unmap_cb=(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Gauge_t,proc(PIhandle)	niup: unmap_cb(ih: Gauge_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Gauge_t	niup: unmap_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,Gauge_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                 status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Gauge_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: Gauge_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,Gauge_t	niup: wheel_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,Gauge_t,proc(PIhandle,cint)	niup: wom_cb=(ih: Gauge_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Gauge_t,proc(PIhandle,cint)	niup: wom_cb(ih: Gauge_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,Gauge_t	niup: wom_cb(ih: Gauge_t): proc (ih: PIhandle): cint {.cdecl.}	
GridBox	niup.html#GridBox.m,varargs[untyped]	niup: GridBox(args: varargs[untyped]): GridBox_t	
active=	niup.html#active=,GridBox_t,string	niup: active=(ih: GridBox_t; value: string)	
active	niup.html#active,GridBox_t,string	niup: active(ih: GridBox_t; value: string)	
active=	niup.html#active=,GridBox_t,bool	niup: active=(ih: GridBox_t; yes: bool)	
active	niup.html#active,GridBox_t,bool	niup: active(ih: GridBox_t; yes: bool)	
active	niup.html#active,GridBox_t	niup: active(ih: GridBox_t): bool	
alignmentcol	niup.html#alignmentcol,GridBox_t	niup: alignmentcol(ih: GridBox_t): string	
alignmentlin	niup.html#alignmentlin,GridBox_t	niup: alignmentlin(ih: GridBox_t): string	
canfocus=	niup.html#canfocus=,GridBox_t,string	niup: canfocus=(ih: GridBox_t; value: string)	
canfocus	niup.html#canfocus,GridBox_t,string	niup: canfocus(ih: GridBox_t; value: string)	
canfocus=	niup.html#canfocus=,GridBox_t,bool	niup: canfocus=(ih: GridBox_t; yes: bool)	
canfocus	niup.html#canfocus,GridBox_t,bool	niup: canfocus(ih: GridBox_t; yes: bool)	
canfocus	niup.html#canfocus,GridBox_t	niup: canfocus(ih: GridBox_t): bool	
cgapcol=	niup.html#cgapcol=,GridBox_t,string	niup: cgapcol=(ih: GridBox_t; value: string)	
cgapcol	niup.html#cgapcol,GridBox_t,string	niup: cgapcol(ih: GridBox_t; value: string)	
cgapcol=	niup.html#cgapcol=,GridBox_t,int	niup: cgapcol=(ih: GridBox_t; x: int)	
cgapcol	niup.html#cgapcol,GridBox_t,int	niup: cgapcol(ih: GridBox_t; x: int)	
cgapcol	niup.html#cgapcol,GridBox_t	niup: cgapcol(ih: GridBox_t): string	
cgaplin=	niup.html#cgaplin=,GridBox_t,string	niup: cgaplin=(ih: GridBox_t; value: string)	
cgaplin	niup.html#cgaplin,GridBox_t,string	niup: cgaplin(ih: GridBox_t; value: string)	
cgaplin=	niup.html#cgaplin=,GridBox_t,int	niup: cgaplin=(ih: GridBox_t; x: int)	
cgaplin	niup.html#cgaplin,GridBox_t,int	niup: cgaplin(ih: GridBox_t; x: int)	
cgaplin	niup.html#cgaplin,GridBox_t	niup: cgaplin(ih: GridBox_t): string	
charsize	niup.html#charsize,GridBox_t	niup: charsize(ih: GridBox_t): string	
clientoffset	niup.html#clientoffset,GridBox_t	niup: clientoffset(ih: GridBox_t): string	
clientsize	niup.html#clientsize,GridBox_t	niup: clientsize(ih: GridBox_t): string	
cmargin=	niup.html#cmargin=,GridBox_t,string	niup: cmargin=(ih: GridBox_t; value: string)	
cmargin	niup.html#cmargin,GridBox_t,string	niup: cmargin(ih: GridBox_t; value: string)	
cmargin=	niup.html#cmargin=,GridBox_t,int,int	niup: cmargin=(ih: GridBox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,GridBox_t,int,int	niup: cmargin(ih: GridBox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,GridBox_t	niup: cmargin(ih: GridBox_t): string	
expand=	niup.html#expand=,GridBox_t,string	niup: expand=(ih: GridBox_t; value: string)	
expand	niup.html#expand,GridBox_t,string	niup: expand(ih: GridBox_t; value: string)	
expand	niup.html#expand,GridBox_t	niup: expand(ih: GridBox_t): string	
expandchildren=	niup.html#expandchildren=,GridBox_t,string	niup: expandchildren=(ih: GridBox_t; value: string)	
expandchildren	niup.html#expandchildren,GridBox_t,string	niup: expandchildren(ih: GridBox_t; value: string)	
expandchildren	niup.html#expandchildren,GridBox_t	niup: expandchildren(ih: GridBox_t): string	
expandweight=	niup.html#expandweight=,GridBox_t,string	niup: expandweight=(ih: GridBox_t; value: string)	
expandweight	niup.html#expandweight,GridBox_t,string	niup: expandweight(ih: GridBox_t; value: string)	
expandweight=	niup.html#expandweight=,GridBox_t,int64	niup: expandweight=(ih: GridBox_t; x: int64)	
expandweight	niup.html#expandweight,GridBox_t,int64	niup: expandweight(ih: GridBox_t; x: int64)	
expandweight	niup.html#expandweight,GridBox_t	niup: expandweight(ih: GridBox_t): string	
floating=	niup.html#floating=,GridBox_t,string	niup: floating=(ih: GridBox_t; value: string)	
floating	niup.html#floating,GridBox_t,string	niup: floating(ih: GridBox_t; value: string)	
floating	niup.html#floating,GridBox_t	niup: floating(ih: GridBox_t): string	
font=	niup.html#font=,GridBox_t,string	niup: font=(ih: GridBox_t; value: string)	
font	niup.html#font,GridBox_t,string	niup: font(ih: GridBox_t; value: string)	
font	niup.html#font,GridBox_t	niup: font(ih: GridBox_t): string	
fontface=	niup.html#fontface=,GridBox_t,string	niup: fontface=(ih: GridBox_t; value: string)	
fontface	niup.html#fontface,GridBox_t,string	niup: fontface(ih: GridBox_t; value: string)	
fontface	niup.html#fontface,GridBox_t	niup: fontface(ih: GridBox_t): string	
fontsize=	niup.html#fontsize=,GridBox_t,string	niup: fontsize=(ih: GridBox_t; value: string)	
fontsize	niup.html#fontsize,GridBox_t,string	niup: fontsize(ih: GridBox_t; value: string)	
fontsize=	niup.html#fontsize=,GridBox_t,int	niup: fontsize=(ih: GridBox_t; x: int)	
fontsize	niup.html#fontsize,GridBox_t,int	niup: fontsize(ih: GridBox_t; x: int)	
fontsize	niup.html#fontsize,GridBox_t	niup: fontsize(ih: GridBox_t): string	
fontstyle=	niup.html#fontstyle=,GridBox_t,string	niup: fontstyle=(ih: GridBox_t; value: string)	
fontstyle	niup.html#fontstyle,GridBox_t,string	niup: fontstyle(ih: GridBox_t; value: string)	
fontstyle	niup.html#fontstyle,GridBox_t	niup: fontstyle(ih: GridBox_t): string	
gapcol=	niup.html#gapcol=,GridBox_t,string	niup: gapcol=(ih: GridBox_t; value: string)	
gapcol	niup.html#gapcol,GridBox_t,string	niup: gapcol(ih: GridBox_t; value: string)	
gapcol=	niup.html#gapcol=,GridBox_t,int	niup: gapcol=(ih: GridBox_t; x: int)	
gapcol	niup.html#gapcol,GridBox_t,int	niup: gapcol(ih: GridBox_t; x: int)	
gapcol	niup.html#gapcol,GridBox_t	niup: gapcol(ih: GridBox_t): string	
gaplin=	niup.html#gaplin=,GridBox_t,string	niup: gaplin=(ih: GridBox_t; value: string)	
gaplin	niup.html#gaplin,GridBox_t,string	niup: gaplin(ih: GridBox_t; value: string)	
gaplin=	niup.html#gaplin=,GridBox_t,int	niup: gaplin=(ih: GridBox_t; x: int)	
gaplin	niup.html#gaplin,GridBox_t,int	niup: gaplin(ih: GridBox_t; x: int)	
gaplin	niup.html#gaplin,GridBox_t	niup: gaplin(ih: GridBox_t): string	
handlename=	niup.html#handlename=,GridBox_t,string	niup: handlename=(ih: GridBox_t; value: string)	
handlename	niup.html#handlename,GridBox_t,string	niup: handlename(ih: GridBox_t; value: string)	
handlename	niup.html#handlename,GridBox_t	niup: handlename(ih: GridBox_t): string	
homogeneouscol	niup.html#homogeneouscol,GridBox_t	niup: homogeneouscol(ih: GridBox_t): string	
homogeneouslin	niup.html#homogeneouslin,GridBox_t	niup: homogeneouslin(ih: GridBox_t): string	
margin=	niup.html#margin=,GridBox_t,string	niup: margin=(ih: GridBox_t; value: string)	
margin	niup.html#margin,GridBox_t,string	niup: margin(ih: GridBox_t; value: string)	
margin=	niup.html#margin=,GridBox_t,int,int	niup: margin=(ih: GridBox_t; horiz, vert: int)	
margin	niup.html#margin,GridBox_t,int,int	niup: margin(ih: GridBox_t; horiz, vert: int)	
margin	niup.html#margin,GridBox_t	niup: margin(ih: GridBox_t): string	
maxsize=	niup.html#maxsize=,GridBox_t,string	niup: maxsize=(ih: GridBox_t; value: string)	
maxsize	niup.html#maxsize,GridBox_t,string	niup: maxsize(ih: GridBox_t; value: string)	
maxsize=	niup.html#maxsize=,GridBox_t,int,int	niup: maxsize=(ih: GridBox_t; width, height: int)	
maxsize	niup.html#maxsize,GridBox_t,int,int	niup: maxsize(ih: GridBox_t; width, height: int)	
maxsize	niup.html#maxsize,GridBox_t	niup: maxsize(ih: GridBox_t): string	
minsize=	niup.html#minsize=,GridBox_t,string	niup: minsize=(ih: GridBox_t; value: string)	
minsize	niup.html#minsize,GridBox_t,string	niup: minsize(ih: GridBox_t; value: string)	
minsize=	niup.html#minsize=,GridBox_t,int,int	niup: minsize=(ih: GridBox_t; width, height: int)	
minsize	niup.html#minsize,GridBox_t,int,int	niup: minsize(ih: GridBox_t; width, height: int)	
minsize	niup.html#minsize,GridBox_t	niup: minsize(ih: GridBox_t): string	
name=	niup.html#name=,GridBox_t,string	niup: name=(ih: GridBox_t; value: string)	
name	niup.html#name,GridBox_t,string	niup: name(ih: GridBox_t; value: string)	
name	niup.html#name,GridBox_t	niup: name(ih: GridBox_t): string	
naturalsize	niup.html#naturalsize,GridBox_t	niup: naturalsize(ih: GridBox_t): string	
ncgapcol=	niup.html#ncgapcol=,GridBox_t,string	niup: ncgapcol=(ih: GridBox_t; value: string)	
ncgapcol	niup.html#ncgapcol,GridBox_t,string	niup: ncgapcol(ih: GridBox_t; value: string)	
ncgapcol=	niup.html#ncgapcol=,GridBox_t,int	niup: ncgapcol=(ih: GridBox_t; x: int)	
ncgapcol	niup.html#ncgapcol,GridBox_t,int	niup: ncgapcol(ih: GridBox_t; x: int)	
ncgapcol	niup.html#ncgapcol,GridBox_t	niup: ncgapcol(ih: GridBox_t): string	
ncgaplin=	niup.html#ncgaplin=,GridBox_t,string	niup: ncgaplin=(ih: GridBox_t; value: string)	
ncgaplin	niup.html#ncgaplin,GridBox_t,string	niup: ncgaplin(ih: GridBox_t; value: string)	
ncgaplin=	niup.html#ncgaplin=,GridBox_t,int	niup: ncgaplin=(ih: GridBox_t; x: int)	
ncgaplin	niup.html#ncgaplin,GridBox_t,int	niup: ncgaplin(ih: GridBox_t; x: int)	
ncgaplin	niup.html#ncgaplin,GridBox_t	niup: ncgaplin(ih: GridBox_t): string	
ncmargin=	niup.html#ncmargin=,GridBox_t,string	niup: ncmargin=(ih: GridBox_t; value: string)	
ncmargin	niup.html#ncmargin,GridBox_t,string	niup: ncmargin(ih: GridBox_t; value: string)	
ncmargin=	niup.html#ncmargin=,GridBox_t,int,int	niup: ncmargin=(ih: GridBox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,GridBox_t,int,int	niup: ncmargin(ih: GridBox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,GridBox_t	niup: ncmargin(ih: GridBox_t): string	
ngapcol=	niup.html#ngapcol=,GridBox_t,string	niup: ngapcol=(ih: GridBox_t; value: string)	
ngapcol	niup.html#ngapcol,GridBox_t,string	niup: ngapcol(ih: GridBox_t; value: string)	
ngapcol=	niup.html#ngapcol=,GridBox_t,int	niup: ngapcol=(ih: GridBox_t; x: int)	
ngapcol	niup.html#ngapcol,GridBox_t,int	niup: ngapcol(ih: GridBox_t; x: int)	
ngapcol	niup.html#ngapcol,GridBox_t	niup: ngapcol(ih: GridBox_t): string	
ngaplin=	niup.html#ngaplin=,GridBox_t,string	niup: ngaplin=(ih: GridBox_t; value: string)	
ngaplin	niup.html#ngaplin,GridBox_t,string	niup: ngaplin(ih: GridBox_t; value: string)	
ngaplin=	niup.html#ngaplin=,GridBox_t,int	niup: ngaplin=(ih: GridBox_t; x: int)	
ngaplin	niup.html#ngaplin,GridBox_t,int	niup: ngaplin(ih: GridBox_t; x: int)	
ngaplin	niup.html#ngaplin,GridBox_t	niup: ngaplin(ih: GridBox_t): string	
nmargin=	niup.html#nmargin=,GridBox_t,string	niup: nmargin=(ih: GridBox_t; value: string)	
nmargin	niup.html#nmargin,GridBox_t,string	niup: nmargin(ih: GridBox_t; value: string)	
nmargin=	niup.html#nmargin=,GridBox_t,int,int	niup: nmargin=(ih: GridBox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,GridBox_t,int,int	niup: nmargin(ih: GridBox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,GridBox_t	niup: nmargin(ih: GridBox_t): string	
normalizergroup=	niup.html#normalizergroup=,GridBox_t,string	niup: normalizergroup=(ih: GridBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,GridBox_t,string	niup: normalizergroup(ih: GridBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,GridBox_t	niup: normalizergroup(ih: GridBox_t): string	
normalizesize=	niup.html#normalizesize=,GridBox_t,string	niup: normalizesize=(ih: GridBox_t; value: string)	
normalizesize	niup.html#normalizesize,GridBox_t,string	niup: normalizesize(ih: GridBox_t; value: string)	
normalizesize	niup.html#normalizesize,GridBox_t	niup: normalizesize(ih: GridBox_t): string	
ntheme=	niup.html#ntheme=,GridBox_t,string	niup: ntheme=(ih: GridBox_t; value: string)	
ntheme	niup.html#ntheme,GridBox_t,string	niup: ntheme(ih: GridBox_t; value: string)	
ntheme	niup.html#ntheme,GridBox_t	niup: ntheme(ih: GridBox_t): string	
numcol	niup.html#numcol,GridBox_t	niup: numcol(ih: GridBox_t): string	
numdiv=	niup.html#numdiv=,GridBox_t,string	niup: numdiv=(ih: GridBox_t; value: string)	
numdiv	niup.html#numdiv,GridBox_t,string	niup: numdiv(ih: GridBox_t; value: string)	
numdiv=	niup.html#numdiv=,GridBox_t,int	niup: numdiv=(ih: GridBox_t; x: int)	
numdiv	niup.html#numdiv,GridBox_t,int	niup: numdiv(ih: GridBox_t; x: int)	
numdiv	niup.html#numdiv,GridBox_t	niup: numdiv(ih: GridBox_t): string	
numlin	niup.html#numlin,GridBox_t	niup: numlin(ih: GridBox_t): string	
orientation=	niup.html#orientation=,GridBox_t,string	niup: orientation=(ih: GridBox_t; value: string)	
orientation	niup.html#orientation,GridBox_t,string	niup: orientation(ih: GridBox_t; value: string)	
orientation	niup.html#orientation,GridBox_t	niup: orientation(ih: GridBox_t): string	
pangofontdesc	niup.html#pangofontdesc,GridBox_t	niup: pangofontdesc(ih: GridBox_t): string	
pangolayout	niup.html#pangolayout,GridBox_t	niup: pangolayout(ih: GridBox_t): string	
position=	niup.html#position=,GridBox_t,string	niup: position=(ih: GridBox_t; value: string)	
position	niup.html#position,GridBox_t,string	niup: position(ih: GridBox_t; value: string)	
position=	niup.html#position=,GridBox_t,int,int	niup: position=(ih: GridBox_t; x, y: int)	
position	niup.html#position,GridBox_t,int,int	niup: position(ih: GridBox_t; x, y: int)	
position	niup.html#position,GridBox_t	niup: position(ih: GridBox_t): string	
propagatefocus=	niup.html#propagatefocus=,GridBox_t,string	niup: propagatefocus=(ih: GridBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,GridBox_t,string	niup: propagatefocus(ih: GridBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,GridBox_t,bool	niup: propagatefocus=(ih: GridBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,GridBox_t,bool	niup: propagatefocus(ih: GridBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,GridBox_t	niup: propagatefocus(ih: GridBox_t): bool	
rastersize=	niup.html#rastersize=,GridBox_t,string	niup: rastersize=(ih: GridBox_t; value: string)	
rastersize	niup.html#rastersize,GridBox_t,string	niup: rastersize(ih: GridBox_t; value: string)	
rastersize=	niup.html#rastersize=,GridBox_t,int,int	niup: rastersize=(ih: GridBox_t; width, height: int)	
rastersize	niup.html#rastersize,GridBox_t,int,int	niup: rastersize(ih: GridBox_t; width, height: int)	
rastersize	niup.html#rastersize,GridBox_t	niup: rastersize(ih: GridBox_t): string	
size=	niup.html#size=,GridBox_t,string	niup: size=(ih: GridBox_t; value: string)	
size	niup.html#size,GridBox_t,string	niup: size(ih: GridBox_t; value: string)	
size=	niup.html#size=,GridBox_t,int,int	niup: size=(ih: GridBox_t; width, height: int)	
size	niup.html#size,GridBox_t,int,int	niup: size(ih: GridBox_t; width, height: int)	
size	niup.html#size,GridBox_t	niup: size(ih: GridBox_t): string	
sizecol	niup.html#sizecol,GridBox_t	niup: sizecol(ih: GridBox_t): string	
sizelin	niup.html#sizelin,GridBox_t	niup: sizelin(ih: GridBox_t): string	
theme=	niup.html#theme=,GridBox_t,string	niup: theme=(ih: GridBox_t; value: string)	
theme	niup.html#theme,GridBox_t,string	niup: theme(ih: GridBox_t; value: string)	
theme	niup.html#theme,GridBox_t	niup: theme(ih: GridBox_t): string	
usersize=	niup.html#usersize=,GridBox_t,string	niup: usersize=(ih: GridBox_t; value: string)	
usersize	niup.html#usersize,GridBox_t,string	niup: usersize(ih: GridBox_t; value: string)	
usersize=	niup.html#usersize=,GridBox_t,int,int	niup: usersize=(ih: GridBox_t; width, height: int)	
usersize	niup.html#usersize,GridBox_t,int,int	niup: usersize(ih: GridBox_t; width, height: int)	
usersize	niup.html#usersize,GridBox_t	niup: usersize(ih: GridBox_t): string	
visible=	niup.html#visible=,GridBox_t,string	niup: visible=(ih: GridBox_t; value: string)	
visible	niup.html#visible,GridBox_t,string	niup: visible(ih: GridBox_t; value: string)	
visible=	niup.html#visible=,GridBox_t,bool	niup: visible=(ih: GridBox_t; yes: bool)	
visible	niup.html#visible,GridBox_t,bool	niup: visible(ih: GridBox_t; yes: bool)	
visible	niup.html#visible,GridBox_t	niup: visible(ih: GridBox_t): bool	
wid	niup.html#wid,GridBox_t	niup: wid(ih: GridBox_t): string	
xfontid	niup.html#xfontid,GridBox_t	niup: xfontid(ih: GridBox_t): string	
destroy_cb=	niup.html#destroy_cb=,GridBox_t,proc(PIhandle)	niup: destroy_cb=(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,GridBox_t,proc(PIhandle)	niup: destroy_cb(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,GridBox_t	niup: destroy_cb(ih: GridBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,GridBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,GridBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,GridBox_t	niup: ldestroy_cb(ih: GridBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,GridBox_t,proc(PIhandle)	niup: map_cb=(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,GridBox_t,proc(PIhandle)	niup: map_cb(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,GridBox_t	niup: map_cb(ih: GridBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,GridBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: GridBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,GridBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: GridBox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,GridBox_t	niup: postmessage_cb(ih: GridBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,GridBox_t,proc(PIhandle)	niup: unmap_cb=(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,GridBox_t,proc(PIhandle)	niup: unmap_cb(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,GridBox_t	niup: unmap_cb(ih: GridBox_t): proc (ih: PIhandle): cint {.cdecl.}	
updateattribfromfont_cb=	niup.html#updateattribfromfont_cb=,GridBox_t,proc(PIhandle)	niup: updateattribfromfont_cb=(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,GridBox_t,proc(PIhandle)	niup: updateattribfromfont_cb(ih: GridBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,GridBox_t	niup: updateattribfromfont_cb(ih: GridBox_t): proc (ih: PIhandle): cint {.cdecl.}	
Hbox	niup.html#Hbox.m,varargs[untyped]	niup: Hbox(args: varargs[untyped]): Hbox_t	
active=	niup.html#active=,Hbox_t,string	niup: active=(ih: Hbox_t; value: string)	
active	niup.html#active,Hbox_t,string	niup: active(ih: Hbox_t; value: string)	
active=	niup.html#active=,Hbox_t,bool	niup: active=(ih: Hbox_t; yes: bool)	
active	niup.html#active,Hbox_t,bool	niup: active(ih: Hbox_t; yes: bool)	
active	niup.html#active,Hbox_t	niup: active(ih: Hbox_t): bool	
alignment=	niup.html#alignment=,Hbox_t,string	niup: alignment=(ih: Hbox_t; value: string)	
alignment	niup.html#alignment,Hbox_t,string	niup: alignment(ih: Hbox_t; value: string)	
alignment	niup.html#alignment,Hbox_t	niup: alignment(ih: Hbox_t): string	
canfocus=	niup.html#canfocus=,Hbox_t,string	niup: canfocus=(ih: Hbox_t; value: string)	
canfocus	niup.html#canfocus,Hbox_t,string	niup: canfocus(ih: Hbox_t; value: string)	
canfocus=	niup.html#canfocus=,Hbox_t,bool	niup: canfocus=(ih: Hbox_t; yes: bool)	
canfocus	niup.html#canfocus,Hbox_t,bool	niup: canfocus(ih: Hbox_t; yes: bool)	
canfocus	niup.html#canfocus,Hbox_t	niup: canfocus(ih: Hbox_t): bool	
cgap=	niup.html#cgap=,Hbox_t,string	niup: cgap=(ih: Hbox_t; value: string)	
cgap	niup.html#cgap,Hbox_t,string	niup: cgap(ih: Hbox_t; value: string)	
cgap=	niup.html#cgap=,Hbox_t,int	niup: cgap=(ih: Hbox_t; x: int)	
cgap	niup.html#cgap,Hbox_t,int	niup: cgap(ih: Hbox_t; x: int)	
cgap	niup.html#cgap,Hbox_t	niup: cgap(ih: Hbox_t): string	
charsize	niup.html#charsize,Hbox_t	niup: charsize(ih: Hbox_t): string	
clientoffset	niup.html#clientoffset,Hbox_t	niup: clientoffset(ih: Hbox_t): string	
clientsize	niup.html#clientsize,Hbox_t	niup: clientsize(ih: Hbox_t): string	
cmargin=	niup.html#cmargin=,Hbox_t,string	niup: cmargin=(ih: Hbox_t; value: string)	
cmargin	niup.html#cmargin,Hbox_t,string	niup: cmargin(ih: Hbox_t; value: string)	
cmargin=	niup.html#cmargin=,Hbox_t,int,int	niup: cmargin=(ih: Hbox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,Hbox_t,int,int	niup: cmargin(ih: Hbox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,Hbox_t	niup: cmargin(ih: Hbox_t): string	
expand=	niup.html#expand=,Hbox_t,string	niup: expand=(ih: Hbox_t; value: string)	
expand	niup.html#expand,Hbox_t,string	niup: expand(ih: Hbox_t; value: string)	
expand	niup.html#expand,Hbox_t	niup: expand(ih: Hbox_t): string	
expandchildren=	niup.html#expandchildren=,Hbox_t,string	niup: expandchildren=(ih: Hbox_t; value: string)	
expandchildren	niup.html#expandchildren,Hbox_t,string	niup: expandchildren(ih: Hbox_t; value: string)	
expandchildren=	niup.html#expandchildren=,Hbox_t,bool	niup: expandchildren=(ih: Hbox_t; yes: bool)	
expandchildren	niup.html#expandchildren,Hbox_t,bool	niup: expandchildren(ih: Hbox_t; yes: bool)	
expandchildren	niup.html#expandchildren,Hbox_t	niup: expandchildren(ih: Hbox_t): bool	
expandweight=	niup.html#expandweight=,Hbox_t,string	niup: expandweight=(ih: Hbox_t; value: string)	
expandweight	niup.html#expandweight,Hbox_t,string	niup: expandweight(ih: Hbox_t; value: string)	
expandweight=	niup.html#expandweight=,Hbox_t,int64	niup: expandweight=(ih: Hbox_t; x: int64)	
expandweight	niup.html#expandweight,Hbox_t,int64	niup: expandweight(ih: Hbox_t; x: int64)	
expandweight	niup.html#expandweight,Hbox_t	niup: expandweight(ih: Hbox_t): string	
floating=	niup.html#floating=,Hbox_t,string	niup: floating=(ih: Hbox_t; value: string)	
floating	niup.html#floating,Hbox_t,string	niup: floating(ih: Hbox_t; value: string)	
floating	niup.html#floating,Hbox_t	niup: floating(ih: Hbox_t): string	
font=	niup.html#font=,Hbox_t,string	niup: font=(ih: Hbox_t; value: string)	
font	niup.html#font,Hbox_t,string	niup: font(ih: Hbox_t; value: string)	
font	niup.html#font,Hbox_t	niup: font(ih: Hbox_t): string	
fontface=	niup.html#fontface=,Hbox_t,string	niup: fontface=(ih: Hbox_t; value: string)	
fontface	niup.html#fontface,Hbox_t,string	niup: fontface(ih: Hbox_t; value: string)	
fontface	niup.html#fontface,Hbox_t	niup: fontface(ih: Hbox_t): string	
fontsize=	niup.html#fontsize=,Hbox_t,string	niup: fontsize=(ih: Hbox_t; value: string)	
fontsize	niup.html#fontsize,Hbox_t,string	niup: fontsize(ih: Hbox_t; value: string)	
fontsize=	niup.html#fontsize=,Hbox_t,int	niup: fontsize=(ih: Hbox_t; x: int)	
fontsize	niup.html#fontsize,Hbox_t,int	niup: fontsize(ih: Hbox_t; x: int)	
fontsize	niup.html#fontsize,Hbox_t	niup: fontsize(ih: Hbox_t): string	
fontstyle=	niup.html#fontstyle=,Hbox_t,string	niup: fontstyle=(ih: Hbox_t; value: string)	
fontstyle	niup.html#fontstyle,Hbox_t,string	niup: fontstyle(ih: Hbox_t; value: string)	
fontstyle	niup.html#fontstyle,Hbox_t	niup: fontstyle(ih: Hbox_t): string	
gap=	niup.html#gap=,Hbox_t,string	niup: gap=(ih: Hbox_t; value: string)	
gap	niup.html#gap,Hbox_t,string	niup: gap(ih: Hbox_t; value: string)	
gap=	niup.html#gap=,Hbox_t,int	niup: gap=(ih: Hbox_t; x: int)	
gap	niup.html#gap,Hbox_t,int	niup: gap(ih: Hbox_t; x: int)	
gap	niup.html#gap,Hbox_t	niup: gap(ih: Hbox_t): string	
handlename=	niup.html#handlename=,Hbox_t,string	niup: handlename=(ih: Hbox_t; value: string)	
handlename	niup.html#handlename,Hbox_t,string	niup: handlename(ih: Hbox_t; value: string)	
handlename	niup.html#handlename,Hbox_t	niup: handlename(ih: Hbox_t): string	
homogeneous=	niup.html#homogeneous=,Hbox_t,string	niup: homogeneous=(ih: Hbox_t; value: string)	
homogeneous	niup.html#homogeneous,Hbox_t,string	niup: homogeneous(ih: Hbox_t; value: string)	
homogeneous=	niup.html#homogeneous=,Hbox_t,bool	niup: homogeneous=(ih: Hbox_t; yes: bool)	
homogeneous	niup.html#homogeneous,Hbox_t,bool	niup: homogeneous(ih: Hbox_t; yes: bool)	
homogeneous	niup.html#homogeneous,Hbox_t	niup: homogeneous(ih: Hbox_t): bool	
margin=	niup.html#margin=,Hbox_t,string	niup: margin=(ih: Hbox_t; value: string)	
margin	niup.html#margin,Hbox_t,string	niup: margin(ih: Hbox_t; value: string)	
margin=	niup.html#margin=,Hbox_t,int,int	niup: margin=(ih: Hbox_t; horiz, vert: int)	
margin	niup.html#margin,Hbox_t,int,int	niup: margin(ih: Hbox_t; horiz, vert: int)	
margin	niup.html#margin,Hbox_t	niup: margin(ih: Hbox_t): string	
maxsize=	niup.html#maxsize=,Hbox_t,string	niup: maxsize=(ih: Hbox_t; value: string)	
maxsize	niup.html#maxsize,Hbox_t,string	niup: maxsize(ih: Hbox_t; value: string)	
maxsize=	niup.html#maxsize=,Hbox_t,int,int	niup: maxsize=(ih: Hbox_t; width, height: int)	
maxsize	niup.html#maxsize,Hbox_t,int,int	niup: maxsize(ih: Hbox_t; width, height: int)	
maxsize	niup.html#maxsize,Hbox_t	niup: maxsize(ih: Hbox_t): string	
minsize=	niup.html#minsize=,Hbox_t,string	niup: minsize=(ih: Hbox_t; value: string)	
minsize	niup.html#minsize,Hbox_t,string	niup: minsize(ih: Hbox_t; value: string)	
minsize=	niup.html#minsize=,Hbox_t,int,int	niup: minsize=(ih: Hbox_t; width, height: int)	
minsize	niup.html#minsize,Hbox_t,int,int	niup: minsize(ih: Hbox_t; width, height: int)	
minsize	niup.html#minsize,Hbox_t	niup: minsize(ih: Hbox_t): string	
name=	niup.html#name=,Hbox_t,string	niup: name=(ih: Hbox_t; value: string)	
name	niup.html#name,Hbox_t,string	niup: name(ih: Hbox_t; value: string)	
name	niup.html#name,Hbox_t	niup: name(ih: Hbox_t): string	
naturalsize	niup.html#naturalsize,Hbox_t	niup: naturalsize(ih: Hbox_t): string	
ncgap=	niup.html#ncgap=,Hbox_t,string	niup: ncgap=(ih: Hbox_t; value: string)	
ncgap	niup.html#ncgap,Hbox_t,string	niup: ncgap(ih: Hbox_t; value: string)	
ncgap=	niup.html#ncgap=,Hbox_t,int	niup: ncgap=(ih: Hbox_t; x: int)	
ncgap	niup.html#ncgap,Hbox_t,int	niup: ncgap(ih: Hbox_t; x: int)	
ncgap	niup.html#ncgap,Hbox_t	niup: ncgap(ih: Hbox_t): string	
ncmargin=	niup.html#ncmargin=,Hbox_t,string	niup: ncmargin=(ih: Hbox_t; value: string)	
ncmargin	niup.html#ncmargin,Hbox_t,string	niup: ncmargin(ih: Hbox_t; value: string)	
ncmargin=	niup.html#ncmargin=,Hbox_t,int,int	niup: ncmargin=(ih: Hbox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,Hbox_t,int,int	niup: ncmargin(ih: Hbox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,Hbox_t	niup: ncmargin(ih: Hbox_t): string	
ngap=	niup.html#ngap=,Hbox_t,string	niup: ngap=(ih: Hbox_t; value: string)	
ngap	niup.html#ngap,Hbox_t,string	niup: ngap(ih: Hbox_t; value: string)	
ngap=	niup.html#ngap=,Hbox_t,int	niup: ngap=(ih: Hbox_t; x: int)	
ngap	niup.html#ngap,Hbox_t,int	niup: ngap(ih: Hbox_t; x: int)	
ngap	niup.html#ngap,Hbox_t	niup: ngap(ih: Hbox_t): string	
nmargin=	niup.html#nmargin=,Hbox_t,string	niup: nmargin=(ih: Hbox_t; value: string)	
nmargin	niup.html#nmargin,Hbox_t,string	niup: nmargin(ih: Hbox_t; value: string)	
nmargin=	niup.html#nmargin=,Hbox_t,int,int	niup: nmargin=(ih: Hbox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,Hbox_t,int,int	niup: nmargin(ih: Hbox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,Hbox_t	niup: nmargin(ih: Hbox_t): string	
normalizergroup=	niup.html#normalizergroup=,Hbox_t,string	niup: normalizergroup=(ih: Hbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Hbox_t,string	niup: normalizergroup(ih: Hbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Hbox_t	niup: normalizergroup(ih: Hbox_t): string	
normalizesize=	niup.html#normalizesize=,Hbox_t,string	niup: normalizesize=(ih: Hbox_t; value: string)	
normalizesize	niup.html#normalizesize,Hbox_t,string	niup: normalizesize(ih: Hbox_t; value: string)	
normalizesize	niup.html#normalizesize,Hbox_t	niup: normalizesize(ih: Hbox_t): string	
ntheme=	niup.html#ntheme=,Hbox_t,string	niup: ntheme=(ih: Hbox_t; value: string)	
ntheme	niup.html#ntheme,Hbox_t,string	niup: ntheme(ih: Hbox_t; value: string)	
ntheme	niup.html#ntheme,Hbox_t	niup: ntheme(ih: Hbox_t): string	
orientation	niup.html#orientation,Hbox_t	niup: orientation(ih: Hbox_t): string	
pangofontdesc	niup.html#pangofontdesc,Hbox_t	niup: pangofontdesc(ih: Hbox_t): string	
pangolayout	niup.html#pangolayout,Hbox_t	niup: pangolayout(ih: Hbox_t): string	
position=	niup.html#position=,Hbox_t,string	niup: position=(ih: Hbox_t; value: string)	
position	niup.html#position,Hbox_t,string	niup: position(ih: Hbox_t; value: string)	
position=	niup.html#position=,Hbox_t,int,int	niup: position=(ih: Hbox_t; x, y: int)	
position	niup.html#position,Hbox_t,int,int	niup: position(ih: Hbox_t; x, y: int)	
position	niup.html#position,Hbox_t	niup: position(ih: Hbox_t): string	
propagatefocus=	niup.html#propagatefocus=,Hbox_t,string	niup: propagatefocus=(ih: Hbox_t; value: string)	
propagatefocus	niup.html#propagatefocus,Hbox_t,string	niup: propagatefocus(ih: Hbox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Hbox_t,bool	niup: propagatefocus=(ih: Hbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Hbox_t,bool	niup: propagatefocus(ih: Hbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Hbox_t	niup: propagatefocus(ih: Hbox_t): bool	
rastersize=	niup.html#rastersize=,Hbox_t,string	niup: rastersize=(ih: Hbox_t; value: string)	
rastersize	niup.html#rastersize,Hbox_t,string	niup: rastersize(ih: Hbox_t; value: string)	
rastersize=	niup.html#rastersize=,Hbox_t,int,int	niup: rastersize=(ih: Hbox_t; width, height: int)	
rastersize	niup.html#rastersize,Hbox_t,int,int	niup: rastersize(ih: Hbox_t; width, height: int)	
rastersize	niup.html#rastersize,Hbox_t	niup: rastersize(ih: Hbox_t): string	
size=	niup.html#size=,Hbox_t,string	niup: size=(ih: Hbox_t; value: string)	
size	niup.html#size,Hbox_t,string	niup: size(ih: Hbox_t; value: string)	
size=	niup.html#size=,Hbox_t,int	niup: size=(ih: Hbox_t; x: int)	
size	niup.html#size,Hbox_t,int	niup: size(ih: Hbox_t; x: int)	
size	niup.html#size,Hbox_t	niup: size(ih: Hbox_t): string	
theme=	niup.html#theme=,Hbox_t,string	niup: theme=(ih: Hbox_t; value: string)	
theme	niup.html#theme,Hbox_t,string	niup: theme(ih: Hbox_t; value: string)	
theme	niup.html#theme,Hbox_t	niup: theme(ih: Hbox_t): string	
usersize=	niup.html#usersize=,Hbox_t,string	niup: usersize=(ih: Hbox_t; value: string)	
usersize	niup.html#usersize,Hbox_t,string	niup: usersize(ih: Hbox_t; value: string)	
usersize=	niup.html#usersize=,Hbox_t,int,int	niup: usersize=(ih: Hbox_t; width, height: int)	
usersize	niup.html#usersize,Hbox_t,int,int	niup: usersize(ih: Hbox_t; width, height: int)	
usersize	niup.html#usersize,Hbox_t	niup: usersize(ih: Hbox_t): string	
visible=	niup.html#visible=,Hbox_t,string	niup: visible=(ih: Hbox_t; value: string)	
visible	niup.html#visible,Hbox_t,string	niup: visible(ih: Hbox_t; value: string)	
visible=	niup.html#visible=,Hbox_t,bool	niup: visible=(ih: Hbox_t; yes: bool)	
visible	niup.html#visible,Hbox_t,bool	niup: visible(ih: Hbox_t; yes: bool)	
visible	niup.html#visible,Hbox_t	niup: visible(ih: Hbox_t): bool	
wid	niup.html#wid,Hbox_t	niup: wid(ih: Hbox_t): string	
xfontid	niup.html#xfontid,Hbox_t	niup: xfontid(ih: Hbox_t): string	
destroy_cb=	niup.html#destroy_cb=,Hbox_t,proc(PIhandle)	niup: destroy_cb=(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Hbox_t,proc(PIhandle)	niup: destroy_cb(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Hbox_t	niup: destroy_cb(ih: Hbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Hbox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Hbox_t,proc(PIhandle)	niup: ldestroy_cb(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Hbox_t	niup: ldestroy_cb(ih: Hbox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Hbox_t,proc(PIhandle)	niup: map_cb=(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Hbox_t,proc(PIhandle)	niup: map_cb(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Hbox_t	niup: map_cb(ih: Hbox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Hbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Hbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Hbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Hbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Hbox_t	niup: postmessage_cb(ih: Hbox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Hbox_t,proc(PIhandle)	niup: unmap_cb=(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Hbox_t,proc(PIhandle)	niup: unmap_cb(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Hbox_t	niup: unmap_cb(ih: Hbox_t): proc (ih: PIhandle): cint {.cdecl.}	
updateattribfromfont_cb=	niup.html#updateattribfromfont_cb=,Hbox_t,proc(PIhandle)	niup: updateattribfromfont_cb=(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,Hbox_t,proc(PIhandle)	niup: updateattribfromfont_cb(ih: Hbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,Hbox_t	niup: updateattribfromfont_cb(ih: Hbox_t): proc (ih: PIhandle): cint {.cdecl.}	
Image	niup.html#Image,cint,cint,openArray[uint8]	niup: Image(width: cint; height: cint; pixels: openArray[uint8]): Image_t	
autoscale=	niup.html#autoscale=,Image_t,string	niup: autoscale=(ih: Image_t; value: string)	
autoscale	niup.html#autoscale,Image_t,string	niup: autoscale(ih: Image_t; value: string)	
autoscale=	niup.html#autoscale=,Image_t,bool	niup: autoscale=(ih: Image_t; yes: bool)	
autoscale	niup.html#autoscale,Image_t,bool	niup: autoscale(ih: Image_t; yes: bool)	
autoscale	niup.html#autoscale,Image_t	niup: autoscale(ih: Image_t): bool	
bgcolor=	niup.html#bgcolor=,Image_t,string	niup: bgcolor=(ih: Image_t; value: string)	
bgcolor	niup.html#bgcolor,Image_t,string	niup: bgcolor(ih: Image_t; value: string)	
bgcolor=	niup.html#bgcolor=,Image_t,int,int,int,int	niup: bgcolor=(ih: Image_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Image_t,int,int,int,int	niup: bgcolor(ih: Image_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Image_t	niup: bgcolor(ih: Image_t): string	
bpp	niup.html#bpp,Image_t	niup: bpp(ih: Image_t): string	
channels	niup.html#channels,Image_t	niup: channels(ih: Image_t): string	
clearcache=	niup.html#clearcache=,Image_t	niup: clearcache=(ih: Image_t)	
clearcache	niup.html#clearcache,Image_t	niup: clearcache(ih: Image_t)	
dpi	niup.html#dpi,Image_t	niup: dpi(ih: Image_t): string	
handlename=	niup.html#handlename=,Image_t,string	niup: handlename=(ih: Image_t; value: string)	
handlename	niup.html#handlename,Image_t,string	niup: handlename(ih: Image_t; value: string)	
handlename	niup.html#handlename,Image_t	niup: handlename(ih: Image_t): string	
height	niup.html#height,Image_t	niup: height(ih: Image_t): string	
hotspot=	niup.html#hotspot=,Image_t,string	niup: hotspot=(ih: Image_t; value: string)	
hotspot	niup.html#hotspot,Image_t,string	niup: hotspot(ih: Image_t; value: string)	
hotspot=	niup.html#hotspot=,Image_t,int,int	niup: hotspot=(ih: Image_t; x, y: int)	
hotspot	niup.html#hotspot,Image_t,int,int	niup: hotspot(ih: Image_t; x, y: int)	
hotspot	niup.html#hotspot,Image_t	niup: hotspot(ih: Image_t): string	
originalscale	niup.html#originalscale,Image_t	niup: originalscale(ih: Image_t): string	
rastersize	niup.html#rastersize,Image_t	niup: rastersize(ih: Image_t): string	
reshape=	niup.html#reshape=,Image_t,string	niup: reshape=(ih: Image_t; value: string)	
reshape	niup.html#reshape,Image_t,string	niup: reshape(ih: Image_t; value: string)	
reshape=	niup.html#reshape=,Image_t,int,int	niup: reshape=(ih: Image_t; width, height: int)	
reshape	niup.html#reshape,Image_t,int,int	niup: reshape(ih: Image_t; width, height: int)	
resize=	niup.html#resize=,Image_t,string	niup: resize=(ih: Image_t; value: string)	
resize	niup.html#resize,Image_t,string	niup: resize(ih: Image_t; value: string)	
resize=	niup.html#resize=,Image_t,int,int	niup: resize=(ih: Image_t; width, height: int)	
resize	niup.html#resize,Image_t,int,int	niup: resize(ih: Image_t; width, height: int)	
scaled	niup.html#scaled,Image_t	niup: scaled(ih: Image_t): bool	
wid	niup.html#wid,Image_t	niup: wid(ih: Image_t): string	
width	niup.html#width,Image_t	niup: width(ih: Image_t): string	
ImageRGB	niup.html#ImageRGB,cint,cint,openArray[uint8]	niup: ImageRGB(width: cint; height: cint; pixels: openArray[uint8]): ImageRGB_t	
autoscale=	niup.html#autoscale=,ImageRGB_t,string	niup: autoscale=(ih: ImageRGB_t; value: string)	
autoscale	niup.html#autoscale,ImageRGB_t,string	niup: autoscale(ih: ImageRGB_t; value: string)	
autoscale=	niup.html#autoscale=,ImageRGB_t,bool	niup: autoscale=(ih: ImageRGB_t; yes: bool)	
autoscale	niup.html#autoscale,ImageRGB_t,bool	niup: autoscale(ih: ImageRGB_t; yes: bool)	
autoscale	niup.html#autoscale,ImageRGB_t	niup: autoscale(ih: ImageRGB_t): bool	
bgcolor=	niup.html#bgcolor=,ImageRGB_t,string	niup: bgcolor=(ih: ImageRGB_t; value: string)	
bgcolor	niup.html#bgcolor,ImageRGB_t,string	niup: bgcolor(ih: ImageRGB_t; value: string)	
bgcolor=	niup.html#bgcolor=,ImageRGB_t,int,int,int,int	niup: bgcolor=(ih: ImageRGB_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ImageRGB_t,int,int,int,int	niup: bgcolor(ih: ImageRGB_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ImageRGB_t	niup: bgcolor(ih: ImageRGB_t): string	
bpp	niup.html#bpp,ImageRGB_t	niup: bpp(ih: ImageRGB_t): string	
channels	niup.html#channels,ImageRGB_t	niup: channels(ih: ImageRGB_t): string	
clearcache=	niup.html#clearcache=,ImageRGB_t	niup: clearcache=(ih: ImageRGB_t)	
clearcache	niup.html#clearcache,ImageRGB_t	niup: clearcache(ih: ImageRGB_t)	
dpi	niup.html#dpi,ImageRGB_t	niup: dpi(ih: ImageRGB_t): string	
handlename=	niup.html#handlename=,ImageRGB_t,string	niup: handlename=(ih: ImageRGB_t; value: string)	
handlename	niup.html#handlename,ImageRGB_t,string	niup: handlename(ih: ImageRGB_t; value: string)	
handlename	niup.html#handlename,ImageRGB_t	niup: handlename(ih: ImageRGB_t): string	
height	niup.html#height,ImageRGB_t	niup: height(ih: ImageRGB_t): string	
hotspot=	niup.html#hotspot=,ImageRGB_t,string	niup: hotspot=(ih: ImageRGB_t; value: string)	
hotspot	niup.html#hotspot,ImageRGB_t,string	niup: hotspot(ih: ImageRGB_t; value: string)	
hotspot=	niup.html#hotspot=,ImageRGB_t,int,int	niup: hotspot=(ih: ImageRGB_t; x, y: int)	
hotspot	niup.html#hotspot,ImageRGB_t,int,int	niup: hotspot(ih: ImageRGB_t; x, y: int)	
hotspot	niup.html#hotspot,ImageRGB_t	niup: hotspot(ih: ImageRGB_t): string	
originalscale	niup.html#originalscale,ImageRGB_t	niup: originalscale(ih: ImageRGB_t): string	
rastersize	niup.html#rastersize,ImageRGB_t	niup: rastersize(ih: ImageRGB_t): string	
reshape=	niup.html#reshape=,ImageRGB_t,string	niup: reshape=(ih: ImageRGB_t; value: string)	
reshape	niup.html#reshape,ImageRGB_t,string	niup: reshape(ih: ImageRGB_t; value: string)	
reshape=	niup.html#reshape=,ImageRGB_t,int,int	niup: reshape=(ih: ImageRGB_t; width, height: int)	
reshape	niup.html#reshape,ImageRGB_t,int,int	niup: reshape(ih: ImageRGB_t; width, height: int)	
resize=	niup.html#resize=,ImageRGB_t,string	niup: resize=(ih: ImageRGB_t; value: string)	
resize	niup.html#resize,ImageRGB_t,string	niup: resize(ih: ImageRGB_t; value: string)	
resize=	niup.html#resize=,ImageRGB_t,int,int	niup: resize=(ih: ImageRGB_t; width, height: int)	
resize	niup.html#resize,ImageRGB_t,int,int	niup: resize(ih: ImageRGB_t; width, height: int)	
scaled	niup.html#scaled,ImageRGB_t	niup: scaled(ih: ImageRGB_t): bool	
wid	niup.html#wid,ImageRGB_t	niup: wid(ih: ImageRGB_t): string	
width	niup.html#width,ImageRGB_t	niup: width(ih: ImageRGB_t): string	
ImageRGBA	niup.html#ImageRGBA,cint,cint,openArray[uint8]	niup: ImageRGBA(width: cint; height: cint; pixels: openArray[uint8]): ImageRGBA_t	
autoscale=	niup.html#autoscale=,ImageRGBA_t,string	niup: autoscale=(ih: ImageRGBA_t; value: string)	
autoscale	niup.html#autoscale,ImageRGBA_t,string	niup: autoscale(ih: ImageRGBA_t; value: string)	
autoscale=	niup.html#autoscale=,ImageRGBA_t,bool	niup: autoscale=(ih: ImageRGBA_t; yes: bool)	
autoscale	niup.html#autoscale,ImageRGBA_t,bool	niup: autoscale(ih: ImageRGBA_t; yes: bool)	
autoscale	niup.html#autoscale,ImageRGBA_t	niup: autoscale(ih: ImageRGBA_t): bool	
bgcolor=	niup.html#bgcolor=,ImageRGBA_t,string	niup: bgcolor=(ih: ImageRGBA_t; value: string)	
bgcolor	niup.html#bgcolor,ImageRGBA_t,string	niup: bgcolor(ih: ImageRGBA_t; value: string)	
bgcolor=	niup.html#bgcolor=,ImageRGBA_t,int,int,int,int	niup: bgcolor=(ih: ImageRGBA_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ImageRGBA_t,int,int,int,int	niup: bgcolor(ih: ImageRGBA_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ImageRGBA_t	niup: bgcolor(ih: ImageRGBA_t): string	
bpp	niup.html#bpp,ImageRGBA_t	niup: bpp(ih: ImageRGBA_t): string	
channels	niup.html#channels,ImageRGBA_t	niup: channels(ih: ImageRGBA_t): string	
clearcache=	niup.html#clearcache=,ImageRGBA_t	niup: clearcache=(ih: ImageRGBA_t)	
clearcache	niup.html#clearcache,ImageRGBA_t	niup: clearcache(ih: ImageRGBA_t)	
dpi	niup.html#dpi,ImageRGBA_t	niup: dpi(ih: ImageRGBA_t): string	
handlename=	niup.html#handlename=,ImageRGBA_t,string	niup: handlename=(ih: ImageRGBA_t; value: string)	
handlename	niup.html#handlename,ImageRGBA_t,string	niup: handlename(ih: ImageRGBA_t; value: string)	
handlename	niup.html#handlename,ImageRGBA_t	niup: handlename(ih: ImageRGBA_t): string	
height	niup.html#height,ImageRGBA_t	niup: height(ih: ImageRGBA_t): string	
hotspot=	niup.html#hotspot=,ImageRGBA_t,string	niup: hotspot=(ih: ImageRGBA_t; value: string)	
hotspot	niup.html#hotspot,ImageRGBA_t,string	niup: hotspot(ih: ImageRGBA_t; value: string)	
hotspot=	niup.html#hotspot=,ImageRGBA_t,int,int	niup: hotspot=(ih: ImageRGBA_t; x, y: int)	
hotspot	niup.html#hotspot,ImageRGBA_t,int,int	niup: hotspot(ih: ImageRGBA_t; x, y: int)	
hotspot	niup.html#hotspot,ImageRGBA_t	niup: hotspot(ih: ImageRGBA_t): string	
originalscale	niup.html#originalscale,ImageRGBA_t	niup: originalscale(ih: ImageRGBA_t): string	
rastersize	niup.html#rastersize,ImageRGBA_t	niup: rastersize(ih: ImageRGBA_t): string	
reshape=	niup.html#reshape=,ImageRGBA_t,string	niup: reshape=(ih: ImageRGBA_t; value: string)	
reshape	niup.html#reshape,ImageRGBA_t,string	niup: reshape(ih: ImageRGBA_t; value: string)	
reshape=	niup.html#reshape=,ImageRGBA_t,int,int	niup: reshape=(ih: ImageRGBA_t; width, height: int)	
reshape	niup.html#reshape,ImageRGBA_t,int,int	niup: reshape(ih: ImageRGBA_t; width, height: int)	
resize=	niup.html#resize=,ImageRGBA_t,string	niup: resize=(ih: ImageRGBA_t; value: string)	
resize	niup.html#resize,ImageRGBA_t,string	niup: resize(ih: ImageRGBA_t; value: string)	
resize=	niup.html#resize=,ImageRGBA_t,int,int	niup: resize=(ih: ImageRGBA_t; width, height: int)	
resize	niup.html#resize,ImageRGBA_t,int,int	niup: resize(ih: ImageRGBA_t; width, height: int)	
scaled	niup.html#scaled,ImageRGBA_t	niup: scaled(ih: ImageRGBA_t): bool	
wid	niup.html#wid,ImageRGBA_t	niup: wid(ih: ImageRGBA_t): string	
width	niup.html#width,ImageRGBA_t	niup: width(ih: ImageRGBA_t): string	
Item	niup.html#Item,string,string	niup: Item(title: string; action: string): Item_t	
active=	niup.html#active=,Item_t,string	niup: active=(ih: Item_t; value: string)	
active	niup.html#active,Item_t,string	niup: active(ih: Item_t; value: string)	
active=	niup.html#active=,Item_t,bool	niup: active=(ih: Item_t; yes: bool)	
active	niup.html#active,Item_t,bool	niup: active(ih: Item_t; yes: bool)	
active	niup.html#active,Item_t	niup: active(ih: Item_t): bool	
autotoggle=	niup.html#autotoggle=,Item_t,string	niup: autotoggle=(ih: Item_t; value: string)	
autotoggle	niup.html#autotoggle,Item_t,string	niup: autotoggle(ih: Item_t; value: string)	
autotoggle=	niup.html#autotoggle=,Item_t,bool	niup: autotoggle=(ih: Item_t; yes: bool)	
autotoggle	niup.html#autotoggle,Item_t,bool	niup: autotoggle(ih: Item_t; yes: bool)	
autotoggle	niup.html#autotoggle,Item_t	niup: autotoggle(ih: Item_t): bool	
bgcolor=	niup.html#bgcolor=,Item_t,string	niup: bgcolor=(ih: Item_t; value: string)	
bgcolor	niup.html#bgcolor,Item_t,string	niup: bgcolor(ih: Item_t; value: string)	
bgcolor=	niup.html#bgcolor=,Item_t,int,int,int,int	niup: bgcolor=(ih: Item_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Item_t,int,int,int,int	niup: bgcolor(ih: Item_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Item_t	niup: bgcolor(ih: Item_t): string	
font=	niup.html#font=,Item_t,string	niup: font=(ih: Item_t; value: string)	
font	niup.html#font,Item_t,string	niup: font(ih: Item_t; value: string)	
font	niup.html#font,Item_t	niup: font(ih: Item_t): string	
handlename=	niup.html#handlename=,Item_t,string	niup: handlename=(ih: Item_t; value: string)	
handlename	niup.html#handlename,Item_t,string	niup: handlename(ih: Item_t; value: string)	
handlename	niup.html#handlename,Item_t	niup: handlename(ih: Item_t): string	
hidemark=	niup.html#hidemark=,Item_t,string	niup: hidemark=(ih: Item_t; value: string)	
hidemark	niup.html#hidemark,Item_t,string	niup: hidemark(ih: Item_t; value: string)	
hidemark	niup.html#hidemark,Item_t	niup: hidemark(ih: Item_t): string	
image=	niup.html#image=,Item_t,	niup: image=(ih: Item_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Item_t,	niup: image(ih: Item_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Item_t	niup: image(ih: Item_t): string	
impress=	niup.html#impress=,Item_t,	niup: impress=(ih: Item_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
impress	niup.html#impress,Item_t,	niup: impress(ih: Item_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
impress	niup.html#impress,Item_t	niup: impress(ih: Item_t): string	
key=	niup.html#key=,Item_t,string	niup: key=(ih: Item_t; value: string)	
key	niup.html#key,Item_t,string	niup: key(ih: Item_t; value: string)	
key=	niup.html#key=,Item_t,int	niup: key=(ih: Item_t; x: int)	
key	niup.html#key,Item_t,int	niup: key(ih: Item_t; x: int)	
key	niup.html#key,Item_t	niup: key(ih: Item_t): string	
name=	niup.html#name=,Item_t,string	niup: name=(ih: Item_t; value: string)	
name	niup.html#name,Item_t,string	niup: name(ih: Item_t; value: string)	
name	niup.html#name,Item_t	niup: name(ih: Item_t): string	
title=	niup.html#title=,Item_t,string	niup: title=(ih: Item_t; value: string)	
title	niup.html#title,Item_t,string	niup: title(ih: Item_t; value: string)	
title	niup.html#title,Item_t	niup: title(ih: Item_t): string	
titleimage=	niup.html#titleimage=,Item_t,	niup: titleimage=(ih: Item_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimage	niup.html#titleimage,Item_t,	niup: titleimage(ih: Item_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
titleimage	niup.html#titleimage,Item_t	niup: titleimage(ih: Item_t): string	
value=	niup.html#value=,Item_t,string	niup: value=(ih: Item_t; value: string)	
value	niup.html#value,Item_t,string	niup: value(ih: Item_t; value: string)	
value	niup.html#value,Item_t	niup: value(ih: Item_t): string	
wid	niup.html#wid,Item_t	niup: wid(ih: Item_t): string	
action=	niup.html#action=,Item_t,proc(PIhandle)	niup: action=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action	niup.html#action,Item_t,proc(PIhandle)	niup: action(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action	niup.html#action,Item_t	niup: action(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Item_t,proc(PIhandle)	niup: destroy_cb=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Item_t,proc(PIhandle)	niup: destroy_cb(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Item_t	niup: destroy_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Item_t,proc(PIhandle)	niup: help_cb=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Item_t,proc(PIhandle)	niup: help_cb(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Item_t	niup: help_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
highlight_cb=	niup.html#highlight_cb=,Item_t,proc(PIhandle)	niup: highlight_cb=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
highlight_cb	niup.html#highlight_cb,Item_t,proc(PIhandle)	niup: highlight_cb(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
highlight_cb	niup.html#highlight_cb,Item_t	niup: highlight_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Item_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Item_t,proc(PIhandle)	niup: ldestroy_cb(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Item_t	niup: ldestroy_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Item_t,proc(PIhandle)	niup: map_cb=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Item_t,proc(PIhandle)	niup: map_cb(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Item_t	niup: map_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Item_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Item_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Item_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Item_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Item_t	niup: postmessage_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Item_t,proc(PIhandle)	niup: unmap_cb=(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Item_t,proc(PIhandle)	niup: unmap_cb(ih: Item_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Item_t	niup: unmap_cb(ih: Item_t): proc (ih: PIhandle): cint {.cdecl.}	
Label	niup.html#Label,string	niup: Label(title: string): Label_t	
active=	niup.html#active=,Label_t,string	niup: active=(ih: Label_t; value: string)	
active	niup.html#active,Label_t,string	niup: active(ih: Label_t; value: string)	
active=	niup.html#active=,Label_t,bool	niup: active=(ih: Label_t; yes: bool)	
active	niup.html#active,Label_t,bool	niup: active(ih: Label_t; yes: bool)	
active	niup.html#active,Label_t	niup: active(ih: Label_t): bool	
alignment=	niup.html#alignment=,Label_t,string	niup: alignment=(ih: Label_t; value: string)	
alignment	niup.html#alignment,Label_t,string	niup: alignment(ih: Label_t; value: string)	
alignment	niup.html#alignment,Label_t	niup: alignment(ih: Label_t): string	
bgcolor=	niup.html#bgcolor=,Label_t,string	niup: bgcolor=(ih: Label_t; value: string)	
bgcolor	niup.html#bgcolor,Label_t,string	niup: bgcolor(ih: Label_t; value: string)	
bgcolor=	niup.html#bgcolor=,Label_t,int,int,int,int	niup: bgcolor=(ih: Label_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Label_t,int,int,int,int	niup: bgcolor(ih: Label_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Label_t	niup: bgcolor(ih: Label_t): string	
canfocus=	niup.html#canfocus=,Label_t,string	niup: canfocus=(ih: Label_t; value: string)	
canfocus	niup.html#canfocus,Label_t,string	niup: canfocus(ih: Label_t; value: string)	
canfocus=	niup.html#canfocus=,Label_t,bool	niup: canfocus=(ih: Label_t; yes: bool)	
canfocus	niup.html#canfocus,Label_t,bool	niup: canfocus(ih: Label_t; yes: bool)	
canfocus	niup.html#canfocus,Label_t	niup: canfocus(ih: Label_t): bool	
charsize	niup.html#charsize,Label_t	niup: charsize(ih: Label_t): string	
cpadding=	niup.html#cpadding=,Label_t,string	niup: cpadding=(ih: Label_t; value: string)	
cpadding	niup.html#cpadding,Label_t,string	niup: cpadding(ih: Label_t; value: string)	
cpadding=	niup.html#cpadding=,Label_t,int,int	niup: cpadding=(ih: Label_t; width, height: int)	
cpadding	niup.html#cpadding,Label_t,int,int	niup: cpadding(ih: Label_t; width, height: int)	
cpadding	niup.html#cpadding,Label_t	niup: cpadding(ih: Label_t): string	
dragdrop=	niup.html#dragdrop=,Label_t,string	niup: dragdrop=(ih: Label_t; value: string)	
dragdrop	niup.html#dragdrop,Label_t,string	niup: dragdrop(ih: Label_t; value: string)	
dragdrop=	niup.html#dragdrop=,Label_t,bool	niup: dragdrop=(ih: Label_t; yes: bool)	
dragdrop	niup.html#dragdrop,Label_t,bool	niup: dragdrop(ih: Label_t; yes: bool)	
dragdrop	niup.html#dragdrop,Label_t	niup: dragdrop(ih: Label_t): bool	
dragsource=	niup.html#dragsource=,Label_t,string	niup: dragsource=(ih: Label_t; value: string)	
dragsource	niup.html#dragsource,Label_t,string	niup: dragsource(ih: Label_t; value: string)	
dragsource=	niup.html#dragsource=,Label_t,bool	niup: dragsource=(ih: Label_t; yes: bool)	
dragsource	niup.html#dragsource,Label_t,bool	niup: dragsource(ih: Label_t; yes: bool)	
dragsource	niup.html#dragsource,Label_t	niup: dragsource(ih: Label_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Label_t,string	niup: dragsourcemove=(ih: Label_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Label_t,string	niup: dragsourcemove(ih: Label_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Label_t,bool	niup: dragsourcemove=(ih: Label_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Label_t,bool	niup: dragsourcemove(ih: Label_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Label_t	niup: dragsourcemove(ih: Label_t): bool	
dragtypes=	niup.html#dragtypes=,Label_t,string	niup: dragtypes=(ih: Label_t; value: string)	
dragtypes	niup.html#dragtypes,Label_t,string	niup: dragtypes(ih: Label_t; value: string)	
dragtypes	niup.html#dragtypes,Label_t	niup: dragtypes(ih: Label_t): string	
dropfilestarget=	niup.html#dropfilestarget=,Label_t,string	niup: dropfilestarget=(ih: Label_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Label_t,string	niup: dropfilestarget(ih: Label_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Label_t,bool	niup: dropfilestarget=(ih: Label_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Label_t,bool	niup: dropfilestarget(ih: Label_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Label_t	niup: dropfilestarget(ih: Label_t): bool	
droptarget=	niup.html#droptarget=,Label_t,string	niup: droptarget=(ih: Label_t; value: string)	
droptarget	niup.html#droptarget,Label_t,string	niup: droptarget(ih: Label_t; value: string)	
droptarget=	niup.html#droptarget=,Label_t,bool	niup: droptarget=(ih: Label_t; yes: bool)	
droptarget	niup.html#droptarget,Label_t,bool	niup: droptarget(ih: Label_t; yes: bool)	
droptarget	niup.html#droptarget,Label_t	niup: droptarget(ih: Label_t): bool	
droptypes=	niup.html#droptypes=,Label_t,string	niup: droptypes=(ih: Label_t; value: string)	
droptypes	niup.html#droptypes,Label_t,string	niup: droptypes(ih: Label_t; value: string)	
droptypes	niup.html#droptypes,Label_t	niup: droptypes(ih: Label_t): string	
ellipsis=	niup.html#ellipsis=,Label_t,string	niup: ellipsis=(ih: Label_t; value: string)	
ellipsis	niup.html#ellipsis,Label_t,string	niup: ellipsis(ih: Label_t; value: string)	
ellipsis=	niup.html#ellipsis=,Label_t,bool	niup: ellipsis=(ih: Label_t; yes: bool)	
ellipsis	niup.html#ellipsis,Label_t,bool	niup: ellipsis(ih: Label_t; yes: bool)	
ellipsis	niup.html#ellipsis,Label_t	niup: ellipsis(ih: Label_t): bool	
expand=	niup.html#expand=,Label_t,string	niup: expand=(ih: Label_t; value: string)	
expand	niup.html#expand,Label_t,string	niup: expand(ih: Label_t; value: string)	
expand	niup.html#expand,Label_t	niup: expand(ih: Label_t): string	
expandweight=	niup.html#expandweight=,Label_t,string	niup: expandweight=(ih: Label_t; value: string)	
expandweight	niup.html#expandweight,Label_t,string	niup: expandweight(ih: Label_t; value: string)	
expandweight=	niup.html#expandweight=,Label_t,int64	niup: expandweight=(ih: Label_t; x: int64)	
expandweight	niup.html#expandweight,Label_t,int64	niup: expandweight(ih: Label_t; x: int64)	
expandweight	niup.html#expandweight,Label_t	niup: expandweight(ih: Label_t): string	
fgcolor=	niup.html#fgcolor=,Label_t,string	niup: fgcolor=(ih: Label_t; value: string)	
fgcolor	niup.html#fgcolor,Label_t,string	niup: fgcolor(ih: Label_t; value: string)	
fgcolor=	niup.html#fgcolor=,Label_t,int,int,int,int	niup: fgcolor=(ih: Label_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Label_t,int,int,int,int	niup: fgcolor(ih: Label_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Label_t	niup: fgcolor(ih: Label_t): string	
floating=	niup.html#floating=,Label_t,string	niup: floating=(ih: Label_t; value: string)	
floating	niup.html#floating,Label_t,string	niup: floating(ih: Label_t; value: string)	
floating	niup.html#floating,Label_t	niup: floating(ih: Label_t): string	
font=	niup.html#font=,Label_t,string	niup: font=(ih: Label_t; value: string)	
font	niup.html#font,Label_t,string	niup: font(ih: Label_t; value: string)	
font	niup.html#font,Label_t	niup: font(ih: Label_t): string	
fontface=	niup.html#fontface=,Label_t,string	niup: fontface=(ih: Label_t; value: string)	
fontface	niup.html#fontface,Label_t,string	niup: fontface(ih: Label_t; value: string)	
fontface	niup.html#fontface,Label_t	niup: fontface(ih: Label_t): string	
fontsize=	niup.html#fontsize=,Label_t,string	niup: fontsize=(ih: Label_t; value: string)	
fontsize	niup.html#fontsize,Label_t,string	niup: fontsize(ih: Label_t; value: string)	
fontsize=	niup.html#fontsize=,Label_t,int	niup: fontsize=(ih: Label_t; x: int)	
fontsize	niup.html#fontsize,Label_t,int	niup: fontsize(ih: Label_t; x: int)	
fontsize	niup.html#fontsize,Label_t	niup: fontsize(ih: Label_t): string	
fontstyle=	niup.html#fontstyle=,Label_t,string	niup: fontstyle=(ih: Label_t; value: string)	
fontstyle	niup.html#fontstyle,Label_t,string	niup: fontstyle(ih: Label_t; value: string)	
fontstyle	niup.html#fontstyle,Label_t	niup: fontstyle(ih: Label_t): string	
handlename=	niup.html#handlename=,Label_t,string	niup: handlename=(ih: Label_t; value: string)	
handlename	niup.html#handlename,Label_t,string	niup: handlename(ih: Label_t; value: string)	
handlename	niup.html#handlename,Label_t	niup: handlename(ih: Label_t): string	
image=	niup.html#image=,Label_t,	niup: image=(ih: Label_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Label_t,	niup: image(ih: Label_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Label_t	niup: image(ih: Label_t): string	
iminactive=	niup.html#iminactive=,Label_t,	niup: iminactive=(ih: Label_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Label_t,	niup: iminactive(ih: Label_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Label_t	niup: iminactive(ih: Label_t): string	
markup=	niup.html#markup=,Label_t,string	niup: markup=(ih: Label_t; value: string)	
markup	niup.html#markup,Label_t,string	niup: markup(ih: Label_t; value: string)	
markup=	niup.html#markup=,Label_t,bool	niup: markup=(ih: Label_t; yes: bool)	
markup	niup.html#markup,Label_t,bool	niup: markup(ih: Label_t; yes: bool)	
markup	niup.html#markup,Label_t	niup: markup(ih: Label_t): bool	
maxsize=	niup.html#maxsize=,Label_t,string	niup: maxsize=(ih: Label_t; value: string)	
maxsize	niup.html#maxsize,Label_t,string	niup: maxsize(ih: Label_t; value: string)	
maxsize=	niup.html#maxsize=,Label_t,int,int	niup: maxsize=(ih: Label_t; width, height: int)	
maxsize	niup.html#maxsize,Label_t,int,int	niup: maxsize(ih: Label_t; width, height: int)	
maxsize	niup.html#maxsize,Label_t	niup: maxsize(ih: Label_t): string	
minsize=	niup.html#minsize=,Label_t,string	niup: minsize=(ih: Label_t; value: string)	
minsize	niup.html#minsize,Label_t,string	niup: minsize(ih: Label_t; value: string)	
minsize=	niup.html#minsize=,Label_t,int,int	niup: minsize=(ih: Label_t; width, height: int)	
minsize	niup.html#minsize,Label_t,int,int	niup: minsize(ih: Label_t; width, height: int)	
minsize	niup.html#minsize,Label_t	niup: minsize(ih: Label_t): string	
name=	niup.html#name=,Label_t,string	niup: name=(ih: Label_t; value: string)	
name	niup.html#name,Label_t,string	niup: name(ih: Label_t; value: string)	
name	niup.html#name,Label_t	niup: name(ih: Label_t): string	
naturalsize	niup.html#naturalsize,Label_t	niup: naturalsize(ih: Label_t): string	
normalizergroup=	niup.html#normalizergroup=,Label_t,string	niup: normalizergroup=(ih: Label_t; value: string)	
normalizergroup	niup.html#normalizergroup,Label_t,string	niup: normalizergroup(ih: Label_t; value: string)	
normalizergroup	niup.html#normalizergroup,Label_t	niup: normalizergroup(ih: Label_t): string	
ntheme=	niup.html#ntheme=,Label_t,string	niup: ntheme=(ih: Label_t; value: string)	
ntheme	niup.html#ntheme,Label_t,string	niup: ntheme(ih: Label_t; value: string)	
ntheme	niup.html#ntheme,Label_t	niup: ntheme(ih: Label_t): string	
padding=	niup.html#padding=,Label_t,string	niup: padding=(ih: Label_t; value: string)	
padding	niup.html#padding,Label_t,string	niup: padding(ih: Label_t; value: string)	
padding=	niup.html#padding=,Label_t,int,int	niup: padding=(ih: Label_t; width, height: int)	
padding	niup.html#padding,Label_t,int,int	niup: padding(ih: Label_t; width, height: int)	
padding	niup.html#padding,Label_t	niup: padding(ih: Label_t): string	
pangofontdesc	niup.html#pangofontdesc,Label_t	niup: pangofontdesc(ih: Label_t): string	
pangolayout	niup.html#pangolayout,Label_t	niup: pangolayout(ih: Label_t): string	
position=	niup.html#position=,Label_t,string	niup: position=(ih: Label_t; value: string)	
position	niup.html#position,Label_t,string	niup: position(ih: Label_t; value: string)	
position=	niup.html#position=,Label_t,int,int	niup: position=(ih: Label_t; x, y: int)	
position	niup.html#position,Label_t,int,int	niup: position(ih: Label_t; x, y: int)	
position	niup.html#position,Label_t	niup: position(ih: Label_t): string	
propagatefocus=	niup.html#propagatefocus=,Label_t,string	niup: propagatefocus=(ih: Label_t; value: string)	
propagatefocus	niup.html#propagatefocus,Label_t,string	niup: propagatefocus(ih: Label_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Label_t,bool	niup: propagatefocus=(ih: Label_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Label_t,bool	niup: propagatefocus(ih: Label_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Label_t	niup: propagatefocus(ih: Label_t): bool	
rastersize=	niup.html#rastersize=,Label_t,string	niup: rastersize=(ih: Label_t; value: string)	
rastersize	niup.html#rastersize,Label_t,string	niup: rastersize(ih: Label_t; value: string)	
rastersize=	niup.html#rastersize=,Label_t,int,int	niup: rastersize=(ih: Label_t; width, height: int)	
rastersize	niup.html#rastersize,Label_t,int,int	niup: rastersize(ih: Label_t; width, height: int)	
rastersize	niup.html#rastersize,Label_t	niup: rastersize(ih: Label_t): string	
screenposition	niup.html#screenposition,Label_t	niup: screenposition(ih: Label_t): string	
separator=	niup.html#separator=,Label_t,string	niup: separator=(ih: Label_t; value: string)	
separator	niup.html#separator,Label_t,string	niup: separator(ih: Label_t; value: string)	
separator	niup.html#separator,Label_t	niup: separator(ih: Label_t): string	
size=	niup.html#size=,Label_t,string	niup: size=(ih: Label_t; value: string)	
size	niup.html#size,Label_t,string	niup: size(ih: Label_t; value: string)	
size=	niup.html#size=,Label_t,int,int	niup: size=(ih: Label_t; width, height: int)	
size	niup.html#size,Label_t,int,int	niup: size(ih: Label_t; width, height: int)	
size	niup.html#size,Label_t	niup: size(ih: Label_t): string	
theme=	niup.html#theme=,Label_t,string	niup: theme=(ih: Label_t; value: string)	
theme	niup.html#theme,Label_t,string	niup: theme(ih: Label_t; value: string)	
theme	niup.html#theme,Label_t	niup: theme(ih: Label_t): string	
tip=	niup.html#tip=,Label_t,string	niup: tip=(ih: Label_t; value: string)	
tip	niup.html#tip,Label_t,string	niup: tip(ih: Label_t; value: string)	
tip	niup.html#tip,Label_t	niup: tip(ih: Label_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Label_t,string	niup: tipbgcolor=(ih: Label_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Label_t,string	niup: tipbgcolor(ih: Label_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Label_t,int,int,int,int	niup: tipbgcolor=(ih: Label_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Label_t,int,int,int,int	niup: tipbgcolor(ih: Label_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Label_t	niup: tipbgcolor(ih: Label_t): string	
tipdelay=	niup.html#tipdelay=,Label_t,string	niup: tipdelay=(ih: Label_t; value: string)	
tipdelay	niup.html#tipdelay,Label_t,string	niup: tipdelay(ih: Label_t; value: string)	
tipdelay=	niup.html#tipdelay=,Label_t,int	niup: tipdelay=(ih: Label_t; x: int)	
tipdelay	niup.html#tipdelay,Label_t,int	niup: tipdelay(ih: Label_t; x: int)	
tipdelay	niup.html#tipdelay,Label_t	niup: tipdelay(ih: Label_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Label_t,string	niup: tipfgcolor=(ih: Label_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Label_t,string	niup: tipfgcolor(ih: Label_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Label_t,int,int,int,int	niup: tipfgcolor=(ih: Label_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Label_t,int,int,int,int	niup: tipfgcolor(ih: Label_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Label_t	niup: tipfgcolor(ih: Label_t): string	
tipicon=	niup.html#tipicon=,Label_t,string	niup: tipicon=(ih: Label_t; value: string)	
tipicon	niup.html#tipicon,Label_t,string	niup: tipicon(ih: Label_t; value: string)	
tipicon	niup.html#tipicon,Label_t	niup: tipicon(ih: Label_t): string	
tipmarkup=	niup.html#tipmarkup=,Label_t,string	niup: tipmarkup=(ih: Label_t; value: string)	
tipmarkup	niup.html#tipmarkup,Label_t,string	niup: tipmarkup(ih: Label_t; value: string)	
tipmarkup	niup.html#tipmarkup,Label_t	niup: tipmarkup(ih: Label_t): string	
tiprect=	niup.html#tiprect=,Label_t,string	niup: tiprect=(ih: Label_t; value: string)	
tiprect	niup.html#tiprect,Label_t,string	niup: tiprect(ih: Label_t; value: string)	
tiprect=	niup.html#tiprect=,Label_t,int,int,int,int	niup: tiprect=(ih: Label_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Label_t,int,int,int,int	niup: tiprect(ih: Label_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Label_t	niup: tiprect(ih: Label_t): string	
tipvisible=	niup.html#tipvisible=,Label_t,string	niup: tipvisible=(ih: Label_t; value: string)	
tipvisible	niup.html#tipvisible,Label_t,string	niup: tipvisible(ih: Label_t; value: string)	
tipvisible=	niup.html#tipvisible=,Label_t,bool	niup: tipvisible=(ih: Label_t; yes: bool)	
tipvisible	niup.html#tipvisible,Label_t,bool	niup: tipvisible(ih: Label_t; yes: bool)	
tipvisible	niup.html#tipvisible,Label_t	niup: tipvisible(ih: Label_t): bool	
title=	niup.html#title=,Label_t,string	niup: title=(ih: Label_t; value: string)	
title	niup.html#title,Label_t,string	niup: title(ih: Label_t; value: string)	
title	niup.html#title,Label_t	niup: title(ih: Label_t): string	
usersize=	niup.html#usersize=,Label_t,string	niup: usersize=(ih: Label_t; value: string)	
usersize	niup.html#usersize,Label_t,string	niup: usersize(ih: Label_t; value: string)	
usersize=	niup.html#usersize=,Label_t,int,int	niup: usersize=(ih: Label_t; width, height: int)	
usersize	niup.html#usersize,Label_t,int,int	niup: usersize(ih: Label_t; width, height: int)	
usersize	niup.html#usersize,Label_t	niup: usersize(ih: Label_t): string	
visible=	niup.html#visible=,Label_t,string	niup: visible=(ih: Label_t; value: string)	
visible	niup.html#visible,Label_t,string	niup: visible(ih: Label_t; value: string)	
visible=	niup.html#visible=,Label_t,bool	niup: visible=(ih: Label_t; yes: bool)	
visible	niup.html#visible,Label_t,bool	niup: visible(ih: Label_t; yes: bool)	
visible	niup.html#visible,Label_t	niup: visible(ih: Label_t): bool	
wid	niup.html#wid,Label_t	niup: wid(ih: Label_t): string	
wordwrap=	niup.html#wordwrap=,Label_t,string	niup: wordwrap=(ih: Label_t; value: string)	
wordwrap	niup.html#wordwrap,Label_t,string	niup: wordwrap(ih: Label_t; value: string)	
wordwrap=	niup.html#wordwrap=,Label_t,bool	niup: wordwrap=(ih: Label_t; yes: bool)	
wordwrap	niup.html#wordwrap,Label_t,bool	niup: wordwrap(ih: Label_t; yes: bool)	
wordwrap	niup.html#wordwrap,Label_t	niup: wordwrap(ih: Label_t): bool	
x	niup.html#x,Label_t	niup: x(ih: Label_t): string	
xfontid	niup.html#xfontid,Label_t	niup: xfontid(ih: Label_t): string	
y	niup.html#y,Label_t	niup: y(ih: Label_t): string	
zorder=	niup.html#zorder=,Label_t,string	niup: zorder=(ih: Label_t; value: string)	
zorder	niup.html#zorder,Label_t,string	niup: zorder(ih: Label_t; value: string)	
button_cb=	niup.html#button_cb=,Label_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Label_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                  arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Label_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Label_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Label_t	niup: button_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Label_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Label_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Label_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Label_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Label_t	niup: dragbegin_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Label_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Label_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Label_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Label_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Label_t	niup: dragdatasize_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Label_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Label_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Label_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Label_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Label_t	niup: dragdata_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Label_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Label_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Label_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Label_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Label_t	niup: dragend_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Label_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Label_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                    data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Label_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Label_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Label_t	niup: dropdata_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Label_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Label_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                     num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Label_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Label_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Label_t	niup: dropfiles_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Label_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Label_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Label_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Label_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Label_t	niup: dropmotion_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Label_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Label_t,proc(PIhandle)	niup: enterwindow_cb(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Label_t	niup: enterwindow_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Label_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Label_t,proc(PIhandle)	niup: leavewindow_cb(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Label_t	niup: leavewindow_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Label_t,proc(PIhandle)	niup: map_cb=(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Label_t,proc(PIhandle)	niup: map_cb(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Label_t	niup: map_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Label_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Label_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Label_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Label_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Label_t	niup: motion_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Label_t,proc(PIhandle)	niup: unmap_cb=(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Label_t,proc(PIhandle)	niup: unmap_cb(ih: Label_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Label_t	niup: unmap_cb(ih: Label_t): proc (ih: PIhandle): cint {.cdecl.}	
Link	niup.html#Link,string,string	niup: Link(url: string; title: string): Link_t	
active=	niup.html#active=,Link_t,string	niup: active=(ih: Link_t; value: string)	
active	niup.html#active,Link_t,string	niup: active(ih: Link_t; value: string)	
active=	niup.html#active=,Link_t,bool	niup: active=(ih: Link_t; yes: bool)	
active	niup.html#active,Link_t,bool	niup: active(ih: Link_t; yes: bool)	
active	niup.html#active,Link_t	niup: active(ih: Link_t): bool	
alignment=	niup.html#alignment=,Link_t,string	niup: alignment=(ih: Link_t; value: string)	
alignment	niup.html#alignment,Link_t,string	niup: alignment(ih: Link_t; value: string)	
alignment	niup.html#alignment,Link_t	niup: alignment(ih: Link_t): string	
bgcolor=	niup.html#bgcolor=,Link_t,string	niup: bgcolor=(ih: Link_t; value: string)	
bgcolor	niup.html#bgcolor,Link_t,string	niup: bgcolor(ih: Link_t; value: string)	
bgcolor=	niup.html#bgcolor=,Link_t,int,int,int,int	niup: bgcolor=(ih: Link_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Link_t,int,int,int,int	niup: bgcolor(ih: Link_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Link_t	niup: bgcolor(ih: Link_t): string	
canfocus=	niup.html#canfocus=,Link_t,string	niup: canfocus=(ih: Link_t; value: string)	
canfocus	niup.html#canfocus,Link_t,string	niup: canfocus(ih: Link_t; value: string)	
canfocus=	niup.html#canfocus=,Link_t,bool	niup: canfocus=(ih: Link_t; yes: bool)	
canfocus	niup.html#canfocus,Link_t,bool	niup: canfocus(ih: Link_t; yes: bool)	
canfocus	niup.html#canfocus,Link_t	niup: canfocus(ih: Link_t): bool	
charsize	niup.html#charsize,Link_t	niup: charsize(ih: Link_t): string	
cpadding=	niup.html#cpadding=,Link_t,string	niup: cpadding=(ih: Link_t; value: string)	
cpadding	niup.html#cpadding,Link_t,string	niup: cpadding(ih: Link_t; value: string)	
cpadding=	niup.html#cpadding=,Link_t,int,int	niup: cpadding=(ih: Link_t; width, height: int)	
cpadding	niup.html#cpadding,Link_t,int,int	niup: cpadding(ih: Link_t; width, height: int)	
cpadding	niup.html#cpadding,Link_t	niup: cpadding(ih: Link_t): string	
cursor=	niup.html#cursor=,Link_t,	niup: cursor=(ih: Link_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Link_t,	niup: cursor(ih: Link_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,Link_t	niup: cursor(ih: Link_t): string	
dragdrop=	niup.html#dragdrop=,Link_t,string	niup: dragdrop=(ih: Link_t; value: string)	
dragdrop	niup.html#dragdrop,Link_t,string	niup: dragdrop(ih: Link_t; value: string)	
dragdrop=	niup.html#dragdrop=,Link_t,bool	niup: dragdrop=(ih: Link_t; yes: bool)	
dragdrop	niup.html#dragdrop,Link_t,bool	niup: dragdrop(ih: Link_t; yes: bool)	
dragdrop	niup.html#dragdrop,Link_t	niup: dragdrop(ih: Link_t): bool	
dragsource=	niup.html#dragsource=,Link_t,string	niup: dragsource=(ih: Link_t; value: string)	
dragsource	niup.html#dragsource,Link_t,string	niup: dragsource(ih: Link_t; value: string)	
dragsource=	niup.html#dragsource=,Link_t,bool	niup: dragsource=(ih: Link_t; yes: bool)	
dragsource	niup.html#dragsource,Link_t,bool	niup: dragsource(ih: Link_t; yes: bool)	
dragsource	niup.html#dragsource,Link_t	niup: dragsource(ih: Link_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Link_t,string	niup: dragsourcemove=(ih: Link_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Link_t,string	niup: dragsourcemove(ih: Link_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Link_t,bool	niup: dragsourcemove=(ih: Link_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Link_t,bool	niup: dragsourcemove(ih: Link_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Link_t	niup: dragsourcemove(ih: Link_t): bool	
dragtypes=	niup.html#dragtypes=,Link_t,string	niup: dragtypes=(ih: Link_t; value: string)	
dragtypes	niup.html#dragtypes,Link_t,string	niup: dragtypes(ih: Link_t; value: string)	
dragtypes	niup.html#dragtypes,Link_t	niup: dragtypes(ih: Link_t): string	
dropfilestarget=	niup.html#dropfilestarget=,Link_t,string	niup: dropfilestarget=(ih: Link_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Link_t,string	niup: dropfilestarget(ih: Link_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Link_t,bool	niup: dropfilestarget=(ih: Link_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Link_t,bool	niup: dropfilestarget(ih: Link_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Link_t	niup: dropfilestarget(ih: Link_t): bool	
droptarget=	niup.html#droptarget=,Link_t,string	niup: droptarget=(ih: Link_t; value: string)	
droptarget	niup.html#droptarget,Link_t,string	niup: droptarget(ih: Link_t; value: string)	
droptarget=	niup.html#droptarget=,Link_t,bool	niup: droptarget=(ih: Link_t; yes: bool)	
droptarget	niup.html#droptarget,Link_t,bool	niup: droptarget(ih: Link_t; yes: bool)	
droptarget	niup.html#droptarget,Link_t	niup: droptarget(ih: Link_t): bool	
droptypes=	niup.html#droptypes=,Link_t,string	niup: droptypes=(ih: Link_t; value: string)	
droptypes	niup.html#droptypes,Link_t,string	niup: droptypes(ih: Link_t; value: string)	
droptypes	niup.html#droptypes,Link_t	niup: droptypes(ih: Link_t): string	
ellipsis=	niup.html#ellipsis=,Link_t,string	niup: ellipsis=(ih: Link_t; value: string)	
ellipsis	niup.html#ellipsis,Link_t,string	niup: ellipsis(ih: Link_t; value: string)	
ellipsis=	niup.html#ellipsis=,Link_t,bool	niup: ellipsis=(ih: Link_t; yes: bool)	
ellipsis	niup.html#ellipsis,Link_t,bool	niup: ellipsis(ih: Link_t; yes: bool)	
ellipsis	niup.html#ellipsis,Link_t	niup: ellipsis(ih: Link_t): bool	
expand=	niup.html#expand=,Link_t,string	niup: expand=(ih: Link_t; value: string)	
expand	niup.html#expand,Link_t,string	niup: expand(ih: Link_t; value: string)	
expand	niup.html#expand,Link_t	niup: expand(ih: Link_t): string	
expandweight=	niup.html#expandweight=,Link_t,string	niup: expandweight=(ih: Link_t; value: string)	
expandweight	niup.html#expandweight,Link_t,string	niup: expandweight(ih: Link_t; value: string)	
expandweight=	niup.html#expandweight=,Link_t,int64	niup: expandweight=(ih: Link_t; x: int64)	
expandweight	niup.html#expandweight,Link_t,int64	niup: expandweight(ih: Link_t; x: int64)	
expandweight	niup.html#expandweight,Link_t	niup: expandweight(ih: Link_t): string	
fgcolor=	niup.html#fgcolor=,Link_t,string	niup: fgcolor=(ih: Link_t; value: string)	
fgcolor	niup.html#fgcolor,Link_t,string	niup: fgcolor(ih: Link_t; value: string)	
fgcolor=	niup.html#fgcolor=,Link_t,int,int,int,int	niup: fgcolor=(ih: Link_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Link_t,int,int,int,int	niup: fgcolor(ih: Link_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Link_t	niup: fgcolor(ih: Link_t): string	
floating=	niup.html#floating=,Link_t,string	niup: floating=(ih: Link_t; value: string)	
floating	niup.html#floating,Link_t,string	niup: floating(ih: Link_t; value: string)	
floating	niup.html#floating,Link_t	niup: floating(ih: Link_t): string	
font=	niup.html#font=,Link_t,string	niup: font=(ih: Link_t; value: string)	
font	niup.html#font,Link_t,string	niup: font(ih: Link_t; value: string)	
font	niup.html#font,Link_t	niup: font(ih: Link_t): string	
fontface=	niup.html#fontface=,Link_t,string	niup: fontface=(ih: Link_t; value: string)	
fontface	niup.html#fontface,Link_t,string	niup: fontface(ih: Link_t; value: string)	
fontface	niup.html#fontface,Link_t	niup: fontface(ih: Link_t): string	
fontsize=	niup.html#fontsize=,Link_t,string	niup: fontsize=(ih: Link_t; value: string)	
fontsize	niup.html#fontsize,Link_t,string	niup: fontsize(ih: Link_t; value: string)	
fontsize=	niup.html#fontsize=,Link_t,int	niup: fontsize=(ih: Link_t; x: int)	
fontsize	niup.html#fontsize,Link_t,int	niup: fontsize(ih: Link_t; x: int)	
fontsize	niup.html#fontsize,Link_t	niup: fontsize(ih: Link_t): string	
fontstyle=	niup.html#fontstyle=,Link_t,string	niup: fontstyle=(ih: Link_t; value: string)	
fontstyle	niup.html#fontstyle,Link_t,string	niup: fontstyle(ih: Link_t; value: string)	
fontstyle	niup.html#fontstyle,Link_t	niup: fontstyle(ih: Link_t): string	
handlename=	niup.html#handlename=,Link_t,string	niup: handlename=(ih: Link_t; value: string)	
handlename	niup.html#handlename,Link_t,string	niup: handlename(ih: Link_t; value: string)	
handlename	niup.html#handlename,Link_t	niup: handlename(ih: Link_t): string	
image=	niup.html#image=,Link_t,	niup: image=(ih: Link_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Link_t,	niup: image(ih: Link_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Link_t	niup: image(ih: Link_t): string	
iminactive=	niup.html#iminactive=,Link_t,	niup: iminactive=(ih: Link_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Link_t,	niup: iminactive(ih: Link_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Link_t	niup: iminactive(ih: Link_t): string	
markup=	niup.html#markup=,Link_t,string	niup: markup=(ih: Link_t; value: string)	
markup	niup.html#markup,Link_t,string	niup: markup(ih: Link_t; value: string)	
markup=	niup.html#markup=,Link_t,bool	niup: markup=(ih: Link_t; yes: bool)	
markup	niup.html#markup,Link_t,bool	niup: markup(ih: Link_t; yes: bool)	
markup	niup.html#markup,Link_t	niup: markup(ih: Link_t): bool	
maxsize=	niup.html#maxsize=,Link_t,string	niup: maxsize=(ih: Link_t; value: string)	
maxsize	niup.html#maxsize,Link_t,string	niup: maxsize(ih: Link_t; value: string)	
maxsize=	niup.html#maxsize=,Link_t,int,int	niup: maxsize=(ih: Link_t; width, height: int)	
maxsize	niup.html#maxsize,Link_t,int,int	niup: maxsize(ih: Link_t; width, height: int)	
maxsize	niup.html#maxsize,Link_t	niup: maxsize(ih: Link_t): string	
minsize=	niup.html#minsize=,Link_t,string	niup: minsize=(ih: Link_t; value: string)	
minsize	niup.html#minsize,Link_t,string	niup: minsize(ih: Link_t; value: string)	
minsize=	niup.html#minsize=,Link_t,int,int	niup: minsize=(ih: Link_t; width, height: int)	
minsize	niup.html#minsize,Link_t,int,int	niup: minsize(ih: Link_t; width, height: int)	
minsize	niup.html#minsize,Link_t	niup: minsize(ih: Link_t): string	
name=	niup.html#name=,Link_t,string	niup: name=(ih: Link_t; value: string)	
name	niup.html#name,Link_t,string	niup: name(ih: Link_t; value: string)	
name	niup.html#name,Link_t	niup: name(ih: Link_t): string	
naturalsize	niup.html#naturalsize,Link_t	niup: naturalsize(ih: Link_t): string	
normalizergroup=	niup.html#normalizergroup=,Link_t,string	niup: normalizergroup=(ih: Link_t; value: string)	
normalizergroup	niup.html#normalizergroup,Link_t,string	niup: normalizergroup(ih: Link_t; value: string)	
normalizergroup	niup.html#normalizergroup,Link_t	niup: normalizergroup(ih: Link_t): string	
ntheme=	niup.html#ntheme=,Link_t,string	niup: ntheme=(ih: Link_t; value: string)	
ntheme	niup.html#ntheme,Link_t,string	niup: ntheme(ih: Link_t; value: string)	
ntheme	niup.html#ntheme,Link_t	niup: ntheme(ih: Link_t): string	
padding=	niup.html#padding=,Link_t,string	niup: padding=(ih: Link_t; value: string)	
padding	niup.html#padding,Link_t,string	niup: padding(ih: Link_t; value: string)	
padding=	niup.html#padding=,Link_t,int,int	niup: padding=(ih: Link_t; width, height: int)	
padding	niup.html#padding,Link_t,int,int	niup: padding(ih: Link_t; width, height: int)	
padding	niup.html#padding,Link_t	niup: padding(ih: Link_t): string	
pangofontdesc	niup.html#pangofontdesc,Link_t	niup: pangofontdesc(ih: Link_t): string	
pangolayout	niup.html#pangolayout,Link_t	niup: pangolayout(ih: Link_t): string	
position=	niup.html#position=,Link_t,string	niup: position=(ih: Link_t; value: string)	
position	niup.html#position,Link_t,string	niup: position(ih: Link_t; value: string)	
position=	niup.html#position=,Link_t,int,int	niup: position=(ih: Link_t; x, y: int)	
position	niup.html#position,Link_t,int,int	niup: position(ih: Link_t; x, y: int)	
position	niup.html#position,Link_t	niup: position(ih: Link_t): string	
propagatefocus=	niup.html#propagatefocus=,Link_t,string	niup: propagatefocus=(ih: Link_t; value: string)	
propagatefocus	niup.html#propagatefocus,Link_t,string	niup: propagatefocus(ih: Link_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Link_t,bool	niup: propagatefocus=(ih: Link_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Link_t,bool	niup: propagatefocus(ih: Link_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Link_t	niup: propagatefocus(ih: Link_t): bool	
rastersize=	niup.html#rastersize=,Link_t,string	niup: rastersize=(ih: Link_t; value: string)	
rastersize	niup.html#rastersize,Link_t,string	niup: rastersize(ih: Link_t; value: string)	
rastersize=	niup.html#rastersize=,Link_t,int,int	niup: rastersize=(ih: Link_t; width, height: int)	
rastersize	niup.html#rastersize,Link_t,int,int	niup: rastersize(ih: Link_t; width, height: int)	
rastersize	niup.html#rastersize,Link_t	niup: rastersize(ih: Link_t): string	
screenposition	niup.html#screenposition,Link_t	niup: screenposition(ih: Link_t): string	
separator=	niup.html#separator=,Link_t,string	niup: separator=(ih: Link_t; value: string)	
separator	niup.html#separator,Link_t,string	niup: separator(ih: Link_t; value: string)	
separator	niup.html#separator,Link_t	niup: separator(ih: Link_t): string	
size=	niup.html#size=,Link_t,string	niup: size=(ih: Link_t; value: string)	
size	niup.html#size,Link_t,string	niup: size(ih: Link_t; value: string)	
size=	niup.html#size=,Link_t,int,int	niup: size=(ih: Link_t; width, height: int)	
size	niup.html#size,Link_t,int,int	niup: size(ih: Link_t; width, height: int)	
size	niup.html#size,Link_t	niup: size(ih: Link_t): string	
theme=	niup.html#theme=,Link_t,string	niup: theme=(ih: Link_t; value: string)	
theme	niup.html#theme,Link_t,string	niup: theme(ih: Link_t; value: string)	
theme	niup.html#theme,Link_t	niup: theme(ih: Link_t): string	
tip=	niup.html#tip=,Link_t,string	niup: tip=(ih: Link_t; value: string)	
tip	niup.html#tip,Link_t,string	niup: tip(ih: Link_t; value: string)	
tip	niup.html#tip,Link_t	niup: tip(ih: Link_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Link_t,string	niup: tipbgcolor=(ih: Link_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Link_t,string	niup: tipbgcolor(ih: Link_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Link_t,int,int,int,int	niup: tipbgcolor=(ih: Link_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Link_t,int,int,int,int	niup: tipbgcolor(ih: Link_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Link_t	niup: tipbgcolor(ih: Link_t): string	
tipdelay=	niup.html#tipdelay=,Link_t,string	niup: tipdelay=(ih: Link_t; value: string)	
tipdelay	niup.html#tipdelay,Link_t,string	niup: tipdelay(ih: Link_t; value: string)	
tipdelay=	niup.html#tipdelay=,Link_t,int	niup: tipdelay=(ih: Link_t; x: int)	
tipdelay	niup.html#tipdelay,Link_t,int	niup: tipdelay(ih: Link_t; x: int)	
tipdelay	niup.html#tipdelay,Link_t	niup: tipdelay(ih: Link_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Link_t,string	niup: tipfgcolor=(ih: Link_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Link_t,string	niup: tipfgcolor(ih: Link_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Link_t,int,int,int,int	niup: tipfgcolor=(ih: Link_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Link_t,int,int,int,int	niup: tipfgcolor(ih: Link_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Link_t	niup: tipfgcolor(ih: Link_t): string	
tipicon=	niup.html#tipicon=,Link_t,string	niup: tipicon=(ih: Link_t; value: string)	
tipicon	niup.html#tipicon,Link_t,string	niup: tipicon(ih: Link_t; value: string)	
tipicon	niup.html#tipicon,Link_t	niup: tipicon(ih: Link_t): string	
tipmarkup=	niup.html#tipmarkup=,Link_t,string	niup: tipmarkup=(ih: Link_t; value: string)	
tipmarkup	niup.html#tipmarkup,Link_t,string	niup: tipmarkup(ih: Link_t; value: string)	
tipmarkup	niup.html#tipmarkup,Link_t	niup: tipmarkup(ih: Link_t): string	
tiprect=	niup.html#tiprect=,Link_t,string	niup: tiprect=(ih: Link_t; value: string)	
tiprect	niup.html#tiprect,Link_t,string	niup: tiprect(ih: Link_t; value: string)	
tiprect=	niup.html#tiprect=,Link_t,int,int,int,int	niup: tiprect=(ih: Link_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Link_t,int,int,int,int	niup: tiprect(ih: Link_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Link_t	niup: tiprect(ih: Link_t): string	
tipvisible=	niup.html#tipvisible=,Link_t,string	niup: tipvisible=(ih: Link_t; value: string)	
tipvisible	niup.html#tipvisible,Link_t,string	niup: tipvisible(ih: Link_t; value: string)	
tipvisible=	niup.html#tipvisible=,Link_t,bool	niup: tipvisible=(ih: Link_t; yes: bool)	
tipvisible	niup.html#tipvisible,Link_t,bool	niup: tipvisible(ih: Link_t; yes: bool)	
tipvisible	niup.html#tipvisible,Link_t	niup: tipvisible(ih: Link_t): bool	
title=	niup.html#title=,Link_t,string	niup: title=(ih: Link_t; value: string)	
title	niup.html#title,Link_t,string	niup: title(ih: Link_t; value: string)	
title	niup.html#title,Link_t	niup: title(ih: Link_t): string	
url=	niup.html#url=,Link_t,string	niup: url=(ih: Link_t; value: string)	
url	niup.html#url,Link_t,string	niup: url(ih: Link_t; value: string)	
url	niup.html#url,Link_t	niup: url(ih: Link_t): string	
usersize=	niup.html#usersize=,Link_t,string	niup: usersize=(ih: Link_t; value: string)	
usersize	niup.html#usersize,Link_t,string	niup: usersize(ih: Link_t; value: string)	
usersize=	niup.html#usersize=,Link_t,int,int	niup: usersize=(ih: Link_t; width, height: int)	
usersize	niup.html#usersize,Link_t,int,int	niup: usersize(ih: Link_t; width, height: int)	
usersize	niup.html#usersize,Link_t	niup: usersize(ih: Link_t): string	
visible=	niup.html#visible=,Link_t,string	niup: visible=(ih: Link_t; value: string)	
visible	niup.html#visible,Link_t,string	niup: visible(ih: Link_t; value: string)	
visible=	niup.html#visible=,Link_t,bool	niup: visible=(ih: Link_t; yes: bool)	
visible	niup.html#visible,Link_t,bool	niup: visible(ih: Link_t; yes: bool)	
visible	niup.html#visible,Link_t	niup: visible(ih: Link_t): bool	
wid	niup.html#wid,Link_t	niup: wid(ih: Link_t): string	
wordwrap=	niup.html#wordwrap=,Link_t,string	niup: wordwrap=(ih: Link_t; value: string)	
wordwrap	niup.html#wordwrap,Link_t,string	niup: wordwrap(ih: Link_t; value: string)	
wordwrap=	niup.html#wordwrap=,Link_t,bool	niup: wordwrap=(ih: Link_t; yes: bool)	
wordwrap	niup.html#wordwrap,Link_t,bool	niup: wordwrap(ih: Link_t; yes: bool)	
wordwrap	niup.html#wordwrap,Link_t	niup: wordwrap(ih: Link_t): bool	
x	niup.html#x,Link_t	niup: x(ih: Link_t): string	
xfontid	niup.html#xfontid,Link_t	niup: xfontid(ih: Link_t): string	
y	niup.html#y,Link_t	niup: y(ih: Link_t): string	
zorder=	niup.html#zorder=,Link_t,string	niup: zorder=(ih: Link_t; value: string)	
zorder	niup.html#zorder,Link_t,string	niup: zorder(ih: Link_t; value: string)	
action=	niup.html#action=,Link_t,proc(PIhandle,cstring)	niup: action=(ih: Link_t; cb: proc (ih: PIhandle; arg2: cstring): cint {.cdecl.})	
action	niup.html#action,Link_t,proc(PIhandle,cstring)	niup: action(ih: Link_t; cb: proc (ih: PIhandle; arg2: cstring): cint {.cdecl.})	
action	niup.html#action,Link_t	niup: action(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Link_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Link_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Link_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Link_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Link_t	niup: button_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Link_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Link_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Link_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Link_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Link_t	niup: dragbegin_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Link_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Link_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Link_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Link_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Link_t	niup: dragdatasize_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Link_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Link_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Link_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Link_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Link_t	niup: dragdata_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Link_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Link_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Link_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Link_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Link_t	niup: dragend_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Link_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Link_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Link_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Link_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Link_t	niup: dropdata_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Link_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Link_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Link_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Link_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                   num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Link_t	niup: dropfiles_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Link_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Link_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Link_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Link_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Link_t	niup: dropmotion_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Link_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Link_t,proc(PIhandle)	niup: enterwindow_cb(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Link_t	niup: enterwindow_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Link_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Link_t,proc(PIhandle)	niup: leavewindow_cb(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Link_t	niup: leavewindow_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Link_t,proc(PIhandle)	niup: map_cb=(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Link_t,proc(PIhandle)	niup: map_cb(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Link_t	niup: map_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Link_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Link_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Link_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Link_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Link_t	niup: motion_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Link_t,proc(PIhandle)	niup: unmap_cb=(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Link_t,proc(PIhandle)	niup: unmap_cb(ih: Link_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Link_t	niup: unmap_cb(ih: Link_t): proc (ih: PIhandle): cint {.cdecl.}	
List	niup.html#List,string	niup: List(action: string): List_t	
List	niup.html#List	niup: List(): List_t	
active=	niup.html#active=,List_t,string	niup: active=(ih: List_t; value: string)	
active	niup.html#active,List_t,string	niup: active(ih: List_t; value: string)	
active=	niup.html#active=,List_t,bool	niup: active=(ih: List_t; yes: bool)	
active	niup.html#active,List_t,bool	niup: active(ih: List_t; yes: bool)	
active	niup.html#active,List_t	niup: active(ih: List_t): bool	
append=	niup.html#append=,List_t,string	niup: append=(ih: List_t; value: string)	
append	niup.html#append,List_t,string	niup: append(ih: List_t; value: string)	
appenditem=	niup.html#appenditem=,List_t,string	niup: appenditem=(ih: List_t; value: string)	
appenditem	niup.html#appenditem,List_t,string	niup: appenditem(ih: List_t; value: string)	
autohide=	niup.html#autohide=,List_t,string	niup: autohide=(ih: List_t; value: string)	
autohide	niup.html#autohide,List_t,string	niup: autohide(ih: List_t; value: string)	
autohide=	niup.html#autohide=,List_t,bool	niup: autohide=(ih: List_t; yes: bool)	
autohide	niup.html#autohide,List_t,bool	niup: autohide(ih: List_t; yes: bool)	
autohide	niup.html#autohide,List_t	niup: autohide(ih: List_t): bool	
autoredraw=	niup.html#autoredraw=,List_t,string	niup: autoredraw=(ih: List_t; value: string)	
autoredraw	niup.html#autoredraw,List_t,string	niup: autoredraw(ih: List_t; value: string)	
autoredraw=	niup.html#autoredraw=,List_t,bool	niup: autoredraw=(ih: List_t; yes: bool)	
autoredraw	niup.html#autoredraw,List_t,bool	niup: autoredraw(ih: List_t; yes: bool)	
autoredraw	niup.html#autoredraw,List_t	niup: autoredraw(ih: List_t): bool	
bgcolor=	niup.html#bgcolor=,List_t,string	niup: bgcolor=(ih: List_t; value: string)	
bgcolor	niup.html#bgcolor,List_t,string	niup: bgcolor(ih: List_t; value: string)	
bgcolor=	niup.html#bgcolor=,List_t,int,int,int,int	niup: bgcolor=(ih: List_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,List_t,int,int,int,int	niup: bgcolor(ih: List_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,List_t	niup: bgcolor(ih: List_t): string	
canfocus=	niup.html#canfocus=,List_t,string	niup: canfocus=(ih: List_t; value: string)	
canfocus	niup.html#canfocus,List_t,string	niup: canfocus(ih: List_t; value: string)	
canfocus=	niup.html#canfocus=,List_t,bool	niup: canfocus=(ih: List_t; yes: bool)	
canfocus	niup.html#canfocus,List_t,bool	niup: canfocus(ih: List_t; yes: bool)	
canfocus	niup.html#canfocus,List_t	niup: canfocus(ih: List_t): bool	
caret=	niup.html#caret=,List_t,string	niup: caret=(ih: List_t; value: string)	
caret	niup.html#caret,List_t,string	niup: caret(ih: List_t; value: string)	
caret=	niup.html#caret=,List_t,int,int	niup: caret=(ih: List_t; lin, col: int)	
caret	niup.html#caret,List_t,int,int	niup: caret(ih: List_t; lin, col: int)	
caret	niup.html#caret,List_t	niup: caret(ih: List_t): string	
caretpos=	niup.html#caretpos=,List_t,string	niup: caretpos=(ih: List_t; value: string)	
caretpos	niup.html#caretpos,List_t,string	niup: caretpos(ih: List_t; value: string)	
caretpos=	niup.html#caretpos=,List_t,int	niup: caretpos=(ih: List_t; x: int)	
caretpos	niup.html#caretpos,List_t,int	niup: caretpos(ih: List_t; x: int)	
caretpos	niup.html#caretpos,List_t	niup: caretpos(ih: List_t): string	
charsize	niup.html#charsize,List_t	niup: charsize(ih: List_t): string	
clipboard=	niup.html#clipboard=,List_t,string	niup: clipboard=(ih: List_t; value: string)	
clipboard	niup.html#clipboard,List_t,string	niup: clipboard(ih: List_t; value: string)	
clipboard	niup.html#clipboard,List_t	niup: clipboard(ih: List_t): string	
count	niup.html#count,List_t	niup: count(ih: List_t): string	
cpadding=	niup.html#cpadding=,List_t,string	niup: cpadding=(ih: List_t; value: string)	
cpadding	niup.html#cpadding,List_t,string	niup: cpadding(ih: List_t; value: string)	
cpadding=	niup.html#cpadding=,List_t,int,int	niup: cpadding=(ih: List_t; width, height: int)	
cpadding	niup.html#cpadding,List_t,int,int	niup: cpadding(ih: List_t; width, height: int)	
cpadding	niup.html#cpadding,List_t	niup: cpadding(ih: List_t): string	
cspacing=	niup.html#cspacing=,List_t,string	niup: cspacing=(ih: List_t; value: string)	
cspacing	niup.html#cspacing,List_t,string	niup: cspacing(ih: List_t; value: string)	
cspacing=	niup.html#cspacing=,List_t,int	niup: cspacing=(ih: List_t; x: int)	
cspacing	niup.html#cspacing,List_t,int	niup: cspacing(ih: List_t; x: int)	
cspacing	niup.html#cspacing,List_t	niup: cspacing(ih: List_t): string	
dragdrop=	niup.html#dragdrop=,List_t,string	niup: dragdrop=(ih: List_t; value: string)	
dragdrop	niup.html#dragdrop,List_t,string	niup: dragdrop(ih: List_t; value: string)	
dragdrop=	niup.html#dragdrop=,List_t,bool	niup: dragdrop=(ih: List_t; yes: bool)	
dragdrop	niup.html#dragdrop,List_t,bool	niup: dragdrop(ih: List_t; yes: bool)	
dragdrop	niup.html#dragdrop,List_t	niup: dragdrop(ih: List_t): bool	
dragdroplist=	niup.html#dragdroplist=,List_t,string	niup: dragdroplist=(ih: List_t; value: string)	
dragdroplist	niup.html#dragdroplist,List_t,string	niup: dragdroplist(ih: List_t; value: string)	
dragdroplist=	niup.html#dragdroplist=,List_t,bool	niup: dragdroplist=(ih: List_t; yes: bool)	
dragdroplist	niup.html#dragdroplist,List_t,bool	niup: dragdroplist(ih: List_t; yes: bool)	
dragdroplist	niup.html#dragdroplist,List_t	niup: dragdroplist(ih: List_t): bool	
dragsource=	niup.html#dragsource=,List_t,string	niup: dragsource=(ih: List_t; value: string)	
dragsource	niup.html#dragsource,List_t,string	niup: dragsource(ih: List_t; value: string)	
dragsource=	niup.html#dragsource=,List_t,bool	niup: dragsource=(ih: List_t; yes: bool)	
dragsource	niup.html#dragsource,List_t,bool	niup: dragsource(ih: List_t; yes: bool)	
dragsource	niup.html#dragsource,List_t	niup: dragsource(ih: List_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,List_t,string	niup: dragsourcemove=(ih: List_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,List_t,string	niup: dragsourcemove(ih: List_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,List_t,bool	niup: dragsourcemove=(ih: List_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,List_t,bool	niup: dragsourcemove(ih: List_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,List_t	niup: dragsourcemove(ih: List_t): bool	
dragtypes=	niup.html#dragtypes=,List_t,string	niup: dragtypes=(ih: List_t; value: string)	
dragtypes	niup.html#dragtypes,List_t,string	niup: dragtypes(ih: List_t; value: string)	
dragtypes	niup.html#dragtypes,List_t	niup: dragtypes(ih: List_t): string	
dropdown=	niup.html#dropdown=,List_t,string	niup: dropdown=(ih: List_t; value: string)	
dropdown	niup.html#dropdown,List_t,string	niup: dropdown(ih: List_t; value: string)	
dropdown=	niup.html#dropdown=,List_t,bool	niup: dropdown=(ih: List_t; yes: bool)	
dropdown	niup.html#dropdown,List_t,bool	niup: dropdown(ih: List_t; yes: bool)	
dropdown	niup.html#dropdown,List_t	niup: dropdown(ih: List_t): bool	
dropexpand=	niup.html#dropexpand=,List_t,string	niup: dropexpand=(ih: List_t; value: string)	
dropexpand	niup.html#dropexpand,List_t,string	niup: dropexpand(ih: List_t; value: string)	
dropexpand=	niup.html#dropexpand=,List_t,bool	niup: dropexpand=(ih: List_t; yes: bool)	
dropexpand	niup.html#dropexpand,List_t,bool	niup: dropexpand(ih: List_t; yes: bool)	
dropexpand	niup.html#dropexpand,List_t	niup: dropexpand(ih: List_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,List_t,string	niup: dropfilestarget=(ih: List_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,List_t,string	niup: dropfilestarget(ih: List_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,List_t,bool	niup: dropfilestarget=(ih: List_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,List_t,bool	niup: dropfilestarget(ih: List_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,List_t	niup: dropfilestarget(ih: List_t): bool	
droptarget=	niup.html#droptarget=,List_t,string	niup: droptarget=(ih: List_t; value: string)	
droptarget	niup.html#droptarget,List_t,string	niup: droptarget(ih: List_t; value: string)	
droptarget=	niup.html#droptarget=,List_t,bool	niup: droptarget=(ih: List_t; yes: bool)	
droptarget	niup.html#droptarget,List_t,bool	niup: droptarget(ih: List_t; yes: bool)	
droptarget	niup.html#droptarget,List_t	niup: droptarget(ih: List_t): bool	
droptypes=	niup.html#droptypes=,List_t,string	niup: droptypes=(ih: List_t; value: string)	
droptypes	niup.html#droptypes,List_t,string	niup: droptypes(ih: List_t; value: string)	
droptypes	niup.html#droptypes,List_t	niup: droptypes(ih: List_t): string	
editbox=	niup.html#editbox=,List_t,string	niup: editbox=(ih: List_t; value: string)	
editbox	niup.html#editbox,List_t,string	niup: editbox(ih: List_t; value: string)	
editbox=	niup.html#editbox=,List_t,bool	niup: editbox=(ih: List_t; yes: bool)	
editbox	niup.html#editbox,List_t,bool	niup: editbox(ih: List_t; yes: bool)	
editbox	niup.html#editbox,List_t	niup: editbox(ih: List_t): bool	
expand=	niup.html#expand=,List_t,string	niup: expand=(ih: List_t; value: string)	
expand	niup.html#expand,List_t,string	niup: expand(ih: List_t; value: string)	
expand	niup.html#expand,List_t	niup: expand(ih: List_t): string	
expandweight=	niup.html#expandweight=,List_t,string	niup: expandweight=(ih: List_t; value: string)	
expandweight	niup.html#expandweight,List_t,string	niup: expandweight(ih: List_t; value: string)	
expandweight=	niup.html#expandweight=,List_t,int64	niup: expandweight=(ih: List_t; x: int64)	
expandweight	niup.html#expandweight,List_t,int64	niup: expandweight(ih: List_t; x: int64)	
expandweight	niup.html#expandweight,List_t	niup: expandweight(ih: List_t): string	
fgcolor=	niup.html#fgcolor=,List_t,string	niup: fgcolor=(ih: List_t; value: string)	
fgcolor	niup.html#fgcolor,List_t,string	niup: fgcolor(ih: List_t; value: string)	
fgcolor=	niup.html#fgcolor=,List_t,int,int,int,int	niup: fgcolor=(ih: List_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,List_t,int,int,int,int	niup: fgcolor(ih: List_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,List_t	niup: fgcolor(ih: List_t): string	
floating=	niup.html#floating=,List_t,string	niup: floating=(ih: List_t; value: string)	
floating	niup.html#floating,List_t,string	niup: floating(ih: List_t; value: string)	
floating	niup.html#floating,List_t	niup: floating(ih: List_t): string	
font=	niup.html#font=,List_t,string	niup: font=(ih: List_t; value: string)	
font	niup.html#font,List_t,string	niup: font(ih: List_t; value: string)	
font	niup.html#font,List_t	niup: font(ih: List_t): string	
fontface=	niup.html#fontface=,List_t,string	niup: fontface=(ih: List_t; value: string)	
fontface	niup.html#fontface,List_t,string	niup: fontface(ih: List_t; value: string)	
fontface	niup.html#fontface,List_t	niup: fontface(ih: List_t): string	
fontsize=	niup.html#fontsize=,List_t,string	niup: fontsize=(ih: List_t; value: string)	
fontsize	niup.html#fontsize,List_t,string	niup: fontsize(ih: List_t; value: string)	
fontsize=	niup.html#fontsize=,List_t,int	niup: fontsize=(ih: List_t; x: int)	
fontsize	niup.html#fontsize,List_t,int	niup: fontsize(ih: List_t; x: int)	
fontsize	niup.html#fontsize,List_t	niup: fontsize(ih: List_t): string	
fontstyle=	niup.html#fontstyle=,List_t,string	niup: fontstyle=(ih: List_t; value: string)	
fontstyle	niup.html#fontstyle,List_t,string	niup: fontstyle(ih: List_t; value: string)	
fontstyle	niup.html#fontstyle,List_t	niup: fontstyle(ih: List_t): string	
handlename=	niup.html#handlename=,List_t,string	niup: handlename=(ih: List_t; value: string)	
handlename	niup.html#handlename,List_t,string	niup: handlename(ih: List_t; value: string)	
handlename	niup.html#handlename,List_t	niup: handlename(ih: List_t): string	
mask=	niup.html#mask=,List_t,string	niup: mask=(ih: List_t; value: string)	
mask	niup.html#mask,List_t,string	niup: mask(ih: List_t; value: string)	
mask	niup.html#mask,List_t	niup: mask(ih: List_t): string	
maskcasei=	niup.html#maskcasei=,List_t,string	niup: maskcasei=(ih: List_t; value: string)	
maskcasei	niup.html#maskcasei,List_t,string	niup: maskcasei(ih: List_t; value: string)	
maskcasei=	niup.html#maskcasei=,List_t,bool	niup: maskcasei=(ih: List_t; yes: bool)	
maskcasei	niup.html#maskcasei,List_t,bool	niup: maskcasei(ih: List_t; yes: bool)	
maskcasei	niup.html#maskcasei,List_t	niup: maskcasei(ih: List_t): bool	
maskdecimalsymbol=	niup.html#maskdecimalsymbol=,List_t,string	niup: maskdecimalsymbol=(ih: List_t; value: string)	
maskdecimalsymbol	niup.html#maskdecimalsymbol,List_t,string	niup: maskdecimalsymbol(ih: List_t; value: string)	
maskdecimalsymbol	niup.html#maskdecimalsymbol,List_t	niup: maskdecimalsymbol(ih: List_t): string	
maskfloat=	niup.html#maskfloat=,List_t,string	niup: maskfloat=(ih: List_t; value: string)	
maskfloat	niup.html#maskfloat,List_t,string	niup: maskfloat(ih: List_t; value: string)	
maskfloat=	niup.html#maskfloat=,List_t,float,float	niup: maskfloat=(ih: List_t; min, max: float)	
maskfloat	niup.html#maskfloat,List_t,float,float	niup: maskfloat(ih: List_t; min, max: float)	
maskfloat	niup.html#maskfloat,List_t	niup: maskfloat(ih: List_t): string	
maskint=	niup.html#maskint=,List_t,string	niup: maskint=(ih: List_t; value: string)	
maskint	niup.html#maskint,List_t,string	niup: maskint(ih: List_t; value: string)	
maskint=	niup.html#maskint=,List_t,int,int	niup: maskint=(ih: List_t; min, max: int)	
maskint	niup.html#maskint,List_t,int,int	niup: maskint(ih: List_t; min, max: int)	
maskint	niup.html#maskint,List_t	niup: maskint(ih: List_t): string	
masknoempty=	niup.html#masknoempty=,List_t,string	niup: masknoempty=(ih: List_t; value: string)	
masknoempty	niup.html#masknoempty,List_t,string	niup: masknoempty(ih: List_t; value: string)	
masknoempty=	niup.html#masknoempty=,List_t,bool	niup: masknoempty=(ih: List_t; yes: bool)	
masknoempty	niup.html#masknoempty,List_t,bool	niup: masknoempty(ih: List_t; yes: bool)	
masknoempty	niup.html#masknoempty,List_t	niup: masknoempty(ih: List_t): bool	
maskreal=	niup.html#maskreal=,List_t,string	niup: maskreal=(ih: List_t; value: string)	
maskreal	niup.html#maskreal,List_t,string	niup: maskreal(ih: List_t; value: string)	
maskreal	niup.html#maskreal,List_t	niup: maskreal(ih: List_t): string	
maxsize=	niup.html#maxsize=,List_t,string	niup: maxsize=(ih: List_t; value: string)	
maxsize	niup.html#maxsize,List_t,string	niup: maxsize(ih: List_t; value: string)	
maxsize=	niup.html#maxsize=,List_t,int,int	niup: maxsize=(ih: List_t; width, height: int)	
maxsize	niup.html#maxsize,List_t,int,int	niup: maxsize(ih: List_t; width, height: int)	
maxsize	niup.html#maxsize,List_t	niup: maxsize(ih: List_t): string	
minsize=	niup.html#minsize=,List_t,string	niup: minsize=(ih: List_t; value: string)	
minsize	niup.html#minsize,List_t,string	niup: minsize(ih: List_t; value: string)	
minsize=	niup.html#minsize=,List_t,int,int	niup: minsize=(ih: List_t; width, height: int)	
minsize	niup.html#minsize,List_t,int,int	niup: minsize(ih: List_t; width, height: int)	
minsize	niup.html#minsize,List_t	niup: minsize(ih: List_t): string	
multiple=	niup.html#multiple=,List_t,string	niup: multiple=(ih: List_t; value: string)	
multiple	niup.html#multiple,List_t,string	niup: multiple(ih: List_t; value: string)	
multiple=	niup.html#multiple=,List_t,bool	niup: multiple=(ih: List_t; yes: bool)	
multiple	niup.html#multiple,List_t,bool	niup: multiple(ih: List_t; yes: bool)	
multiple	niup.html#multiple,List_t	niup: multiple(ih: List_t): bool	
name=	niup.html#name=,List_t,string	niup: name=(ih: List_t; value: string)	
name	niup.html#name,List_t,string	niup: name(ih: List_t; value: string)	
name	niup.html#name,List_t	niup: name(ih: List_t): string	
naturalsize	niup.html#naturalsize,List_t	niup: naturalsize(ih: List_t): string	
nc=	niup.html#nc=,List_t,string	niup: nc=(ih: List_t; value: string)	
nc	niup.html#nc,List_t,string	niup: nc(ih: List_t; value: string)	
nc=	niup.html#nc=,List_t,int	niup: nc=(ih: List_t; x: int)	
nc	niup.html#nc,List_t,int	niup: nc(ih: List_t; x: int)	
nc	niup.html#nc,List_t	niup: nc(ih: List_t): string	
normalizergroup=	niup.html#normalizergroup=,List_t,string	niup: normalizergroup=(ih: List_t; value: string)	
normalizergroup	niup.html#normalizergroup,List_t,string	niup: normalizergroup(ih: List_t; value: string)	
normalizergroup	niup.html#normalizergroup,List_t	niup: normalizergroup(ih: List_t): string	
ntheme=	niup.html#ntheme=,List_t,string	niup: ntheme=(ih: List_t; value: string)	
ntheme	niup.html#ntheme,List_t,string	niup: ntheme(ih: List_t; value: string)	
ntheme	niup.html#ntheme,List_t	niup: ntheme(ih: List_t): string	
padding=	niup.html#padding=,List_t,string	niup: padding=(ih: List_t; value: string)	
padding	niup.html#padding,List_t,string	niup: padding(ih: List_t; value: string)	
padding=	niup.html#padding=,List_t,int,int	niup: padding=(ih: List_t; width, height: int)	
padding	niup.html#padding,List_t,int,int	niup: padding(ih: List_t; width, height: int)	
padding	niup.html#padding,List_t	niup: padding(ih: List_t): string	
pangofontdesc	niup.html#pangofontdesc,List_t	niup: pangofontdesc(ih: List_t): string	
pangolayout	niup.html#pangolayout,List_t	niup: pangolayout(ih: List_t): string	
position=	niup.html#position=,List_t,string	niup: position=(ih: List_t; value: string)	
position	niup.html#position,List_t,string	niup: position(ih: List_t; value: string)	
position=	niup.html#position=,List_t,int,int	niup: position=(ih: List_t; x, y: int)	
position	niup.html#position,List_t,int,int	niup: position(ih: List_t; x, y: int)	
position	niup.html#position,List_t	niup: position(ih: List_t): string	
propagatefocus=	niup.html#propagatefocus=,List_t,string	niup: propagatefocus=(ih: List_t; value: string)	
propagatefocus	niup.html#propagatefocus,List_t,string	niup: propagatefocus(ih: List_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,List_t,bool	niup: propagatefocus=(ih: List_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,List_t,bool	niup: propagatefocus(ih: List_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,List_t	niup: propagatefocus(ih: List_t): bool	
rastersize=	niup.html#rastersize=,List_t,string	niup: rastersize=(ih: List_t; value: string)	
rastersize	niup.html#rastersize,List_t,string	niup: rastersize(ih: List_t; value: string)	
rastersize=	niup.html#rastersize=,List_t,int,int	niup: rastersize=(ih: List_t; width, height: int)	
rastersize	niup.html#rastersize,List_t,int,int	niup: rastersize(ih: List_t; width, height: int)	
rastersize	niup.html#rastersize,List_t	niup: rastersize(ih: List_t): string	
readonly=	niup.html#readonly=,List_t,string	niup: readonly=(ih: List_t; value: string)	
readonly	niup.html#readonly,List_t,string	niup: readonly(ih: List_t; value: string)	
readonly=	niup.html#readonly=,List_t,bool	niup: readonly=(ih: List_t; yes: bool)	
readonly	niup.html#readonly,List_t,bool	niup: readonly(ih: List_t; yes: bool)	
readonly	niup.html#readonly,List_t	niup: readonly(ih: List_t): bool	
removeitem=	niup.html#removeitem=,List_t,string	niup: removeitem=(ih: List_t; value: string)	
removeitem	niup.html#removeitem,List_t,string	niup: removeitem(ih: List_t; value: string)	
removeitem=	niup.html#removeitem=,List_t,int	niup: removeitem=(ih: List_t; x: int)	
removeitem	niup.html#removeitem,List_t,int	niup: removeitem(ih: List_t; x: int)	
screenposition	niup.html#screenposition,List_t	niup: screenposition(ih: List_t): string	
scrollbar=	niup.html#scrollbar=,List_t,string	niup: scrollbar=(ih: List_t; value: string)	
scrollbar	niup.html#scrollbar,List_t,string	niup: scrollbar(ih: List_t; value: string)	
scrollbar=	niup.html#scrollbar=,List_t,bool	niup: scrollbar=(ih: List_t; yes: bool)	
scrollbar	niup.html#scrollbar,List_t,bool	niup: scrollbar(ih: List_t; yes: bool)	
scrollbar	niup.html#scrollbar,List_t	niup: scrollbar(ih: List_t): bool	
scrollto=	niup.html#scrollto=,List_t,string	niup: scrollto=(ih: List_t; value: string)	
scrollto	niup.html#scrollto,List_t,string	niup: scrollto(ih: List_t; value: string)	
scrollto=	niup.html#scrollto=,List_t,int	niup: scrollto=(ih: List_t; x: int)	
scrollto	niup.html#scrollto,List_t,int	niup: scrollto(ih: List_t; x: int)	
scrolltopos=	niup.html#scrolltopos=,List_t,string	niup: scrolltopos=(ih: List_t; value: string)	
scrolltopos	niup.html#scrolltopos,List_t,string	niup: scrolltopos(ih: List_t; value: string)	
scrolltopos=	niup.html#scrolltopos=,List_t,int	niup: scrolltopos=(ih: List_t; x: int)	
scrolltopos	niup.html#scrolltopos,List_t,int	niup: scrolltopos(ih: List_t; x: int)	
selectedtext=	niup.html#selectedtext=,List_t,string	niup: selectedtext=(ih: List_t; value: string)	
selectedtext	niup.html#selectedtext,List_t,string	niup: selectedtext(ih: List_t; value: string)	
selectedtext	niup.html#selectedtext,List_t	niup: selectedtext(ih: List_t): string	
selection=	niup.html#selection=,List_t,string	niup: selection=(ih: List_t; value: string)	
selection	niup.html#selection,List_t,string	niup: selection(ih: List_t; value: string)	
selection=	niup.html#selection=,List_t,int,int,int,int	niup: selection=(ih: List_t; lin1, col1, lin2, col2: int)	
selection	niup.html#selection,List_t,int,int,int,int	niup: selection(ih: List_t; lin1, col1, lin2, col2: int)	
selection=	niup.html#selection=,List_t,int,int	niup: selection=(ih: List_t; col1, col2: int)	
selection	niup.html#selection,List_t,int,int	niup: selection(ih: List_t; col1, col2: int)	
selection	niup.html#selection,List_t	niup: selection(ih: List_t): string	
selectionpos=	niup.html#selectionpos=,List_t,string	niup: selectionpos=(ih: List_t; value: string)	
selectionpos	niup.html#selectionpos,List_t,string	niup: selectionpos(ih: List_t; value: string)	
selectionpos=	niup.html#selectionpos=,List_t,int,int	niup: selectionpos=(ih: List_t; min, max: int)	
selectionpos	niup.html#selectionpos,List_t,int,int	niup: selectionpos(ih: List_t; min, max: int)	
selectionpos	niup.html#selectionpos,List_t	niup: selectionpos(ih: List_t): string	
showdragdrop=	niup.html#showdragdrop=,List_t,string	niup: showdragdrop=(ih: List_t; value: string)	
showdragdrop	niup.html#showdragdrop,List_t,string	niup: showdragdrop(ih: List_t; value: string)	
showdragdrop=	niup.html#showdragdrop=,List_t,bool	niup: showdragdrop=(ih: List_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,List_t,bool	niup: showdragdrop(ih: List_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,List_t	niup: showdragdrop(ih: List_t): bool	
showdropdown=	niup.html#showdropdown=,List_t,string	niup: showdropdown=(ih: List_t; value: string)	
showdropdown	niup.html#showdropdown,List_t,string	niup: showdropdown(ih: List_t; value: string)	
showdropdown=	niup.html#showdropdown=,List_t,bool	niup: showdropdown=(ih: List_t; yes: bool)	
showdropdown	niup.html#showdropdown,List_t,bool	niup: showdropdown(ih: List_t; yes: bool)	
showimage=	niup.html#showimage=,List_t,string	niup: showimage=(ih: List_t; value: string)	
showimage	niup.html#showimage,List_t,string	niup: showimage(ih: List_t; value: string)	
showimage=	niup.html#showimage=,List_t,bool	niup: showimage=(ih: List_t; yes: bool)	
showimage	niup.html#showimage,List_t,bool	niup: showimage(ih: List_t; yes: bool)	
showimage	niup.html#showimage,List_t	niup: showimage(ih: List_t): bool	
size=	niup.html#size=,List_t,string	niup: size=(ih: List_t; value: string)	
size	niup.html#size,List_t,string	niup: size(ih: List_t; value: string)	
size=	niup.html#size=,List_t,int,int	niup: size=(ih: List_t; width, height: int)	
size	niup.html#size,List_t,int,int	niup: size(ih: List_t; width, height: int)	
size	niup.html#size,List_t	niup: size(ih: List_t): string	
spacing=	niup.html#spacing=,List_t,string	niup: spacing=(ih: List_t; value: string)	
spacing	niup.html#spacing,List_t,string	niup: spacing(ih: List_t; value: string)	
spacing=	niup.html#spacing=,List_t,int	niup: spacing=(ih: List_t; x: int)	
spacing	niup.html#spacing,List_t,int	niup: spacing(ih: List_t; x: int)	
spacing	niup.html#spacing,List_t	niup: spacing(ih: List_t): string	
theme=	niup.html#theme=,List_t,string	niup: theme=(ih: List_t; value: string)	
theme	niup.html#theme,List_t,string	niup: theme(ih: List_t; value: string)	
theme	niup.html#theme,List_t	niup: theme(ih: List_t): string	
tip=	niup.html#tip=,List_t,string	niup: tip=(ih: List_t; value: string)	
tip	niup.html#tip,List_t,string	niup: tip(ih: List_t; value: string)	
tip	niup.html#tip,List_t	niup: tip(ih: List_t): string	
tipbgcolor=	niup.html#tipbgcolor=,List_t,string	niup: tipbgcolor=(ih: List_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,List_t,string	niup: tipbgcolor(ih: List_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,List_t,int,int,int,int	niup: tipbgcolor=(ih: List_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,List_t,int,int,int,int	niup: tipbgcolor(ih: List_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,List_t	niup: tipbgcolor(ih: List_t): string	
tipdelay=	niup.html#tipdelay=,List_t,string	niup: tipdelay=(ih: List_t; value: string)	
tipdelay	niup.html#tipdelay,List_t,string	niup: tipdelay(ih: List_t; value: string)	
tipdelay=	niup.html#tipdelay=,List_t,int	niup: tipdelay=(ih: List_t; x: int)	
tipdelay	niup.html#tipdelay,List_t,int	niup: tipdelay(ih: List_t; x: int)	
tipdelay	niup.html#tipdelay,List_t	niup: tipdelay(ih: List_t): string	
tipfgcolor=	niup.html#tipfgcolor=,List_t,string	niup: tipfgcolor=(ih: List_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,List_t,string	niup: tipfgcolor(ih: List_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,List_t,int,int,int,int	niup: tipfgcolor=(ih: List_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,List_t,int,int,int,int	niup: tipfgcolor(ih: List_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,List_t	niup: tipfgcolor(ih: List_t): string	
tipicon=	niup.html#tipicon=,List_t,string	niup: tipicon=(ih: List_t; value: string)	
tipicon	niup.html#tipicon,List_t,string	niup: tipicon(ih: List_t; value: string)	
tipicon	niup.html#tipicon,List_t	niup: tipicon(ih: List_t): string	
tipmarkup=	niup.html#tipmarkup=,List_t,string	niup: tipmarkup=(ih: List_t; value: string)	
tipmarkup	niup.html#tipmarkup,List_t,string	niup: tipmarkup(ih: List_t; value: string)	
tipmarkup	niup.html#tipmarkup,List_t	niup: tipmarkup(ih: List_t): string	
tiprect=	niup.html#tiprect=,List_t,string	niup: tiprect=(ih: List_t; value: string)	
tiprect	niup.html#tiprect,List_t,string	niup: tiprect(ih: List_t; value: string)	
tiprect=	niup.html#tiprect=,List_t,int,int,int,int	niup: tiprect=(ih: List_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,List_t,int,int,int,int	niup: tiprect(ih: List_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,List_t	niup: tiprect(ih: List_t): string	
tipvisible=	niup.html#tipvisible=,List_t,string	niup: tipvisible=(ih: List_t; value: string)	
tipvisible	niup.html#tipvisible,List_t,string	niup: tipvisible(ih: List_t; value: string)	
tipvisible=	niup.html#tipvisible=,List_t,bool	niup: tipvisible=(ih: List_t; yes: bool)	
tipvisible	niup.html#tipvisible,List_t,bool	niup: tipvisible(ih: List_t; yes: bool)	
tipvisible	niup.html#tipvisible,List_t	niup: tipvisible(ih: List_t): bool	
topitem=	niup.html#topitem=,List_t,string	niup: topitem=(ih: List_t; value: string)	
topitem	niup.html#topitem,List_t,string	niup: topitem(ih: List_t; value: string)	
topitem=	niup.html#topitem=,List_t,int	niup: topitem=(ih: List_t; x: int)	
topitem	niup.html#topitem,List_t,int	niup: topitem(ih: List_t; x: int)	
topitem	niup.html#topitem,List_t	niup: topitem(ih: List_t): string	
usersize=	niup.html#usersize=,List_t,string	niup: usersize=(ih: List_t; value: string)	
usersize	niup.html#usersize,List_t,string	niup: usersize(ih: List_t; value: string)	
usersize=	niup.html#usersize=,List_t,int,int	niup: usersize=(ih: List_t; width, height: int)	
usersize	niup.html#usersize,List_t,int,int	niup: usersize(ih: List_t; width, height: int)	
usersize	niup.html#usersize,List_t	niup: usersize(ih: List_t): string	
value=	niup.html#value=,List_t,string	niup: value=(ih: List_t; value: string)	
value	niup.html#value,List_t,string	niup: value(ih: List_t; value: string)	
value	niup.html#value,List_t	niup: value(ih: List_t): string	
valuemasked=	niup.html#valuemasked=,List_t,string	niup: valuemasked=(ih: List_t; value: string)	
valuemasked	niup.html#valuemasked,List_t,string	niup: valuemasked(ih: List_t; value: string)	
valuestring=	niup.html#valuestring=,List_t,string	niup: valuestring=(ih: List_t; value: string)	
valuestring	niup.html#valuestring,List_t,string	niup: valuestring(ih: List_t; value: string)	
valuestring	niup.html#valuestring,List_t	niup: valuestring(ih: List_t): string	
visible=	niup.html#visible=,List_t,string	niup: visible=(ih: List_t; value: string)	
visible	niup.html#visible,List_t,string	niup: visible(ih: List_t; value: string)	
visible=	niup.html#visible=,List_t,bool	niup: visible=(ih: List_t; yes: bool)	
visible	niup.html#visible,List_t,bool	niup: visible(ih: List_t; yes: bool)	
visible	niup.html#visible,List_t	niup: visible(ih: List_t): bool	
visiblecolumns=	niup.html#visiblecolumns=,List_t,string	niup: visiblecolumns=(ih: List_t; value: string)	
visiblecolumns	niup.html#visiblecolumns,List_t,string	niup: visiblecolumns(ih: List_t; value: string)	
visiblecolumns=	niup.html#visiblecolumns=,List_t,int	niup: visiblecolumns=(ih: List_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,List_t,int	niup: visiblecolumns(ih: List_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,List_t	niup: visiblecolumns(ih: List_t): string	
visibleitems=	niup.html#visibleitems=,List_t,string	niup: visibleitems=(ih: List_t; value: string)	
visibleitems	niup.html#visibleitems,List_t,string	niup: visibleitems(ih: List_t; value: string)	
visibleitems=	niup.html#visibleitems=,List_t,int	niup: visibleitems=(ih: List_t; x: int)	
visibleitems	niup.html#visibleitems,List_t,int	niup: visibleitems(ih: List_t; x: int)	
visibleitems	niup.html#visibleitems,List_t	niup: visibleitems(ih: List_t): string	
visiblelines=	niup.html#visiblelines=,List_t,string	niup: visiblelines=(ih: List_t; value: string)	
visiblelines	niup.html#visiblelines,List_t,string	niup: visiblelines(ih: List_t; value: string)	
visiblelines=	niup.html#visiblelines=,List_t,int	niup: visiblelines=(ih: List_t; x: int)	
visiblelines	niup.html#visiblelines,List_t,int	niup: visiblelines(ih: List_t; x: int)	
visiblelines	niup.html#visiblelines,List_t	niup: visiblelines(ih: List_t): string	
wid	niup.html#wid,List_t	niup: wid(ih: List_t): string	
x	niup.html#x,List_t	niup: x(ih: List_t): string	
xfontid	niup.html#xfontid,List_t	niup: xfontid(ih: List_t): string	
y	niup.html#y,List_t	niup: y(ih: List_t): string	
zorder=	niup.html#zorder=,List_t,string	niup: zorder=(ih: List_t; value: string)	
zorder	niup.html#zorder,List_t,string	niup: zorder(ih: List_t; value: string)	
action=	niup.html#action=,List_t,proc(PIhandle,cstring,cint,cint)	niup: action=(ih: List_t; cb: proc (ih: PIhandle; text: cstring; item, state: cint): cint {.\n    cdecl.})	
action	niup.html#action,List_t,proc(PIhandle,cstring,cint,cint)	niup: action(ih: List_t;\n       cb: proc (ih: PIhandle; text: cstring; item, state: cint): cint {.cdecl.})	
action	niup.html#action,List_t	niup: action(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,List_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: List_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,List_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: List_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,List_t	niup: button_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
caret_cb=	niup.html#caret_cb=,List_t,proc(PIhandle,cint,cint,cint)	niup: caret_cb=(ih: List_t;\n          cb: proc (ih: PIhandle; lin, col, pos: cint): cint {.cdecl.})	
caret_cb	niup.html#caret_cb,List_t,proc(PIhandle,cint,cint,cint)	niup: caret_cb(ih: List_t; cb: proc (ih: PIhandle; lin, col, pos: cint): cint {.cdecl.})	
caret_cb	niup.html#caret_cb,List_t	niup: caret_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dblclick_cb=	niup.html#dblclick_cb=,List_t,proc(PIhandle,cint,cstring)	niup: dblclick_cb=(ih: List_t;\n             cb: proc (ih: PIhandle; item: cint; text: cstring): cint {.cdecl.})	
dblclick_cb	niup.html#dblclick_cb,List_t,proc(PIhandle,cint,cstring)	niup: dblclick_cb(ih: List_t;\n            cb: proc (ih: PIhandle; item: cint; text: cstring): cint {.cdecl.})	
dblclick_cb	niup.html#dblclick_cb,List_t	niup: dblclick_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,List_t,proc(PIhandle)	niup: destroy_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,List_t,proc(PIhandle)	niup: destroy_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,List_t	niup: destroy_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,List_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: List_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,List_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: List_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,List_t	niup: dragbegin_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,List_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: List_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,List_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: List_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,List_t	niup: dragdatasize_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,List_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: List_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,List_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: List_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,List_t	niup: dragdata_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdrop_cb=	niup.html#dragdrop_cb=,List_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb=(ih: List_t; cb: proc (ih: PIhandle;\n                                   drag_id, drop_id, isshift, iscontrol: cint): cint {.\n    cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,List_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb(ih: List_t; cb: proc (ih: PIhandle;\n                                  drag_id, drop_id, isshift, iscontrol: cint): cint {.\n    cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,List_t	niup: dragdrop_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,List_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: List_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,List_t,proc(PIhandle,cint)	niup: dragend_cb(ih: List_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,List_t	niup: dragend_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,List_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: List_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,List_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: List_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,List_t	niup: dropdata_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdown_cb=	niup.html#dropdown_cb=,List_t,proc(PIhandle,cint)	niup: dropdown_cb=(ih: List_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
dropdown_cb	niup.html#dropdown_cb,List_t,proc(PIhandle,cint)	niup: dropdown_cb(ih: List_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
dropdown_cb	niup.html#dropdown_cb,List_t	niup: dropdown_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,List_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: List_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,List_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: List_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                   num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,List_t	niup: dropfiles_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,List_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: List_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,List_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: List_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,List_t	niup: dropmotion_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
edit_cb=	niup.html#edit_cb=,List_t,proc(PIhandle,cint,cstring)	niup: edit_cb=(ih: List_t;\n         cb: proc (ih: PIhandle; c: cint; new_value: cstring): cint {.cdecl.})	
edit_cb	niup.html#edit_cb,List_t,proc(PIhandle,cint,cstring)	niup: edit_cb(ih: List_t;\n        cb: proc (ih: PIhandle; c: cint; new_value: cstring): cint {.cdecl.})	
edit_cb	niup.html#edit_cb,List_t	niup: edit_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,List_t,proc(PIhandle)	niup: enterwindow_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,List_t,proc(PIhandle)	niup: enterwindow_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,List_t	niup: enterwindow_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,List_t,proc(PIhandle)	niup: getfocus_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,List_t,proc(PIhandle)	niup: getfocus_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,List_t	niup: getfocus_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,List_t,proc(PIhandle)	niup: help_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,List_t,proc(PIhandle)	niup: help_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,List_t	niup: help_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,List_t,proc(PIhandle)	niup: killfocus_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,List_t,proc(PIhandle)	niup: killfocus_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,List_t	niup: killfocus_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,List_t,proc(PIhandle,cint)	niup: k_any=(ih: List_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,List_t,proc(PIhandle,cint)	niup: k_any(ih: List_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,List_t	niup: k_any(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,List_t,proc(PIhandle)	niup: ldestroy_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,List_t,proc(PIhandle)	niup: ldestroy_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,List_t	niup: ldestroy_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,List_t,proc(PIhandle)	niup: leavewindow_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,List_t,proc(PIhandle)	niup: leavewindow_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,List_t	niup: leavewindow_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,List_t,proc(PIhandle)	niup: map_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,List_t,proc(PIhandle)	niup: map_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,List_t	niup: map_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,List_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: List_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,List_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: List_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,List_t	niup: motion_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
multiselect_cb=	niup.html#multiselect_cb=,List_t,proc(PIhandle,cstring)	niup: multiselect_cb=(ih: List_t;\n                cb: proc (ih: PIhandle; value: cstring): cint {.cdecl.})	
multiselect_cb	niup.html#multiselect_cb,List_t,proc(PIhandle,cstring)	niup: multiselect_cb(ih: List_t;\n               cb: proc (ih: PIhandle; value: cstring): cint {.cdecl.})	
multiselect_cb	niup.html#multiselect_cb,List_t	niup: multiselect_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,List_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: List_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,List_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: List_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,List_t	niup: postmessage_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,List_t,proc(PIhandle)	niup: unmap_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,List_t,proc(PIhandle)	niup: unmap_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,List_t	niup: unmap_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,List_t,proc(PIhandle)	niup: valuechanged_cb=(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,List_t,proc(PIhandle)	niup: valuechanged_cb(ih: List_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,List_t	niup: valuechanged_cb(ih: List_t): proc (ih: PIhandle): cint {.cdecl.}	
Menu	niup.html#Menu.m,varargs[untyped]	niup: Menu(args: varargs[untyped]): Menu_t	
bgcolor=	niup.html#bgcolor=,Menu_t,string	niup: bgcolor=(ih: Menu_t; value: string)	
bgcolor	niup.html#bgcolor,Menu_t,string	niup: bgcolor(ih: Menu_t; value: string)	
bgcolor=	niup.html#bgcolor=,Menu_t,int,int,int,int	niup: bgcolor=(ih: Menu_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Menu_t,int,int,int,int	niup: bgcolor(ih: Menu_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Menu_t	niup: bgcolor(ih: Menu_t): string	
font=	niup.html#font=,Menu_t,string	niup: font=(ih: Menu_t; value: string)	
font	niup.html#font,Menu_t,string	niup: font(ih: Menu_t; value: string)	
font	niup.html#font,Menu_t	niup: font(ih: Menu_t): string	
name=	niup.html#name=,Menu_t,string	niup: name=(ih: Menu_t; value: string)	
name	niup.html#name,Menu_t,string	niup: name(ih: Menu_t; value: string)	
name	niup.html#name,Menu_t	niup: name(ih: Menu_t): string	
radio=	niup.html#radio=,Menu_t,string	niup: radio=(ih: Menu_t; value: string)	
radio	niup.html#radio,Menu_t,string	niup: radio(ih: Menu_t; value: string)	
radio=	niup.html#radio=,Menu_t,bool	niup: radio=(ih: Menu_t; yes: bool)	
radio	niup.html#radio,Menu_t,bool	niup: radio(ih: Menu_t; yes: bool)	
radio	niup.html#radio,Menu_t	niup: radio(ih: Menu_t): bool	
wid	niup.html#wid,Menu_t	niup: wid(ih: Menu_t): string	
destroy_cb=	niup.html#destroy_cb=,Menu_t,proc(PIhandle)	niup: destroy_cb=(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Menu_t,proc(PIhandle)	niup: destroy_cb(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Menu_t	niup: destroy_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Menu_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Menu_t,proc(PIhandle)	niup: ldestroy_cb(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Menu_t	niup: ldestroy_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Menu_t,proc(PIhandle)	niup: map_cb=(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Menu_t,proc(PIhandle)	niup: map_cb(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Menu_t	niup: map_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
menuclose_cb=	niup.html#menuclose_cb=,Menu_t,proc(PIhandle)	niup: menuclose_cb=(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
menuclose_cb	niup.html#menuclose_cb,Menu_t,proc(PIhandle)	niup: menuclose_cb(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
menuclose_cb	niup.html#menuclose_cb,Menu_t	niup: menuclose_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
open_cb=	niup.html#open_cb=,Menu_t,proc(PIhandle)	niup: open_cb=(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
open_cb	niup.html#open_cb,Menu_t,proc(PIhandle)	niup: open_cb(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
open_cb	niup.html#open_cb,Menu_t	niup: open_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Menu_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Menu_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Menu_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Menu_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Menu_t	niup: postmessage_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Menu_t,proc(PIhandle)	niup: unmap_cb=(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Menu_t,proc(PIhandle)	niup: unmap_cb(ih: Menu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Menu_t	niup: unmap_cb(ih: Menu_t): proc (ih: PIhandle): cint {.cdecl.}	
MessageDlg	niup.html#MessageDlg_2	niup: MessageDlg(): MessageDlg_t	
active=	niup.html#active=,MessageDlg_t,string	niup: active=(ih: MessageDlg_t; value: string)	
active	niup.html#active,MessageDlg_t,string	niup: active(ih: MessageDlg_t; value: string)	
active=	niup.html#active=,MessageDlg_t,bool	niup: active=(ih: MessageDlg_t; yes: bool)	
active	niup.html#active,MessageDlg_t,bool	niup: active(ih: MessageDlg_t; yes: bool)	
active	niup.html#active,MessageDlg_t	niup: active(ih: MessageDlg_t): bool	
activewindow	niup.html#activewindow,MessageDlg_t	niup: activewindow(ih: MessageDlg_t): bool	
background=	niup.html#background=,MessageDlg_t,string	niup: background=(ih: MessageDlg_t; value: string)	
background	niup.html#background,MessageDlg_t,string	niup: background(ih: MessageDlg_t; value: string)	
background=	niup.html#background=,MessageDlg_t,int,int,int,int	niup: background=(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,MessageDlg_t,int,int,int,int	niup: background(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,MessageDlg_t	niup: background(ih: MessageDlg_t): string	
bgcolor=	niup.html#bgcolor=,MessageDlg_t,string	niup: bgcolor=(ih: MessageDlg_t; value: string)	
bgcolor	niup.html#bgcolor,MessageDlg_t,string	niup: bgcolor(ih: MessageDlg_t; value: string)	
bgcolor=	niup.html#bgcolor=,MessageDlg_t,int,int,int,int	niup: bgcolor=(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,MessageDlg_t,int,int,int,int	niup: bgcolor(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,MessageDlg_t	niup: bgcolor(ih: MessageDlg_t): string	
border=	niup.html#border=,MessageDlg_t,string	niup: border=(ih: MessageDlg_t; value: string)	
border	niup.html#border,MessageDlg_t,string	niup: border(ih: MessageDlg_t; value: string)	
border=	niup.html#border=,MessageDlg_t,bool	niup: border=(ih: MessageDlg_t; yes: bool)	
border	niup.html#border,MessageDlg_t,bool	niup: border(ih: MessageDlg_t; yes: bool)	
border	niup.html#border,MessageDlg_t	niup: border(ih: MessageDlg_t): bool	
bordersize	niup.html#bordersize,MessageDlg_t	niup: bordersize(ih: MessageDlg_t): string	
bringfront=	niup.html#bringfront=,MessageDlg_t,string	niup: bringfront=(ih: MessageDlg_t; value: string)	
bringfront	niup.html#bringfront,MessageDlg_t,string	niup: bringfront(ih: MessageDlg_t; value: string)	
bringfront=	niup.html#bringfront=,MessageDlg_t,bool	niup: bringfront=(ih: MessageDlg_t; yes: bool)	
bringfront	niup.html#bringfront,MessageDlg_t,bool	niup: bringfront(ih: MessageDlg_t; yes: bool)	
bringfront	niup.html#bringfront,MessageDlg_t	niup: bringfront(ih: MessageDlg_t): bool	
buttondefault=	niup.html#buttondefault=,MessageDlg_t,string	niup: buttondefault=(ih: MessageDlg_t; value: string)	
buttondefault	niup.html#buttondefault,MessageDlg_t,string	niup: buttondefault(ih: MessageDlg_t; value: string)	
buttondefault	niup.html#buttondefault,MessageDlg_t	niup: buttondefault(ih: MessageDlg_t): string	
buttonresponse=	niup.html#buttonresponse=,MessageDlg_t,string	niup: buttonresponse=(ih: MessageDlg_t; value: string)	
buttonresponse	niup.html#buttonresponse,MessageDlg_t,string	niup: buttonresponse(ih: MessageDlg_t; value: string)	
buttonresponse	niup.html#buttonresponse,MessageDlg_t	niup: buttonresponse(ih: MessageDlg_t): string	
buttons=	niup.html#buttons=,MessageDlg_t,string	niup: buttons=(ih: MessageDlg_t; value: string)	
buttons	niup.html#buttons,MessageDlg_t,string	niup: buttons(ih: MessageDlg_t; value: string)	
buttons	niup.html#buttons,MessageDlg_t	niup: buttons(ih: MessageDlg_t): string	
canfocus=	niup.html#canfocus=,MessageDlg_t,string	niup: canfocus=(ih: MessageDlg_t; value: string)	
canfocus	niup.html#canfocus,MessageDlg_t,string	niup: canfocus(ih: MessageDlg_t; value: string)	
canfocus=	niup.html#canfocus=,MessageDlg_t,bool	niup: canfocus=(ih: MessageDlg_t; yes: bool)	
canfocus	niup.html#canfocus,MessageDlg_t,bool	niup: canfocus(ih: MessageDlg_t; yes: bool)	
canfocus	niup.html#canfocus,MessageDlg_t	niup: canfocus(ih: MessageDlg_t): bool	
charsize	niup.html#charsize,MessageDlg_t	niup: charsize(ih: MessageDlg_t): string	
childoffset=	niup.html#childoffset=,MessageDlg_t,string	niup: childoffset=(ih: MessageDlg_t; value: string)	
childoffset	niup.html#childoffset,MessageDlg_t,string	niup: childoffset(ih: MessageDlg_t; value: string)	
childoffset=	niup.html#childoffset=,MessageDlg_t,int,int	niup: childoffset=(ih: MessageDlg_t; width, height: int)	
childoffset	niup.html#childoffset,MessageDlg_t,int,int	niup: childoffset(ih: MessageDlg_t; width, height: int)	
childoffset	niup.html#childoffset,MessageDlg_t	niup: childoffset(ih: MessageDlg_t): string	
clientoffset	niup.html#clientoffset,MessageDlg_t	niup: clientoffset(ih: MessageDlg_t): string	
clientsize=	niup.html#clientsize=,MessageDlg_t,string	niup: clientsize=(ih: MessageDlg_t; value: string)	
clientsize	niup.html#clientsize,MessageDlg_t,string	niup: clientsize(ih: MessageDlg_t; value: string)	
clientsize=	niup.html#clientsize=,MessageDlg_t,int,int	niup: clientsize=(ih: MessageDlg_t; width, height: int)	
clientsize	niup.html#clientsize,MessageDlg_t,int,int	niup: clientsize(ih: MessageDlg_t; width, height: int)	
clientsize	niup.html#clientsize,MessageDlg_t	niup: clientsize(ih: MessageDlg_t): string	
composited=	niup.html#composited=,MessageDlg_t,string	niup: composited=(ih: MessageDlg_t; value: string)	
composited	niup.html#composited,MessageDlg_t,string	niup: composited(ih: MessageDlg_t; value: string)	
composited=	niup.html#composited=,MessageDlg_t,bool	niup: composited=(ih: MessageDlg_t; yes: bool)	
composited	niup.html#composited,MessageDlg_t,bool	niup: composited(ih: MessageDlg_t; yes: bool)	
composited	niup.html#composited,MessageDlg_t	niup: composited(ih: MessageDlg_t): bool	
control=	niup.html#control=,MessageDlg_t,string	niup: control=(ih: MessageDlg_t; value: string)	
control	niup.html#control,MessageDlg_t,string	niup: control(ih: MessageDlg_t; value: string)	
control=	niup.html#control=,MessageDlg_t,bool	niup: control=(ih: MessageDlg_t; yes: bool)	
control	niup.html#control,MessageDlg_t,bool	niup: control(ih: MessageDlg_t; yes: bool)	
control	niup.html#control,MessageDlg_t	niup: control(ih: MessageDlg_t): bool	
cursor=	niup.html#cursor=,MessageDlg_t,	niup: cursor=(ih: MessageDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,MessageDlg_t,	niup: cursor(ih: MessageDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,MessageDlg_t	niup: cursor(ih: MessageDlg_t): string	
customframe=	niup.html#customframe=,MessageDlg_t,string	niup: customframe=(ih: MessageDlg_t; value: string)	
customframe	niup.html#customframe,MessageDlg_t,string	niup: customframe(ih: MessageDlg_t; value: string)	
customframe=	niup.html#customframe=,MessageDlg_t,bool	niup: customframe=(ih: MessageDlg_t; yes: bool)	
customframe	niup.html#customframe,MessageDlg_t,bool	niup: customframe(ih: MessageDlg_t; yes: bool)	
customframe	niup.html#customframe,MessageDlg_t	niup: customframe(ih: MessageDlg_t): bool	
customframesimulate=	niup.html#customframesimulate=,MessageDlg_t,string	niup: customframesimulate=(ih: MessageDlg_t; value: string)	
customframesimulate	niup.html#customframesimulate,MessageDlg_t,string	niup: customframesimulate(ih: MessageDlg_t; value: string)	
customframesimulate=	niup.html#customframesimulate=,MessageDlg_t,bool	niup: customframesimulate=(ih: MessageDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,MessageDlg_t,bool	niup: customframesimulate(ih: MessageDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,MessageDlg_t	niup: customframesimulate(ih: MessageDlg_t): bool	
defaultenter=	niup.html#defaultenter=,MessageDlg_t,IUPhandle_t	niup: defaultenter=(ih: MessageDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,MessageDlg_t,IUPhandle_t	niup: defaultenter(ih: MessageDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,MessageDlg_t	niup: defaultenter(ih: MessageDlg_t): string	
defaultesc=	niup.html#defaultesc=,MessageDlg_t,IUPhandle_t	niup: defaultesc=(ih: MessageDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,MessageDlg_t,IUPhandle_t	niup: defaultesc(ih: MessageDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,MessageDlg_t	niup: defaultesc(ih: MessageDlg_t): string	
dialogframe=	niup.html#dialogframe=,MessageDlg_t,string	niup: dialogframe=(ih: MessageDlg_t; value: string)	
dialogframe	niup.html#dialogframe,MessageDlg_t,string	niup: dialogframe(ih: MessageDlg_t; value: string)	
dialogframe=	niup.html#dialogframe=,MessageDlg_t,bool	niup: dialogframe=(ih: MessageDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,MessageDlg_t,bool	niup: dialogframe(ih: MessageDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,MessageDlg_t	niup: dialogframe(ih: MessageDlg_t): bool	
dialoghint=	niup.html#dialoghint=,MessageDlg_t,string	niup: dialoghint=(ih: MessageDlg_t; value: string)	
dialoghint	niup.html#dialoghint,MessageDlg_t,string	niup: dialoghint(ih: MessageDlg_t; value: string)	
dialoghint=	niup.html#dialoghint=,MessageDlg_t,bool	niup: dialoghint=(ih: MessageDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,MessageDlg_t,bool	niup: dialoghint(ih: MessageDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,MessageDlg_t	niup: dialoghint(ih: MessageDlg_t): bool	
dialogtype=	niup.html#dialogtype=,MessageDlg_t,string	niup: dialogtype=(ih: MessageDlg_t; value: string)	
dialogtype	niup.html#dialogtype,MessageDlg_t,string	niup: dialogtype(ih: MessageDlg_t; value: string)	
dialogtype	niup.html#dialogtype,MessageDlg_t	niup: dialogtype(ih: MessageDlg_t): string	
dragdrop=	niup.html#dragdrop=,MessageDlg_t,string	niup: dragdrop=(ih: MessageDlg_t; value: string)	
dragdrop	niup.html#dragdrop,MessageDlg_t,string	niup: dragdrop(ih: MessageDlg_t; value: string)	
dragdrop=	niup.html#dragdrop=,MessageDlg_t,bool	niup: dragdrop=(ih: MessageDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,MessageDlg_t,bool	niup: dragdrop(ih: MessageDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,MessageDlg_t	niup: dragdrop(ih: MessageDlg_t): bool	
dragsource=	niup.html#dragsource=,MessageDlg_t,string	niup: dragsource=(ih: MessageDlg_t; value: string)	
dragsource	niup.html#dragsource,MessageDlg_t,string	niup: dragsource(ih: MessageDlg_t; value: string)	
dragsource=	niup.html#dragsource=,MessageDlg_t,bool	niup: dragsource=(ih: MessageDlg_t; yes: bool)	
dragsource	niup.html#dragsource,MessageDlg_t,bool	niup: dragsource(ih: MessageDlg_t; yes: bool)	
dragsource	niup.html#dragsource,MessageDlg_t	niup: dragsource(ih: MessageDlg_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,MessageDlg_t,string	niup: dragsourcemove=(ih: MessageDlg_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,MessageDlg_t,string	niup: dragsourcemove(ih: MessageDlg_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,MessageDlg_t,bool	niup: dragsourcemove=(ih: MessageDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,MessageDlg_t,bool	niup: dragsourcemove(ih: MessageDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,MessageDlg_t	niup: dragsourcemove(ih: MessageDlg_t): bool	
dragtypes=	niup.html#dragtypes=,MessageDlg_t,string	niup: dragtypes=(ih: MessageDlg_t; value: string)	
dragtypes	niup.html#dragtypes,MessageDlg_t,string	niup: dragtypes(ih: MessageDlg_t; value: string)	
dragtypes	niup.html#dragtypes,MessageDlg_t	niup: dragtypes(ih: MessageDlg_t): string	
dropfilestarget=	niup.html#dropfilestarget=,MessageDlg_t,string	niup: dropfilestarget=(ih: MessageDlg_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,MessageDlg_t,string	niup: dropfilestarget(ih: MessageDlg_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,MessageDlg_t,bool	niup: dropfilestarget=(ih: MessageDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,MessageDlg_t,bool	niup: dropfilestarget(ih: MessageDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,MessageDlg_t	niup: dropfilestarget(ih: MessageDlg_t): bool	
droptarget=	niup.html#droptarget=,MessageDlg_t,string	niup: droptarget=(ih: MessageDlg_t; value: string)	
droptarget	niup.html#droptarget,MessageDlg_t,string	niup: droptarget(ih: MessageDlg_t; value: string)	
droptarget=	niup.html#droptarget=,MessageDlg_t,bool	niup: droptarget=(ih: MessageDlg_t; yes: bool)	
droptarget	niup.html#droptarget,MessageDlg_t,bool	niup: droptarget(ih: MessageDlg_t; yes: bool)	
droptarget	niup.html#droptarget,MessageDlg_t	niup: droptarget(ih: MessageDlg_t): bool	
droptypes=	niup.html#droptypes=,MessageDlg_t,string	niup: droptypes=(ih: MessageDlg_t; value: string)	
droptypes	niup.html#droptypes,MessageDlg_t,string	niup: droptypes(ih: MessageDlg_t; value: string)	
droptypes	niup.html#droptypes,MessageDlg_t	niup: droptypes(ih: MessageDlg_t): string	
expand=	niup.html#expand=,MessageDlg_t,string	niup: expand=(ih: MessageDlg_t; value: string)	
expand	niup.html#expand,MessageDlg_t,string	niup: expand(ih: MessageDlg_t; value: string)	
expand	niup.html#expand,MessageDlg_t	niup: expand(ih: MessageDlg_t): string	
expandweight=	niup.html#expandweight=,MessageDlg_t,string	niup: expandweight=(ih: MessageDlg_t; value: string)	
expandweight	niup.html#expandweight,MessageDlg_t,string	niup: expandweight(ih: MessageDlg_t; value: string)	
expandweight=	niup.html#expandweight=,MessageDlg_t,int64	niup: expandweight=(ih: MessageDlg_t; x: int64)	
expandweight	niup.html#expandweight,MessageDlg_t,int64	niup: expandweight(ih: MessageDlg_t; x: int64)	
expandweight	niup.html#expandweight,MessageDlg_t	niup: expandweight(ih: MessageDlg_t): string	
floating=	niup.html#floating=,MessageDlg_t,string	niup: floating=(ih: MessageDlg_t; value: string)	
floating	niup.html#floating,MessageDlg_t,string	niup: floating(ih: MessageDlg_t; value: string)	
floating	niup.html#floating,MessageDlg_t	niup: floating(ih: MessageDlg_t): string	
font=	niup.html#font=,MessageDlg_t,string	niup: font=(ih: MessageDlg_t; value: string)	
font	niup.html#font,MessageDlg_t,string	niup: font(ih: MessageDlg_t; value: string)	
font	niup.html#font,MessageDlg_t	niup: font(ih: MessageDlg_t): string	
fontface=	niup.html#fontface=,MessageDlg_t,string	niup: fontface=(ih: MessageDlg_t; value: string)	
fontface	niup.html#fontface,MessageDlg_t,string	niup: fontface(ih: MessageDlg_t; value: string)	
fontface	niup.html#fontface,MessageDlg_t	niup: fontface(ih: MessageDlg_t): string	
fontsize=	niup.html#fontsize=,MessageDlg_t,string	niup: fontsize=(ih: MessageDlg_t; value: string)	
fontsize	niup.html#fontsize,MessageDlg_t,string	niup: fontsize(ih: MessageDlg_t; value: string)	
fontsize=	niup.html#fontsize=,MessageDlg_t,int	niup: fontsize=(ih: MessageDlg_t; x: int)	
fontsize	niup.html#fontsize,MessageDlg_t,int	niup: fontsize(ih: MessageDlg_t; x: int)	
fontsize	niup.html#fontsize,MessageDlg_t	niup: fontsize(ih: MessageDlg_t): string	
fontstyle=	niup.html#fontstyle=,MessageDlg_t,string	niup: fontstyle=(ih: MessageDlg_t; value: string)	
fontstyle	niup.html#fontstyle,MessageDlg_t,string	niup: fontstyle(ih: MessageDlg_t; value: string)	
fontstyle	niup.html#fontstyle,MessageDlg_t	niup: fontstyle(ih: MessageDlg_t): string	
fullscreen=	niup.html#fullscreen=,MessageDlg_t,string	niup: fullscreen=(ih: MessageDlg_t; value: string)	
fullscreen	niup.html#fullscreen,MessageDlg_t,string	niup: fullscreen(ih: MessageDlg_t; value: string)	
fullscreen=	niup.html#fullscreen=,MessageDlg_t,bool	niup: fullscreen=(ih: MessageDlg_t; yes: bool)	
fullscreen	niup.html#fullscreen,MessageDlg_t,bool	niup: fullscreen(ih: MessageDlg_t; yes: bool)	
handlename=	niup.html#handlename=,MessageDlg_t,string	niup: handlename=(ih: MessageDlg_t; value: string)	
handlename	niup.html#handlename,MessageDlg_t,string	niup: handlename(ih: MessageDlg_t; value: string)	
handlename	niup.html#handlename,MessageDlg_t	niup: handlename(ih: MessageDlg_t): string	
helpbutton=	niup.html#helpbutton=,MessageDlg_t,string	niup: helpbutton=(ih: MessageDlg_t; value: string)	
helpbutton	niup.html#helpbutton,MessageDlg_t,string	niup: helpbutton(ih: MessageDlg_t; value: string)	
helpbutton=	niup.html#helpbutton=,MessageDlg_t,bool	niup: helpbutton=(ih: MessageDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,MessageDlg_t,bool	niup: helpbutton(ih: MessageDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,MessageDlg_t	niup: helpbutton(ih: MessageDlg_t): bool	
hidetaskbar=	niup.html#hidetaskbar=,MessageDlg_t,string	niup: hidetaskbar=(ih: MessageDlg_t; value: string)	
hidetaskbar	niup.html#hidetaskbar,MessageDlg_t,string	niup: hidetaskbar(ih: MessageDlg_t; value: string)	
hidetaskbar=	niup.html#hidetaskbar=,MessageDlg_t,bool	niup: hidetaskbar=(ih: MessageDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,MessageDlg_t,bool	niup: hidetaskbar(ih: MessageDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,MessageDlg_t	niup: hidetaskbar(ih: MessageDlg_t): bool	
hidetitlebar=	niup.html#hidetitlebar=,MessageDlg_t,string	niup: hidetitlebar=(ih: MessageDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,MessageDlg_t,string	niup: hidetitlebar(ih: MessageDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,MessageDlg_t	niup: hidetitlebar(ih: MessageDlg_t): string	
icon=	niup.html#icon=,MessageDlg_t,string	niup: icon=(ih: MessageDlg_t; value: string)	
icon	niup.html#icon,MessageDlg_t,string	niup: icon(ih: MessageDlg_t; value: string)	
icon	niup.html#icon,MessageDlg_t	niup: icon(ih: MessageDlg_t): string	
maxbox=	niup.html#maxbox=,MessageDlg_t,string	niup: maxbox=(ih: MessageDlg_t; value: string)	
maxbox	niup.html#maxbox,MessageDlg_t,string	niup: maxbox(ih: MessageDlg_t; value: string)	
maxbox=	niup.html#maxbox=,MessageDlg_t,bool	niup: maxbox=(ih: MessageDlg_t; yes: bool)	
maxbox	niup.html#maxbox,MessageDlg_t,bool	niup: maxbox(ih: MessageDlg_t; yes: bool)	
maxbox	niup.html#maxbox,MessageDlg_t	niup: maxbox(ih: MessageDlg_t): bool	
maximized	niup.html#maximized,MessageDlg_t	niup: maximized(ih: MessageDlg_t): bool	
maxsize=	niup.html#maxsize=,MessageDlg_t,string	niup: maxsize=(ih: MessageDlg_t; value: string)	
maxsize	niup.html#maxsize,MessageDlg_t,string	niup: maxsize(ih: MessageDlg_t; value: string)	
maxsize=	niup.html#maxsize=,MessageDlg_t,int,int	niup: maxsize=(ih: MessageDlg_t; width, height: int)	
maxsize	niup.html#maxsize,MessageDlg_t,int,int	niup: maxsize(ih: MessageDlg_t; width, height: int)	
maxsize	niup.html#maxsize,MessageDlg_t	niup: maxsize(ih: MessageDlg_t): string	
mdichild=	niup.html#mdichild=,MessageDlg_t,string	niup: mdichild=(ih: MessageDlg_t; value: string)	
mdichild	niup.html#mdichild,MessageDlg_t,string	niup: mdichild(ih: MessageDlg_t; value: string)	
mdichild=	niup.html#mdichild=,MessageDlg_t,bool	niup: mdichild=(ih: MessageDlg_t; yes: bool)	
mdichild	niup.html#mdichild,MessageDlg_t,bool	niup: mdichild(ih: MessageDlg_t; yes: bool)	
mdichild	niup.html#mdichild,MessageDlg_t	niup: mdichild(ih: MessageDlg_t): bool	
mdiclient=	niup.html#mdiclient=,MessageDlg_t,string	niup: mdiclient=(ih: MessageDlg_t; value: string)	
mdiclient	niup.html#mdiclient,MessageDlg_t,string	niup: mdiclient(ih: MessageDlg_t; value: string)	
mdiclient=	niup.html#mdiclient=,MessageDlg_t,bool	niup: mdiclient=(ih: MessageDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,MessageDlg_t,bool	niup: mdiclient(ih: MessageDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,MessageDlg_t	niup: mdiclient(ih: MessageDlg_t): bool	
mdiframe=	niup.html#mdiframe=,MessageDlg_t,string	niup: mdiframe=(ih: MessageDlg_t; value: string)	
mdiframe	niup.html#mdiframe,MessageDlg_t,string	niup: mdiframe(ih: MessageDlg_t; value: string)	
mdiframe=	niup.html#mdiframe=,MessageDlg_t,bool	niup: mdiframe=(ih: MessageDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,MessageDlg_t,bool	niup: mdiframe(ih: MessageDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,MessageDlg_t	niup: mdiframe(ih: MessageDlg_t): bool	
mdimenu=	niup.html#mdimenu=,MessageDlg_t,Menu_t	niup: mdimenu=(ih: MessageDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,MessageDlg_t,Menu_t	niup: mdimenu(ih: MessageDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,MessageDlg_t	niup: mdimenu(ih: MessageDlg_t): string	
menu=	niup.html#menu=,MessageDlg_t,Menu_t	niup: menu=(ih: MessageDlg_t; handle: Menu_t)	
menu	niup.html#menu,MessageDlg_t,Menu_t	niup: menu(ih: MessageDlg_t; handle: Menu_t)	
menu	niup.html#menu,MessageDlg_t	niup: menu(ih: MessageDlg_t): string	
menubox=	niup.html#menubox=,MessageDlg_t,string	niup: menubox=(ih: MessageDlg_t; value: string)	
menubox	niup.html#menubox,MessageDlg_t,string	niup: menubox(ih: MessageDlg_t; value: string)	
menubox=	niup.html#menubox=,MessageDlg_t,bool	niup: menubox=(ih: MessageDlg_t; yes: bool)	
menubox	niup.html#menubox,MessageDlg_t,bool	niup: menubox(ih: MessageDlg_t; yes: bool)	
menubox	niup.html#menubox,MessageDlg_t	niup: menubox(ih: MessageDlg_t): bool	
minbox=	niup.html#minbox=,MessageDlg_t,string	niup: minbox=(ih: MessageDlg_t; value: string)	
minbox	niup.html#minbox,MessageDlg_t,string	niup: minbox(ih: MessageDlg_t; value: string)	
minbox=	niup.html#minbox=,MessageDlg_t,bool	niup: minbox=(ih: MessageDlg_t; yes: bool)	
minbox	niup.html#minbox,MessageDlg_t,bool	niup: minbox(ih: MessageDlg_t; yes: bool)	
minbox	niup.html#minbox,MessageDlg_t	niup: minbox(ih: MessageDlg_t): bool	
minsize=	niup.html#minsize=,MessageDlg_t,string	niup: minsize=(ih: MessageDlg_t; value: string)	
minsize	niup.html#minsize,MessageDlg_t,string	niup: minsize(ih: MessageDlg_t; value: string)	
minsize=	niup.html#minsize=,MessageDlg_t,int,int	niup: minsize=(ih: MessageDlg_t; width, height: int)	
minsize	niup.html#minsize,MessageDlg_t,int,int	niup: minsize(ih: MessageDlg_t; width, height: int)	
minsize	niup.html#minsize,MessageDlg_t	niup: minsize(ih: MessageDlg_t): string	
modal	niup.html#modal,MessageDlg_t	niup: modal(ih: MessageDlg_t): bool	
nactive=	niup.html#nactive=,MessageDlg_t,string	niup: nactive=(ih: MessageDlg_t; value: string)	
nactive	niup.html#nactive,MessageDlg_t,string	niup: nactive(ih: MessageDlg_t; value: string)	
nactive=	niup.html#nactive=,MessageDlg_t,bool	niup: nactive=(ih: MessageDlg_t; yes: bool)	
nactive	niup.html#nactive,MessageDlg_t,bool	niup: nactive(ih: MessageDlg_t; yes: bool)	
nactive	niup.html#nactive,MessageDlg_t	niup: nactive(ih: MessageDlg_t): bool	
name=	niup.html#name=,MessageDlg_t,string	niup: name=(ih: MessageDlg_t; value: string)	
name	niup.html#name,MessageDlg_t,string	niup: name(ih: MessageDlg_t; value: string)	
name	niup.html#name,MessageDlg_t	niup: name(ih: MessageDlg_t): string	
nativeparent=	niup.html#nativeparent=,MessageDlg_t,User_t	niup: nativeparent=(ih: MessageDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,MessageDlg_t,User_t	niup: nativeparent(ih: MessageDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,MessageDlg_t	niup: nativeparent(ih: MessageDlg_t): string	
naturalsize	niup.html#naturalsize,MessageDlg_t	niup: naturalsize(ih: MessageDlg_t): string	
noflush=	niup.html#noflush=,MessageDlg_t,string	niup: noflush=(ih: MessageDlg_t; value: string)	
noflush	niup.html#noflush,MessageDlg_t,string	niup: noflush(ih: MessageDlg_t; value: string)	
noflush=	niup.html#noflush=,MessageDlg_t,bool	niup: noflush=(ih: MessageDlg_t; yes: bool)	
noflush	niup.html#noflush,MessageDlg_t,bool	niup: noflush(ih: MessageDlg_t; yes: bool)	
noflush	niup.html#noflush,MessageDlg_t	niup: noflush(ih: MessageDlg_t): bool	
normalizergroup=	niup.html#normalizergroup=,MessageDlg_t,string	niup: normalizergroup=(ih: MessageDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,MessageDlg_t,string	niup: normalizergroup(ih: MessageDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,MessageDlg_t	niup: normalizergroup(ih: MessageDlg_t): string	
ntheme=	niup.html#ntheme=,MessageDlg_t,string	niup: ntheme=(ih: MessageDlg_t; value: string)	
ntheme	niup.html#ntheme,MessageDlg_t,string	niup: ntheme(ih: MessageDlg_t; value: string)	
ntheme	niup.html#ntheme,MessageDlg_t	niup: ntheme(ih: MessageDlg_t): string	
opacity=	niup.html#opacity=,MessageDlg_t,string	niup: opacity=(ih: MessageDlg_t; value: string)	
opacity	niup.html#opacity,MessageDlg_t,string	niup: opacity(ih: MessageDlg_t; value: string)	
opacity=	niup.html#opacity=,MessageDlg_t,int	niup: opacity=(ih: MessageDlg_t; x: int)	
opacity	niup.html#opacity,MessageDlg_t,int	niup: opacity(ih: MessageDlg_t; x: int)	
opacity	niup.html#opacity,MessageDlg_t	niup: opacity(ih: MessageDlg_t): string	
opacityimage=	niup.html#opacityimage=,MessageDlg_t,string	niup: opacityimage=(ih: MessageDlg_t; value: string)	
opacityimage	niup.html#opacityimage,MessageDlg_t,string	niup: opacityimage(ih: MessageDlg_t; value: string)	
opacityimage	niup.html#opacityimage,MessageDlg_t	niup: opacityimage(ih: MessageDlg_t): string	
pangofontdesc	niup.html#pangofontdesc,MessageDlg_t	niup: pangofontdesc(ih: MessageDlg_t): string	
pangolayout	niup.html#pangolayout,MessageDlg_t	niup: pangolayout(ih: MessageDlg_t): string	
parentdialog=	niup.html#parentdialog=,MessageDlg_t,IUPhandle_t	niup: parentdialog=(ih: MessageDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,MessageDlg_t,IUPhandle_t	niup: parentdialog(ih: MessageDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,MessageDlg_t	niup: parentdialog(ih: MessageDlg_t): string	
placement=	niup.html#placement=,MessageDlg_t,string	niup: placement=(ih: MessageDlg_t; value: string)	
placement	niup.html#placement,MessageDlg_t,string	niup: placement(ih: MessageDlg_t; value: string)	
placement	niup.html#placement,MessageDlg_t	niup: placement(ih: MessageDlg_t): string	
position=	niup.html#position=,MessageDlg_t,string	niup: position=(ih: MessageDlg_t; value: string)	
position	niup.html#position,MessageDlg_t,string	niup: position(ih: MessageDlg_t; value: string)	
position=	niup.html#position=,MessageDlg_t,int,int	niup: position=(ih: MessageDlg_t; x, y: int)	
position	niup.html#position,MessageDlg_t,int,int	niup: position(ih: MessageDlg_t; x, y: int)	
position	niup.html#position,MessageDlg_t	niup: position(ih: MessageDlg_t): string	
propagatefocus=	niup.html#propagatefocus=,MessageDlg_t,string	niup: propagatefocus=(ih: MessageDlg_t; value: string)	
propagatefocus	niup.html#propagatefocus,MessageDlg_t,string	niup: propagatefocus(ih: MessageDlg_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,MessageDlg_t,bool	niup: propagatefocus=(ih: MessageDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,MessageDlg_t,bool	niup: propagatefocus(ih: MessageDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,MessageDlg_t	niup: propagatefocus(ih: MessageDlg_t): bool	
rastersize=	niup.html#rastersize=,MessageDlg_t,string	niup: rastersize=(ih: MessageDlg_t; value: string)	
rastersize	niup.html#rastersize,MessageDlg_t,string	niup: rastersize(ih: MessageDlg_t; value: string)	
rastersize=	niup.html#rastersize=,MessageDlg_t,int,int	niup: rastersize=(ih: MessageDlg_t; width, height: int)	
rastersize	niup.html#rastersize,MessageDlg_t,int,int	niup: rastersize(ih: MessageDlg_t; width, height: int)	
rastersize	niup.html#rastersize,MessageDlg_t	niup: rastersize(ih: MessageDlg_t): string	
resize=	niup.html#resize=,MessageDlg_t,string	niup: resize=(ih: MessageDlg_t; value: string)	
resize	niup.html#resize,MessageDlg_t,string	niup: resize(ih: MessageDlg_t; value: string)	
resize=	niup.html#resize=,MessageDlg_t,bool	niup: resize=(ih: MessageDlg_t; yes: bool)	
resize	niup.html#resize,MessageDlg_t,bool	niup: resize(ih: MessageDlg_t; yes: bool)	
resize	niup.html#resize,MessageDlg_t	niup: resize(ih: MessageDlg_t): bool	
saveunder=	niup.html#saveunder=,MessageDlg_t,string	niup: saveunder=(ih: MessageDlg_t; value: string)	
saveunder	niup.html#saveunder,MessageDlg_t,string	niup: saveunder(ih: MessageDlg_t; value: string)	
saveunder=	niup.html#saveunder=,MessageDlg_t,bool	niup: saveunder=(ih: MessageDlg_t; yes: bool)	
saveunder	niup.html#saveunder,MessageDlg_t,bool	niup: saveunder(ih: MessageDlg_t; yes: bool)	
saveunder	niup.html#saveunder,MessageDlg_t	niup: saveunder(ih: MessageDlg_t): bool	
screenposition	niup.html#screenposition,MessageDlg_t	niup: screenposition(ih: MessageDlg_t): string	
shapeimage=	niup.html#shapeimage=,MessageDlg_t,string	niup: shapeimage=(ih: MessageDlg_t; value: string)	
shapeimage	niup.html#shapeimage,MessageDlg_t,string	niup: shapeimage(ih: MessageDlg_t; value: string)	
shapeimage	niup.html#shapeimage,MessageDlg_t	niup: shapeimage(ih: MessageDlg_t): string	
shownofocus=	niup.html#shownofocus=,MessageDlg_t,string	niup: shownofocus=(ih: MessageDlg_t; value: string)	
shownofocus	niup.html#shownofocus,MessageDlg_t,string	niup: shownofocus(ih: MessageDlg_t; value: string)	
shownofocus=	niup.html#shownofocus=,MessageDlg_t,bool	niup: shownofocus=(ih: MessageDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,MessageDlg_t,bool	niup: shownofocus(ih: MessageDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,MessageDlg_t	niup: shownofocus(ih: MessageDlg_t): bool	
shrink=	niup.html#shrink=,MessageDlg_t,string	niup: shrink=(ih: MessageDlg_t; value: string)	
shrink	niup.html#shrink,MessageDlg_t,string	niup: shrink(ih: MessageDlg_t; value: string)	
shrink=	niup.html#shrink=,MessageDlg_t,bool	niup: shrink=(ih: MessageDlg_t; yes: bool)	
shrink	niup.html#shrink,MessageDlg_t,bool	niup: shrink(ih: MessageDlg_t; yes: bool)	
shrink	niup.html#shrink,MessageDlg_t	niup: shrink(ih: MessageDlg_t): bool	
simulatemodal=	niup.html#simulatemodal=,MessageDlg_t,string	niup: simulatemodal=(ih: MessageDlg_t; value: string)	
simulatemodal	niup.html#simulatemodal,MessageDlg_t,string	niup: simulatemodal(ih: MessageDlg_t; value: string)	
simulatemodal=	niup.html#simulatemodal=,MessageDlg_t,bool	niup: simulatemodal=(ih: MessageDlg_t; yes: bool)	
simulatemodal	niup.html#simulatemodal,MessageDlg_t,bool	niup: simulatemodal(ih: MessageDlg_t; yes: bool)	
size=	niup.html#size=,MessageDlg_t,string	niup: size=(ih: MessageDlg_t; value: string)	
size	niup.html#size,MessageDlg_t,string	niup: size(ih: MessageDlg_t; value: string)	
size=	niup.html#size=,MessageDlg_t,int,int	niup: size=(ih: MessageDlg_t; width, height: int)	
size	niup.html#size,MessageDlg_t,int,int	niup: size(ih: MessageDlg_t; width, height: int)	
size=	niup.html#size=,MessageDlg_t,string,int	niup: size=(ih: MessageDlg_t; width: string; height: int)	
size	niup.html#size,MessageDlg_t,string,int	niup: size(ih: MessageDlg_t; width: string; height: int)	
size=	niup.html#size=,MessageDlg_t,int,string	niup: size=(ih: MessageDlg_t; width: int; height: string)	
size	niup.html#size,MessageDlg_t,int,string	niup: size(ih: MessageDlg_t; width: int; height: string)	
size	niup.html#size,MessageDlg_t	niup: size(ih: MessageDlg_t): string	
startfocus=	niup.html#startfocus=,MessageDlg_t,string	niup: startfocus=(ih: MessageDlg_t; value: string)	
startfocus	niup.html#startfocus,MessageDlg_t,string	niup: startfocus(ih: MessageDlg_t; value: string)	
startfocus	niup.html#startfocus,MessageDlg_t	niup: startfocus(ih: MessageDlg_t): string	
theme=	niup.html#theme=,MessageDlg_t,string	niup: theme=(ih: MessageDlg_t; value: string)	
theme	niup.html#theme,MessageDlg_t,string	niup: theme(ih: MessageDlg_t; value: string)	
theme	niup.html#theme,MessageDlg_t	niup: theme(ih: MessageDlg_t): string	
tip=	niup.html#tip=,MessageDlg_t,string	niup: tip=(ih: MessageDlg_t; value: string)	
tip	niup.html#tip,MessageDlg_t,string	niup: tip(ih: MessageDlg_t; value: string)	
tip	niup.html#tip,MessageDlg_t	niup: tip(ih: MessageDlg_t): string	
tipbgcolor=	niup.html#tipbgcolor=,MessageDlg_t,string	niup: tipbgcolor=(ih: MessageDlg_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,MessageDlg_t,string	niup: tipbgcolor(ih: MessageDlg_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,MessageDlg_t,int,int,int,int	niup: tipbgcolor=(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,MessageDlg_t,int,int,int,int	niup: tipbgcolor(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,MessageDlg_t	niup: tipbgcolor(ih: MessageDlg_t): string	
tipdelay=	niup.html#tipdelay=,MessageDlg_t,string	niup: tipdelay=(ih: MessageDlg_t; value: string)	
tipdelay	niup.html#tipdelay,MessageDlg_t,string	niup: tipdelay(ih: MessageDlg_t; value: string)	
tipdelay=	niup.html#tipdelay=,MessageDlg_t,int	niup: tipdelay=(ih: MessageDlg_t; x: int)	
tipdelay	niup.html#tipdelay,MessageDlg_t,int	niup: tipdelay(ih: MessageDlg_t; x: int)	
tipdelay	niup.html#tipdelay,MessageDlg_t	niup: tipdelay(ih: MessageDlg_t): string	
tipfgcolor=	niup.html#tipfgcolor=,MessageDlg_t,string	niup: tipfgcolor=(ih: MessageDlg_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,MessageDlg_t,string	niup: tipfgcolor(ih: MessageDlg_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,MessageDlg_t,int,int,int,int	niup: tipfgcolor=(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,MessageDlg_t,int,int,int,int	niup: tipfgcolor(ih: MessageDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,MessageDlg_t	niup: tipfgcolor(ih: MessageDlg_t): string	
tipicon=	niup.html#tipicon=,MessageDlg_t,string	niup: tipicon=(ih: MessageDlg_t; value: string)	
tipicon	niup.html#tipicon,MessageDlg_t,string	niup: tipicon(ih: MessageDlg_t; value: string)	
tipicon	niup.html#tipicon,MessageDlg_t	niup: tipicon(ih: MessageDlg_t): string	
tipmarkup=	niup.html#tipmarkup=,MessageDlg_t,string	niup: tipmarkup=(ih: MessageDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,MessageDlg_t,string	niup: tipmarkup(ih: MessageDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,MessageDlg_t	niup: tipmarkup(ih: MessageDlg_t): string	
tiprect=	niup.html#tiprect=,MessageDlg_t,string	niup: tiprect=(ih: MessageDlg_t; value: string)	
tiprect	niup.html#tiprect,MessageDlg_t,string	niup: tiprect(ih: MessageDlg_t; value: string)	
tiprect=	niup.html#tiprect=,MessageDlg_t,int,int,int,int	niup: tiprect=(ih: MessageDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,MessageDlg_t,int,int,int,int	niup: tiprect(ih: MessageDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,MessageDlg_t	niup: tiprect(ih: MessageDlg_t): string	
tipvisible=	niup.html#tipvisible=,MessageDlg_t,string	niup: tipvisible=(ih: MessageDlg_t; value: string)	
tipvisible	niup.html#tipvisible,MessageDlg_t,string	niup: tipvisible(ih: MessageDlg_t; value: string)	
tipvisible=	niup.html#tipvisible=,MessageDlg_t,bool	niup: tipvisible=(ih: MessageDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,MessageDlg_t,bool	niup: tipvisible(ih: MessageDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,MessageDlg_t	niup: tipvisible(ih: MessageDlg_t): bool	
title=	niup.html#title=,MessageDlg_t,string	niup: title=(ih: MessageDlg_t; value: string)	
title	niup.html#title,MessageDlg_t,string	niup: title(ih: MessageDlg_t; value: string)	
title	niup.html#title,MessageDlg_t	niup: title(ih: MessageDlg_t): string	
toolbox=	niup.html#toolbox=,MessageDlg_t,string	niup: toolbox=(ih: MessageDlg_t; value: string)	
toolbox	niup.html#toolbox,MessageDlg_t,string	niup: toolbox(ih: MessageDlg_t; value: string)	
toolbox=	niup.html#toolbox=,MessageDlg_t,bool	niup: toolbox=(ih: MessageDlg_t; yes: bool)	
toolbox	niup.html#toolbox,MessageDlg_t,bool	niup: toolbox(ih: MessageDlg_t; yes: bool)	
toolbox	niup.html#toolbox,MessageDlg_t	niup: toolbox(ih: MessageDlg_t): bool	
topmost=	niup.html#topmost=,MessageDlg_t,string	niup: topmost=(ih: MessageDlg_t; value: string)	
topmost	niup.html#topmost,MessageDlg_t,string	niup: topmost(ih: MessageDlg_t; value: string)	
topmost=	niup.html#topmost=,MessageDlg_t,bool	niup: topmost=(ih: MessageDlg_t; yes: bool)	
topmost	niup.html#topmost,MessageDlg_t,bool	niup: topmost(ih: MessageDlg_t; yes: bool)	
tray=	niup.html#tray=,MessageDlg_t,string	niup: tray=(ih: MessageDlg_t; value: string)	
tray	niup.html#tray,MessageDlg_t,string	niup: tray(ih: MessageDlg_t; value: string)	
tray=	niup.html#tray=,MessageDlg_t,bool	niup: tray=(ih: MessageDlg_t; yes: bool)	
tray	niup.html#tray,MessageDlg_t,bool	niup: tray(ih: MessageDlg_t; yes: bool)	
tray	niup.html#tray,MessageDlg_t	niup: tray(ih: MessageDlg_t): bool	
trayimage=	niup.html#trayimage=,MessageDlg_t,	niup: trayimage=(ih: MessageDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,MessageDlg_t,	niup: trayimage(ih: MessageDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,MessageDlg_t	niup: trayimage(ih: MessageDlg_t): string	
traytip=	niup.html#traytip=,MessageDlg_t,string	niup: traytip=(ih: MessageDlg_t; value: string)	
traytip	niup.html#traytip,MessageDlg_t,string	niup: traytip(ih: MessageDlg_t; value: string)	
traytip	niup.html#traytip,MessageDlg_t	niup: traytip(ih: MessageDlg_t): string	
traytipmarkup=	niup.html#traytipmarkup=,MessageDlg_t,string	niup: traytipmarkup=(ih: MessageDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,MessageDlg_t,string	niup: traytipmarkup(ih: MessageDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,MessageDlg_t	niup: traytipmarkup(ih: MessageDlg_t): string	
usersize=	niup.html#usersize=,MessageDlg_t,string	niup: usersize=(ih: MessageDlg_t; value: string)	
usersize	niup.html#usersize,MessageDlg_t,string	niup: usersize(ih: MessageDlg_t; value: string)	
usersize=	niup.html#usersize=,MessageDlg_t,int,int	niup: usersize=(ih: MessageDlg_t; width, height: int)	
usersize	niup.html#usersize,MessageDlg_t,int,int	niup: usersize(ih: MessageDlg_t; width, height: int)	
usersize	niup.html#usersize,MessageDlg_t	niup: usersize(ih: MessageDlg_t): string	
value=	niup.html#value=,MessageDlg_t,string	niup: value=(ih: MessageDlg_t; value: string)	
value	niup.html#value,MessageDlg_t,string	niup: value(ih: MessageDlg_t; value: string)	
value	niup.html#value,MessageDlg_t	niup: value(ih: MessageDlg_t): string	
visible=	niup.html#visible=,MessageDlg_t,string	niup: visible=(ih: MessageDlg_t; value: string)	
visible	niup.html#visible,MessageDlg_t,string	niup: visible(ih: MessageDlg_t; value: string)	
visible=	niup.html#visible=,MessageDlg_t,bool	niup: visible=(ih: MessageDlg_t; yes: bool)	
visible	niup.html#visible,MessageDlg_t,bool	niup: visible(ih: MessageDlg_t; yes: bool)	
visible	niup.html#visible,MessageDlg_t	niup: visible(ih: MessageDlg_t): bool	
wid	niup.html#wid,MessageDlg_t	niup: wid(ih: MessageDlg_t): string	
x	niup.html#x,MessageDlg_t	niup: x(ih: MessageDlg_t): string	
xfontid	niup.html#xfontid,MessageDlg_t	niup: xfontid(ih: MessageDlg_t): string	
xwindow	niup.html#xwindow,MessageDlg_t	niup: xwindow(ih: MessageDlg_t): string	
y	niup.html#y,MessageDlg_t	niup: y(ih: MessageDlg_t): string	
zorder=	niup.html#zorder=,MessageDlg_t,string	niup: zorder=(ih: MessageDlg_t; value: string)	
zorder	niup.html#zorder,MessageDlg_t,string	niup: zorder(ih: MessageDlg_t; value: string)	
close_cb=	niup.html#close_cb=,MessageDlg_t,proc(PIhandle)	niup: close_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,MessageDlg_t,proc(PIhandle)	niup: close_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,MessageDlg_t	niup: close_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,MessageDlg_t,proc(PIhandle)	niup: destroy_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,MessageDlg_t,proc(PIhandle)	niup: destroy_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,MessageDlg_t	niup: destroy_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,MessageDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: MessageDlg_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,MessageDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: MessageDlg_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,MessageDlg_t	niup: dragbegin_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,MessageDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: MessageDlg_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,MessageDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: MessageDlg_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,MessageDlg_t	niup: dragdatasize_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,MessageDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,MessageDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,MessageDlg_t	niup: dragdata_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,MessageDlg_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: MessageDlg_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,MessageDlg_t,proc(PIhandle,cint)	niup: dragend_cb(ih: MessageDlg_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,MessageDlg_t	niup: dragend_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,MessageDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,MessageDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,MessageDlg_t	niup: dropdata_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,MessageDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: MessageDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,MessageDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: MessageDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,MessageDlg_t	niup: dropfiles_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,MessageDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,MessageDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,MessageDlg_t	niup: dropmotion_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,MessageDlg_t,proc(PIhandle)	niup: enterwindow_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,MessageDlg_t,proc(PIhandle)	niup: enterwindow_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,MessageDlg_t	niup: enterwindow_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,MessageDlg_t,proc(PIhandle,cint)	niup: focus_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,MessageDlg_t,proc(PIhandle,cint)	niup: focus_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,MessageDlg_t	niup: focus_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,MessageDlg_t,proc(PIhandle)	niup: getfocus_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,MessageDlg_t,proc(PIhandle)	niup: getfocus_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,MessageDlg_t	niup: getfocus_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,MessageDlg_t,proc(PIhandle)	niup: help_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,MessageDlg_t,proc(PIhandle)	niup: help_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,MessageDlg_t	niup: help_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,MessageDlg_t,proc(PIhandle)	niup: killfocus_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,MessageDlg_t,proc(PIhandle)	niup: killfocus_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,MessageDlg_t	niup: killfocus_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,MessageDlg_t,proc(PIhandle,cint)	niup: k_any=(ih: MessageDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,MessageDlg_t,proc(PIhandle,cint)	niup: k_any(ih: MessageDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,MessageDlg_t	niup: k_any(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,MessageDlg_t,proc(PIhandle)	niup: ldestroy_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,MessageDlg_t,proc(PIhandle)	niup: ldestroy_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,MessageDlg_t	niup: ldestroy_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,MessageDlg_t,proc(PIhandle)	niup: leavewindow_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,MessageDlg_t,proc(PIhandle)	niup: leavewindow_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,MessageDlg_t	niup: leavewindow_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,MessageDlg_t,proc(PIhandle)	niup: map_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,MessageDlg_t,proc(PIhandle)	niup: map_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,MessageDlg_t	niup: map_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,MessageDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,MessageDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,MessageDlg_t	niup: postmessage_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,MessageDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: MessageDlg_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,MessageDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: MessageDlg_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,MessageDlg_t	niup: resize_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
show_cb=	niup.html#show_cb=,MessageDlg_t,proc(PIhandle,cint)	niup: show_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,MessageDlg_t,proc(PIhandle,cint)	niup: show_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,MessageDlg_t	niup: show_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
trayclick_cb=	niup.html#trayclick_cb=,MessageDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle;\n    but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,MessageDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb(ih: MessageDlg_t;\n             cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,MessageDlg_t	niup: trayclick_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,MessageDlg_t,proc(PIhandle)	niup: unmap_cb=(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,MessageDlg_t,proc(PIhandle)	niup: unmap_cb(ih: MessageDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,MessageDlg_t	niup: unmap_cb(ih: MessageDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
MultiBox	niup.html#MultiBox.m,varargs[untyped]	niup: MultiBox(args: varargs[untyped]): MultiBox_t	
active=	niup.html#active=,MultiBox_t,string	niup: active=(ih: MultiBox_t; value: string)	
active	niup.html#active,MultiBox_t,string	niup: active(ih: MultiBox_t; value: string)	
active=	niup.html#active=,MultiBox_t,bool	niup: active=(ih: MultiBox_t; yes: bool)	
active	niup.html#active,MultiBox_t,bool	niup: active(ih: MultiBox_t; yes: bool)	
active	niup.html#active,MultiBox_t	niup: active(ih: MultiBox_t): bool	
canfocus=	niup.html#canfocus=,MultiBox_t,string	niup: canfocus=(ih: MultiBox_t; value: string)	
canfocus	niup.html#canfocus,MultiBox_t,string	niup: canfocus(ih: MultiBox_t; value: string)	
canfocus=	niup.html#canfocus=,MultiBox_t,bool	niup: canfocus=(ih: MultiBox_t; yes: bool)	
canfocus	niup.html#canfocus,MultiBox_t,bool	niup: canfocus(ih: MultiBox_t; yes: bool)	
canfocus	niup.html#canfocus,MultiBox_t	niup: canfocus(ih: MultiBox_t): bool	
cgaphoriz	niup.html#cgaphoriz,MultiBox_t	niup: cgaphoriz(ih: MultiBox_t): string	
cgapvert	niup.html#cgapvert,MultiBox_t	niup: cgapvert(ih: MultiBox_t): string	
charsize	niup.html#charsize,MultiBox_t	niup: charsize(ih: MultiBox_t): string	
childmaxsize	niup.html#childmaxsize,MultiBox_t	niup: childmaxsize(ih: MultiBox_t): string	
childminspace	niup.html#childminspace,MultiBox_t	niup: childminspace(ih: MultiBox_t): string	
clientoffset	niup.html#clientoffset,MultiBox_t	niup: clientoffset(ih: MultiBox_t): string	
clientsize	niup.html#clientsize,MultiBox_t	niup: clientsize(ih: MultiBox_t): string	
cmargin=	niup.html#cmargin=,MultiBox_t,string	niup: cmargin=(ih: MultiBox_t; value: string)	
cmargin	niup.html#cmargin,MultiBox_t,string	niup: cmargin(ih: MultiBox_t; value: string)	
cmargin=	niup.html#cmargin=,MultiBox_t,int,int	niup: cmargin=(ih: MultiBox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,MultiBox_t,int,int	niup: cmargin(ih: MultiBox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,MultiBox_t	niup: cmargin(ih: MultiBox_t): string	
expand=	niup.html#expand=,MultiBox_t,string	niup: expand=(ih: MultiBox_t; value: string)	
expand	niup.html#expand,MultiBox_t,string	niup: expand(ih: MultiBox_t; value: string)	
expand	niup.html#expand,MultiBox_t	niup: expand(ih: MultiBox_t): string	
expandweight=	niup.html#expandweight=,MultiBox_t,string	niup: expandweight=(ih: MultiBox_t; value: string)	
expandweight	niup.html#expandweight,MultiBox_t,string	niup: expandweight(ih: MultiBox_t; value: string)	
expandweight=	niup.html#expandweight=,MultiBox_t,int64	niup: expandweight=(ih: MultiBox_t; x: int64)	
expandweight	niup.html#expandweight,MultiBox_t,int64	niup: expandweight(ih: MultiBox_t; x: int64)	
expandweight	niup.html#expandweight,MultiBox_t	niup: expandweight(ih: MultiBox_t): string	
floating=	niup.html#floating=,MultiBox_t,string	niup: floating=(ih: MultiBox_t; value: string)	
floating	niup.html#floating,MultiBox_t,string	niup: floating(ih: MultiBox_t; value: string)	
floating	niup.html#floating,MultiBox_t	niup: floating(ih: MultiBox_t): string	
font=	niup.html#font=,MultiBox_t,string	niup: font=(ih: MultiBox_t; value: string)	
font	niup.html#font,MultiBox_t,string	niup: font(ih: MultiBox_t; value: string)	
font	niup.html#font,MultiBox_t	niup: font(ih: MultiBox_t): string	
fontface=	niup.html#fontface=,MultiBox_t,string	niup: fontface=(ih: MultiBox_t; value: string)	
fontface	niup.html#fontface,MultiBox_t,string	niup: fontface(ih: MultiBox_t; value: string)	
fontface	niup.html#fontface,MultiBox_t	niup: fontface(ih: MultiBox_t): string	
fontsize=	niup.html#fontsize=,MultiBox_t,string	niup: fontsize=(ih: MultiBox_t; value: string)	
fontsize	niup.html#fontsize,MultiBox_t,string	niup: fontsize(ih: MultiBox_t; value: string)	
fontsize=	niup.html#fontsize=,MultiBox_t,int	niup: fontsize=(ih: MultiBox_t; x: int)	
fontsize	niup.html#fontsize,MultiBox_t,int	niup: fontsize(ih: MultiBox_t; x: int)	
fontsize	niup.html#fontsize,MultiBox_t	niup: fontsize(ih: MultiBox_t): string	
fontstyle=	niup.html#fontstyle=,MultiBox_t,string	niup: fontstyle=(ih: MultiBox_t; value: string)	
fontstyle	niup.html#fontstyle,MultiBox_t,string	niup: fontstyle(ih: MultiBox_t; value: string)	
fontstyle	niup.html#fontstyle,MultiBox_t	niup: fontstyle(ih: MultiBox_t): string	
gaphoriz	niup.html#gaphoriz,MultiBox_t	niup: gaphoriz(ih: MultiBox_t): string	
gapvert	niup.html#gapvert,MultiBox_t	niup: gapvert(ih: MultiBox_t): string	
handlename=	niup.html#handlename=,MultiBox_t,string	niup: handlename=(ih: MultiBox_t; value: string)	
handlename	niup.html#handlename,MultiBox_t,string	niup: handlename(ih: MultiBox_t; value: string)	
handlename	niup.html#handlename,MultiBox_t	niup: handlename(ih: MultiBox_t): string	
margin=	niup.html#margin=,MultiBox_t,string	niup: margin=(ih: MultiBox_t; value: string)	
margin	niup.html#margin,MultiBox_t,string	niup: margin(ih: MultiBox_t; value: string)	
margin=	niup.html#margin=,MultiBox_t,int,int	niup: margin=(ih: MultiBox_t; horiz, vert: int)	
margin	niup.html#margin,MultiBox_t,int,int	niup: margin(ih: MultiBox_t; horiz, vert: int)	
margin	niup.html#margin,MultiBox_t	niup: margin(ih: MultiBox_t): string	
maxsize=	niup.html#maxsize=,MultiBox_t,string	niup: maxsize=(ih: MultiBox_t; value: string)	
maxsize	niup.html#maxsize,MultiBox_t,string	niup: maxsize(ih: MultiBox_t; value: string)	
maxsize=	niup.html#maxsize=,MultiBox_t,int,int	niup: maxsize=(ih: MultiBox_t; width, height: int)	
maxsize	niup.html#maxsize,MultiBox_t,int,int	niup: maxsize(ih: MultiBox_t; width, height: int)	
maxsize	niup.html#maxsize,MultiBox_t	niup: maxsize(ih: MultiBox_t): string	
minsize=	niup.html#minsize=,MultiBox_t,string	niup: minsize=(ih: MultiBox_t; value: string)	
minsize	niup.html#minsize,MultiBox_t,string	niup: minsize(ih: MultiBox_t; value: string)	
minsize=	niup.html#minsize=,MultiBox_t,int,int	niup: minsize=(ih: MultiBox_t; width, height: int)	
minsize	niup.html#minsize,MultiBox_t,int,int	niup: minsize(ih: MultiBox_t; width, height: int)	
minsize	niup.html#minsize,MultiBox_t	niup: minsize(ih: MultiBox_t): string	
name=	niup.html#name=,MultiBox_t,string	niup: name=(ih: MultiBox_t; value: string)	
name	niup.html#name,MultiBox_t,string	niup: name(ih: MultiBox_t; value: string)	
name	niup.html#name,MultiBox_t	niup: name(ih: MultiBox_t): string	
naturalsize	niup.html#naturalsize,MultiBox_t	niup: naturalsize(ih: MultiBox_t): string	
ncgaphoriz	niup.html#ncgaphoriz,MultiBox_t	niup: ncgaphoriz(ih: MultiBox_t): string	
ncgapvert	niup.html#ncgapvert,MultiBox_t	niup: ncgapvert(ih: MultiBox_t): string	
ncmargin=	niup.html#ncmargin=,MultiBox_t,string	niup: ncmargin=(ih: MultiBox_t; value: string)	
ncmargin	niup.html#ncmargin,MultiBox_t,string	niup: ncmargin(ih: MultiBox_t; value: string)	
ncmargin=	niup.html#ncmargin=,MultiBox_t,int,int	niup: ncmargin=(ih: MultiBox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,MultiBox_t,int,int	niup: ncmargin(ih: MultiBox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,MultiBox_t	niup: ncmargin(ih: MultiBox_t): string	
ngaphoriz	niup.html#ngaphoriz,MultiBox_t	niup: ngaphoriz(ih: MultiBox_t): string	
ngapvert	niup.html#ngapvert,MultiBox_t	niup: ngapvert(ih: MultiBox_t): string	
nmargin=	niup.html#nmargin=,MultiBox_t,string	niup: nmargin=(ih: MultiBox_t; value: string)	
nmargin	niup.html#nmargin,MultiBox_t,string	niup: nmargin(ih: MultiBox_t; value: string)	
nmargin=	niup.html#nmargin=,MultiBox_t,int,int	niup: nmargin=(ih: MultiBox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,MultiBox_t,int,int	niup: nmargin(ih: MultiBox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,MultiBox_t	niup: nmargin(ih: MultiBox_t): string	
normalizergroup=	niup.html#normalizergroup=,MultiBox_t,string	niup: normalizergroup=(ih: MultiBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,MultiBox_t,string	niup: normalizergroup(ih: MultiBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,MultiBox_t	niup: normalizergroup(ih: MultiBox_t): string	
ntheme=	niup.html#ntheme=,MultiBox_t,string	niup: ntheme=(ih: MultiBox_t; value: string)	
ntheme	niup.html#ntheme,MultiBox_t,string	niup: ntheme(ih: MultiBox_t; value: string)	
ntheme	niup.html#ntheme,MultiBox_t	niup: ntheme(ih: MultiBox_t): string	
numcol	niup.html#numcol,MultiBox_t	niup: numcol(ih: MultiBox_t): string	
numlin	niup.html#numlin,MultiBox_t	niup: numlin(ih: MultiBox_t): string	
orientation=	niup.html#orientation=,MultiBox_t,string	niup: orientation=(ih: MultiBox_t; value: string)	
orientation	niup.html#orientation,MultiBox_t,string	niup: orientation(ih: MultiBox_t; value: string)	
orientation	niup.html#orientation,MultiBox_t	niup: orientation(ih: MultiBox_t): string	
pangofontdesc	niup.html#pangofontdesc,MultiBox_t	niup: pangofontdesc(ih: MultiBox_t): string	
pangolayout	niup.html#pangolayout,MultiBox_t	niup: pangolayout(ih: MultiBox_t): string	
position=	niup.html#position=,MultiBox_t,string	niup: position=(ih: MultiBox_t; value: string)	
position	niup.html#position,MultiBox_t,string	niup: position(ih: MultiBox_t; value: string)	
position=	niup.html#position=,MultiBox_t,int,int	niup: position=(ih: MultiBox_t; x, y: int)	
position	niup.html#position,MultiBox_t,int,int	niup: position(ih: MultiBox_t; x, y: int)	
position	niup.html#position,MultiBox_t	niup: position(ih: MultiBox_t): string	
propagatefocus=	niup.html#propagatefocus=,MultiBox_t,string	niup: propagatefocus=(ih: MultiBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,MultiBox_t,string	niup: propagatefocus(ih: MultiBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,MultiBox_t,bool	niup: propagatefocus=(ih: MultiBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,MultiBox_t,bool	niup: propagatefocus(ih: MultiBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,MultiBox_t	niup: propagatefocus(ih: MultiBox_t): bool	
rastersize=	niup.html#rastersize=,MultiBox_t,string	niup: rastersize=(ih: MultiBox_t; value: string)	
rastersize	niup.html#rastersize,MultiBox_t,string	niup: rastersize(ih: MultiBox_t; value: string)	
rastersize=	niup.html#rastersize=,MultiBox_t,int,int	niup: rastersize=(ih: MultiBox_t; width, height: int)	
rastersize	niup.html#rastersize,MultiBox_t,int,int	niup: rastersize(ih: MultiBox_t; width, height: int)	
rastersize	niup.html#rastersize,MultiBox_t	niup: rastersize(ih: MultiBox_t): string	
size=	niup.html#size=,MultiBox_t,string	niup: size=(ih: MultiBox_t; value: string)	
size	niup.html#size,MultiBox_t,string	niup: size(ih: MultiBox_t; value: string)	
size=	niup.html#size=,MultiBox_t,int,int	niup: size=(ih: MultiBox_t; width, height: int)	
size	niup.html#size,MultiBox_t,int,int	niup: size(ih: MultiBox_t; width, height: int)	
size	niup.html#size,MultiBox_t	niup: size(ih: MultiBox_t): string	
theme=	niup.html#theme=,MultiBox_t,string	niup: theme=(ih: MultiBox_t; value: string)	
theme	niup.html#theme,MultiBox_t,string	niup: theme(ih: MultiBox_t; value: string)	
theme	niup.html#theme,MultiBox_t	niup: theme(ih: MultiBox_t): string	
usersize=	niup.html#usersize=,MultiBox_t,string	niup: usersize=(ih: MultiBox_t; value: string)	
usersize	niup.html#usersize,MultiBox_t,string	niup: usersize(ih: MultiBox_t; value: string)	
usersize=	niup.html#usersize=,MultiBox_t,int,int	niup: usersize=(ih: MultiBox_t; width, height: int)	
usersize	niup.html#usersize,MultiBox_t,int,int	niup: usersize(ih: MultiBox_t; width, height: int)	
usersize	niup.html#usersize,MultiBox_t	niup: usersize(ih: MultiBox_t): string	
visible=	niup.html#visible=,MultiBox_t,string	niup: visible=(ih: MultiBox_t; value: string)	
visible	niup.html#visible,MultiBox_t,string	niup: visible(ih: MultiBox_t; value: string)	
visible=	niup.html#visible=,MultiBox_t,bool	niup: visible=(ih: MultiBox_t; yes: bool)	
visible	niup.html#visible,MultiBox_t,bool	niup: visible(ih: MultiBox_t; yes: bool)	
visible	niup.html#visible,MultiBox_t	niup: visible(ih: MultiBox_t): bool	
wid	niup.html#wid,MultiBox_t	niup: wid(ih: MultiBox_t): string	
xfontid	niup.html#xfontid,MultiBox_t	niup: xfontid(ih: MultiBox_t): string	
destroy_cb=	niup.html#destroy_cb=,MultiBox_t,proc(PIhandle)	niup: destroy_cb=(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,MultiBox_t,proc(PIhandle)	niup: destroy_cb(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,MultiBox_t	niup: destroy_cb(ih: MultiBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,MultiBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,MultiBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,MultiBox_t	niup: ldestroy_cb(ih: MultiBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,MultiBox_t,proc(PIhandle)	niup: map_cb=(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,MultiBox_t,proc(PIhandle)	niup: map_cb(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,MultiBox_t	niup: map_cb(ih: MultiBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,MultiBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: MultiBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,MultiBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: MultiBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,MultiBox_t	niup: postmessage_cb(ih: MultiBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,MultiBox_t,proc(PIhandle)	niup: unmap_cb=(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,MultiBox_t,proc(PIhandle)	niup: unmap_cb(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,MultiBox_t	niup: unmap_cb(ih: MultiBox_t): proc (ih: PIhandle): cint {.cdecl.}	
updateattribfromfont_cb=	niup.html#updateattribfromfont_cb=,MultiBox_t,proc(PIhandle)	niup: updateattribfromfont_cb=(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,MultiBox_t,proc(PIhandle)	niup: updateattribfromfont_cb(ih: MultiBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,MultiBox_t	niup: updateattribfromfont_cb(ih: MultiBox_t): proc (ih: PIhandle): cint {.cdecl.}	
MultiLine	niup.html#MultiLine,string	niup: MultiLine(action: string): MultiLine_t	
MultiLine	niup.html#MultiLine	niup: MultiLine(): MultiLine_t	
active=	niup.html#active=,MultiLine_t,string	niup: active=(ih: MultiLine_t; value: string)	
active	niup.html#active,MultiLine_t,string	niup: active(ih: MultiLine_t; value: string)	
active=	niup.html#active=,MultiLine_t,bool	niup: active=(ih: MultiLine_t; yes: bool)	
active	niup.html#active,MultiLine_t,bool	niup: active(ih: MultiLine_t; yes: bool)	
active	niup.html#active,MultiLine_t	niup: active(ih: MultiLine_t): bool	
addformattag=	niup.html#addformattag=,MultiLine_t,string	niup: addformattag=(ih: MultiLine_t; value: string)	
addformattag	niup.html#addformattag,MultiLine_t,string	niup: addformattag(ih: MultiLine_t; value: string)	
addformattag	niup.html#addformattag,MultiLine_t	niup: addformattag(ih: MultiLine_t): string	
addformattag_handle=	niup.html#addformattag_handle=,MultiLine_t,User_t	niup: addformattag_handle=(ih: MultiLine_t; handle: User_t)	
addformattag_handle	niup.html#addformattag_handle,MultiLine_t,User_t	niup: addformattag_handle(ih: MultiLine_t; handle: User_t)	
addformattag_handle	niup.html#addformattag_handle,MultiLine_t	niup: addformattag_handle(ih: MultiLine_t): string	
alignment=	niup.html#alignment=,MultiLine_t,string	niup: alignment=(ih: MultiLine_t; value: string)	
alignment	niup.html#alignment,MultiLine_t,string	niup: alignment(ih: MultiLine_t; value: string)	
alignment	niup.html#alignment,MultiLine_t	niup: alignment(ih: MultiLine_t): string	
append=	niup.html#append=,MultiLine_t,string	niup: append=(ih: MultiLine_t; value: string)	
append	niup.html#append,MultiLine_t,string	niup: append(ih: MultiLine_t; value: string)	
appendnewline=	niup.html#appendnewline=,MultiLine_t,string	niup: appendnewline=(ih: MultiLine_t; value: string)	
appendnewline	niup.html#appendnewline,MultiLine_t,string	niup: appendnewline(ih: MultiLine_t; value: string)	
appendnewline=	niup.html#appendnewline=,MultiLine_t,bool	niup: appendnewline=(ih: MultiLine_t; yes: bool)	
appendnewline	niup.html#appendnewline,MultiLine_t,bool	niup: appendnewline(ih: MultiLine_t; yes: bool)	
appendnewline	niup.html#appendnewline,MultiLine_t	niup: appendnewline(ih: MultiLine_t): bool	
autohide=	niup.html#autohide=,MultiLine_t,string	niup: autohide=(ih: MultiLine_t; value: string)	
autohide	niup.html#autohide,MultiLine_t,string	niup: autohide(ih: MultiLine_t; value: string)	
autohide=	niup.html#autohide=,MultiLine_t,bool	niup: autohide=(ih: MultiLine_t; yes: bool)	
autohide	niup.html#autohide,MultiLine_t,bool	niup: autohide(ih: MultiLine_t; yes: bool)	
autohide	niup.html#autohide,MultiLine_t	niup: autohide(ih: MultiLine_t): bool	
bgcolor=	niup.html#bgcolor=,MultiLine_t,string	niup: bgcolor=(ih: MultiLine_t; value: string)	
bgcolor	niup.html#bgcolor,MultiLine_t,string	niup: bgcolor(ih: MultiLine_t; value: string)	
bgcolor=	niup.html#bgcolor=,MultiLine_t,int,int,int,int	niup: bgcolor=(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,MultiLine_t,int,int,int,int	niup: bgcolor(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,MultiLine_t	niup: bgcolor(ih: MultiLine_t): string	
border=	niup.html#border=,MultiLine_t,string	niup: border=(ih: MultiLine_t; value: string)	
border	niup.html#border,MultiLine_t,string	niup: border(ih: MultiLine_t; value: string)	
border=	niup.html#border=,MultiLine_t,bool	niup: border=(ih: MultiLine_t; yes: bool)	
border	niup.html#border,MultiLine_t,bool	niup: border(ih: MultiLine_t; yes: bool)	
border	niup.html#border,MultiLine_t	niup: border(ih: MultiLine_t): bool	
canfocus=	niup.html#canfocus=,MultiLine_t,string	niup: canfocus=(ih: MultiLine_t; value: string)	
canfocus	niup.html#canfocus,MultiLine_t,string	niup: canfocus(ih: MultiLine_t; value: string)	
canfocus=	niup.html#canfocus=,MultiLine_t,bool	niup: canfocus=(ih: MultiLine_t; yes: bool)	
canfocus	niup.html#canfocus,MultiLine_t,bool	niup: canfocus(ih: MultiLine_t; yes: bool)	
canfocus	niup.html#canfocus,MultiLine_t	niup: canfocus(ih: MultiLine_t): bool	
caret=	niup.html#caret=,MultiLine_t,string	niup: caret=(ih: MultiLine_t; value: string)	
caret	niup.html#caret,MultiLine_t,string	niup: caret(ih: MultiLine_t; value: string)	
caret=	niup.html#caret=,MultiLine_t,int,int	niup: caret=(ih: MultiLine_t; lin, col: int)	
caret	niup.html#caret,MultiLine_t,int,int	niup: caret(ih: MultiLine_t; lin, col: int)	
caret	niup.html#caret,MultiLine_t	niup: caret(ih: MultiLine_t): string	
caretpos=	niup.html#caretpos=,MultiLine_t,string	niup: caretpos=(ih: MultiLine_t; value: string)	
caretpos	niup.html#caretpos,MultiLine_t,string	niup: caretpos(ih: MultiLine_t; value: string)	
caretpos=	niup.html#caretpos=,MultiLine_t,int	niup: caretpos=(ih: MultiLine_t; x: int)	
caretpos	niup.html#caretpos,MultiLine_t,int	niup: caretpos(ih: MultiLine_t; x: int)	
caretpos	niup.html#caretpos,MultiLine_t	niup: caretpos(ih: MultiLine_t): string	
changecase=	niup.html#changecase=,MultiLine_t,string	niup: changecase=(ih: MultiLine_t; value: string)	
changecase	niup.html#changecase,MultiLine_t,string	niup: changecase(ih: MultiLine_t; value: string)	
charsize	niup.html#charsize,MultiLine_t	niup: charsize(ih: MultiLine_t): string	
clipboard=	niup.html#clipboard=,MultiLine_t,string	niup: clipboard=(ih: MultiLine_t; value: string)	
clipboard	niup.html#clipboard,MultiLine_t,string	niup: clipboard(ih: MultiLine_t; value: string)	
clipboard	niup.html#clipboard,MultiLine_t	niup: clipboard(ih: MultiLine_t): string	
count	niup.html#count,MultiLine_t	niup: count(ih: MultiLine_t): string	
cpadding=	niup.html#cpadding=,MultiLine_t,string	niup: cpadding=(ih: MultiLine_t; value: string)	
cpadding	niup.html#cpadding,MultiLine_t,string	niup: cpadding(ih: MultiLine_t; value: string)	
cpadding=	niup.html#cpadding=,MultiLine_t,int,int	niup: cpadding=(ih: MultiLine_t; width, height: int)	
cpadding	niup.html#cpadding,MultiLine_t,int,int	niup: cpadding(ih: MultiLine_t; width, height: int)	
cpadding	niup.html#cpadding,MultiLine_t	niup: cpadding(ih: MultiLine_t): string	
cuebanner=	niup.html#cuebanner=,MultiLine_t,string	niup: cuebanner=(ih: MultiLine_t; value: string)	
cuebanner	niup.html#cuebanner,MultiLine_t,string	niup: cuebanner(ih: MultiLine_t; value: string)	
cuebanner	niup.html#cuebanner,MultiLine_t	niup: cuebanner(ih: MultiLine_t): string	
dragdrop=	niup.html#dragdrop=,MultiLine_t,string	niup: dragdrop=(ih: MultiLine_t; value: string)	
dragdrop	niup.html#dragdrop,MultiLine_t,string	niup: dragdrop(ih: MultiLine_t; value: string)	
dragdrop=	niup.html#dragdrop=,MultiLine_t,bool	niup: dragdrop=(ih: MultiLine_t; yes: bool)	
dragdrop	niup.html#dragdrop,MultiLine_t,bool	niup: dragdrop(ih: MultiLine_t; yes: bool)	
dragdrop	niup.html#dragdrop,MultiLine_t	niup: dragdrop(ih: MultiLine_t): bool	
dragsource=	niup.html#dragsource=,MultiLine_t,string	niup: dragsource=(ih: MultiLine_t; value: string)	
dragsource	niup.html#dragsource,MultiLine_t,string	niup: dragsource(ih: MultiLine_t; value: string)	
dragsource=	niup.html#dragsource=,MultiLine_t,bool	niup: dragsource=(ih: MultiLine_t; yes: bool)	
dragsource	niup.html#dragsource,MultiLine_t,bool	niup: dragsource(ih: MultiLine_t; yes: bool)	
dragsource	niup.html#dragsource,MultiLine_t	niup: dragsource(ih: MultiLine_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,MultiLine_t,string	niup: dragsourcemove=(ih: MultiLine_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,MultiLine_t,string	niup: dragsourcemove(ih: MultiLine_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,MultiLine_t,bool	niup: dragsourcemove=(ih: MultiLine_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,MultiLine_t,bool	niup: dragsourcemove(ih: MultiLine_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,MultiLine_t	niup: dragsourcemove(ih: MultiLine_t): bool	
dragtypes=	niup.html#dragtypes=,MultiLine_t,string	niup: dragtypes=(ih: MultiLine_t; value: string)	
dragtypes	niup.html#dragtypes,MultiLine_t,string	niup: dragtypes(ih: MultiLine_t; value: string)	
dragtypes	niup.html#dragtypes,MultiLine_t	niup: dragtypes(ih: MultiLine_t): string	
dropfilestarget=	niup.html#dropfilestarget=,MultiLine_t,string	niup: dropfilestarget=(ih: MultiLine_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,MultiLine_t,string	niup: dropfilestarget(ih: MultiLine_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,MultiLine_t,bool	niup: dropfilestarget=(ih: MultiLine_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,MultiLine_t,bool	niup: dropfilestarget(ih: MultiLine_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,MultiLine_t	niup: dropfilestarget(ih: MultiLine_t): bool	
droptarget=	niup.html#droptarget=,MultiLine_t,string	niup: droptarget=(ih: MultiLine_t; value: string)	
droptarget	niup.html#droptarget,MultiLine_t,string	niup: droptarget(ih: MultiLine_t; value: string)	
droptarget=	niup.html#droptarget=,MultiLine_t,bool	niup: droptarget=(ih: MultiLine_t; yes: bool)	
droptarget	niup.html#droptarget,MultiLine_t,bool	niup: droptarget(ih: MultiLine_t; yes: bool)	
droptarget	niup.html#droptarget,MultiLine_t	niup: droptarget(ih: MultiLine_t): bool	
droptypes=	niup.html#droptypes=,MultiLine_t,string	niup: droptypes=(ih: MultiLine_t; value: string)	
droptypes	niup.html#droptypes,MultiLine_t,string	niup: droptypes(ih: MultiLine_t; value: string)	
droptypes	niup.html#droptypes,MultiLine_t	niup: droptypes(ih: MultiLine_t): string	
expand=	niup.html#expand=,MultiLine_t,string	niup: expand=(ih: MultiLine_t; value: string)	
expand	niup.html#expand,MultiLine_t,string	niup: expand(ih: MultiLine_t; value: string)	
expand	niup.html#expand,MultiLine_t	niup: expand(ih: MultiLine_t): string	
expandweight=	niup.html#expandweight=,MultiLine_t,string	niup: expandweight=(ih: MultiLine_t; value: string)	
expandweight	niup.html#expandweight,MultiLine_t,string	niup: expandweight(ih: MultiLine_t; value: string)	
expandweight=	niup.html#expandweight=,MultiLine_t,int64	niup: expandweight=(ih: MultiLine_t; x: int64)	
expandweight	niup.html#expandweight,MultiLine_t,int64	niup: expandweight(ih: MultiLine_t; x: int64)	
expandweight	niup.html#expandweight,MultiLine_t	niup: expandweight(ih: MultiLine_t): string	
fgcolor=	niup.html#fgcolor=,MultiLine_t,string	niup: fgcolor=(ih: MultiLine_t; value: string)	
fgcolor	niup.html#fgcolor,MultiLine_t,string	niup: fgcolor(ih: MultiLine_t; value: string)	
fgcolor=	niup.html#fgcolor=,MultiLine_t,int,int,int,int	niup: fgcolor=(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,MultiLine_t,int,int,int,int	niup: fgcolor(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,MultiLine_t	niup: fgcolor(ih: MultiLine_t): string	
filter=	niup.html#filter=,MultiLine_t,string	niup: filter=(ih: MultiLine_t; value: string)	
filter	niup.html#filter,MultiLine_t,string	niup: filter(ih: MultiLine_t; value: string)	
filter	niup.html#filter,MultiLine_t	niup: filter(ih: MultiLine_t): string	
floating=	niup.html#floating=,MultiLine_t,string	niup: floating=(ih: MultiLine_t; value: string)	
floating	niup.html#floating,MultiLine_t,string	niup: floating(ih: MultiLine_t; value: string)	
floating	niup.html#floating,MultiLine_t	niup: floating(ih: MultiLine_t): string	
font=	niup.html#font=,MultiLine_t,string	niup: font=(ih: MultiLine_t; value: string)	
font	niup.html#font,MultiLine_t,string	niup: font(ih: MultiLine_t; value: string)	
font	niup.html#font,MultiLine_t	niup: font(ih: MultiLine_t): string	
fontface=	niup.html#fontface=,MultiLine_t,string	niup: fontface=(ih: MultiLine_t; value: string)	
fontface	niup.html#fontface,MultiLine_t,string	niup: fontface(ih: MultiLine_t; value: string)	
fontface	niup.html#fontface,MultiLine_t	niup: fontface(ih: MultiLine_t): string	
fontsize=	niup.html#fontsize=,MultiLine_t,string	niup: fontsize=(ih: MultiLine_t; value: string)	
fontsize	niup.html#fontsize,MultiLine_t,string	niup: fontsize(ih: MultiLine_t; value: string)	
fontsize=	niup.html#fontsize=,MultiLine_t,int	niup: fontsize=(ih: MultiLine_t; x: int)	
fontsize	niup.html#fontsize,MultiLine_t,int	niup: fontsize(ih: MultiLine_t; x: int)	
fontsize	niup.html#fontsize,MultiLine_t	niup: fontsize(ih: MultiLine_t): string	
fontstyle=	niup.html#fontstyle=,MultiLine_t,string	niup: fontstyle=(ih: MultiLine_t; value: string)	
fontstyle	niup.html#fontstyle,MultiLine_t,string	niup: fontstyle(ih: MultiLine_t; value: string)	
fontstyle	niup.html#fontstyle,MultiLine_t	niup: fontstyle(ih: MultiLine_t): string	
formatting=	niup.html#formatting=,MultiLine_t,string	niup: formatting=(ih: MultiLine_t; value: string)	
formatting	niup.html#formatting,MultiLine_t,string	niup: formatting(ih: MultiLine_t; value: string)	
formatting=	niup.html#formatting=,MultiLine_t,bool	niup: formatting=(ih: MultiLine_t; yes: bool)	
formatting	niup.html#formatting,MultiLine_t,bool	niup: formatting(ih: MultiLine_t; yes: bool)	
formatting	niup.html#formatting,MultiLine_t	niup: formatting(ih: MultiLine_t): bool	
handlename=	niup.html#handlename=,MultiLine_t,string	niup: handlename=(ih: MultiLine_t; value: string)	
handlename	niup.html#handlename,MultiLine_t,string	niup: handlename(ih: MultiLine_t; value: string)	
handlename	niup.html#handlename,MultiLine_t	niup: handlename(ih: MultiLine_t): string	
linecount	niup.html#linecount,MultiLine_t	niup: linecount(ih: MultiLine_t): string	
linevalue	niup.html#linevalue,MultiLine_t	niup: linevalue(ih: MultiLine_t): string	
mask=	niup.html#mask=,MultiLine_t,string	niup: mask=(ih: MultiLine_t; value: string)	
mask	niup.html#mask,MultiLine_t,string	niup: mask(ih: MultiLine_t; value: string)	
mask	niup.html#mask,MultiLine_t	niup: mask(ih: MultiLine_t): string	
maskcasei=	niup.html#maskcasei=,MultiLine_t,string	niup: maskcasei=(ih: MultiLine_t; value: string)	
maskcasei	niup.html#maskcasei,MultiLine_t,string	niup: maskcasei(ih: MultiLine_t; value: string)	
maskcasei=	niup.html#maskcasei=,MultiLine_t,bool	niup: maskcasei=(ih: MultiLine_t; yes: bool)	
maskcasei	niup.html#maskcasei,MultiLine_t,bool	niup: maskcasei(ih: MultiLine_t; yes: bool)	
maskcasei	niup.html#maskcasei,MultiLine_t	niup: maskcasei(ih: MultiLine_t): bool	
maskdecimalsymbol=	niup.html#maskdecimalsymbol=,MultiLine_t,string	niup: maskdecimalsymbol=(ih: MultiLine_t; value: string)	
maskdecimalsymbol	niup.html#maskdecimalsymbol,MultiLine_t,string	niup: maskdecimalsymbol(ih: MultiLine_t; value: string)	
maskdecimalsymbol	niup.html#maskdecimalsymbol,MultiLine_t	niup: maskdecimalsymbol(ih: MultiLine_t): string	
maskfloat=	niup.html#maskfloat=,MultiLine_t,string	niup: maskfloat=(ih: MultiLine_t; value: string)	
maskfloat	niup.html#maskfloat,MultiLine_t,string	niup: maskfloat(ih: MultiLine_t; value: string)	
maskfloat=	niup.html#maskfloat=,MultiLine_t,float,float	niup: maskfloat=(ih: MultiLine_t; min, max: float)	
maskfloat	niup.html#maskfloat,MultiLine_t,float,float	niup: maskfloat(ih: MultiLine_t; min, max: float)	
maskfloat	niup.html#maskfloat,MultiLine_t	niup: maskfloat(ih: MultiLine_t): string	
maskint=	niup.html#maskint=,MultiLine_t,string	niup: maskint=(ih: MultiLine_t; value: string)	
maskint	niup.html#maskint,MultiLine_t,string	niup: maskint(ih: MultiLine_t; value: string)	
maskint=	niup.html#maskint=,MultiLine_t,int,int	niup: maskint=(ih: MultiLine_t; min, max: int)	
maskint	niup.html#maskint,MultiLine_t,int,int	niup: maskint(ih: MultiLine_t; min, max: int)	
maskint	niup.html#maskint,MultiLine_t	niup: maskint(ih: MultiLine_t): string	
masknoempty=	niup.html#masknoempty=,MultiLine_t,string	niup: masknoempty=(ih: MultiLine_t; value: string)	
masknoempty	niup.html#masknoempty,MultiLine_t,string	niup: masknoempty(ih: MultiLine_t; value: string)	
masknoempty=	niup.html#masknoempty=,MultiLine_t,bool	niup: masknoempty=(ih: MultiLine_t; yes: bool)	
masknoempty	niup.html#masknoempty,MultiLine_t,bool	niup: masknoempty(ih: MultiLine_t; yes: bool)	
masknoempty	niup.html#masknoempty,MultiLine_t	niup: masknoempty(ih: MultiLine_t): bool	
maskreal=	niup.html#maskreal=,MultiLine_t,string	niup: maskreal=(ih: MultiLine_t; value: string)	
maskreal	niup.html#maskreal,MultiLine_t,string	niup: maskreal(ih: MultiLine_t; value: string)	
maskreal	niup.html#maskreal,MultiLine_t	niup: maskreal(ih: MultiLine_t): string	
maxsize=	niup.html#maxsize=,MultiLine_t,string	niup: maxsize=(ih: MultiLine_t; value: string)	
maxsize	niup.html#maxsize,MultiLine_t,string	niup: maxsize(ih: MultiLine_t; value: string)	
maxsize=	niup.html#maxsize=,MultiLine_t,int,int	niup: maxsize=(ih: MultiLine_t; width, height: int)	
maxsize	niup.html#maxsize,MultiLine_t,int,int	niup: maxsize(ih: MultiLine_t; width, height: int)	
maxsize	niup.html#maxsize,MultiLine_t	niup: maxsize(ih: MultiLine_t): string	
minsize=	niup.html#minsize=,MultiLine_t,string	niup: minsize=(ih: MultiLine_t; value: string)	
minsize	niup.html#minsize,MultiLine_t,string	niup: minsize(ih: MultiLine_t; value: string)	
minsize=	niup.html#minsize=,MultiLine_t,int,int	niup: minsize=(ih: MultiLine_t; width, height: int)	
minsize	niup.html#minsize,MultiLine_t,int,int	niup: minsize(ih: MultiLine_t; width, height: int)	
minsize	niup.html#minsize,MultiLine_t	niup: minsize(ih: MultiLine_t): string	
multiline=	niup.html#multiline=,MultiLine_t,string	niup: multiline=(ih: MultiLine_t; value: string)	
multiline	niup.html#multiline,MultiLine_t,string	niup: multiline(ih: MultiLine_t; value: string)	
multiline=	niup.html#multiline=,MultiLine_t,bool	niup: multiline=(ih: MultiLine_t; yes: bool)	
multiline	niup.html#multiline,MultiLine_t,bool	niup: multiline(ih: MultiLine_t; yes: bool)	
multiline	niup.html#multiline,MultiLine_t	niup: multiline(ih: MultiLine_t): bool	
name=	niup.html#name=,MultiLine_t,string	niup: name=(ih: MultiLine_t; value: string)	
name	niup.html#name,MultiLine_t,string	niup: name(ih: MultiLine_t; value: string)	
name	niup.html#name,MultiLine_t	niup: name(ih: MultiLine_t): string	
naturalsize	niup.html#naturalsize,MultiLine_t	niup: naturalsize(ih: MultiLine_t): string	
nc=	niup.html#nc=,MultiLine_t,string	niup: nc=(ih: MultiLine_t; value: string)	
nc	niup.html#nc,MultiLine_t,string	niup: nc(ih: MultiLine_t; value: string)	
nc=	niup.html#nc=,MultiLine_t,int	niup: nc=(ih: MultiLine_t; x: int)	
nc	niup.html#nc,MultiLine_t,int	niup: nc(ih: MultiLine_t; x: int)	
nc	niup.html#nc,MultiLine_t	niup: nc(ih: MultiLine_t): string	
normalizergroup=	niup.html#normalizergroup=,MultiLine_t,string	niup: normalizergroup=(ih: MultiLine_t; value: string)	
normalizergroup	niup.html#normalizergroup,MultiLine_t,string	niup: normalizergroup(ih: MultiLine_t; value: string)	
normalizergroup	niup.html#normalizergroup,MultiLine_t	niup: normalizergroup(ih: MultiLine_t): string	
ntheme=	niup.html#ntheme=,MultiLine_t,string	niup: ntheme=(ih: MultiLine_t; value: string)	
ntheme	niup.html#ntheme,MultiLine_t,string	niup: ntheme(ih: MultiLine_t; value: string)	
ntheme	niup.html#ntheme,MultiLine_t	niup: ntheme(ih: MultiLine_t): string	
overwrite=	niup.html#overwrite=,MultiLine_t,string	niup: overwrite=(ih: MultiLine_t; value: string)	
overwrite	niup.html#overwrite,MultiLine_t,string	niup: overwrite(ih: MultiLine_t; value: string)	
overwrite=	niup.html#overwrite=,MultiLine_t,bool	niup: overwrite=(ih: MultiLine_t; yes: bool)	
overwrite	niup.html#overwrite,MultiLine_t,bool	niup: overwrite(ih: MultiLine_t; yes: bool)	
overwrite	niup.html#overwrite,MultiLine_t	niup: overwrite(ih: MultiLine_t): bool	
padding=	niup.html#padding=,MultiLine_t,string	niup: padding=(ih: MultiLine_t; value: string)	
padding	niup.html#padding,MultiLine_t,string	niup: padding(ih: MultiLine_t; value: string)	
padding=	niup.html#padding=,MultiLine_t,int,int	niup: padding=(ih: MultiLine_t; width, height: int)	
padding	niup.html#padding,MultiLine_t,int,int	niup: padding(ih: MultiLine_t; width, height: int)	
padding	niup.html#padding,MultiLine_t	niup: padding(ih: MultiLine_t): string	
pangofontdesc	niup.html#pangofontdesc,MultiLine_t	niup: pangofontdesc(ih: MultiLine_t): string	
pangolayout	niup.html#pangolayout,MultiLine_t	niup: pangolayout(ih: MultiLine_t): string	
password=	niup.html#password=,MultiLine_t,string	niup: password=(ih: MultiLine_t; value: string)	
password	niup.html#password,MultiLine_t,string	niup: password(ih: MultiLine_t; value: string)	
password=	niup.html#password=,MultiLine_t,bool	niup: password=(ih: MultiLine_t; yes: bool)	
password	niup.html#password,MultiLine_t,bool	niup: password(ih: MultiLine_t; yes: bool)	
password	niup.html#password,MultiLine_t	niup: password(ih: MultiLine_t): bool	
position=	niup.html#position=,MultiLine_t,string	niup: position=(ih: MultiLine_t; value: string)	
position	niup.html#position,MultiLine_t,string	niup: position(ih: MultiLine_t; value: string)	
position=	niup.html#position=,MultiLine_t,int,int	niup: position=(ih: MultiLine_t; x, y: int)	
position	niup.html#position,MultiLine_t,int,int	niup: position(ih: MultiLine_t; x, y: int)	
position	niup.html#position,MultiLine_t	niup: position(ih: MultiLine_t): string	
propagatefocus=	niup.html#propagatefocus=,MultiLine_t,string	niup: propagatefocus=(ih: MultiLine_t; value: string)	
propagatefocus	niup.html#propagatefocus,MultiLine_t,string	niup: propagatefocus(ih: MultiLine_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,MultiLine_t,bool	niup: propagatefocus=(ih: MultiLine_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,MultiLine_t,bool	niup: propagatefocus(ih: MultiLine_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,MultiLine_t	niup: propagatefocus(ih: MultiLine_t): bool	
rastersize=	niup.html#rastersize=,MultiLine_t,string	niup: rastersize=(ih: MultiLine_t; value: string)	
rastersize	niup.html#rastersize,MultiLine_t,string	niup: rastersize(ih: MultiLine_t; value: string)	
rastersize=	niup.html#rastersize=,MultiLine_t,int,int	niup: rastersize=(ih: MultiLine_t; width, height: int)	
rastersize	niup.html#rastersize,MultiLine_t,int,int	niup: rastersize(ih: MultiLine_t; width, height: int)	
rastersize	niup.html#rastersize,MultiLine_t	niup: rastersize(ih: MultiLine_t): string	
readonly=	niup.html#readonly=,MultiLine_t,string	niup: readonly=(ih: MultiLine_t; value: string)	
readonly	niup.html#readonly,MultiLine_t,string	niup: readonly(ih: MultiLine_t; value: string)	
readonly=	niup.html#readonly=,MultiLine_t,bool	niup: readonly=(ih: MultiLine_t; yes: bool)	
readonly	niup.html#readonly,MultiLine_t,bool	niup: readonly(ih: MultiLine_t; yes: bool)	
readonly	niup.html#readonly,MultiLine_t	niup: readonly(ih: MultiLine_t): bool	
removeformatting=	niup.html#removeformatting=,MultiLine_t,string	niup: removeformatting=(ih: MultiLine_t; value: string)	
removeformatting	niup.html#removeformatting,MultiLine_t,string	niup: removeformatting(ih: MultiLine_t; value: string)	
screenposition	niup.html#screenposition,MultiLine_t	niup: screenposition(ih: MultiLine_t): string	
scrollbar=	niup.html#scrollbar=,MultiLine_t,string	niup: scrollbar=(ih: MultiLine_t; value: string)	
scrollbar	niup.html#scrollbar,MultiLine_t,string	niup: scrollbar(ih: MultiLine_t; value: string)	
scrollbar=	niup.html#scrollbar=,MultiLine_t,bool	niup: scrollbar=(ih: MultiLine_t; yes: bool)	
scrollbar	niup.html#scrollbar,MultiLine_t,bool	niup: scrollbar(ih: MultiLine_t; yes: bool)	
scrollbar	niup.html#scrollbar,MultiLine_t	niup: scrollbar(ih: MultiLine_t): bool	
scrollto=	niup.html#scrollto=,MultiLine_t,string	niup: scrollto=(ih: MultiLine_t; value: string)	
scrollto	niup.html#scrollto,MultiLine_t,string	niup: scrollto(ih: MultiLine_t; value: string)	
scrollto=	niup.html#scrollto=,MultiLine_t,int	niup: scrollto=(ih: MultiLine_t; x: int)	
scrollto	niup.html#scrollto,MultiLine_t,int	niup: scrollto(ih: MultiLine_t; x: int)	
scrolltopos=	niup.html#scrolltopos=,MultiLine_t,string	niup: scrolltopos=(ih: MultiLine_t; value: string)	
scrolltopos	niup.html#scrolltopos,MultiLine_t,string	niup: scrolltopos(ih: MultiLine_t; value: string)	
scrolltopos=	niup.html#scrolltopos=,MultiLine_t,int	niup: scrolltopos=(ih: MultiLine_t; x: int)	
scrolltopos	niup.html#scrolltopos,MultiLine_t,int	niup: scrolltopos(ih: MultiLine_t; x: int)	
selectedtext=	niup.html#selectedtext=,MultiLine_t,string	niup: selectedtext=(ih: MultiLine_t; value: string)	
selectedtext	niup.html#selectedtext,MultiLine_t,string	niup: selectedtext(ih: MultiLine_t; value: string)	
selectedtext	niup.html#selectedtext,MultiLine_t	niup: selectedtext(ih: MultiLine_t): string	
selection=	niup.html#selection=,MultiLine_t,string	niup: selection=(ih: MultiLine_t; value: string)	
selection	niup.html#selection,MultiLine_t,string	niup: selection(ih: MultiLine_t; value: string)	
selection=	niup.html#selection=,MultiLine_t,int,int,int,int	niup: selection=(ih: MultiLine_t; lin1, col1, lin2, col2: int)	
selection	niup.html#selection,MultiLine_t,int,int,int,int	niup: selection(ih: MultiLine_t; lin1, col1, lin2, col2: int)	
selection=	niup.html#selection=,MultiLine_t,int,int	niup: selection=(ih: MultiLine_t; col1, col2: int)	
selection	niup.html#selection,MultiLine_t,int,int	niup: selection(ih: MultiLine_t; col1, col2: int)	
selection	niup.html#selection,MultiLine_t	niup: selection(ih: MultiLine_t): string	
selectionpos=	niup.html#selectionpos=,MultiLine_t,string	niup: selectionpos=(ih: MultiLine_t; value: string)	
selectionpos	niup.html#selectionpos,MultiLine_t,string	niup: selectionpos(ih: MultiLine_t; value: string)	
selectionpos=	niup.html#selectionpos=,MultiLine_t,int,int	niup: selectionpos=(ih: MultiLine_t; min, max: int)	
selectionpos	niup.html#selectionpos,MultiLine_t,int,int	niup: selectionpos(ih: MultiLine_t; min, max: int)	
selectionpos	niup.html#selectionpos,MultiLine_t	niup: selectionpos(ih: MultiLine_t): string	
size=	niup.html#size=,MultiLine_t,string	niup: size=(ih: MultiLine_t; value: string)	
size	niup.html#size,MultiLine_t,string	niup: size(ih: MultiLine_t; value: string)	
size=	niup.html#size=,MultiLine_t,int,int	niup: size=(ih: MultiLine_t; width, height: int)	
size	niup.html#size,MultiLine_t,int,int	niup: size(ih: MultiLine_t; width, height: int)	
size	niup.html#size,MultiLine_t	niup: size(ih: MultiLine_t): string	
spin=	niup.html#spin=,MultiLine_t,string	niup: spin=(ih: MultiLine_t; value: string)	
spin	niup.html#spin,MultiLine_t,string	niup: spin(ih: MultiLine_t; value: string)	
spin=	niup.html#spin=,MultiLine_t,bool	niup: spin=(ih: MultiLine_t; yes: bool)	
spin	niup.html#spin,MultiLine_t,bool	niup: spin(ih: MultiLine_t; yes: bool)	
spin	niup.html#spin,MultiLine_t	niup: spin(ih: MultiLine_t): bool	
spinalign=	niup.html#spinalign=,MultiLine_t,string	niup: spinalign=(ih: MultiLine_t; value: string)	
spinalign	niup.html#spinalign,MultiLine_t,string	niup: spinalign(ih: MultiLine_t; value: string)	
spinalign	niup.html#spinalign,MultiLine_t	niup: spinalign(ih: MultiLine_t): string	
spinauto=	niup.html#spinauto=,MultiLine_t,string	niup: spinauto=(ih: MultiLine_t; value: string)	
spinauto	niup.html#spinauto,MultiLine_t,string	niup: spinauto(ih: MultiLine_t; value: string)	
spinauto=	niup.html#spinauto=,MultiLine_t,bool	niup: spinauto=(ih: MultiLine_t; yes: bool)	
spinauto	niup.html#spinauto,MultiLine_t,bool	niup: spinauto(ih: MultiLine_t; yes: bool)	
spinauto	niup.html#spinauto,MultiLine_t	niup: spinauto(ih: MultiLine_t): bool	
spininc=	niup.html#spininc=,MultiLine_t,string	niup: spininc=(ih: MultiLine_t; value: string)	
spininc	niup.html#spininc,MultiLine_t,string	niup: spininc(ih: MultiLine_t; value: string)	
spininc=	niup.html#spininc=,MultiLine_t,int	niup: spininc=(ih: MultiLine_t; x: int)	
spininc	niup.html#spininc,MultiLine_t,int	niup: spininc(ih: MultiLine_t; x: int)	
spininc	niup.html#spininc,MultiLine_t	niup: spininc(ih: MultiLine_t): string	
spinmax=	niup.html#spinmax=,MultiLine_t,string	niup: spinmax=(ih: MultiLine_t; value: string)	
spinmax	niup.html#spinmax,MultiLine_t,string	niup: spinmax(ih: MultiLine_t; value: string)	
spinmax=	niup.html#spinmax=,MultiLine_t,int	niup: spinmax=(ih: MultiLine_t; x: int)	
spinmax	niup.html#spinmax,MultiLine_t,int	niup: spinmax(ih: MultiLine_t; x: int)	
spinmax	niup.html#spinmax,MultiLine_t	niup: spinmax(ih: MultiLine_t): string	
spinmin=	niup.html#spinmin=,MultiLine_t,string	niup: spinmin=(ih: MultiLine_t; value: string)	
spinmin	niup.html#spinmin,MultiLine_t,string	niup: spinmin(ih: MultiLine_t; value: string)	
spinmin=	niup.html#spinmin=,MultiLine_t,int	niup: spinmin=(ih: MultiLine_t; x: int)	
spinmin	niup.html#spinmin,MultiLine_t,int	niup: spinmin(ih: MultiLine_t; x: int)	
spinmin	niup.html#spinmin,MultiLine_t	niup: spinmin(ih: MultiLine_t): string	
spinvalue=	niup.html#spinvalue=,MultiLine_t,string	niup: spinvalue=(ih: MultiLine_t; value: string)	
spinvalue	niup.html#spinvalue,MultiLine_t,string	niup: spinvalue(ih: MultiLine_t; value: string)	
spinvalue=	niup.html#spinvalue=,MultiLine_t,int	niup: spinvalue=(ih: MultiLine_t; x: int)	
spinvalue	niup.html#spinvalue,MultiLine_t,int	niup: spinvalue(ih: MultiLine_t; x: int)	
spinvalue	niup.html#spinvalue,MultiLine_t	niup: spinvalue(ih: MultiLine_t): string	
spinwrap=	niup.html#spinwrap=,MultiLine_t,string	niup: spinwrap=(ih: MultiLine_t; value: string)	
spinwrap	niup.html#spinwrap,MultiLine_t,string	niup: spinwrap(ih: MultiLine_t; value: string)	
spinwrap=	niup.html#spinwrap=,MultiLine_t,bool	niup: spinwrap=(ih: MultiLine_t; yes: bool)	
spinwrap	niup.html#spinwrap,MultiLine_t,bool	niup: spinwrap(ih: MultiLine_t; yes: bool)	
spinwrap	niup.html#spinwrap,MultiLine_t	niup: spinwrap(ih: MultiLine_t): bool	
tabsize=	niup.html#tabsize=,MultiLine_t,string	niup: tabsize=(ih: MultiLine_t; value: string)	
tabsize	niup.html#tabsize,MultiLine_t,string	niup: tabsize(ih: MultiLine_t; value: string)	
tabsize=	niup.html#tabsize=,MultiLine_t,int	niup: tabsize=(ih: MultiLine_t; x: int)	
tabsize	niup.html#tabsize,MultiLine_t,int	niup: tabsize(ih: MultiLine_t; x: int)	
tabsize	niup.html#tabsize,MultiLine_t	niup: tabsize(ih: MultiLine_t): string	
theme=	niup.html#theme=,MultiLine_t,string	niup: theme=(ih: MultiLine_t; value: string)	
theme	niup.html#theme,MultiLine_t,string	niup: theme(ih: MultiLine_t; value: string)	
theme	niup.html#theme,MultiLine_t	niup: theme(ih: MultiLine_t): string	
tip=	niup.html#tip=,MultiLine_t,string	niup: tip=(ih: MultiLine_t; value: string)	
tip	niup.html#tip,MultiLine_t,string	niup: tip(ih: MultiLine_t; value: string)	
tip	niup.html#tip,MultiLine_t	niup: tip(ih: MultiLine_t): string	
tipbgcolor=	niup.html#tipbgcolor=,MultiLine_t,string	niup: tipbgcolor=(ih: MultiLine_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,MultiLine_t,string	niup: tipbgcolor(ih: MultiLine_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,MultiLine_t,int,int,int,int	niup: tipbgcolor=(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,MultiLine_t,int,int,int,int	niup: tipbgcolor(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,MultiLine_t	niup: tipbgcolor(ih: MultiLine_t): string	
tipdelay=	niup.html#tipdelay=,MultiLine_t,string	niup: tipdelay=(ih: MultiLine_t; value: string)	
tipdelay	niup.html#tipdelay,MultiLine_t,string	niup: tipdelay(ih: MultiLine_t; value: string)	
tipdelay=	niup.html#tipdelay=,MultiLine_t,int	niup: tipdelay=(ih: MultiLine_t; x: int)	
tipdelay	niup.html#tipdelay,MultiLine_t,int	niup: tipdelay(ih: MultiLine_t; x: int)	
tipdelay	niup.html#tipdelay,MultiLine_t	niup: tipdelay(ih: MultiLine_t): string	
tipfgcolor=	niup.html#tipfgcolor=,MultiLine_t,string	niup: tipfgcolor=(ih: MultiLine_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,MultiLine_t,string	niup: tipfgcolor(ih: MultiLine_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,MultiLine_t,int,int,int,int	niup: tipfgcolor=(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,MultiLine_t,int,int,int,int	niup: tipfgcolor(ih: MultiLine_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,MultiLine_t	niup: tipfgcolor(ih: MultiLine_t): string	
tipicon=	niup.html#tipicon=,MultiLine_t,string	niup: tipicon=(ih: MultiLine_t; value: string)	
tipicon	niup.html#tipicon,MultiLine_t,string	niup: tipicon(ih: MultiLine_t; value: string)	
tipicon	niup.html#tipicon,MultiLine_t	niup: tipicon(ih: MultiLine_t): string	
tipmarkup=	niup.html#tipmarkup=,MultiLine_t,string	niup: tipmarkup=(ih: MultiLine_t; value: string)	
tipmarkup	niup.html#tipmarkup,MultiLine_t,string	niup: tipmarkup(ih: MultiLine_t; value: string)	
tipmarkup	niup.html#tipmarkup,MultiLine_t	niup: tipmarkup(ih: MultiLine_t): string	
tiprect=	niup.html#tiprect=,MultiLine_t,string	niup: tiprect=(ih: MultiLine_t; value: string)	
tiprect	niup.html#tiprect,MultiLine_t,string	niup: tiprect(ih: MultiLine_t; value: string)	
tiprect=	niup.html#tiprect=,MultiLine_t,int,int,int,int	niup: tiprect=(ih: MultiLine_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,MultiLine_t,int,int,int,int	niup: tiprect(ih: MultiLine_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,MultiLine_t	niup: tiprect(ih: MultiLine_t): string	
tipvisible=	niup.html#tipvisible=,MultiLine_t,string	niup: tipvisible=(ih: MultiLine_t; value: string)	
tipvisible	niup.html#tipvisible,MultiLine_t,string	niup: tipvisible(ih: MultiLine_t; value: string)	
tipvisible=	niup.html#tipvisible=,MultiLine_t,bool	niup: tipvisible=(ih: MultiLine_t; yes: bool)	
tipvisible	niup.html#tipvisible,MultiLine_t,bool	niup: tipvisible(ih: MultiLine_t; yes: bool)	
tipvisible	niup.html#tipvisible,MultiLine_t	niup: tipvisible(ih: MultiLine_t): bool	
usersize=	niup.html#usersize=,MultiLine_t,string	niup: usersize=(ih: MultiLine_t; value: string)	
usersize	niup.html#usersize,MultiLine_t,string	niup: usersize(ih: MultiLine_t; value: string)	
usersize=	niup.html#usersize=,MultiLine_t,int,int	niup: usersize=(ih: MultiLine_t; width, height: int)	
usersize	niup.html#usersize,MultiLine_t,int,int	niup: usersize(ih: MultiLine_t; width, height: int)	
usersize	niup.html#usersize,MultiLine_t	niup: usersize(ih: MultiLine_t): string	
value=	niup.html#value=,MultiLine_t,string	niup: value=(ih: MultiLine_t; value: string)	
value	niup.html#value,MultiLine_t,string	niup: value(ih: MultiLine_t; value: string)	
value	niup.html#value,MultiLine_t	niup: value(ih: MultiLine_t): string	
valuemasked=	niup.html#valuemasked=,MultiLine_t,string	niup: valuemasked=(ih: MultiLine_t; value: string)	
valuemasked	niup.html#valuemasked,MultiLine_t,string	niup: valuemasked(ih: MultiLine_t; value: string)	
visible=	niup.html#visible=,MultiLine_t,string	niup: visible=(ih: MultiLine_t; value: string)	
visible	niup.html#visible,MultiLine_t,string	niup: visible(ih: MultiLine_t; value: string)	
visible=	niup.html#visible=,MultiLine_t,bool	niup: visible=(ih: MultiLine_t; yes: bool)	
visible	niup.html#visible,MultiLine_t,bool	niup: visible(ih: MultiLine_t; yes: bool)	
visible	niup.html#visible,MultiLine_t	niup: visible(ih: MultiLine_t): bool	
visiblecolumns=	niup.html#visiblecolumns=,MultiLine_t,string	niup: visiblecolumns=(ih: MultiLine_t; value: string)	
visiblecolumns	niup.html#visiblecolumns,MultiLine_t,string	niup: visiblecolumns(ih: MultiLine_t; value: string)	
visiblecolumns=	niup.html#visiblecolumns=,MultiLine_t,int	niup: visiblecolumns=(ih: MultiLine_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,MultiLine_t,int	niup: visiblecolumns(ih: MultiLine_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,MultiLine_t	niup: visiblecolumns(ih: MultiLine_t): string	
visiblelines=	niup.html#visiblelines=,MultiLine_t,string	niup: visiblelines=(ih: MultiLine_t; value: string)	
visiblelines	niup.html#visiblelines,MultiLine_t,string	niup: visiblelines(ih: MultiLine_t; value: string)	
visiblelines=	niup.html#visiblelines=,MultiLine_t,int	niup: visiblelines=(ih: MultiLine_t; x: int)	
visiblelines	niup.html#visiblelines,MultiLine_t,int	niup: visiblelines(ih: MultiLine_t; x: int)	
visiblelines	niup.html#visiblelines,MultiLine_t	niup: visiblelines(ih: MultiLine_t): string	
wid	niup.html#wid,MultiLine_t	niup: wid(ih: MultiLine_t): string	
wordwrap=	niup.html#wordwrap=,MultiLine_t,string	niup: wordwrap=(ih: MultiLine_t; value: string)	
wordwrap	niup.html#wordwrap,MultiLine_t,string	niup: wordwrap(ih: MultiLine_t; value: string)	
wordwrap=	niup.html#wordwrap=,MultiLine_t,bool	niup: wordwrap=(ih: MultiLine_t; yes: bool)	
wordwrap	niup.html#wordwrap,MultiLine_t,bool	niup: wordwrap(ih: MultiLine_t; yes: bool)	
wordwrap	niup.html#wordwrap,MultiLine_t	niup: wordwrap(ih: MultiLine_t): bool	
x	niup.html#x,MultiLine_t	niup: x(ih: MultiLine_t): string	
xfontid	niup.html#xfontid,MultiLine_t	niup: xfontid(ih: MultiLine_t): string	
y	niup.html#y,MultiLine_t	niup: y(ih: MultiLine_t): string	
zorder=	niup.html#zorder=,MultiLine_t,string	niup: zorder=(ih: MultiLine_t; value: string)	
zorder	niup.html#zorder,MultiLine_t,string	niup: zorder(ih: MultiLine_t; value: string)	
action=	niup.html#action=,MultiLine_t,proc(PIhandle,cint,cstring)	niup: action=(ih: MultiLine_t;\n        cb: proc (ih: PIhandle; c: cint; new_value: cstring): cint {.cdecl.})	
action	niup.html#action,MultiLine_t,proc(PIhandle,cint,cstring)	niup: action(ih: MultiLine_t;\n       cb: proc (ih: PIhandle; c: cint; new_value: cstring): cint {.cdecl.})	
action	niup.html#action,MultiLine_t	niup: action(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,MultiLine_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,MultiLine_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,MultiLine_t	niup: button_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
caret_cb=	niup.html#caret_cb=,MultiLine_t,proc(PIhandle,cint,cint,cint)	niup: caret_cb=(ih: MultiLine_t;\n          cb: proc (ih: PIhandle; lin, col, pos: cint): cint {.cdecl.})	
caret_cb	niup.html#caret_cb,MultiLine_t,proc(PIhandle,cint,cint,cint)	niup: caret_cb(ih: MultiLine_t;\n         cb: proc (ih: PIhandle; lin, col, pos: cint): cint {.cdecl.})	
caret_cb	niup.html#caret_cb,MultiLine_t	niup: caret_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,MultiLine_t,proc(PIhandle)	niup: destroy_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,MultiLine_t,proc(PIhandle)	niup: destroy_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,MultiLine_t	niup: destroy_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,MultiLine_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: MultiLine_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,MultiLine_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: MultiLine_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,MultiLine_t	niup: dragbegin_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,MultiLine_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: MultiLine_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,MultiLine_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: MultiLine_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,MultiLine_t	niup: dragdatasize_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,MultiLine_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,MultiLine_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,MultiLine_t	niup: dragdata_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,MultiLine_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: MultiLine_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,MultiLine_t,proc(PIhandle,cint)	niup: dragend_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,MultiLine_t	niup: dragend_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,MultiLine_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,MultiLine_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,MultiLine_t	niup: dropdata_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,MultiLine_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: MultiLine_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,MultiLine_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: MultiLine_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,MultiLine_t	niup: dropfiles_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,MultiLine_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,MultiLine_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,MultiLine_t	niup: dropmotion_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,MultiLine_t,proc(PIhandle)	niup: enterwindow_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,MultiLine_t,proc(PIhandle)	niup: enterwindow_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,MultiLine_t	niup: enterwindow_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,MultiLine_t,proc(PIhandle)	niup: getfocus_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,MultiLine_t,proc(PIhandle)	niup: getfocus_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,MultiLine_t	niup: getfocus_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,MultiLine_t,proc(PIhandle)	niup: help_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,MultiLine_t,proc(PIhandle)	niup: help_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,MultiLine_t	niup: help_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,MultiLine_t,proc(PIhandle)	niup: killfocus_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,MultiLine_t,proc(PIhandle)	niup: killfocus_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,MultiLine_t	niup: killfocus_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,MultiLine_t,proc(PIhandle,cint)	niup: k_any=(ih: MultiLine_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,MultiLine_t,proc(PIhandle,cint)	niup: k_any(ih: MultiLine_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,MultiLine_t	niup: k_any(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,MultiLine_t,proc(PIhandle)	niup: ldestroy_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,MultiLine_t,proc(PIhandle)	niup: ldestroy_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,MultiLine_t	niup: ldestroy_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,MultiLine_t,proc(PIhandle)	niup: leavewindow_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,MultiLine_t,proc(PIhandle)	niup: leavewindow_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,MultiLine_t	niup: leavewindow_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,MultiLine_t,proc(PIhandle)	niup: map_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,MultiLine_t,proc(PIhandle)	niup: map_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,MultiLine_t	niup: map_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,MultiLine_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: MultiLine_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,MultiLine_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: MultiLine_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,MultiLine_t	niup: motion_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,MultiLine_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,MultiLine_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,MultiLine_t	niup: postmessage_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
spin_cb=	niup.html#spin_cb=,MultiLine_t,proc(PIhandle,cint)	niup: spin_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,MultiLine_t,proc(PIhandle,cint)	niup: spin_cb(ih: MultiLine_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,MultiLine_t	niup: spin_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,MultiLine_t,proc(PIhandle)	niup: unmap_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,MultiLine_t,proc(PIhandle)	niup: unmap_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,MultiLine_t	niup: unmap_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,MultiLine_t,proc(PIhandle)	niup: valuechanged_cb=(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,MultiLine_t,proc(PIhandle)	niup: valuechanged_cb(ih: MultiLine_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,MultiLine_t	niup: valuechanged_cb(ih: MultiLine_t): proc (ih: PIhandle): cint {.cdecl.}	
Normalizer	niup.html#Normalizer.m,varargs[untyped]	niup: Normalizer(args: varargs[untyped]): Normalizer_t	
addcontrol_handle=	niup.html#addcontrol_handle=,Normalizer_t,User_t	niup: addcontrol_handle=(ih: Normalizer_t; handle: User_t)	
addcontrol_handle	niup.html#addcontrol_handle,Normalizer_t,User_t	niup: addcontrol_handle(ih: Normalizer_t; handle: User_t)	
delcontrol_handle=	niup.html#delcontrol_handle=,Normalizer_t,User_t	niup: delcontrol_handle=(ih: Normalizer_t; handle: User_t)	
delcontrol_handle	niup.html#delcontrol_handle,Normalizer_t,User_t	niup: delcontrol_handle(ih: Normalizer_t; handle: User_t)	
first_control_handle	niup.html#first_control_handle,Normalizer_t	niup: first_control_handle(ih: Normalizer_t): string	
next_control_handle	niup.html#next_control_handle,Normalizer_t	niup: next_control_handle(ih: Normalizer_t): string	
normalize	niup.html#normalize,Normalizer_t	niup: normalize(ih: Normalizer_t): string	
destroy_cb=	niup.html#destroy_cb=,Normalizer_t,proc(PIhandle)	niup: destroy_cb=(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Normalizer_t,proc(PIhandle)	niup: destroy_cb(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Normalizer_t	niup: destroy_cb(ih: Normalizer_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Normalizer_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Normalizer_t,proc(PIhandle)	niup: ldestroy_cb(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Normalizer_t	niup: ldestroy_cb(ih: Normalizer_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Normalizer_t,proc(PIhandle)	niup: map_cb=(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Normalizer_t,proc(PIhandle)	niup: map_cb(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Normalizer_t	niup: map_cb(ih: Normalizer_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Normalizer_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Normalizer_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Normalizer_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Normalizer_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Normalizer_t	niup: postmessage_cb(ih: Normalizer_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Normalizer_t,proc(PIhandle)	niup: unmap_cb=(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Normalizer_t,proc(PIhandle)	niup: unmap_cb(ih: Normalizer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Normalizer_t	niup: unmap_cb(ih: Normalizer_t): proc (ih: PIhandle): cint {.cdecl.}	
Param	niup.html#Param,string	niup: Param(format: string): Param_t	
angle	niup.html#angle,Param_t	niup: angle(ih: Param_t): string	
auxcontrol	niup.html#auxcontrol,Param_t	niup: auxcontrol(ih: Param_t): string	
button1=	niup.html#button1=,Param_t,string	niup: button1=(ih: Param_t; value: string)	
button1	niup.html#button1,Param_t,string	niup: button1(ih: Param_t; value: string)	
button1	niup.html#button1,Param_t	niup: button1(ih: Param_t): string	
button2=	niup.html#button2=,Param_t,string	niup: button2=(ih: Param_t; value: string)	
button2	niup.html#button2,Param_t,string	niup: button2(ih: Param_t; value: string)	
button2	niup.html#button2,Param_t	niup: button2(ih: Param_t): string	
button3=	niup.html#button3=,Param_t,string	niup: button3=(ih: Param_t; value: string)	
button3	niup.html#button3,Param_t,string	niup: button3(ih: Param_t; value: string)	
button3	niup.html#button3,Param_t	niup: button3(ih: Param_t): string	
control	niup.html#control,Param_t	niup: control(ih: Param_t): string	
datatype	niup.html#datatype,Param_t	niup: datatype(ih: Param_t): string	
dialogtype=	niup.html#dialogtype=,Param_t,string	niup: dialogtype=(ih: Param_t; value: string)	
dialogtype	niup.html#dialogtype,Param_t,string	niup: dialogtype(ih: Param_t; value: string)	
dialogtype	niup.html#dialogtype,Param_t	niup: dialogtype(ih: Param_t): string	
directory=	niup.html#directory=,Param_t,string	niup: directory=(ih: Param_t; value: string)	
directory	niup.html#directory,Param_t,string	niup: directory(ih: Param_t; value: string)	
directory	niup.html#directory,Param_t	niup: directory(ih: Param_t): string	
filter=	niup.html#filter=,Param_t,string	niup: filter=(ih: Param_t; value: string)	
filter	niup.html#filter,Param_t,string	niup: filter(ih: Param_t; value: string)	
filter	niup.html#filter,Param_t	niup: filter(ih: Param_t): string	
indent	niup.html#indent,Param_t	niup: indent(ih: Param_t): string	
index	niup.html#index,Param_t	niup: index(ih: Param_t): string	
interval	niup.html#interval,Param_t	niup: interval(ih: Param_t): string	
label	niup.html#label,Param_t	niup: label(ih: Param_t): string	
mask=	niup.html#mask=,Param_t,string	niup: mask=(ih: Param_t; value: string)	
mask	niup.html#mask,Param_t,string	niup: mask(ih: Param_t; value: string)	
mask	niup.html#mask,Param_t	niup: mask(ih: Param_t): string	
max=	niup.html#max=,Param_t,string	niup: max=(ih: Param_t; value: string)	
max	niup.html#max,Param_t,string	niup: max(ih: Param_t; value: string)	
max=	niup.html#max=,Param_t,int64	niup: max=(ih: Param_t; x: int64)	
max	niup.html#max,Param_t,int64	niup: max(ih: Param_t; x: int64)	
max	niup.html#max,Param_t	niup: max(ih: Param_t): string	
min=	niup.html#min=,Param_t,string	niup: min=(ih: Param_t; value: string)	
min	niup.html#min,Param_t,string	niup: min(ih: Param_t; value: string)	
min=	niup.html#min=,Param_t,int64	niup: min=(ih: Param_t; x: int64)	
min	niup.html#min,Param_t,int64	niup: min(ih: Param_t; x: int64)	
min	niup.html#min,Param_t	niup: min(ih: Param_t): string	
multiline=	niup.html#multiline=,Param_t,string	niup: multiline=(ih: Param_t; value: string)	
multiline	niup.html#multiline,Param_t,string	niup: multiline(ih: Param_t; value: string)	
multiline=	niup.html#multiline=,Param_t,bool	niup: multiline=(ih: Param_t; yes: bool)	
multiline	niup.html#multiline,Param_t,bool	niup: multiline(ih: Param_t; yes: bool)	
multiline	niup.html#multiline,Param_t	niup: multiline(ih: Param_t): bool	
nochangedir=	niup.html#nochangedir=,Param_t,string	niup: nochangedir=(ih: Param_t; value: string)	
nochangedir	niup.html#nochangedir,Param_t,string	niup: nochangedir(ih: Param_t; value: string)	
nochangedir=	niup.html#nochangedir=,Param_t,bool	niup: nochangedir=(ih: Param_t; yes: bool)	
nochangedir	niup.html#nochangedir,Param_t,bool	niup: nochangedir(ih: Param_t; yes: bool)	
nochangedir	niup.html#nochangedir,Param_t	niup: nochangedir(ih: Param_t): bool	
noframe	niup.html#noframe,Param_t	niup: noframe(ih: Param_t): string	
nooverwriteprompt=	niup.html#nooverwriteprompt=,Param_t,string	niup: nooverwriteprompt=(ih: Param_t; value: string)	
nooverwriteprompt	niup.html#nooverwriteprompt,Param_t,string	niup: nooverwriteprompt(ih: Param_t; value: string)	
nooverwriteprompt=	niup.html#nooverwriteprompt=,Param_t,bool	niup: nooverwriteprompt=(ih: Param_t; yes: bool)	
nooverwriteprompt	niup.html#nooverwriteprompt,Param_t,bool	niup: nooverwriteprompt(ih: Param_t; yes: bool)	
nooverwriteprompt	niup.html#nooverwriteprompt,Param_t	niup: nooverwriteprompt(ih: Param_t): bool	
partial	niup.html#partial,Param_t	niup: partial(ih: Param_t): string	
precision	niup.html#precision,Param_t	niup: precision(ih: Param_t): string	
step=	niup.html#step=,Param_t,string	niup: step=(ih: Param_t; value: string)	
step	niup.html#step,Param_t,string	niup: step(ih: Param_t; value: string)	
step=	niup.html#step=,Param_t,int64	niup: step=(ih: Param_t; x: int64)	
step	niup.html#step,Param_t,int64	niup: step(ih: Param_t; x: int64)	
step	niup.html#step,Param_t	niup: step(ih: Param_t): string	
tip=	niup.html#tip=,Param_t,string	niup: tip=(ih: Param_t; value: string)	
tip	niup.html#tip,Param_t,string	niup: tip(ih: Param_t; value: string)	
tip	niup.html#tip,Param_t	niup: tip(ih: Param_t): string	
title=	niup.html#title=,Param_t,string	niup: title=(ih: Param_t; value: string)	
title	niup.html#title,Param_t,string	niup: title(ih: Param_t; value: string)	
title	niup.html#title,Param_t	niup: title(ih: Param_t): string	
type=	niup.html#type=,Param_t,string	niup: type=(ih: Param_t; value: string)	
`type`	niup.html#type,Param_t,string	niup: `type`(ih: Param_t; value: string)	
`type`	niup.html#type,Param_t	niup: `type`(ih: Param_t): string	
value=	niup.html#value=,Param_t,string	niup: value=(ih: Param_t; value: string)	
value	niup.html#value,Param_t,string	niup: value(ih: Param_t; value: string)	
value	niup.html#value,Param_t	niup: value(ih: Param_t): string	
destroy_cb=	niup.html#destroy_cb=,Param_t,proc(PIhandle)	niup: destroy_cb=(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Param_t,proc(PIhandle)	niup: destroy_cb(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Param_t	niup: destroy_cb(ih: Param_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Param_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Param_t,proc(PIhandle)	niup: ldestroy_cb(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Param_t	niup: ldestroy_cb(ih: Param_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Param_t,proc(PIhandle)	niup: map_cb=(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Param_t,proc(PIhandle)	niup: map_cb(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Param_t	niup: map_cb(ih: Param_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Param_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Param_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Param_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Param_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Param_t	niup: postmessage_cb(ih: Param_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Param_t,proc(PIhandle)	niup: unmap_cb=(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Param_t,proc(PIhandle)	niup: unmap_cb(ih: Param_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Param_t	niup: unmap_cb(ih: Param_t): proc (ih: PIhandle): cint {.cdecl.}	
ParamBox	niup.html#ParamBox.m,varargs[untyped]	niup: ParamBox(args: varargs[untyped]): ParamBox_t	
active=	niup.html#active=,ParamBox_t,string	niup: active=(ih: ParamBox_t; value: string)	
active	niup.html#active,ParamBox_t,string	niup: active(ih: ParamBox_t; value: string)	
active=	niup.html#active=,ParamBox_t,bool	niup: active=(ih: ParamBox_t; yes: bool)	
active	niup.html#active,ParamBox_t,bool	niup: active(ih: ParamBox_t; yes: bool)	
active	niup.html#active,ParamBox_t	niup: active(ih: ParamBox_t): bool	
button1=	niup.html#button1=,ParamBox_t,string	niup: button1=(ih: ParamBox_t; value: string)	
button1	niup.html#button1,ParamBox_t,string	niup: button1(ih: ParamBox_t; value: string)	
button1	niup.html#button1,ParamBox_t	niup: button1(ih: ParamBox_t): string	
button2=	niup.html#button2=,ParamBox_t,string	niup: button2=(ih: ParamBox_t; value: string)	
button2	niup.html#button2,ParamBox_t,string	niup: button2(ih: ParamBox_t; value: string)	
button2	niup.html#button2,ParamBox_t	niup: button2(ih: ParamBox_t): string	
button3=	niup.html#button3=,ParamBox_t,string	niup: button3=(ih: ParamBox_t; value: string)	
button3	niup.html#button3,ParamBox_t,string	niup: button3(ih: ParamBox_t; value: string)	
button3	niup.html#button3,ParamBox_t	niup: button3(ih: ParamBox_t): string	
canfocus=	niup.html#canfocus=,ParamBox_t,string	niup: canfocus=(ih: ParamBox_t; value: string)	
canfocus	niup.html#canfocus,ParamBox_t,string	niup: canfocus(ih: ParamBox_t; value: string)	
canfocus=	niup.html#canfocus=,ParamBox_t,bool	niup: canfocus=(ih: ParamBox_t; yes: bool)	
canfocus	niup.html#canfocus,ParamBox_t,bool	niup: canfocus(ih: ParamBox_t; yes: bool)	
canfocus	niup.html#canfocus,ParamBox_t	niup: canfocus(ih: ParamBox_t): bool	
charsize	niup.html#charsize,ParamBox_t	niup: charsize(ih: ParamBox_t): string	
clientoffset	niup.html#clientoffset,ParamBox_t	niup: clientoffset(ih: ParamBox_t): string	
clientsize	niup.html#clientsize,ParamBox_t	niup: clientsize(ih: ParamBox_t): string	
expand=	niup.html#expand=,ParamBox_t,string	niup: expand=(ih: ParamBox_t; value: string)	
expand	niup.html#expand,ParamBox_t,string	niup: expand(ih: ParamBox_t; value: string)	
expand	niup.html#expand,ParamBox_t	niup: expand(ih: ParamBox_t): string	
expandweight=	niup.html#expandweight=,ParamBox_t,string	niup: expandweight=(ih: ParamBox_t; value: string)	
expandweight	niup.html#expandweight,ParamBox_t,string	niup: expandweight(ih: ParamBox_t; value: string)	
expandweight=	niup.html#expandweight=,ParamBox_t,int64	niup: expandweight=(ih: ParamBox_t; x: int64)	
expandweight	niup.html#expandweight,ParamBox_t,int64	niup: expandweight(ih: ParamBox_t; x: int64)	
expandweight	niup.html#expandweight,ParamBox_t	niup: expandweight(ih: ParamBox_t): string	
floating=	niup.html#floating=,ParamBox_t,string	niup: floating=(ih: ParamBox_t; value: string)	
floating	niup.html#floating,ParamBox_t,string	niup: floating(ih: ParamBox_t; value: string)	
floating	niup.html#floating,ParamBox_t	niup: floating(ih: ParamBox_t): string	
font=	niup.html#font=,ParamBox_t,string	niup: font=(ih: ParamBox_t; value: string)	
font	niup.html#font,ParamBox_t,string	niup: font(ih: ParamBox_t; value: string)	
font	niup.html#font,ParamBox_t	niup: font(ih: ParamBox_t): string	
fontface=	niup.html#fontface=,ParamBox_t,string	niup: fontface=(ih: ParamBox_t; value: string)	
fontface	niup.html#fontface,ParamBox_t,string	niup: fontface(ih: ParamBox_t; value: string)	
fontface	niup.html#fontface,ParamBox_t	niup: fontface(ih: ParamBox_t): string	
fontsize=	niup.html#fontsize=,ParamBox_t,string	niup: fontsize=(ih: ParamBox_t; value: string)	
fontsize	niup.html#fontsize,ParamBox_t,string	niup: fontsize(ih: ParamBox_t; value: string)	
fontsize=	niup.html#fontsize=,ParamBox_t,int	niup: fontsize=(ih: ParamBox_t; x: int)	
fontsize	niup.html#fontsize,ParamBox_t,int	niup: fontsize(ih: ParamBox_t; x: int)	
fontsize	niup.html#fontsize,ParamBox_t	niup: fontsize(ih: ParamBox_t): string	
fontstyle=	niup.html#fontstyle=,ParamBox_t,string	niup: fontstyle=(ih: ParamBox_t; value: string)	
fontstyle	niup.html#fontstyle,ParamBox_t,string	niup: fontstyle(ih: ParamBox_t; value: string)	
fontstyle	niup.html#fontstyle,ParamBox_t	niup: fontstyle(ih: ParamBox_t): string	
handlename=	niup.html#handlename=,ParamBox_t,string	niup: handlename=(ih: ParamBox_t; value: string)	
handlename	niup.html#handlename,ParamBox_t,string	niup: handlename(ih: ParamBox_t; value: string)	
handlename	niup.html#handlename,ParamBox_t	niup: handlename(ih: ParamBox_t): string	
labelalign	niup.html#labelalign,ParamBox_t	niup: labelalign(ih: ParamBox_t): string	
maxsize=	niup.html#maxsize=,ParamBox_t,string	niup: maxsize=(ih: ParamBox_t; value: string)	
maxsize	niup.html#maxsize,ParamBox_t,string	niup: maxsize(ih: ParamBox_t; value: string)	
maxsize=	niup.html#maxsize=,ParamBox_t,int,int	niup: maxsize=(ih: ParamBox_t; width, height: int)	
maxsize	niup.html#maxsize,ParamBox_t,int,int	niup: maxsize(ih: ParamBox_t; width, height: int)	
maxsize	niup.html#maxsize,ParamBox_t	niup: maxsize(ih: ParamBox_t): string	
minsize=	niup.html#minsize=,ParamBox_t,string	niup: minsize=(ih: ParamBox_t; value: string)	
minsize	niup.html#minsize,ParamBox_t,string	niup: minsize(ih: ParamBox_t; value: string)	
minsize=	niup.html#minsize=,ParamBox_t,int,int	niup: minsize=(ih: ParamBox_t; width, height: int)	
minsize	niup.html#minsize,ParamBox_t,int,int	niup: minsize(ih: ParamBox_t; width, height: int)	
minsize	niup.html#minsize,ParamBox_t	niup: minsize(ih: ParamBox_t): string	
modifiable	niup.html#modifiable,ParamBox_t	niup: modifiable(ih: ParamBox_t): string	
name=	niup.html#name=,ParamBox_t,string	niup: name=(ih: ParamBox_t; value: string)	
name	niup.html#name,ParamBox_t,string	niup: name(ih: ParamBox_t; value: string)	
name	niup.html#name,ParamBox_t	niup: name(ih: ParamBox_t): string	
naturalsize	niup.html#naturalsize,ParamBox_t	niup: naturalsize(ih: ParamBox_t): string	
normalizergroup=	niup.html#normalizergroup=,ParamBox_t,string	niup: normalizergroup=(ih: ParamBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,ParamBox_t,string	niup: normalizergroup(ih: ParamBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,ParamBox_t	niup: normalizergroup(ih: ParamBox_t): string	
ntheme=	niup.html#ntheme=,ParamBox_t,string	niup: ntheme=(ih: ParamBox_t; value: string)	
ntheme	niup.html#ntheme,ParamBox_t,string	niup: ntheme(ih: ParamBox_t; value: string)	
ntheme	niup.html#ntheme,ParamBox_t	niup: ntheme(ih: ParamBox_t): string	
pangofontdesc	niup.html#pangofontdesc,ParamBox_t	niup: pangofontdesc(ih: ParamBox_t): string	
pangolayout	niup.html#pangolayout,ParamBox_t	niup: pangolayout(ih: ParamBox_t): string	
paramcount	niup.html#paramcount,ParamBox_t	niup: paramcount(ih: ParamBox_t): string	
position=	niup.html#position=,ParamBox_t,string	niup: position=(ih: ParamBox_t; value: string)	
position	niup.html#position,ParamBox_t,string	niup: position(ih: ParamBox_t; value: string)	
position=	niup.html#position=,ParamBox_t,int,int	niup: position=(ih: ParamBox_t; x, y: int)	
position	niup.html#position,ParamBox_t,int,int	niup: position(ih: ParamBox_t; x, y: int)	
position	niup.html#position,ParamBox_t	niup: position(ih: ParamBox_t): string	
propagatefocus=	niup.html#propagatefocus=,ParamBox_t,string	niup: propagatefocus=(ih: ParamBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,ParamBox_t,string	niup: propagatefocus(ih: ParamBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,ParamBox_t,bool	niup: propagatefocus=(ih: ParamBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ParamBox_t,bool	niup: propagatefocus(ih: ParamBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ParamBox_t	niup: propagatefocus(ih: ParamBox_t): bool	
rastersize=	niup.html#rastersize=,ParamBox_t,string	niup: rastersize=(ih: ParamBox_t; value: string)	
rastersize	niup.html#rastersize,ParamBox_t,string	niup: rastersize(ih: ParamBox_t; value: string)	
rastersize=	niup.html#rastersize=,ParamBox_t,int,int	niup: rastersize=(ih: ParamBox_t; width, height: int)	
rastersize	niup.html#rastersize,ParamBox_t,int,int	niup: rastersize(ih: ParamBox_t; width, height: int)	
rastersize	niup.html#rastersize,ParamBox_t	niup: rastersize(ih: ParamBox_t): string	
size=	niup.html#size=,ParamBox_t,string	niup: size=(ih: ParamBox_t; value: string)	
size	niup.html#size,ParamBox_t,string	niup: size(ih: ParamBox_t; value: string)	
size=	niup.html#size=,ParamBox_t,int,int	niup: size=(ih: ParamBox_t; width, height: int)	
size	niup.html#size,ParamBox_t,int,int	niup: size(ih: ParamBox_t; width, height: int)	
size	niup.html#size,ParamBox_t	niup: size(ih: ParamBox_t): string	
status	niup.html#status,ParamBox_t	niup: status(ih: ParamBox_t): string	
theme=	niup.html#theme=,ParamBox_t,string	niup: theme=(ih: ParamBox_t; value: string)	
theme	niup.html#theme,ParamBox_t,string	niup: theme(ih: ParamBox_t; value: string)	
theme	niup.html#theme,ParamBox_t	niup: theme(ih: ParamBox_t): string	
userdata	niup.html#userdata,ParamBox_t	niup: userdata(ih: ParamBox_t): string	
usersize=	niup.html#usersize=,ParamBox_t,string	niup: usersize=(ih: ParamBox_t; value: string)	
usersize	niup.html#usersize,ParamBox_t,string	niup: usersize(ih: ParamBox_t; value: string)	
usersize=	niup.html#usersize=,ParamBox_t,int,int	niup: usersize=(ih: ParamBox_t; width, height: int)	
usersize	niup.html#usersize,ParamBox_t,int,int	niup: usersize(ih: ParamBox_t; width, height: int)	
usersize	niup.html#usersize,ParamBox_t	niup: usersize(ih: ParamBox_t): string	
visible=	niup.html#visible=,ParamBox_t,string	niup: visible=(ih: ParamBox_t; value: string)	
visible	niup.html#visible,ParamBox_t,string	niup: visible(ih: ParamBox_t; value: string)	
visible=	niup.html#visible=,ParamBox_t,bool	niup: visible=(ih: ParamBox_t; yes: bool)	
visible	niup.html#visible,ParamBox_t,bool	niup: visible(ih: ParamBox_t; yes: bool)	
visible	niup.html#visible,ParamBox_t	niup: visible(ih: ParamBox_t): bool	
wid	niup.html#wid,ParamBox_t	niup: wid(ih: ParamBox_t): string	
xfontid	niup.html#xfontid,ParamBox_t	niup: xfontid(ih: ParamBox_t): string	
destroy_cb=	niup.html#destroy_cb=,ParamBox_t,proc(PIhandle)	niup: destroy_cb=(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ParamBox_t,proc(PIhandle)	niup: destroy_cb(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ParamBox_t	niup: destroy_cb(ih: ParamBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,ParamBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ParamBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ParamBox_t	niup: ldestroy_cb(ih: ParamBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,ParamBox_t,proc(PIhandle)	niup: map_cb=(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ParamBox_t,proc(PIhandle)	niup: map_cb(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ParamBox_t	niup: map_cb(ih: ParamBox_t): proc (ih: PIhandle): cint {.cdecl.}	
param_cb=	niup.html#param_cb=,ParamBox_t,proc(PIhandle,cint,pointer)	niup: param_cb=(ih: ParamBox_t;\n          cb: proc (ih: PIhandle; arg2: cint; arg3: pointer): cint {.cdecl.})	
param_cb	niup.html#param_cb,ParamBox_t,proc(PIhandle,cint,pointer)	niup: param_cb(ih: ParamBox_t;\n         cb: proc (ih: PIhandle; arg2: cint; arg3: pointer): cint {.cdecl.})	
param_cb	niup.html#param_cb,ParamBox_t	niup: param_cb(ih: ParamBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,ParamBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: ParamBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ParamBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: ParamBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ParamBox_t	niup: postmessage_cb(ih: ParamBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,ParamBox_t,proc(PIhandle)	niup: unmap_cb=(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ParamBox_t,proc(PIhandle)	niup: unmap_cb(ih: ParamBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ParamBox_t	niup: unmap_cb(ih: ParamBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ProgressBar	niup.html#ProgressBar_2	niup: ProgressBar(): ProgressBar_t	
active=	niup.html#active=,ProgressBar_t,string	niup: active=(ih: ProgressBar_t; value: string)	
active	niup.html#active,ProgressBar_t,string	niup: active(ih: ProgressBar_t; value: string)	
active=	niup.html#active=,ProgressBar_t,bool	niup: active=(ih: ProgressBar_t; yes: bool)	
active	niup.html#active,ProgressBar_t,bool	niup: active(ih: ProgressBar_t; yes: bool)	
active	niup.html#active,ProgressBar_t	niup: active(ih: ProgressBar_t): bool	
bgcolor=	niup.html#bgcolor=,ProgressBar_t,string	niup: bgcolor=(ih: ProgressBar_t; value: string)	
bgcolor	niup.html#bgcolor,ProgressBar_t,string	niup: bgcolor(ih: ProgressBar_t; value: string)	
bgcolor=	niup.html#bgcolor=,ProgressBar_t,int,int,int,int	niup: bgcolor=(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ProgressBar_t,int,int,int,int	niup: bgcolor(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ProgressBar_t	niup: bgcolor(ih: ProgressBar_t): string	
canfocus=	niup.html#canfocus=,ProgressBar_t,string	niup: canfocus=(ih: ProgressBar_t; value: string)	
canfocus	niup.html#canfocus,ProgressBar_t,string	niup: canfocus(ih: ProgressBar_t; value: string)	
canfocus=	niup.html#canfocus=,ProgressBar_t,bool	niup: canfocus=(ih: ProgressBar_t; yes: bool)	
canfocus	niup.html#canfocus,ProgressBar_t,bool	niup: canfocus(ih: ProgressBar_t; yes: bool)	
canfocus	niup.html#canfocus,ProgressBar_t	niup: canfocus(ih: ProgressBar_t): bool	
charsize	niup.html#charsize,ProgressBar_t	niup: charsize(ih: ProgressBar_t): string	
dashed=	niup.html#dashed=,ProgressBar_t,string	niup: dashed=(ih: ProgressBar_t; value: string)	
dashed	niup.html#dashed,ProgressBar_t,string	niup: dashed(ih: ProgressBar_t; value: string)	
dashed=	niup.html#dashed=,ProgressBar_t,bool	niup: dashed=(ih: ProgressBar_t; yes: bool)	
dashed	niup.html#dashed,ProgressBar_t,bool	niup: dashed(ih: ProgressBar_t; yes: bool)	
dashed	niup.html#dashed,ProgressBar_t	niup: dashed(ih: ProgressBar_t): bool	
expand=	niup.html#expand=,ProgressBar_t,string	niup: expand=(ih: ProgressBar_t; value: string)	
expand	niup.html#expand,ProgressBar_t,string	niup: expand(ih: ProgressBar_t; value: string)	
expand	niup.html#expand,ProgressBar_t	niup: expand(ih: ProgressBar_t): string	
expandweight=	niup.html#expandweight=,ProgressBar_t,string	niup: expandweight=(ih: ProgressBar_t; value: string)	
expandweight	niup.html#expandweight,ProgressBar_t,string	niup: expandweight(ih: ProgressBar_t; value: string)	
expandweight=	niup.html#expandweight=,ProgressBar_t,int64	niup: expandweight=(ih: ProgressBar_t; x: int64)	
expandweight	niup.html#expandweight,ProgressBar_t,int64	niup: expandweight(ih: ProgressBar_t; x: int64)	
expandweight	niup.html#expandweight,ProgressBar_t	niup: expandweight(ih: ProgressBar_t): string	
fgcolor=	niup.html#fgcolor=,ProgressBar_t,string	niup: fgcolor=(ih: ProgressBar_t; value: string)	
fgcolor	niup.html#fgcolor,ProgressBar_t,string	niup: fgcolor(ih: ProgressBar_t; value: string)	
fgcolor=	niup.html#fgcolor=,ProgressBar_t,int,int,int,int	niup: fgcolor=(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,ProgressBar_t,int,int,int,int	niup: fgcolor(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,ProgressBar_t	niup: fgcolor(ih: ProgressBar_t): string	
floating=	niup.html#floating=,ProgressBar_t,string	niup: floating=(ih: ProgressBar_t; value: string)	
floating	niup.html#floating,ProgressBar_t,string	niup: floating(ih: ProgressBar_t; value: string)	
floating	niup.html#floating,ProgressBar_t	niup: floating(ih: ProgressBar_t): string	
font=	niup.html#font=,ProgressBar_t,string	niup: font=(ih: ProgressBar_t; value: string)	
font	niup.html#font,ProgressBar_t,string	niup: font(ih: ProgressBar_t; value: string)	
font	niup.html#font,ProgressBar_t	niup: font(ih: ProgressBar_t): string	
fontface=	niup.html#fontface=,ProgressBar_t,string	niup: fontface=(ih: ProgressBar_t; value: string)	
fontface	niup.html#fontface,ProgressBar_t,string	niup: fontface(ih: ProgressBar_t; value: string)	
fontface	niup.html#fontface,ProgressBar_t	niup: fontface(ih: ProgressBar_t): string	
fontsize=	niup.html#fontsize=,ProgressBar_t,string	niup: fontsize=(ih: ProgressBar_t; value: string)	
fontsize	niup.html#fontsize,ProgressBar_t,string	niup: fontsize(ih: ProgressBar_t; value: string)	
fontsize=	niup.html#fontsize=,ProgressBar_t,int	niup: fontsize=(ih: ProgressBar_t; x: int)	
fontsize	niup.html#fontsize,ProgressBar_t,int	niup: fontsize(ih: ProgressBar_t; x: int)	
fontsize	niup.html#fontsize,ProgressBar_t	niup: fontsize(ih: ProgressBar_t): string	
fontstyle=	niup.html#fontstyle=,ProgressBar_t,string	niup: fontstyle=(ih: ProgressBar_t; value: string)	
fontstyle	niup.html#fontstyle,ProgressBar_t,string	niup: fontstyle(ih: ProgressBar_t; value: string)	
fontstyle	niup.html#fontstyle,ProgressBar_t	niup: fontstyle(ih: ProgressBar_t): string	
handlename=	niup.html#handlename=,ProgressBar_t,string	niup: handlename=(ih: ProgressBar_t; value: string)	
handlename	niup.html#handlename,ProgressBar_t,string	niup: handlename(ih: ProgressBar_t; value: string)	
handlename	niup.html#handlename,ProgressBar_t	niup: handlename(ih: ProgressBar_t): string	
marquee	niup.html#marquee,ProgressBar_t	niup: marquee(ih: ProgressBar_t): string	
max=	niup.html#max=,ProgressBar_t,string	niup: max=(ih: ProgressBar_t; value: string)	
max	niup.html#max,ProgressBar_t,string	niup: max(ih: ProgressBar_t; value: string)	
max=	niup.html#max=,ProgressBar_t,int64	niup: max=(ih: ProgressBar_t; x: int64)	
max	niup.html#max,ProgressBar_t,int64	niup: max(ih: ProgressBar_t; x: int64)	
max	niup.html#max,ProgressBar_t	niup: max(ih: ProgressBar_t): string	
maxsize=	niup.html#maxsize=,ProgressBar_t,string	niup: maxsize=(ih: ProgressBar_t; value: string)	
maxsize	niup.html#maxsize,ProgressBar_t,string	niup: maxsize(ih: ProgressBar_t; value: string)	
maxsize=	niup.html#maxsize=,ProgressBar_t,int,int	niup: maxsize=(ih: ProgressBar_t; width, height: int)	
maxsize	niup.html#maxsize,ProgressBar_t,int,int	niup: maxsize(ih: ProgressBar_t; width, height: int)	
maxsize	niup.html#maxsize,ProgressBar_t	niup: maxsize(ih: ProgressBar_t): string	
min=	niup.html#min=,ProgressBar_t,string	niup: min=(ih: ProgressBar_t; value: string)	
min	niup.html#min,ProgressBar_t,string	niup: min(ih: ProgressBar_t; value: string)	
min=	niup.html#min=,ProgressBar_t,int64	niup: min=(ih: ProgressBar_t; x: int64)	
min	niup.html#min,ProgressBar_t,int64	niup: min(ih: ProgressBar_t; x: int64)	
min	niup.html#min,ProgressBar_t	niup: min(ih: ProgressBar_t): string	
minsize=	niup.html#minsize=,ProgressBar_t,string	niup: minsize=(ih: ProgressBar_t; value: string)	
minsize	niup.html#minsize,ProgressBar_t,string	niup: minsize(ih: ProgressBar_t; value: string)	
minsize=	niup.html#minsize=,ProgressBar_t,int,int	niup: minsize=(ih: ProgressBar_t; width, height: int)	
minsize	niup.html#minsize,ProgressBar_t,int,int	niup: minsize(ih: ProgressBar_t; width, height: int)	
minsize	niup.html#minsize,ProgressBar_t	niup: minsize(ih: ProgressBar_t): string	
name=	niup.html#name=,ProgressBar_t,string	niup: name=(ih: ProgressBar_t; value: string)	
name	niup.html#name,ProgressBar_t,string	niup: name(ih: ProgressBar_t; value: string)	
name	niup.html#name,ProgressBar_t	niup: name(ih: ProgressBar_t): string	
naturalsize	niup.html#naturalsize,ProgressBar_t	niup: naturalsize(ih: ProgressBar_t): string	
normalizergroup=	niup.html#normalizergroup=,ProgressBar_t,string	niup: normalizergroup=(ih: ProgressBar_t; value: string)	
normalizergroup	niup.html#normalizergroup,ProgressBar_t,string	niup: normalizergroup(ih: ProgressBar_t; value: string)	
normalizergroup	niup.html#normalizergroup,ProgressBar_t	niup: normalizergroup(ih: ProgressBar_t): string	
ntheme=	niup.html#ntheme=,ProgressBar_t,string	niup: ntheme=(ih: ProgressBar_t; value: string)	
ntheme	niup.html#ntheme,ProgressBar_t,string	niup: ntheme(ih: ProgressBar_t; value: string)	
ntheme	niup.html#ntheme,ProgressBar_t	niup: ntheme(ih: ProgressBar_t): string	
orientation=	niup.html#orientation=,ProgressBar_t,string	niup: orientation=(ih: ProgressBar_t; value: string)	
orientation	niup.html#orientation,ProgressBar_t,string	niup: orientation(ih: ProgressBar_t; value: string)	
orientation	niup.html#orientation,ProgressBar_t	niup: orientation(ih: ProgressBar_t): string	
pangofontdesc	niup.html#pangofontdesc,ProgressBar_t	niup: pangofontdesc(ih: ProgressBar_t): string	
pangolayout	niup.html#pangolayout,ProgressBar_t	niup: pangolayout(ih: ProgressBar_t): string	
position=	niup.html#position=,ProgressBar_t,string	niup: position=(ih: ProgressBar_t; value: string)	
position	niup.html#position,ProgressBar_t,string	niup: position(ih: ProgressBar_t; value: string)	
position=	niup.html#position=,ProgressBar_t,int,int	niup: position=(ih: ProgressBar_t; x, y: int)	
position	niup.html#position,ProgressBar_t,int,int	niup: position(ih: ProgressBar_t; x, y: int)	
position	niup.html#position,ProgressBar_t	niup: position(ih: ProgressBar_t): string	
propagatefocus=	niup.html#propagatefocus=,ProgressBar_t,string	niup: propagatefocus=(ih: ProgressBar_t; value: string)	
propagatefocus	niup.html#propagatefocus,ProgressBar_t,string	niup: propagatefocus(ih: ProgressBar_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,ProgressBar_t,bool	niup: propagatefocus=(ih: ProgressBar_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ProgressBar_t,bool	niup: propagatefocus(ih: ProgressBar_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ProgressBar_t	niup: propagatefocus(ih: ProgressBar_t): bool	
rastersize=	niup.html#rastersize=,ProgressBar_t,string	niup: rastersize=(ih: ProgressBar_t; value: string)	
rastersize	niup.html#rastersize,ProgressBar_t,string	niup: rastersize(ih: ProgressBar_t; value: string)	
rastersize=	niup.html#rastersize=,ProgressBar_t,int,int	niup: rastersize=(ih: ProgressBar_t; width, height: int)	
rastersize	niup.html#rastersize,ProgressBar_t,int,int	niup: rastersize(ih: ProgressBar_t; width, height: int)	
rastersize	niup.html#rastersize,ProgressBar_t	niup: rastersize(ih: ProgressBar_t): string	
screenposition	niup.html#screenposition,ProgressBar_t	niup: screenposition(ih: ProgressBar_t): string	
size=	niup.html#size=,ProgressBar_t,string	niup: size=(ih: ProgressBar_t; value: string)	
size	niup.html#size,ProgressBar_t,string	niup: size(ih: ProgressBar_t; value: string)	
size=	niup.html#size=,ProgressBar_t,int,int	niup: size=(ih: ProgressBar_t; width, height: int)	
size	niup.html#size,ProgressBar_t,int,int	niup: size(ih: ProgressBar_t; width, height: int)	
size	niup.html#size,ProgressBar_t	niup: size(ih: ProgressBar_t): string	
theme=	niup.html#theme=,ProgressBar_t,string	niup: theme=(ih: ProgressBar_t; value: string)	
theme	niup.html#theme,ProgressBar_t,string	niup: theme(ih: ProgressBar_t; value: string)	
theme	niup.html#theme,ProgressBar_t	niup: theme(ih: ProgressBar_t): string	
tip=	niup.html#tip=,ProgressBar_t,string	niup: tip=(ih: ProgressBar_t; value: string)	
tip	niup.html#tip,ProgressBar_t,string	niup: tip(ih: ProgressBar_t; value: string)	
tip	niup.html#tip,ProgressBar_t	niup: tip(ih: ProgressBar_t): string	
tipbgcolor=	niup.html#tipbgcolor=,ProgressBar_t,string	niup: tipbgcolor=(ih: ProgressBar_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,ProgressBar_t,string	niup: tipbgcolor(ih: ProgressBar_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,ProgressBar_t,int,int,int,int	niup: tipbgcolor=(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ProgressBar_t,int,int,int,int	niup: tipbgcolor(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ProgressBar_t	niup: tipbgcolor(ih: ProgressBar_t): string	
tipdelay=	niup.html#tipdelay=,ProgressBar_t,string	niup: tipdelay=(ih: ProgressBar_t; value: string)	
tipdelay	niup.html#tipdelay,ProgressBar_t,string	niup: tipdelay(ih: ProgressBar_t; value: string)	
tipdelay=	niup.html#tipdelay=,ProgressBar_t,int	niup: tipdelay=(ih: ProgressBar_t; x: int)	
tipdelay	niup.html#tipdelay,ProgressBar_t,int	niup: tipdelay(ih: ProgressBar_t; x: int)	
tipdelay	niup.html#tipdelay,ProgressBar_t	niup: tipdelay(ih: ProgressBar_t): string	
tipfgcolor=	niup.html#tipfgcolor=,ProgressBar_t,string	niup: tipfgcolor=(ih: ProgressBar_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,ProgressBar_t,string	niup: tipfgcolor(ih: ProgressBar_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,ProgressBar_t,int,int,int,int	niup: tipfgcolor=(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ProgressBar_t,int,int,int,int	niup: tipfgcolor(ih: ProgressBar_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ProgressBar_t	niup: tipfgcolor(ih: ProgressBar_t): string	
tipicon=	niup.html#tipicon=,ProgressBar_t,string	niup: tipicon=(ih: ProgressBar_t; value: string)	
tipicon	niup.html#tipicon,ProgressBar_t,string	niup: tipicon(ih: ProgressBar_t; value: string)	
tipicon	niup.html#tipicon,ProgressBar_t	niup: tipicon(ih: ProgressBar_t): string	
tipmarkup=	niup.html#tipmarkup=,ProgressBar_t,string	niup: tipmarkup=(ih: ProgressBar_t; value: string)	
tipmarkup	niup.html#tipmarkup,ProgressBar_t,string	niup: tipmarkup(ih: ProgressBar_t; value: string)	
tipmarkup	niup.html#tipmarkup,ProgressBar_t	niup: tipmarkup(ih: ProgressBar_t): string	
tiprect=	niup.html#tiprect=,ProgressBar_t,string	niup: tiprect=(ih: ProgressBar_t; value: string)	
tiprect	niup.html#tiprect,ProgressBar_t,string	niup: tiprect(ih: ProgressBar_t; value: string)	
tiprect=	niup.html#tiprect=,ProgressBar_t,int,int,int,int	niup: tiprect=(ih: ProgressBar_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ProgressBar_t,int,int,int,int	niup: tiprect(ih: ProgressBar_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ProgressBar_t	niup: tiprect(ih: ProgressBar_t): string	
tipvisible=	niup.html#tipvisible=,ProgressBar_t,string	niup: tipvisible=(ih: ProgressBar_t; value: string)	
tipvisible	niup.html#tipvisible,ProgressBar_t,string	niup: tipvisible(ih: ProgressBar_t; value: string)	
tipvisible=	niup.html#tipvisible=,ProgressBar_t,bool	niup: tipvisible=(ih: ProgressBar_t; yes: bool)	
tipvisible	niup.html#tipvisible,ProgressBar_t,bool	niup: tipvisible(ih: ProgressBar_t; yes: bool)	
tipvisible	niup.html#tipvisible,ProgressBar_t	niup: tipvisible(ih: ProgressBar_t): bool	
usersize=	niup.html#usersize=,ProgressBar_t,string	niup: usersize=(ih: ProgressBar_t; value: string)	
usersize	niup.html#usersize,ProgressBar_t,string	niup: usersize(ih: ProgressBar_t; value: string)	
usersize=	niup.html#usersize=,ProgressBar_t,int,int	niup: usersize=(ih: ProgressBar_t; width, height: int)	
usersize	niup.html#usersize,ProgressBar_t,int,int	niup: usersize(ih: ProgressBar_t; width, height: int)	
usersize	niup.html#usersize,ProgressBar_t	niup: usersize(ih: ProgressBar_t): string	
value=	niup.html#value=,ProgressBar_t,string	niup: value=(ih: ProgressBar_t; value: string)	
value	niup.html#value,ProgressBar_t,string	niup: value(ih: ProgressBar_t; value: string)	
value=	niup.html#value=,ProgressBar_t,int64	niup: value=(ih: ProgressBar_t; x: int64)	
value	niup.html#value,ProgressBar_t,int64	niup: value(ih: ProgressBar_t; x: int64)	
value	niup.html#value,ProgressBar_t	niup: value(ih: ProgressBar_t): string	
visible=	niup.html#visible=,ProgressBar_t,string	niup: visible=(ih: ProgressBar_t; value: string)	
visible	niup.html#visible,ProgressBar_t,string	niup: visible(ih: ProgressBar_t; value: string)	
visible=	niup.html#visible=,ProgressBar_t,bool	niup: visible=(ih: ProgressBar_t; yes: bool)	
visible	niup.html#visible,ProgressBar_t,bool	niup: visible(ih: ProgressBar_t; yes: bool)	
visible	niup.html#visible,ProgressBar_t	niup: visible(ih: ProgressBar_t): bool	
wid	niup.html#wid,ProgressBar_t	niup: wid(ih: ProgressBar_t): string	
x	niup.html#x,ProgressBar_t	niup: x(ih: ProgressBar_t): string	
xfontid	niup.html#xfontid,ProgressBar_t	niup: xfontid(ih: ProgressBar_t): string	
y	niup.html#y,ProgressBar_t	niup: y(ih: ProgressBar_t): string	
zorder=	niup.html#zorder=,ProgressBar_t,string	niup: zorder=(ih: ProgressBar_t; value: string)	
zorder	niup.html#zorder,ProgressBar_t,string	niup: zorder(ih: ProgressBar_t; value: string)	
map_cb=	niup.html#map_cb=,ProgressBar_t,proc(PIhandle)	niup: map_cb=(ih: ProgressBar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ProgressBar_t,proc(PIhandle)	niup: map_cb(ih: ProgressBar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ProgressBar_t	niup: map_cb(ih: ProgressBar_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,ProgressBar_t,proc(PIhandle)	niup: unmap_cb=(ih: ProgressBar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ProgressBar_t,proc(PIhandle)	niup: unmap_cb(ih: ProgressBar_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ProgressBar_t	niup: unmap_cb(ih: ProgressBar_t): proc (ih: PIhandle): cint {.cdecl.}	
ProgressDlg	niup.html#ProgressDlg_2	niup: ProgressDlg(): ProgressDlg_t	
active=	niup.html#active=,ProgressDlg_t,string	niup: active=(ih: ProgressDlg_t; value: string)	
active	niup.html#active,ProgressDlg_t,string	niup: active(ih: ProgressDlg_t; value: string)	
active=	niup.html#active=,ProgressDlg_t,bool	niup: active=(ih: ProgressDlg_t; yes: bool)	
active	niup.html#active,ProgressDlg_t,bool	niup: active(ih: ProgressDlg_t; yes: bool)	
active	niup.html#active,ProgressDlg_t	niup: active(ih: ProgressDlg_t): bool	
activewindow	niup.html#activewindow,ProgressDlg_t	niup: activewindow(ih: ProgressDlg_t): bool	
background=	niup.html#background=,ProgressDlg_t,string	niup: background=(ih: ProgressDlg_t; value: string)	
background	niup.html#background,ProgressDlg_t,string	niup: background(ih: ProgressDlg_t; value: string)	
background=	niup.html#background=,ProgressDlg_t,int,int,int,int	niup: background=(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,ProgressDlg_t,int,int,int,int	niup: background(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
background	niup.html#background,ProgressDlg_t	niup: background(ih: ProgressDlg_t): string	
bgcolor=	niup.html#bgcolor=,ProgressDlg_t,string	niup: bgcolor=(ih: ProgressDlg_t; value: string)	
bgcolor	niup.html#bgcolor,ProgressDlg_t,string	niup: bgcolor(ih: ProgressDlg_t; value: string)	
bgcolor=	niup.html#bgcolor=,ProgressDlg_t,int,int,int,int	niup: bgcolor=(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ProgressDlg_t,int,int,int,int	niup: bgcolor(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ProgressDlg_t	niup: bgcolor(ih: ProgressDlg_t): string	
border=	niup.html#border=,ProgressDlg_t,string	niup: border=(ih: ProgressDlg_t; value: string)	
border	niup.html#border,ProgressDlg_t,string	niup: border(ih: ProgressDlg_t; value: string)	
border=	niup.html#border=,ProgressDlg_t,bool	niup: border=(ih: ProgressDlg_t; yes: bool)	
border	niup.html#border,ProgressDlg_t,bool	niup: border(ih: ProgressDlg_t; yes: bool)	
border	niup.html#border,ProgressDlg_t	niup: border(ih: ProgressDlg_t): bool	
bordersize	niup.html#bordersize,ProgressDlg_t	niup: bordersize(ih: ProgressDlg_t): string	
bringfront=	niup.html#bringfront=,ProgressDlg_t,string	niup: bringfront=(ih: ProgressDlg_t; value: string)	
bringfront	niup.html#bringfront,ProgressDlg_t,string	niup: bringfront(ih: ProgressDlg_t; value: string)	
bringfront=	niup.html#bringfront=,ProgressDlg_t,bool	niup: bringfront=(ih: ProgressDlg_t; yes: bool)	
bringfront	niup.html#bringfront,ProgressDlg_t,bool	niup: bringfront(ih: ProgressDlg_t; yes: bool)	
bringfront	niup.html#bringfront,ProgressDlg_t	niup: bringfront(ih: ProgressDlg_t): bool	
canfocus=	niup.html#canfocus=,ProgressDlg_t,string	niup: canfocus=(ih: ProgressDlg_t; value: string)	
canfocus	niup.html#canfocus,ProgressDlg_t,string	niup: canfocus(ih: ProgressDlg_t; value: string)	
canfocus=	niup.html#canfocus=,ProgressDlg_t,bool	niup: canfocus=(ih: ProgressDlg_t; yes: bool)	
canfocus	niup.html#canfocus,ProgressDlg_t,bool	niup: canfocus(ih: ProgressDlg_t; yes: bool)	
canfocus	niup.html#canfocus,ProgressDlg_t	niup: canfocus(ih: ProgressDlg_t): bool	
charsize	niup.html#charsize,ProgressDlg_t	niup: charsize(ih: ProgressDlg_t): string	
childoffset=	niup.html#childoffset=,ProgressDlg_t,string	niup: childoffset=(ih: ProgressDlg_t; value: string)	
childoffset	niup.html#childoffset,ProgressDlg_t,string	niup: childoffset(ih: ProgressDlg_t; value: string)	
childoffset=	niup.html#childoffset=,ProgressDlg_t,int,int	niup: childoffset=(ih: ProgressDlg_t; width, height: int)	
childoffset	niup.html#childoffset,ProgressDlg_t,int,int	niup: childoffset(ih: ProgressDlg_t; width, height: int)	
childoffset	niup.html#childoffset,ProgressDlg_t	niup: childoffset(ih: ProgressDlg_t): string	
clientoffset	niup.html#clientoffset,ProgressDlg_t	niup: clientoffset(ih: ProgressDlg_t): string	
clientsize=	niup.html#clientsize=,ProgressDlg_t,string	niup: clientsize=(ih: ProgressDlg_t; value: string)	
clientsize	niup.html#clientsize,ProgressDlg_t,string	niup: clientsize(ih: ProgressDlg_t; value: string)	
clientsize=	niup.html#clientsize=,ProgressDlg_t,int,int	niup: clientsize=(ih: ProgressDlg_t; width, height: int)	
clientsize	niup.html#clientsize,ProgressDlg_t,int,int	niup: clientsize(ih: ProgressDlg_t; width, height: int)	
clientsize	niup.html#clientsize,ProgressDlg_t	niup: clientsize(ih: ProgressDlg_t): string	
composited=	niup.html#composited=,ProgressDlg_t,string	niup: composited=(ih: ProgressDlg_t; value: string)	
composited	niup.html#composited,ProgressDlg_t,string	niup: composited(ih: ProgressDlg_t; value: string)	
composited=	niup.html#composited=,ProgressDlg_t,bool	niup: composited=(ih: ProgressDlg_t; yes: bool)	
composited	niup.html#composited,ProgressDlg_t,bool	niup: composited(ih: ProgressDlg_t; yes: bool)	
composited	niup.html#composited,ProgressDlg_t	niup: composited(ih: ProgressDlg_t): bool	
control=	niup.html#control=,ProgressDlg_t,string	niup: control=(ih: ProgressDlg_t; value: string)	
control	niup.html#control,ProgressDlg_t,string	niup: control(ih: ProgressDlg_t; value: string)	
control=	niup.html#control=,ProgressDlg_t,bool	niup: control=(ih: ProgressDlg_t; yes: bool)	
control	niup.html#control,ProgressDlg_t,bool	niup: control(ih: ProgressDlg_t; yes: bool)	
control	niup.html#control,ProgressDlg_t	niup: control(ih: ProgressDlg_t): bool	
count=	niup.html#count=,ProgressDlg_t,string	niup: count=(ih: ProgressDlg_t; value: string)	
count	niup.html#count,ProgressDlg_t,string	niup: count(ih: ProgressDlg_t; value: string)	
count=	niup.html#count=,ProgressDlg_t,int	niup: count=(ih: ProgressDlg_t; x: int)	
count	niup.html#count,ProgressDlg_t,int	niup: count(ih: ProgressDlg_t; x: int)	
count	niup.html#count,ProgressDlg_t	niup: count(ih: ProgressDlg_t): string	
cursor=	niup.html#cursor=,ProgressDlg_t,	niup: cursor=(ih: ProgressDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ProgressDlg_t,	niup: cursor(ih: ProgressDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ProgressDlg_t	niup: cursor(ih: ProgressDlg_t): string	
customframe=	niup.html#customframe=,ProgressDlg_t,string	niup: customframe=(ih: ProgressDlg_t; value: string)	
customframe	niup.html#customframe,ProgressDlg_t,string	niup: customframe(ih: ProgressDlg_t; value: string)	
customframe=	niup.html#customframe=,ProgressDlg_t,bool	niup: customframe=(ih: ProgressDlg_t; yes: bool)	
customframe	niup.html#customframe,ProgressDlg_t,bool	niup: customframe(ih: ProgressDlg_t; yes: bool)	
customframe	niup.html#customframe,ProgressDlg_t	niup: customframe(ih: ProgressDlg_t): bool	
customframesimulate=	niup.html#customframesimulate=,ProgressDlg_t,string	niup: customframesimulate=(ih: ProgressDlg_t; value: string)	
customframesimulate	niup.html#customframesimulate,ProgressDlg_t,string	niup: customframesimulate(ih: ProgressDlg_t; value: string)	
customframesimulate=	niup.html#customframesimulate=,ProgressDlg_t,bool	niup: customframesimulate=(ih: ProgressDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,ProgressDlg_t,bool	niup: customframesimulate(ih: ProgressDlg_t; yes: bool)	
customframesimulate	niup.html#customframesimulate,ProgressDlg_t	niup: customframesimulate(ih: ProgressDlg_t): bool	
defaultenter=	niup.html#defaultenter=,ProgressDlg_t,IUPhandle_t	niup: defaultenter=(ih: ProgressDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,ProgressDlg_t,IUPhandle_t	niup: defaultenter(ih: ProgressDlg_t; handle: IUPhandle_t)	
defaultenter	niup.html#defaultenter,ProgressDlg_t	niup: defaultenter(ih: ProgressDlg_t): string	
defaultesc=	niup.html#defaultesc=,ProgressDlg_t,IUPhandle_t	niup: defaultesc=(ih: ProgressDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,ProgressDlg_t,IUPhandle_t	niup: defaultesc(ih: ProgressDlg_t; handle: IUPhandle_t)	
defaultesc	niup.html#defaultesc,ProgressDlg_t	niup: defaultesc(ih: ProgressDlg_t): string	
description	niup.html#description,ProgressDlg_t	niup: description(ih: ProgressDlg_t): string	
dialogframe=	niup.html#dialogframe=,ProgressDlg_t,string	niup: dialogframe=(ih: ProgressDlg_t; value: string)	
dialogframe	niup.html#dialogframe,ProgressDlg_t,string	niup: dialogframe(ih: ProgressDlg_t; value: string)	
dialogframe=	niup.html#dialogframe=,ProgressDlg_t,bool	niup: dialogframe=(ih: ProgressDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,ProgressDlg_t,bool	niup: dialogframe(ih: ProgressDlg_t; yes: bool)	
dialogframe	niup.html#dialogframe,ProgressDlg_t	niup: dialogframe(ih: ProgressDlg_t): bool	
dialoghint=	niup.html#dialoghint=,ProgressDlg_t,string	niup: dialoghint=(ih: ProgressDlg_t; value: string)	
dialoghint	niup.html#dialoghint,ProgressDlg_t,string	niup: dialoghint(ih: ProgressDlg_t; value: string)	
dialoghint=	niup.html#dialoghint=,ProgressDlg_t,bool	niup: dialoghint=(ih: ProgressDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,ProgressDlg_t,bool	niup: dialoghint(ih: ProgressDlg_t; yes: bool)	
dialoghint	niup.html#dialoghint,ProgressDlg_t	niup: dialoghint(ih: ProgressDlg_t): bool	
dragdrop=	niup.html#dragdrop=,ProgressDlg_t,string	niup: dragdrop=(ih: ProgressDlg_t; value: string)	
dragdrop	niup.html#dragdrop,ProgressDlg_t,string	niup: dragdrop(ih: ProgressDlg_t; value: string)	
dragdrop=	niup.html#dragdrop=,ProgressDlg_t,bool	niup: dragdrop=(ih: ProgressDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,ProgressDlg_t,bool	niup: dragdrop(ih: ProgressDlg_t; yes: bool)	
dragdrop	niup.html#dragdrop,ProgressDlg_t	niup: dragdrop(ih: ProgressDlg_t): bool	
dragsource=	niup.html#dragsource=,ProgressDlg_t,string	niup: dragsource=(ih: ProgressDlg_t; value: string)	
dragsource	niup.html#dragsource,ProgressDlg_t,string	niup: dragsource(ih: ProgressDlg_t; value: string)	
dragsource=	niup.html#dragsource=,ProgressDlg_t,bool	niup: dragsource=(ih: ProgressDlg_t; yes: bool)	
dragsource	niup.html#dragsource,ProgressDlg_t,bool	niup: dragsource(ih: ProgressDlg_t; yes: bool)	
dragsource	niup.html#dragsource,ProgressDlg_t	niup: dragsource(ih: ProgressDlg_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,ProgressDlg_t,string	niup: dragsourcemove=(ih: ProgressDlg_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,ProgressDlg_t,string	niup: dragsourcemove(ih: ProgressDlg_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,ProgressDlg_t,bool	niup: dragsourcemove=(ih: ProgressDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ProgressDlg_t,bool	niup: dragsourcemove(ih: ProgressDlg_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ProgressDlg_t	niup: dragsourcemove(ih: ProgressDlg_t): bool	
dragtypes=	niup.html#dragtypes=,ProgressDlg_t,string	niup: dragtypes=(ih: ProgressDlg_t; value: string)	
dragtypes	niup.html#dragtypes,ProgressDlg_t,string	niup: dragtypes(ih: ProgressDlg_t; value: string)	
dragtypes	niup.html#dragtypes,ProgressDlg_t	niup: dragtypes(ih: ProgressDlg_t): string	
dropfilestarget=	niup.html#dropfilestarget=,ProgressDlg_t,string	niup: dropfilestarget=(ih: ProgressDlg_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,ProgressDlg_t,string	niup: dropfilestarget(ih: ProgressDlg_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,ProgressDlg_t,bool	niup: dropfilestarget=(ih: ProgressDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ProgressDlg_t,bool	niup: dropfilestarget(ih: ProgressDlg_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ProgressDlg_t	niup: dropfilestarget(ih: ProgressDlg_t): bool	
droptarget=	niup.html#droptarget=,ProgressDlg_t,string	niup: droptarget=(ih: ProgressDlg_t; value: string)	
droptarget	niup.html#droptarget,ProgressDlg_t,string	niup: droptarget(ih: ProgressDlg_t; value: string)	
droptarget=	niup.html#droptarget=,ProgressDlg_t,bool	niup: droptarget=(ih: ProgressDlg_t; yes: bool)	
droptarget	niup.html#droptarget,ProgressDlg_t,bool	niup: droptarget(ih: ProgressDlg_t; yes: bool)	
droptarget	niup.html#droptarget,ProgressDlg_t	niup: droptarget(ih: ProgressDlg_t): bool	
droptypes=	niup.html#droptypes=,ProgressDlg_t,string	niup: droptypes=(ih: ProgressDlg_t; value: string)	
droptypes	niup.html#droptypes,ProgressDlg_t,string	niup: droptypes(ih: ProgressDlg_t; value: string)	
droptypes	niup.html#droptypes,ProgressDlg_t	niup: droptypes(ih: ProgressDlg_t): string	
expand=	niup.html#expand=,ProgressDlg_t,string	niup: expand=(ih: ProgressDlg_t; value: string)	
expand	niup.html#expand,ProgressDlg_t,string	niup: expand(ih: ProgressDlg_t; value: string)	
expand	niup.html#expand,ProgressDlg_t	niup: expand(ih: ProgressDlg_t): string	
expandweight=	niup.html#expandweight=,ProgressDlg_t,string	niup: expandweight=(ih: ProgressDlg_t; value: string)	
expandweight	niup.html#expandweight,ProgressDlg_t,string	niup: expandweight(ih: ProgressDlg_t; value: string)	
expandweight=	niup.html#expandweight=,ProgressDlg_t,int64	niup: expandweight=(ih: ProgressDlg_t; x: int64)	
expandweight	niup.html#expandweight,ProgressDlg_t,int64	niup: expandweight(ih: ProgressDlg_t; x: int64)	
expandweight	niup.html#expandweight,ProgressDlg_t	niup: expandweight(ih: ProgressDlg_t): string	
floating=	niup.html#floating=,ProgressDlg_t,string	niup: floating=(ih: ProgressDlg_t; value: string)	
floating	niup.html#floating,ProgressDlg_t,string	niup: floating(ih: ProgressDlg_t; value: string)	
floating	niup.html#floating,ProgressDlg_t	niup: floating(ih: ProgressDlg_t): string	
font=	niup.html#font=,ProgressDlg_t,string	niup: font=(ih: ProgressDlg_t; value: string)	
font	niup.html#font,ProgressDlg_t,string	niup: font(ih: ProgressDlg_t; value: string)	
font	niup.html#font,ProgressDlg_t	niup: font(ih: ProgressDlg_t): string	
fontface=	niup.html#fontface=,ProgressDlg_t,string	niup: fontface=(ih: ProgressDlg_t; value: string)	
fontface	niup.html#fontface,ProgressDlg_t,string	niup: fontface(ih: ProgressDlg_t; value: string)	
fontface	niup.html#fontface,ProgressDlg_t	niup: fontface(ih: ProgressDlg_t): string	
fontsize=	niup.html#fontsize=,ProgressDlg_t,string	niup: fontsize=(ih: ProgressDlg_t; value: string)	
fontsize	niup.html#fontsize,ProgressDlg_t,string	niup: fontsize(ih: ProgressDlg_t; value: string)	
fontsize=	niup.html#fontsize=,ProgressDlg_t,int	niup: fontsize=(ih: ProgressDlg_t; x: int)	
fontsize	niup.html#fontsize,ProgressDlg_t,int	niup: fontsize(ih: ProgressDlg_t; x: int)	
fontsize	niup.html#fontsize,ProgressDlg_t	niup: fontsize(ih: ProgressDlg_t): string	
fontstyle=	niup.html#fontstyle=,ProgressDlg_t,string	niup: fontstyle=(ih: ProgressDlg_t; value: string)	
fontstyle	niup.html#fontstyle,ProgressDlg_t,string	niup: fontstyle(ih: ProgressDlg_t; value: string)	
fontstyle	niup.html#fontstyle,ProgressDlg_t	niup: fontstyle(ih: ProgressDlg_t): string	
fullscreen=	niup.html#fullscreen=,ProgressDlg_t,string	niup: fullscreen=(ih: ProgressDlg_t; value: string)	
fullscreen	niup.html#fullscreen,ProgressDlg_t,string	niup: fullscreen(ih: ProgressDlg_t; value: string)	
fullscreen=	niup.html#fullscreen=,ProgressDlg_t,bool	niup: fullscreen=(ih: ProgressDlg_t; yes: bool)	
fullscreen	niup.html#fullscreen,ProgressDlg_t,bool	niup: fullscreen(ih: ProgressDlg_t; yes: bool)	
handlename=	niup.html#handlename=,ProgressDlg_t,string	niup: handlename=(ih: ProgressDlg_t; value: string)	
handlename	niup.html#handlename,ProgressDlg_t,string	niup: handlename(ih: ProgressDlg_t; value: string)	
handlename	niup.html#handlename,ProgressDlg_t	niup: handlename(ih: ProgressDlg_t): string	
helpbutton=	niup.html#helpbutton=,ProgressDlg_t,string	niup: helpbutton=(ih: ProgressDlg_t; value: string)	
helpbutton	niup.html#helpbutton,ProgressDlg_t,string	niup: helpbutton(ih: ProgressDlg_t; value: string)	
helpbutton=	niup.html#helpbutton=,ProgressDlg_t,bool	niup: helpbutton=(ih: ProgressDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,ProgressDlg_t,bool	niup: helpbutton(ih: ProgressDlg_t; yes: bool)	
helpbutton	niup.html#helpbutton,ProgressDlg_t	niup: helpbutton(ih: ProgressDlg_t): bool	
hidetaskbar=	niup.html#hidetaskbar=,ProgressDlg_t,string	niup: hidetaskbar=(ih: ProgressDlg_t; value: string)	
hidetaskbar	niup.html#hidetaskbar,ProgressDlg_t,string	niup: hidetaskbar(ih: ProgressDlg_t; value: string)	
hidetaskbar=	niup.html#hidetaskbar=,ProgressDlg_t,bool	niup: hidetaskbar=(ih: ProgressDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,ProgressDlg_t,bool	niup: hidetaskbar(ih: ProgressDlg_t; yes: bool)	
hidetaskbar	niup.html#hidetaskbar,ProgressDlg_t	niup: hidetaskbar(ih: ProgressDlg_t): bool	
hidetitlebar=	niup.html#hidetitlebar=,ProgressDlg_t,string	niup: hidetitlebar=(ih: ProgressDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,ProgressDlg_t,string	niup: hidetitlebar(ih: ProgressDlg_t; value: string)	
hidetitlebar	niup.html#hidetitlebar,ProgressDlg_t	niup: hidetitlebar(ih: ProgressDlg_t): string	
icon=	niup.html#icon=,ProgressDlg_t,string	niup: icon=(ih: ProgressDlg_t; value: string)	
icon	niup.html#icon,ProgressDlg_t,string	niup: icon(ih: ProgressDlg_t; value: string)	
icon	niup.html#icon,ProgressDlg_t	niup: icon(ih: ProgressDlg_t): string	
maxbox=	niup.html#maxbox=,ProgressDlg_t,string	niup: maxbox=(ih: ProgressDlg_t; value: string)	
maxbox	niup.html#maxbox,ProgressDlg_t,string	niup: maxbox(ih: ProgressDlg_t; value: string)	
maxbox=	niup.html#maxbox=,ProgressDlg_t,bool	niup: maxbox=(ih: ProgressDlg_t; yes: bool)	
maxbox	niup.html#maxbox,ProgressDlg_t,bool	niup: maxbox(ih: ProgressDlg_t; yes: bool)	
maxbox	niup.html#maxbox,ProgressDlg_t	niup: maxbox(ih: ProgressDlg_t): bool	
maximized	niup.html#maximized,ProgressDlg_t	niup: maximized(ih: ProgressDlg_t): bool	
maxsize=	niup.html#maxsize=,ProgressDlg_t,string	niup: maxsize=(ih: ProgressDlg_t; value: string)	
maxsize	niup.html#maxsize,ProgressDlg_t,string	niup: maxsize(ih: ProgressDlg_t; value: string)	
maxsize=	niup.html#maxsize=,ProgressDlg_t,int,int	niup: maxsize=(ih: ProgressDlg_t; width, height: int)	
maxsize	niup.html#maxsize,ProgressDlg_t,int,int	niup: maxsize(ih: ProgressDlg_t; width, height: int)	
maxsize	niup.html#maxsize,ProgressDlg_t	niup: maxsize(ih: ProgressDlg_t): string	
mdichild=	niup.html#mdichild=,ProgressDlg_t,string	niup: mdichild=(ih: ProgressDlg_t; value: string)	
mdichild	niup.html#mdichild,ProgressDlg_t,string	niup: mdichild(ih: ProgressDlg_t; value: string)	
mdichild=	niup.html#mdichild=,ProgressDlg_t,bool	niup: mdichild=(ih: ProgressDlg_t; yes: bool)	
mdichild	niup.html#mdichild,ProgressDlg_t,bool	niup: mdichild(ih: ProgressDlg_t; yes: bool)	
mdichild	niup.html#mdichild,ProgressDlg_t	niup: mdichild(ih: ProgressDlg_t): bool	
mdiclient=	niup.html#mdiclient=,ProgressDlg_t,string	niup: mdiclient=(ih: ProgressDlg_t; value: string)	
mdiclient	niup.html#mdiclient,ProgressDlg_t,string	niup: mdiclient(ih: ProgressDlg_t; value: string)	
mdiclient=	niup.html#mdiclient=,ProgressDlg_t,bool	niup: mdiclient=(ih: ProgressDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,ProgressDlg_t,bool	niup: mdiclient(ih: ProgressDlg_t; yes: bool)	
mdiclient	niup.html#mdiclient,ProgressDlg_t	niup: mdiclient(ih: ProgressDlg_t): bool	
mdiframe=	niup.html#mdiframe=,ProgressDlg_t,string	niup: mdiframe=(ih: ProgressDlg_t; value: string)	
mdiframe	niup.html#mdiframe,ProgressDlg_t,string	niup: mdiframe(ih: ProgressDlg_t; value: string)	
mdiframe=	niup.html#mdiframe=,ProgressDlg_t,bool	niup: mdiframe=(ih: ProgressDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,ProgressDlg_t,bool	niup: mdiframe(ih: ProgressDlg_t; yes: bool)	
mdiframe	niup.html#mdiframe,ProgressDlg_t	niup: mdiframe(ih: ProgressDlg_t): bool	
mdimenu=	niup.html#mdimenu=,ProgressDlg_t,Menu_t	niup: mdimenu=(ih: ProgressDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,ProgressDlg_t,Menu_t	niup: mdimenu(ih: ProgressDlg_t; handle: Menu_t)	
mdimenu	niup.html#mdimenu,ProgressDlg_t	niup: mdimenu(ih: ProgressDlg_t): string	
menu=	niup.html#menu=,ProgressDlg_t,Menu_t	niup: menu=(ih: ProgressDlg_t; handle: Menu_t)	
menu	niup.html#menu,ProgressDlg_t,Menu_t	niup: menu(ih: ProgressDlg_t; handle: Menu_t)	
menu	niup.html#menu,ProgressDlg_t	niup: menu(ih: ProgressDlg_t): string	
menubox=	niup.html#menubox=,ProgressDlg_t,string	niup: menubox=(ih: ProgressDlg_t; value: string)	
menubox	niup.html#menubox,ProgressDlg_t,string	niup: menubox(ih: ProgressDlg_t; value: string)	
menubox=	niup.html#menubox=,ProgressDlg_t,bool	niup: menubox=(ih: ProgressDlg_t; yes: bool)	
menubox	niup.html#menubox,ProgressDlg_t,bool	niup: menubox(ih: ProgressDlg_t; yes: bool)	
menubox	niup.html#menubox,ProgressDlg_t	niup: menubox(ih: ProgressDlg_t): bool	
minbox=	niup.html#minbox=,ProgressDlg_t,string	niup: minbox=(ih: ProgressDlg_t; value: string)	
minbox	niup.html#minbox,ProgressDlg_t,string	niup: minbox(ih: ProgressDlg_t; value: string)	
minbox=	niup.html#minbox=,ProgressDlg_t,bool	niup: minbox=(ih: ProgressDlg_t; yes: bool)	
minbox	niup.html#minbox,ProgressDlg_t,bool	niup: minbox(ih: ProgressDlg_t; yes: bool)	
minbox	niup.html#minbox,ProgressDlg_t	niup: minbox(ih: ProgressDlg_t): bool	
minclock	niup.html#minclock,ProgressDlg_t	niup: minclock(ih: ProgressDlg_t): string	
minpercent	niup.html#minpercent,ProgressDlg_t	niup: minpercent(ih: ProgressDlg_t): string	
minsize=	niup.html#minsize=,ProgressDlg_t,string	niup: minsize=(ih: ProgressDlg_t; value: string)	
minsize	niup.html#minsize,ProgressDlg_t,string	niup: minsize(ih: ProgressDlg_t; value: string)	
minsize=	niup.html#minsize=,ProgressDlg_t,int,int	niup: minsize=(ih: ProgressDlg_t; width, height: int)	
minsize	niup.html#minsize,ProgressDlg_t,int,int	niup: minsize(ih: ProgressDlg_t; width, height: int)	
minsize	niup.html#minsize,ProgressDlg_t	niup: minsize(ih: ProgressDlg_t): string	
modal	niup.html#modal,ProgressDlg_t	niup: modal(ih: ProgressDlg_t): bool	
nactive=	niup.html#nactive=,ProgressDlg_t,string	niup: nactive=(ih: ProgressDlg_t; value: string)	
nactive	niup.html#nactive,ProgressDlg_t,string	niup: nactive(ih: ProgressDlg_t; value: string)	
nactive=	niup.html#nactive=,ProgressDlg_t,bool	niup: nactive=(ih: ProgressDlg_t; yes: bool)	
nactive	niup.html#nactive,ProgressDlg_t,bool	niup: nactive(ih: ProgressDlg_t; yes: bool)	
nactive	niup.html#nactive,ProgressDlg_t	niup: nactive(ih: ProgressDlg_t): bool	
name=	niup.html#name=,ProgressDlg_t,string	niup: name=(ih: ProgressDlg_t; value: string)	
name	niup.html#name,ProgressDlg_t,string	niup: name(ih: ProgressDlg_t; value: string)	
name	niup.html#name,ProgressDlg_t	niup: name(ih: ProgressDlg_t): string	
nativeparent=	niup.html#nativeparent=,ProgressDlg_t,User_t	niup: nativeparent=(ih: ProgressDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,ProgressDlg_t,User_t	niup: nativeparent(ih: ProgressDlg_t; handle: User_t)	
nativeparent	niup.html#nativeparent,ProgressDlg_t	niup: nativeparent(ih: ProgressDlg_t): string	
naturalsize	niup.html#naturalsize,ProgressDlg_t	niup: naturalsize(ih: ProgressDlg_t): string	
noflush=	niup.html#noflush=,ProgressDlg_t,string	niup: noflush=(ih: ProgressDlg_t; value: string)	
noflush	niup.html#noflush,ProgressDlg_t,string	niup: noflush(ih: ProgressDlg_t; value: string)	
noflush=	niup.html#noflush=,ProgressDlg_t,bool	niup: noflush=(ih: ProgressDlg_t; yes: bool)	
noflush	niup.html#noflush,ProgressDlg_t,bool	niup: noflush(ih: ProgressDlg_t; yes: bool)	
noflush	niup.html#noflush,ProgressDlg_t	niup: noflush(ih: ProgressDlg_t): bool	
normalizergroup=	niup.html#normalizergroup=,ProgressDlg_t,string	niup: normalizergroup=(ih: ProgressDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,ProgressDlg_t,string	niup: normalizergroup(ih: ProgressDlg_t; value: string)	
normalizergroup	niup.html#normalizergroup,ProgressDlg_t	niup: normalizergroup(ih: ProgressDlg_t): string	
ntheme=	niup.html#ntheme=,ProgressDlg_t,string	niup: ntheme=(ih: ProgressDlg_t; value: string)	
ntheme	niup.html#ntheme,ProgressDlg_t,string	niup: ntheme(ih: ProgressDlg_t; value: string)	
ntheme	niup.html#ntheme,ProgressDlg_t	niup: ntheme(ih: ProgressDlg_t): string	
opacity=	niup.html#opacity=,ProgressDlg_t,string	niup: opacity=(ih: ProgressDlg_t; value: string)	
opacity	niup.html#opacity,ProgressDlg_t,string	niup: opacity(ih: ProgressDlg_t; value: string)	
opacity=	niup.html#opacity=,ProgressDlg_t,int	niup: opacity=(ih: ProgressDlg_t; x: int)	
opacity	niup.html#opacity,ProgressDlg_t,int	niup: opacity(ih: ProgressDlg_t; x: int)	
opacity	niup.html#opacity,ProgressDlg_t	niup: opacity(ih: ProgressDlg_t): string	
opacityimage=	niup.html#opacityimage=,ProgressDlg_t,string	niup: opacityimage=(ih: ProgressDlg_t; value: string)	
opacityimage	niup.html#opacityimage,ProgressDlg_t,string	niup: opacityimage(ih: ProgressDlg_t; value: string)	
opacityimage	niup.html#opacityimage,ProgressDlg_t	niup: opacityimage(ih: ProgressDlg_t): string	
pangofontdesc	niup.html#pangofontdesc,ProgressDlg_t	niup: pangofontdesc(ih: ProgressDlg_t): string	
pangolayout	niup.html#pangolayout,ProgressDlg_t	niup: pangolayout(ih: ProgressDlg_t): string	
parentdialog=	niup.html#parentdialog=,ProgressDlg_t,IUPhandle_t	niup: parentdialog=(ih: ProgressDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,ProgressDlg_t,IUPhandle_t	niup: parentdialog(ih: ProgressDlg_t; handle: IUPhandle_t)	
parentdialog	niup.html#parentdialog,ProgressDlg_t	niup: parentdialog(ih: ProgressDlg_t): string	
percent	niup.html#percent,ProgressDlg_t	niup: percent(ih: ProgressDlg_t): string	
placement=	niup.html#placement=,ProgressDlg_t,string	niup: placement=(ih: ProgressDlg_t; value: string)	
placement	niup.html#placement,ProgressDlg_t,string	niup: placement(ih: ProgressDlg_t; value: string)	
placement	niup.html#placement,ProgressDlg_t	niup: placement(ih: ProgressDlg_t): string	
position=	niup.html#position=,ProgressDlg_t,string	niup: position=(ih: ProgressDlg_t; value: string)	
position	niup.html#position,ProgressDlg_t,string	niup: position(ih: ProgressDlg_t; value: string)	
position=	niup.html#position=,ProgressDlg_t,int,int	niup: position=(ih: ProgressDlg_t; x, y: int)	
position	niup.html#position,ProgressDlg_t,int,int	niup: position(ih: ProgressDlg_t; x, y: int)	
position	niup.html#position,ProgressDlg_t	niup: position(ih: ProgressDlg_t): string	
progressheight	niup.html#progressheight,ProgressDlg_t	niup: progressheight(ih: ProgressDlg_t): string	
propagatefocus=	niup.html#propagatefocus=,ProgressDlg_t,string	niup: propagatefocus=(ih: ProgressDlg_t; value: string)	
propagatefocus	niup.html#propagatefocus,ProgressDlg_t,string	niup: propagatefocus(ih: ProgressDlg_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,ProgressDlg_t,bool	niup: propagatefocus=(ih: ProgressDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ProgressDlg_t,bool	niup: propagatefocus(ih: ProgressDlg_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ProgressDlg_t	niup: propagatefocus(ih: ProgressDlg_t): bool	
rastersize=	niup.html#rastersize=,ProgressDlg_t,string	niup: rastersize=(ih: ProgressDlg_t; value: string)	
rastersize	niup.html#rastersize,ProgressDlg_t,string	niup: rastersize(ih: ProgressDlg_t; value: string)	
rastersize=	niup.html#rastersize=,ProgressDlg_t,int,int	niup: rastersize=(ih: ProgressDlg_t; width, height: int)	
rastersize	niup.html#rastersize,ProgressDlg_t,int,int	niup: rastersize(ih: ProgressDlg_t; width, height: int)	
rastersize	niup.html#rastersize,ProgressDlg_t	niup: rastersize(ih: ProgressDlg_t): string	
resize=	niup.html#resize=,ProgressDlg_t,string	niup: resize=(ih: ProgressDlg_t; value: string)	
resize	niup.html#resize,ProgressDlg_t,string	niup: resize(ih: ProgressDlg_t; value: string)	
resize=	niup.html#resize=,ProgressDlg_t,bool	niup: resize=(ih: ProgressDlg_t; yes: bool)	
resize	niup.html#resize,ProgressDlg_t,bool	niup: resize(ih: ProgressDlg_t; yes: bool)	
resize	niup.html#resize,ProgressDlg_t	niup: resize(ih: ProgressDlg_t): bool	
saveunder=	niup.html#saveunder=,ProgressDlg_t,string	niup: saveunder=(ih: ProgressDlg_t; value: string)	
saveunder	niup.html#saveunder,ProgressDlg_t,string	niup: saveunder(ih: ProgressDlg_t; value: string)	
saveunder=	niup.html#saveunder=,ProgressDlg_t,bool	niup: saveunder=(ih: ProgressDlg_t; yes: bool)	
saveunder	niup.html#saveunder,ProgressDlg_t,bool	niup: saveunder(ih: ProgressDlg_t; yes: bool)	
saveunder	niup.html#saveunder,ProgressDlg_t	niup: saveunder(ih: ProgressDlg_t): bool	
screenposition	niup.html#screenposition,ProgressDlg_t	niup: screenposition(ih: ProgressDlg_t): string	
shapeimage=	niup.html#shapeimage=,ProgressDlg_t,string	niup: shapeimage=(ih: ProgressDlg_t; value: string)	
shapeimage	niup.html#shapeimage,ProgressDlg_t,string	niup: shapeimage(ih: ProgressDlg_t; value: string)	
shapeimage	niup.html#shapeimage,ProgressDlg_t	niup: shapeimage(ih: ProgressDlg_t): string	
shownofocus=	niup.html#shownofocus=,ProgressDlg_t,string	niup: shownofocus=(ih: ProgressDlg_t; value: string)	
shownofocus	niup.html#shownofocus,ProgressDlg_t,string	niup: shownofocus(ih: ProgressDlg_t; value: string)	
shownofocus=	niup.html#shownofocus=,ProgressDlg_t,bool	niup: shownofocus=(ih: ProgressDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,ProgressDlg_t,bool	niup: shownofocus(ih: ProgressDlg_t; yes: bool)	
shownofocus	niup.html#shownofocus,ProgressDlg_t	niup: shownofocus(ih: ProgressDlg_t): bool	
shrink=	niup.html#shrink=,ProgressDlg_t,string	niup: shrink=(ih: ProgressDlg_t; value: string)	
shrink	niup.html#shrink,ProgressDlg_t,string	niup: shrink(ih: ProgressDlg_t; value: string)	
shrink=	niup.html#shrink=,ProgressDlg_t,bool	niup: shrink=(ih: ProgressDlg_t; yes: bool)	
shrink	niup.html#shrink,ProgressDlg_t,bool	niup: shrink(ih: ProgressDlg_t; yes: bool)	
shrink	niup.html#shrink,ProgressDlg_t	niup: shrink(ih: ProgressDlg_t): bool	
simulatemodal=	niup.html#simulatemodal=,ProgressDlg_t,string	niup: simulatemodal=(ih: ProgressDlg_t; value: string)	
simulatemodal	niup.html#simulatemodal,ProgressDlg_t,string	niup: simulatemodal(ih: ProgressDlg_t; value: string)	
simulatemodal=	niup.html#simulatemodal=,ProgressDlg_t,bool	niup: simulatemodal=(ih: ProgressDlg_t; yes: bool)	
simulatemodal	niup.html#simulatemodal,ProgressDlg_t,bool	niup: simulatemodal(ih: ProgressDlg_t; yes: bool)	
size=	niup.html#size=,ProgressDlg_t,string	niup: size=(ih: ProgressDlg_t; value: string)	
size	niup.html#size,ProgressDlg_t,string	niup: size(ih: ProgressDlg_t; value: string)	
size=	niup.html#size=,ProgressDlg_t,int,int	niup: size=(ih: ProgressDlg_t; width, height: int)	
size	niup.html#size,ProgressDlg_t,int,int	niup: size(ih: ProgressDlg_t; width, height: int)	
size=	niup.html#size=,ProgressDlg_t,string,int	niup: size=(ih: ProgressDlg_t; width: string; height: int)	
size	niup.html#size,ProgressDlg_t,string,int	niup: size(ih: ProgressDlg_t; width: string; height: int)	
size=	niup.html#size=,ProgressDlg_t,int,string	niup: size=(ih: ProgressDlg_t; width: int; height: string)	
size	niup.html#size,ProgressDlg_t,int,string	niup: size(ih: ProgressDlg_t; width: int; height: string)	
size	niup.html#size,ProgressDlg_t	niup: size(ih: ProgressDlg_t): string	
startfocus=	niup.html#startfocus=,ProgressDlg_t,string	niup: startfocus=(ih: ProgressDlg_t; value: string)	
startfocus	niup.html#startfocus,ProgressDlg_t,string	niup: startfocus(ih: ProgressDlg_t; value: string)	
startfocus	niup.html#startfocus,ProgressDlg_t	niup: startfocus(ih: ProgressDlg_t): string	
state=	niup.html#state=,ProgressDlg_t,string	niup: state=(ih: ProgressDlg_t; value: string)	
state	niup.html#state,ProgressDlg_t,string	niup: state(ih: ProgressDlg_t; value: string)	
state	niup.html#state,ProgressDlg_t	niup: state(ih: ProgressDlg_t): string	
theme=	niup.html#theme=,ProgressDlg_t,string	niup: theme=(ih: ProgressDlg_t; value: string)	
theme	niup.html#theme,ProgressDlg_t,string	niup: theme(ih: ProgressDlg_t; value: string)	
theme	niup.html#theme,ProgressDlg_t	niup: theme(ih: ProgressDlg_t): string	
tip=	niup.html#tip=,ProgressDlg_t,string	niup: tip=(ih: ProgressDlg_t; value: string)	
tip	niup.html#tip,ProgressDlg_t,string	niup: tip(ih: ProgressDlg_t; value: string)	
tip	niup.html#tip,ProgressDlg_t	niup: tip(ih: ProgressDlg_t): string	
tipbgcolor=	niup.html#tipbgcolor=,ProgressDlg_t,string	niup: tipbgcolor=(ih: ProgressDlg_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,ProgressDlg_t,string	niup: tipbgcolor(ih: ProgressDlg_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,ProgressDlg_t,int,int,int,int	niup: tipbgcolor=(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ProgressDlg_t,int,int,int,int	niup: tipbgcolor(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ProgressDlg_t	niup: tipbgcolor(ih: ProgressDlg_t): string	
tipdelay=	niup.html#tipdelay=,ProgressDlg_t,string	niup: tipdelay=(ih: ProgressDlg_t; value: string)	
tipdelay	niup.html#tipdelay,ProgressDlg_t,string	niup: tipdelay(ih: ProgressDlg_t; value: string)	
tipdelay=	niup.html#tipdelay=,ProgressDlg_t,int	niup: tipdelay=(ih: ProgressDlg_t; x: int)	
tipdelay	niup.html#tipdelay,ProgressDlg_t,int	niup: tipdelay(ih: ProgressDlg_t; x: int)	
tipdelay	niup.html#tipdelay,ProgressDlg_t	niup: tipdelay(ih: ProgressDlg_t): string	
tipfgcolor=	niup.html#tipfgcolor=,ProgressDlg_t,string	niup: tipfgcolor=(ih: ProgressDlg_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,ProgressDlg_t,string	niup: tipfgcolor(ih: ProgressDlg_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,ProgressDlg_t,int,int,int,int	niup: tipfgcolor=(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ProgressDlg_t,int,int,int,int	niup: tipfgcolor(ih: ProgressDlg_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ProgressDlg_t	niup: tipfgcolor(ih: ProgressDlg_t): string	
tipicon=	niup.html#tipicon=,ProgressDlg_t,string	niup: tipicon=(ih: ProgressDlg_t; value: string)	
tipicon	niup.html#tipicon,ProgressDlg_t,string	niup: tipicon(ih: ProgressDlg_t; value: string)	
tipicon	niup.html#tipicon,ProgressDlg_t	niup: tipicon(ih: ProgressDlg_t): string	
tipmarkup=	niup.html#tipmarkup=,ProgressDlg_t,string	niup: tipmarkup=(ih: ProgressDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,ProgressDlg_t,string	niup: tipmarkup(ih: ProgressDlg_t; value: string)	
tipmarkup	niup.html#tipmarkup,ProgressDlg_t	niup: tipmarkup(ih: ProgressDlg_t): string	
tiprect=	niup.html#tiprect=,ProgressDlg_t,string	niup: tiprect=(ih: ProgressDlg_t; value: string)	
tiprect	niup.html#tiprect,ProgressDlg_t,string	niup: tiprect(ih: ProgressDlg_t; value: string)	
tiprect=	niup.html#tiprect=,ProgressDlg_t,int,int,int,int	niup: tiprect=(ih: ProgressDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ProgressDlg_t,int,int,int,int	niup: tiprect(ih: ProgressDlg_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ProgressDlg_t	niup: tiprect(ih: ProgressDlg_t): string	
tipvisible=	niup.html#tipvisible=,ProgressDlg_t,string	niup: tipvisible=(ih: ProgressDlg_t; value: string)	
tipvisible	niup.html#tipvisible,ProgressDlg_t,string	niup: tipvisible(ih: ProgressDlg_t; value: string)	
tipvisible=	niup.html#tipvisible=,ProgressDlg_t,bool	niup: tipvisible=(ih: ProgressDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,ProgressDlg_t,bool	niup: tipvisible(ih: ProgressDlg_t; yes: bool)	
tipvisible	niup.html#tipvisible,ProgressDlg_t	niup: tipvisible(ih: ProgressDlg_t): bool	
title=	niup.html#title=,ProgressDlg_t,string	niup: title=(ih: ProgressDlg_t; value: string)	
title	niup.html#title,ProgressDlg_t,string	niup: title(ih: ProgressDlg_t; value: string)	
title	niup.html#title,ProgressDlg_t	niup: title(ih: ProgressDlg_t): string	
toolbox=	niup.html#toolbox=,ProgressDlg_t,string	niup: toolbox=(ih: ProgressDlg_t; value: string)	
toolbox	niup.html#toolbox,ProgressDlg_t,string	niup: toolbox(ih: ProgressDlg_t; value: string)	
toolbox=	niup.html#toolbox=,ProgressDlg_t,bool	niup: toolbox=(ih: ProgressDlg_t; yes: bool)	
toolbox	niup.html#toolbox,ProgressDlg_t,bool	niup: toolbox(ih: ProgressDlg_t; yes: bool)	
toolbox	niup.html#toolbox,ProgressDlg_t	niup: toolbox(ih: ProgressDlg_t): bool	
topmost=	niup.html#topmost=,ProgressDlg_t,string	niup: topmost=(ih: ProgressDlg_t; value: string)	
topmost	niup.html#topmost,ProgressDlg_t,string	niup: topmost(ih: ProgressDlg_t; value: string)	
topmost=	niup.html#topmost=,ProgressDlg_t,bool	niup: topmost=(ih: ProgressDlg_t; yes: bool)	
topmost	niup.html#topmost,ProgressDlg_t,bool	niup: topmost(ih: ProgressDlg_t; yes: bool)	
totalcount	niup.html#totalcount,ProgressDlg_t	niup: totalcount(ih: ProgressDlg_t): string	
tray=	niup.html#tray=,ProgressDlg_t,string	niup: tray=(ih: ProgressDlg_t; value: string)	
tray	niup.html#tray,ProgressDlg_t,string	niup: tray(ih: ProgressDlg_t; value: string)	
tray=	niup.html#tray=,ProgressDlg_t,bool	niup: tray=(ih: ProgressDlg_t; yes: bool)	
tray	niup.html#tray,ProgressDlg_t,bool	niup: tray(ih: ProgressDlg_t; yes: bool)	
tray	niup.html#tray,ProgressDlg_t	niup: tray(ih: ProgressDlg_t): bool	
trayimage=	niup.html#trayimage=,ProgressDlg_t,	niup: trayimage=(ih: ProgressDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,ProgressDlg_t,	niup: trayimage(ih: ProgressDlg_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
trayimage	niup.html#trayimage,ProgressDlg_t	niup: trayimage(ih: ProgressDlg_t): string	
traytip=	niup.html#traytip=,ProgressDlg_t,string	niup: traytip=(ih: ProgressDlg_t; value: string)	
traytip	niup.html#traytip,ProgressDlg_t,string	niup: traytip(ih: ProgressDlg_t; value: string)	
traytip	niup.html#traytip,ProgressDlg_t	niup: traytip(ih: ProgressDlg_t): string	
traytipmarkup=	niup.html#traytipmarkup=,ProgressDlg_t,string	niup: traytipmarkup=(ih: ProgressDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,ProgressDlg_t,string	niup: traytipmarkup(ih: ProgressDlg_t; value: string)	
traytipmarkup	niup.html#traytipmarkup,ProgressDlg_t	niup: traytipmarkup(ih: ProgressDlg_t): string	
usersize=	niup.html#usersize=,ProgressDlg_t,string	niup: usersize=(ih: ProgressDlg_t; value: string)	
usersize	niup.html#usersize,ProgressDlg_t,string	niup: usersize(ih: ProgressDlg_t; value: string)	
usersize=	niup.html#usersize=,ProgressDlg_t,int,int	niup: usersize=(ih: ProgressDlg_t; width, height: int)	
usersize	niup.html#usersize,ProgressDlg_t,int,int	niup: usersize(ih: ProgressDlg_t; width, height: int)	
usersize	niup.html#usersize,ProgressDlg_t	niup: usersize(ih: ProgressDlg_t): string	
visible=	niup.html#visible=,ProgressDlg_t,string	niup: visible=(ih: ProgressDlg_t; value: string)	
visible	niup.html#visible,ProgressDlg_t,string	niup: visible(ih: ProgressDlg_t; value: string)	
visible=	niup.html#visible=,ProgressDlg_t,bool	niup: visible=(ih: ProgressDlg_t; yes: bool)	
visible	niup.html#visible,ProgressDlg_t,bool	niup: visible(ih: ProgressDlg_t; yes: bool)	
visible	niup.html#visible,ProgressDlg_t	niup: visible(ih: ProgressDlg_t): bool	
wid	niup.html#wid,ProgressDlg_t	niup: wid(ih: ProgressDlg_t): string	
x	niup.html#x,ProgressDlg_t	niup: x(ih: ProgressDlg_t): string	
xfontid	niup.html#xfontid,ProgressDlg_t	niup: xfontid(ih: ProgressDlg_t): string	
xwindow	niup.html#xwindow,ProgressDlg_t	niup: xwindow(ih: ProgressDlg_t): string	
y	niup.html#y,ProgressDlg_t	niup: y(ih: ProgressDlg_t): string	
zorder=	niup.html#zorder=,ProgressDlg_t,string	niup: zorder=(ih: ProgressDlg_t; value: string)	
zorder	niup.html#zorder,ProgressDlg_t,string	niup: zorder(ih: ProgressDlg_t; value: string)	
cancel_cb=	niup.html#cancel_cb=,ProgressDlg_t,proc(PIhandle)	niup: cancel_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
cancel_cb	niup.html#cancel_cb,ProgressDlg_t,proc(PIhandle)	niup: cancel_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
cancel_cb	niup.html#cancel_cb,ProgressDlg_t	niup: cancel_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
close_cb=	niup.html#close_cb=,ProgressDlg_t,proc(PIhandle)	niup: close_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,ProgressDlg_t,proc(PIhandle)	niup: close_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
close_cb	niup.html#close_cb,ProgressDlg_t	niup: close_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,ProgressDlg_t,proc(PIhandle)	niup: destroy_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ProgressDlg_t,proc(PIhandle)	niup: destroy_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ProgressDlg_t	niup: destroy_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,ProgressDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: ProgressDlg_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ProgressDlg_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: ProgressDlg_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ProgressDlg_t	niup: dragbegin_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,ProgressDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: ProgressDlg_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ProgressDlg_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: ProgressDlg_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ProgressDlg_t	niup: dragdatasize_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,ProgressDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ProgressDlg_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ProgressDlg_t	niup: dragdata_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,ProgressDlg_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: ProgressDlg_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ProgressDlg_t,proc(PIhandle,cint)	niup: dragend_cb(ih: ProgressDlg_t;\n           cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ProgressDlg_t	niup: dragend_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,ProgressDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ProgressDlg_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle; dragtype: cstring;\n    data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ProgressDlg_t	niup: dropdata_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,ProgressDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: ProgressDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ProgressDlg_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: ProgressDlg_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ProgressDlg_t	niup: dropfiles_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,ProgressDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ProgressDlg_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ProgressDlg_t	niup: dropmotion_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,ProgressDlg_t,proc(PIhandle)	niup: enterwindow_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ProgressDlg_t,proc(PIhandle)	niup: enterwindow_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ProgressDlg_t	niup: enterwindow_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,ProgressDlg_t,proc(PIhandle,cint)	niup: focus_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ProgressDlg_t,proc(PIhandle,cint)	niup: focus_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ProgressDlg_t	niup: focus_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,ProgressDlg_t,proc(PIhandle)	niup: getfocus_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ProgressDlg_t,proc(PIhandle)	niup: getfocus_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ProgressDlg_t	niup: getfocus_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,ProgressDlg_t,proc(PIhandle)	niup: help_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ProgressDlg_t,proc(PIhandle)	niup: help_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ProgressDlg_t	niup: help_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,ProgressDlg_t,proc(PIhandle)	niup: killfocus_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ProgressDlg_t,proc(PIhandle)	niup: killfocus_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ProgressDlg_t	niup: killfocus_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,ProgressDlg_t,proc(PIhandle,cint)	niup: k_any=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ProgressDlg_t,proc(PIhandle,cint)	niup: k_any(ih: ProgressDlg_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ProgressDlg_t	niup: k_any(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,ProgressDlg_t,proc(PIhandle)	niup: ldestroy_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ProgressDlg_t,proc(PIhandle)	niup: ldestroy_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ProgressDlg_t	niup: ldestroy_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,ProgressDlg_t,proc(PIhandle)	niup: leavewindow_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ProgressDlg_t,proc(PIhandle)	niup: leavewindow_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ProgressDlg_t	niup: leavewindow_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,ProgressDlg_t,proc(PIhandle)	niup: map_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ProgressDlg_t,proc(PIhandle)	niup: map_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ProgressDlg_t	niup: map_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,ProgressDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ProgressDlg_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ProgressDlg_t	niup: postmessage_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,ProgressDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: ProgressDlg_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ProgressDlg_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: ProgressDlg_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ProgressDlg_t	niup: resize_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
show_cb=	niup.html#show_cb=,ProgressDlg_t,proc(PIhandle,cint)	niup: show_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,ProgressDlg_t,proc(PIhandle,cint)	niup: show_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
show_cb	niup.html#show_cb,ProgressDlg_t	niup: show_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
trayclick_cb=	niup.html#trayclick_cb=,ProgressDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle;\n    but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,ProgressDlg_t,proc(PIhandle,cint,cint,cint)	niup: trayclick_cb(ih: ProgressDlg_t;\n             cb: proc (ih: PIhandle; but, pressed, dclick: cint): cint {.cdecl.})	
trayclick_cb	niup.html#trayclick_cb,ProgressDlg_t	niup: trayclick_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,ProgressDlg_t,proc(PIhandle)	niup: unmap_cb=(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ProgressDlg_t,proc(PIhandle)	niup: unmap_cb(ih: ProgressDlg_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ProgressDlg_t	niup: unmap_cb(ih: ProgressDlg_t): proc (ih: PIhandle): cint {.cdecl.}	
Radio	niup.html#Radio,IUPhandle_t	niup: Radio(child: IUPhandle_t): Radio_t	
active=	niup.html#active=,Radio_t,string	niup: active=(ih: Radio_t; value: string)	
active	niup.html#active,Radio_t,string	niup: active(ih: Radio_t; value: string)	
active=	niup.html#active=,Radio_t,bool	niup: active=(ih: Radio_t; yes: bool)	
active	niup.html#active,Radio_t,bool	niup: active(ih: Radio_t; yes: bool)	
active	niup.html#active,Radio_t	niup: active(ih: Radio_t): bool	
canfocus=	niup.html#canfocus=,Radio_t,string	niup: canfocus=(ih: Radio_t; value: string)	
canfocus	niup.html#canfocus,Radio_t,string	niup: canfocus(ih: Radio_t; value: string)	
canfocus=	niup.html#canfocus=,Radio_t,bool	niup: canfocus=(ih: Radio_t; yes: bool)	
canfocus	niup.html#canfocus,Radio_t,bool	niup: canfocus(ih: Radio_t; yes: bool)	
canfocus	niup.html#canfocus,Radio_t	niup: canfocus(ih: Radio_t): bool	
charsize	niup.html#charsize,Radio_t	niup: charsize(ih: Radio_t): string	
clientoffset	niup.html#clientoffset,Radio_t	niup: clientoffset(ih: Radio_t): string	
clientsize	niup.html#clientsize,Radio_t	niup: clientsize(ih: Radio_t): string	
expand=	niup.html#expand=,Radio_t,string	niup: expand=(ih: Radio_t; value: string)	
expand	niup.html#expand,Radio_t,string	niup: expand(ih: Radio_t; value: string)	
expand	niup.html#expand,Radio_t	niup: expand(ih: Radio_t): string	
expandweight=	niup.html#expandweight=,Radio_t,string	niup: expandweight=(ih: Radio_t; value: string)	
expandweight	niup.html#expandweight,Radio_t,string	niup: expandweight(ih: Radio_t; value: string)	
expandweight=	niup.html#expandweight=,Radio_t,int64	niup: expandweight=(ih: Radio_t; x: int64)	
expandweight	niup.html#expandweight,Radio_t,int64	niup: expandweight(ih: Radio_t; x: int64)	
expandweight	niup.html#expandweight,Radio_t	niup: expandweight(ih: Radio_t): string	
floating=	niup.html#floating=,Radio_t,string	niup: floating=(ih: Radio_t; value: string)	
floating	niup.html#floating,Radio_t,string	niup: floating(ih: Radio_t; value: string)	
floating	niup.html#floating,Radio_t	niup: floating(ih: Radio_t): string	
font=	niup.html#font=,Radio_t,string	niup: font=(ih: Radio_t; value: string)	
font	niup.html#font,Radio_t,string	niup: font(ih: Radio_t; value: string)	
font	niup.html#font,Radio_t	niup: font(ih: Radio_t): string	
fontface=	niup.html#fontface=,Radio_t,string	niup: fontface=(ih: Radio_t; value: string)	
fontface	niup.html#fontface,Radio_t,string	niup: fontface(ih: Radio_t; value: string)	
fontface	niup.html#fontface,Radio_t	niup: fontface(ih: Radio_t): string	
fontsize=	niup.html#fontsize=,Radio_t,string	niup: fontsize=(ih: Radio_t; value: string)	
fontsize	niup.html#fontsize,Radio_t,string	niup: fontsize(ih: Radio_t; value: string)	
fontsize=	niup.html#fontsize=,Radio_t,int	niup: fontsize=(ih: Radio_t; x: int)	
fontsize	niup.html#fontsize,Radio_t,int	niup: fontsize(ih: Radio_t; x: int)	
fontsize	niup.html#fontsize,Radio_t	niup: fontsize(ih: Radio_t): string	
fontstyle=	niup.html#fontstyle=,Radio_t,string	niup: fontstyle=(ih: Radio_t; value: string)	
fontstyle	niup.html#fontstyle,Radio_t,string	niup: fontstyle(ih: Radio_t; value: string)	
fontstyle	niup.html#fontstyle,Radio_t	niup: fontstyle(ih: Radio_t): string	
handlename=	niup.html#handlename=,Radio_t,string	niup: handlename=(ih: Radio_t; value: string)	
handlename	niup.html#handlename,Radio_t,string	niup: handlename(ih: Radio_t; value: string)	
handlename	niup.html#handlename,Radio_t	niup: handlename(ih: Radio_t): string	
maxsize=	niup.html#maxsize=,Radio_t,string	niup: maxsize=(ih: Radio_t; value: string)	
maxsize	niup.html#maxsize,Radio_t,string	niup: maxsize(ih: Radio_t; value: string)	
maxsize=	niup.html#maxsize=,Radio_t,int,int	niup: maxsize=(ih: Radio_t; width, height: int)	
maxsize	niup.html#maxsize,Radio_t,int,int	niup: maxsize(ih: Radio_t; width, height: int)	
maxsize	niup.html#maxsize,Radio_t	niup: maxsize(ih: Radio_t): string	
minsize=	niup.html#minsize=,Radio_t,string	niup: minsize=(ih: Radio_t; value: string)	
minsize	niup.html#minsize,Radio_t,string	niup: minsize(ih: Radio_t; value: string)	
minsize=	niup.html#minsize=,Radio_t,int,int	niup: minsize=(ih: Radio_t; width, height: int)	
minsize	niup.html#minsize,Radio_t,int,int	niup: minsize(ih: Radio_t; width, height: int)	
minsize	niup.html#minsize,Radio_t	niup: minsize(ih: Radio_t): string	
name=	niup.html#name=,Radio_t,string	niup: name=(ih: Radio_t; value: string)	
name	niup.html#name,Radio_t,string	niup: name(ih: Radio_t; value: string)	
name	niup.html#name,Radio_t	niup: name(ih: Radio_t): string	
naturalsize	niup.html#naturalsize,Radio_t	niup: naturalsize(ih: Radio_t): string	
normalizergroup=	niup.html#normalizergroup=,Radio_t,string	niup: normalizergroup=(ih: Radio_t; value: string)	
normalizergroup	niup.html#normalizergroup,Radio_t,string	niup: normalizergroup(ih: Radio_t; value: string)	
normalizergroup	niup.html#normalizergroup,Radio_t	niup: normalizergroup(ih: Radio_t): string	
ntheme=	niup.html#ntheme=,Radio_t,string	niup: ntheme=(ih: Radio_t; value: string)	
ntheme	niup.html#ntheme,Radio_t,string	niup: ntheme(ih: Radio_t; value: string)	
ntheme	niup.html#ntheme,Radio_t	niup: ntheme(ih: Radio_t): string	
pangofontdesc	niup.html#pangofontdesc,Radio_t	niup: pangofontdesc(ih: Radio_t): string	
pangolayout	niup.html#pangolayout,Radio_t	niup: pangolayout(ih: Radio_t): string	
position=	niup.html#position=,Radio_t,string	niup: position=(ih: Radio_t; value: string)	
position	niup.html#position,Radio_t,string	niup: position(ih: Radio_t; value: string)	
position=	niup.html#position=,Radio_t,int,int	niup: position=(ih: Radio_t; x, y: int)	
position	niup.html#position,Radio_t,int,int	niup: position(ih: Radio_t; x, y: int)	
position	niup.html#position,Radio_t	niup: position(ih: Radio_t): string	
propagatefocus=	niup.html#propagatefocus=,Radio_t,string	niup: propagatefocus=(ih: Radio_t; value: string)	
propagatefocus	niup.html#propagatefocus,Radio_t,string	niup: propagatefocus(ih: Radio_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Radio_t,bool	niup: propagatefocus=(ih: Radio_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Radio_t,bool	niup: propagatefocus(ih: Radio_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Radio_t	niup: propagatefocus(ih: Radio_t): bool	
rastersize=	niup.html#rastersize=,Radio_t,string	niup: rastersize=(ih: Radio_t; value: string)	
rastersize	niup.html#rastersize,Radio_t,string	niup: rastersize(ih: Radio_t; value: string)	
rastersize=	niup.html#rastersize=,Radio_t,int,int	niup: rastersize=(ih: Radio_t; width, height: int)	
rastersize	niup.html#rastersize,Radio_t,int,int	niup: rastersize(ih: Radio_t; width, height: int)	
rastersize	niup.html#rastersize,Radio_t	niup: rastersize(ih: Radio_t): string	
size=	niup.html#size=,Radio_t,string	niup: size=(ih: Radio_t; value: string)	
size	niup.html#size,Radio_t,string	niup: size(ih: Radio_t; value: string)	
size=	niup.html#size=,Radio_t,int,int	niup: size=(ih: Radio_t; width, height: int)	
size	niup.html#size,Radio_t,int,int	niup: size(ih: Radio_t; width, height: int)	
size	niup.html#size,Radio_t	niup: size(ih: Radio_t): string	
theme=	niup.html#theme=,Radio_t,string	niup: theme=(ih: Radio_t; value: string)	
theme	niup.html#theme,Radio_t,string	niup: theme(ih: Radio_t; value: string)	
theme	niup.html#theme,Radio_t	niup: theme(ih: Radio_t): string	
usersize=	niup.html#usersize=,Radio_t,string	niup: usersize=(ih: Radio_t; value: string)	
usersize	niup.html#usersize,Radio_t,string	niup: usersize(ih: Radio_t; value: string)	
usersize=	niup.html#usersize=,Radio_t,int,int	niup: usersize=(ih: Radio_t; width, height: int)	
usersize	niup.html#usersize,Radio_t,int,int	niup: usersize(ih: Radio_t; width, height: int)	
usersize	niup.html#usersize,Radio_t	niup: usersize(ih: Radio_t): string	
value=	niup.html#value=,Radio_t,IUPhandle_t	niup: value=(ih: Radio_t; handle: IUPhandle_t)	
value	niup.html#value,Radio_t,IUPhandle_t	niup: value(ih: Radio_t; handle: IUPhandle_t)	
value	niup.html#value,Radio_t	niup: value(ih: Radio_t): string	
value_handle=	niup.html#value_handle=,Radio_t,IUPhandle_t	niup: value_handle=(ih: Radio_t; handle: IUPhandle_t)	
value_handle	niup.html#value_handle,Radio_t,IUPhandle_t	niup: value_handle(ih: Radio_t; handle: IUPhandle_t)	
value_handle	niup.html#value_handle,Radio_t	niup: value_handle(ih: Radio_t): string	
visible=	niup.html#visible=,Radio_t,string	niup: visible=(ih: Radio_t; value: string)	
visible	niup.html#visible,Radio_t,string	niup: visible(ih: Radio_t; value: string)	
visible=	niup.html#visible=,Radio_t,bool	niup: visible=(ih: Radio_t; yes: bool)	
visible	niup.html#visible,Radio_t,bool	niup: visible(ih: Radio_t; yes: bool)	
visible	niup.html#visible,Radio_t	niup: visible(ih: Radio_t): bool	
wid	niup.html#wid,Radio_t	niup: wid(ih: Radio_t): string	
xfontid	niup.html#xfontid,Radio_t	niup: xfontid(ih: Radio_t): string	
destroy_cb=	niup.html#destroy_cb=,Radio_t,proc(PIhandle)	niup: destroy_cb=(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Radio_t,proc(PIhandle)	niup: destroy_cb(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Radio_t	niup: destroy_cb(ih: Radio_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Radio_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Radio_t,proc(PIhandle)	niup: ldestroy_cb(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Radio_t	niup: ldestroy_cb(ih: Radio_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Radio_t,proc(PIhandle)	niup: map_cb=(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Radio_t,proc(PIhandle)	niup: map_cb(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Radio_t	niup: map_cb(ih: Radio_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Radio_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Radio_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Radio_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Radio_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Radio_t	niup: postmessage_cb(ih: Radio_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Radio_t,proc(PIhandle)	niup: unmap_cb=(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Radio_t,proc(PIhandle)	niup: unmap_cb(ih: Radio_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Radio_t	niup: unmap_cb(ih: Radio_t): proc (ih: PIhandle): cint {.cdecl.}	
Sbox	niup.html#Sbox,IUPhandle_t	niup: Sbox(child: IUPhandle_t): Sbox_t	
active=	niup.html#active=,Sbox_t,string	niup: active=(ih: Sbox_t; value: string)	
active	niup.html#active,Sbox_t,string	niup: active(ih: Sbox_t; value: string)	
active=	niup.html#active=,Sbox_t,bool	niup: active=(ih: Sbox_t; yes: bool)	
active	niup.html#active,Sbox_t,bool	niup: active(ih: Sbox_t; yes: bool)	
active	niup.html#active,Sbox_t	niup: active(ih: Sbox_t): bool	
barsize=	niup.html#barsize=,Sbox_t,string	niup: barsize=(ih: Sbox_t; value: string)	
barsize	niup.html#barsize,Sbox_t,string	niup: barsize(ih: Sbox_t; value: string)	
barsize=	niup.html#barsize=,Sbox_t,int	niup: barsize=(ih: Sbox_t; x: int)	
barsize	niup.html#barsize,Sbox_t,int	niup: barsize(ih: Sbox_t; x: int)	
barsize	niup.html#barsize,Sbox_t	niup: barsize(ih: Sbox_t): string	
canfocus=	niup.html#canfocus=,Sbox_t,string	niup: canfocus=(ih: Sbox_t; value: string)	
canfocus	niup.html#canfocus,Sbox_t,string	niup: canfocus(ih: Sbox_t; value: string)	
canfocus=	niup.html#canfocus=,Sbox_t,bool	niup: canfocus=(ih: Sbox_t; yes: bool)	
canfocus	niup.html#canfocus,Sbox_t,bool	niup: canfocus(ih: Sbox_t; yes: bool)	
canfocus	niup.html#canfocus,Sbox_t	niup: canfocus(ih: Sbox_t): bool	
charsize	niup.html#charsize,Sbox_t	niup: charsize(ih: Sbox_t): string	
clientoffset	niup.html#clientoffset,Sbox_t	niup: clientoffset(ih: Sbox_t): string	
clientsize	niup.html#clientsize,Sbox_t	niup: clientsize(ih: Sbox_t): string	
color=	niup.html#color=,Sbox_t,string	niup: color=(ih: Sbox_t; value: string)	
color	niup.html#color,Sbox_t,string	niup: color(ih: Sbox_t; value: string)	
color=	niup.html#color=,Sbox_t,int,int,int,int	niup: color=(ih: Sbox_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,Sbox_t,int,int,int,int	niup: color(ih: Sbox_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,Sbox_t	niup: color(ih: Sbox_t): string	
direction=	niup.html#direction=,Sbox_t,string	niup: direction=(ih: Sbox_t; value: string)	
direction	niup.html#direction,Sbox_t,string	niup: direction(ih: Sbox_t; value: string)	
direction	niup.html#direction,Sbox_t	niup: direction(ih: Sbox_t): string	
expand=	niup.html#expand=,Sbox_t,string	niup: expand=(ih: Sbox_t; value: string)	
expand	niup.html#expand,Sbox_t,string	niup: expand(ih: Sbox_t; value: string)	
expand	niup.html#expand,Sbox_t	niup: expand(ih: Sbox_t): string	
expandweight=	niup.html#expandweight=,Sbox_t,string	niup: expandweight=(ih: Sbox_t; value: string)	
expandweight	niup.html#expandweight,Sbox_t,string	niup: expandweight(ih: Sbox_t; value: string)	
expandweight=	niup.html#expandweight=,Sbox_t,int64	niup: expandweight=(ih: Sbox_t; x: int64)	
expandweight	niup.html#expandweight,Sbox_t,int64	niup: expandweight(ih: Sbox_t; x: int64)	
expandweight	niup.html#expandweight,Sbox_t	niup: expandweight(ih: Sbox_t): string	
floating=	niup.html#floating=,Sbox_t,string	niup: floating=(ih: Sbox_t; value: string)	
floating	niup.html#floating,Sbox_t,string	niup: floating(ih: Sbox_t; value: string)	
floating	niup.html#floating,Sbox_t	niup: floating(ih: Sbox_t): string	
font=	niup.html#font=,Sbox_t,string	niup: font=(ih: Sbox_t; value: string)	
font	niup.html#font,Sbox_t,string	niup: font(ih: Sbox_t; value: string)	
font	niup.html#font,Sbox_t	niup: font(ih: Sbox_t): string	
fontface=	niup.html#fontface=,Sbox_t,string	niup: fontface=(ih: Sbox_t; value: string)	
fontface	niup.html#fontface,Sbox_t,string	niup: fontface(ih: Sbox_t; value: string)	
fontface	niup.html#fontface,Sbox_t	niup: fontface(ih: Sbox_t): string	
fontsize=	niup.html#fontsize=,Sbox_t,string	niup: fontsize=(ih: Sbox_t; value: string)	
fontsize	niup.html#fontsize,Sbox_t,string	niup: fontsize(ih: Sbox_t; value: string)	
fontsize=	niup.html#fontsize=,Sbox_t,int	niup: fontsize=(ih: Sbox_t; x: int)	
fontsize	niup.html#fontsize,Sbox_t,int	niup: fontsize(ih: Sbox_t; x: int)	
fontsize	niup.html#fontsize,Sbox_t	niup: fontsize(ih: Sbox_t): string	
fontstyle=	niup.html#fontstyle=,Sbox_t,string	niup: fontstyle=(ih: Sbox_t; value: string)	
fontstyle	niup.html#fontstyle,Sbox_t,string	niup: fontstyle(ih: Sbox_t; value: string)	
fontstyle	niup.html#fontstyle,Sbox_t	niup: fontstyle(ih: Sbox_t): string	
handlename=	niup.html#handlename=,Sbox_t,string	niup: handlename=(ih: Sbox_t; value: string)	
handlename	niup.html#handlename,Sbox_t,string	niup: handlename(ih: Sbox_t; value: string)	
handlename	niup.html#handlename,Sbox_t	niup: handlename(ih: Sbox_t): string	
layoutdrag=	niup.html#layoutdrag=,Sbox_t,string	niup: layoutdrag=(ih: Sbox_t; value: string)	
layoutdrag	niup.html#layoutdrag,Sbox_t,string	niup: layoutdrag(ih: Sbox_t; value: string)	
layoutdrag=	niup.html#layoutdrag=,Sbox_t,bool	niup: layoutdrag=(ih: Sbox_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,Sbox_t,bool	niup: layoutdrag(ih: Sbox_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,Sbox_t	niup: layoutdrag(ih: Sbox_t): bool	
maxsize=	niup.html#maxsize=,Sbox_t,string	niup: maxsize=(ih: Sbox_t; value: string)	
maxsize	niup.html#maxsize,Sbox_t,string	niup: maxsize(ih: Sbox_t; value: string)	
maxsize=	niup.html#maxsize=,Sbox_t,int,int	niup: maxsize=(ih: Sbox_t; width, height: int)	
maxsize	niup.html#maxsize,Sbox_t,int,int	niup: maxsize(ih: Sbox_t; width, height: int)	
maxsize	niup.html#maxsize,Sbox_t	niup: maxsize(ih: Sbox_t): string	
minsize=	niup.html#minsize=,Sbox_t,string	niup: minsize=(ih: Sbox_t; value: string)	
minsize	niup.html#minsize,Sbox_t,string	niup: minsize(ih: Sbox_t; value: string)	
minsize=	niup.html#minsize=,Sbox_t,int,int	niup: minsize=(ih: Sbox_t; width, height: int)	
minsize	niup.html#minsize,Sbox_t,int,int	niup: minsize(ih: Sbox_t; width, height: int)	
minsize	niup.html#minsize,Sbox_t	niup: minsize(ih: Sbox_t): string	
name=	niup.html#name=,Sbox_t,string	niup: name=(ih: Sbox_t; value: string)	
name	niup.html#name,Sbox_t,string	niup: name(ih: Sbox_t; value: string)	
name	niup.html#name,Sbox_t	niup: name(ih: Sbox_t): string	
naturalsize	niup.html#naturalsize,Sbox_t	niup: naturalsize(ih: Sbox_t): string	
normalizergroup=	niup.html#normalizergroup=,Sbox_t,string	niup: normalizergroup=(ih: Sbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Sbox_t,string	niup: normalizergroup(ih: Sbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Sbox_t	niup: normalizergroup(ih: Sbox_t): string	
ntheme=	niup.html#ntheme=,Sbox_t,string	niup: ntheme=(ih: Sbox_t; value: string)	
ntheme	niup.html#ntheme,Sbox_t,string	niup: ntheme(ih: Sbox_t; value: string)	
ntheme	niup.html#ntheme,Sbox_t	niup: ntheme(ih: Sbox_t): string	
pangofontdesc	niup.html#pangofontdesc,Sbox_t	niup: pangofontdesc(ih: Sbox_t): string	
pangolayout	niup.html#pangolayout,Sbox_t	niup: pangolayout(ih: Sbox_t): string	
position=	niup.html#position=,Sbox_t,string	niup: position=(ih: Sbox_t; value: string)	
position	niup.html#position,Sbox_t,string	niup: position(ih: Sbox_t; value: string)	
position=	niup.html#position=,Sbox_t,int,int	niup: position=(ih: Sbox_t; x, y: int)	
position	niup.html#position,Sbox_t,int,int	niup: position(ih: Sbox_t; x, y: int)	
position	niup.html#position,Sbox_t	niup: position(ih: Sbox_t): string	
propagatefocus=	niup.html#propagatefocus=,Sbox_t,string	niup: propagatefocus=(ih: Sbox_t; value: string)	
propagatefocus	niup.html#propagatefocus,Sbox_t,string	niup: propagatefocus(ih: Sbox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Sbox_t,bool	niup: propagatefocus=(ih: Sbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Sbox_t,bool	niup: propagatefocus(ih: Sbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Sbox_t	niup: propagatefocus(ih: Sbox_t): bool	
rastersize=	niup.html#rastersize=,Sbox_t,string	niup: rastersize=(ih: Sbox_t; value: string)	
rastersize	niup.html#rastersize,Sbox_t,string	niup: rastersize(ih: Sbox_t; value: string)	
rastersize=	niup.html#rastersize=,Sbox_t,int,int	niup: rastersize=(ih: Sbox_t; width, height: int)	
rastersize	niup.html#rastersize,Sbox_t,int,int	niup: rastersize(ih: Sbox_t; width, height: int)	
rastersize	niup.html#rastersize,Sbox_t	niup: rastersize(ih: Sbox_t): string	
showgrip=	niup.html#showgrip=,Sbox_t,string	niup: showgrip=(ih: Sbox_t; value: string)	
showgrip	niup.html#showgrip,Sbox_t,string	niup: showgrip(ih: Sbox_t; value: string)	
showgrip=	niup.html#showgrip=,Sbox_t,bool	niup: showgrip=(ih: Sbox_t; yes: bool)	
showgrip	niup.html#showgrip,Sbox_t,bool	niup: showgrip(ih: Sbox_t; yes: bool)	
showgrip	niup.html#showgrip,Sbox_t	niup: showgrip(ih: Sbox_t): bool	
size=	niup.html#size=,Sbox_t,string	niup: size=(ih: Sbox_t; value: string)	
size	niup.html#size,Sbox_t,string	niup: size(ih: Sbox_t; value: string)	
size=	niup.html#size=,Sbox_t,int,int	niup: size=(ih: Sbox_t; width, height: int)	
size	niup.html#size,Sbox_t,int,int	niup: size(ih: Sbox_t; width, height: int)	
size	niup.html#size,Sbox_t	niup: size(ih: Sbox_t): string	
theme=	niup.html#theme=,Sbox_t,string	niup: theme=(ih: Sbox_t; value: string)	
theme	niup.html#theme,Sbox_t,string	niup: theme(ih: Sbox_t; value: string)	
theme	niup.html#theme,Sbox_t	niup: theme(ih: Sbox_t): string	
usersize=	niup.html#usersize=,Sbox_t,string	niup: usersize=(ih: Sbox_t; value: string)	
usersize	niup.html#usersize,Sbox_t,string	niup: usersize(ih: Sbox_t; value: string)	
usersize=	niup.html#usersize=,Sbox_t,int,int	niup: usersize=(ih: Sbox_t; width, height: int)	
usersize	niup.html#usersize,Sbox_t,int,int	niup: usersize(ih: Sbox_t; width, height: int)	
usersize	niup.html#usersize,Sbox_t	niup: usersize(ih: Sbox_t): string	
visible=	niup.html#visible=,Sbox_t,string	niup: visible=(ih: Sbox_t; value: string)	
visible	niup.html#visible,Sbox_t,string	niup: visible(ih: Sbox_t; value: string)	
visible=	niup.html#visible=,Sbox_t,bool	niup: visible=(ih: Sbox_t; yes: bool)	
visible	niup.html#visible,Sbox_t,bool	niup: visible(ih: Sbox_t; yes: bool)	
visible	niup.html#visible,Sbox_t	niup: visible(ih: Sbox_t): bool	
wid	niup.html#wid,Sbox_t	niup: wid(ih: Sbox_t): string	
xfontid	niup.html#xfontid,Sbox_t	niup: xfontid(ih: Sbox_t): string	
destroy_cb=	niup.html#destroy_cb=,Sbox_t,proc(PIhandle)	niup: destroy_cb=(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Sbox_t,proc(PIhandle)	niup: destroy_cb(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Sbox_t	niup: destroy_cb(ih: Sbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Sbox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Sbox_t,proc(PIhandle)	niup: ldestroy_cb(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Sbox_t	niup: ldestroy_cb(ih: Sbox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Sbox_t,proc(PIhandle)	niup: map_cb=(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Sbox_t,proc(PIhandle)	niup: map_cb(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Sbox_t	niup: map_cb(ih: Sbox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Sbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Sbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Sbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Sbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Sbox_t	niup: postmessage_cb(ih: Sbox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Sbox_t,proc(PIhandle)	niup: unmap_cb=(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Sbox_t,proc(PIhandle)	niup: unmap_cb(ih: Sbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Sbox_t	niup: unmap_cb(ih: Sbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ScrollBox	niup.html#ScrollBox,IUPhandle_t	niup: ScrollBox(child: IUPhandle_t): ScrollBox_t	
active=	niup.html#active=,ScrollBox_t,string	niup: active=(ih: ScrollBox_t; value: string)	
active	niup.html#active,ScrollBox_t,string	niup: active(ih: ScrollBox_t; value: string)	
active=	niup.html#active=,ScrollBox_t,bool	niup: active=(ih: ScrollBox_t; yes: bool)	
active	niup.html#active,ScrollBox_t,bool	niup: active(ih: ScrollBox_t; yes: bool)	
active	niup.html#active,ScrollBox_t	niup: active(ih: ScrollBox_t): bool	
backingstore=	niup.html#backingstore=,ScrollBox_t,string	niup: backingstore=(ih: ScrollBox_t; value: string)	
backingstore	niup.html#backingstore,ScrollBox_t,string	niup: backingstore(ih: ScrollBox_t; value: string)	
backingstore=	niup.html#backingstore=,ScrollBox_t,bool	niup: backingstore=(ih: ScrollBox_t; yes: bool)	
backingstore	niup.html#backingstore,ScrollBox_t,bool	niup: backingstore(ih: ScrollBox_t; yes: bool)	
backingstore	niup.html#backingstore,ScrollBox_t	niup: backingstore(ih: ScrollBox_t): bool	
bgcolor=	niup.html#bgcolor=,ScrollBox_t,string	niup: bgcolor=(ih: ScrollBox_t; value: string)	
bgcolor	niup.html#bgcolor,ScrollBox_t,string	niup: bgcolor(ih: ScrollBox_t; value: string)	
bgcolor=	niup.html#bgcolor=,ScrollBox_t,int,int,int,int	niup: bgcolor=(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ScrollBox_t,int,int,int,int	niup: bgcolor(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,ScrollBox_t	niup: bgcolor(ih: ScrollBox_t): string	
border	niup.html#border,ScrollBox_t	niup: border(ih: ScrollBox_t): bool	
canfocus=	niup.html#canfocus=,ScrollBox_t,string	niup: canfocus=(ih: ScrollBox_t; value: string)	
canfocus	niup.html#canfocus,ScrollBox_t,string	niup: canfocus(ih: ScrollBox_t; value: string)	
canfocus=	niup.html#canfocus=,ScrollBox_t,bool	niup: canfocus=(ih: ScrollBox_t; yes: bool)	
canfocus	niup.html#canfocus,ScrollBox_t,bool	niup: canfocus(ih: ScrollBox_t; yes: bool)	
canfocus	niup.html#canfocus,ScrollBox_t	niup: canfocus(ih: ScrollBox_t): bool	
canvasbox=	niup.html#canvasbox=,ScrollBox_t,string	niup: canvasbox=(ih: ScrollBox_t; value: string)	
canvasbox	niup.html#canvasbox,ScrollBox_t,string	niup: canvasbox(ih: ScrollBox_t; value: string)	
canvasbox=	niup.html#canvasbox=,ScrollBox_t,bool	niup: canvasbox=(ih: ScrollBox_t; yes: bool)	
canvasbox	niup.html#canvasbox,ScrollBox_t,bool	niup: canvasbox(ih: ScrollBox_t; yes: bool)	
canvasbox	niup.html#canvasbox,ScrollBox_t	niup: canvasbox(ih: ScrollBox_t): bool	
charsize	niup.html#charsize,ScrollBox_t	niup: charsize(ih: ScrollBox_t): string	
childoffset=	niup.html#childoffset=,ScrollBox_t,string	niup: childoffset=(ih: ScrollBox_t; value: string)	
childoffset	niup.html#childoffset,ScrollBox_t,string	niup: childoffset(ih: ScrollBox_t; value: string)	
childoffset=	niup.html#childoffset=,ScrollBox_t,int,int	niup: childoffset=(ih: ScrollBox_t; width, height: int)	
childoffset	niup.html#childoffset,ScrollBox_t,int,int	niup: childoffset(ih: ScrollBox_t; width, height: int)	
childoffset	niup.html#childoffset,ScrollBox_t	niup: childoffset(ih: ScrollBox_t): string	
clientoffset	niup.html#clientoffset,ScrollBox_t	niup: clientoffset(ih: ScrollBox_t): string	
clientsize	niup.html#clientsize,ScrollBox_t	niup: clientsize(ih: ScrollBox_t): string	
cursor=	niup.html#cursor=,ScrollBox_t,	niup: cursor=(ih: ScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ScrollBox_t,	niup: cursor(ih: ScrollBox_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
cursor	niup.html#cursor,ScrollBox_t	niup: cursor(ih: ScrollBox_t): string	
dragdrop=	niup.html#dragdrop=,ScrollBox_t,string	niup: dragdrop=(ih: ScrollBox_t; value: string)	
dragdrop	niup.html#dragdrop,ScrollBox_t,string	niup: dragdrop(ih: ScrollBox_t; value: string)	
dragdrop=	niup.html#dragdrop=,ScrollBox_t,bool	niup: dragdrop=(ih: ScrollBox_t; yes: bool)	
dragdrop	niup.html#dragdrop,ScrollBox_t,bool	niup: dragdrop(ih: ScrollBox_t; yes: bool)	
dragdrop	niup.html#dragdrop,ScrollBox_t	niup: dragdrop(ih: ScrollBox_t): bool	
dragsource=	niup.html#dragsource=,ScrollBox_t,string	niup: dragsource=(ih: ScrollBox_t; value: string)	
dragsource	niup.html#dragsource,ScrollBox_t,string	niup: dragsource(ih: ScrollBox_t; value: string)	
dragsource=	niup.html#dragsource=,ScrollBox_t,bool	niup: dragsource=(ih: ScrollBox_t; yes: bool)	
dragsource	niup.html#dragsource,ScrollBox_t,bool	niup: dragsource(ih: ScrollBox_t; yes: bool)	
dragsource	niup.html#dragsource,ScrollBox_t	niup: dragsource(ih: ScrollBox_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,ScrollBox_t,string	niup: dragsourcemove=(ih: ScrollBox_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,ScrollBox_t,string	niup: dragsourcemove(ih: ScrollBox_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,ScrollBox_t,bool	niup: dragsourcemove=(ih: ScrollBox_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ScrollBox_t,bool	niup: dragsourcemove(ih: ScrollBox_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,ScrollBox_t	niup: dragsourcemove(ih: ScrollBox_t): bool	
dragtypes=	niup.html#dragtypes=,ScrollBox_t,string	niup: dragtypes=(ih: ScrollBox_t; value: string)	
dragtypes	niup.html#dragtypes,ScrollBox_t,string	niup: dragtypes(ih: ScrollBox_t; value: string)	
dragtypes	niup.html#dragtypes,ScrollBox_t	niup: dragtypes(ih: ScrollBox_t): string	
drawable	niup.html#drawable,ScrollBox_t	niup: drawable(ih: ScrollBox_t): string	
drawbgcolor=	niup.html#drawbgcolor=,ScrollBox_t,string	niup: drawbgcolor=(ih: ScrollBox_t; value: string)	
drawbgcolor	niup.html#drawbgcolor,ScrollBox_t,string	niup: drawbgcolor(ih: ScrollBox_t; value: string)	
drawbgcolor=	niup.html#drawbgcolor=,ScrollBox_t,int,int,int,int	niup: drawbgcolor=(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,ScrollBox_t,int,int,int,int	niup: drawbgcolor(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawbgcolor	niup.html#drawbgcolor,ScrollBox_t	niup: drawbgcolor(ih: ScrollBox_t): string	
drawcolor=	niup.html#drawcolor=,ScrollBox_t,string	niup: drawcolor=(ih: ScrollBox_t; value: string)	
drawcolor	niup.html#drawcolor,ScrollBox_t,string	niup: drawcolor(ih: ScrollBox_t; value: string)	
drawcolor=	niup.html#drawcolor=,ScrollBox_t,int,int,int,int	niup: drawcolor=(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,ScrollBox_t,int,int,int,int	niup: drawcolor(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
drawcolor	niup.html#drawcolor,ScrollBox_t	niup: drawcolor(ih: ScrollBox_t): string	
drawdriver	niup.html#drawdriver,ScrollBox_t	niup: drawdriver(ih: ScrollBox_t): string	
drawfont=	niup.html#drawfont=,ScrollBox_t,string	niup: drawfont=(ih: ScrollBox_t; value: string)	
drawfont	niup.html#drawfont,ScrollBox_t,string	niup: drawfont(ih: ScrollBox_t; value: string)	
drawfont	niup.html#drawfont,ScrollBox_t	niup: drawfont(ih: ScrollBox_t): string	
drawlinewidth=	niup.html#drawlinewidth=,ScrollBox_t,string	niup: drawlinewidth=(ih: ScrollBox_t; value: string)	
drawlinewidth	niup.html#drawlinewidth,ScrollBox_t,string	niup: drawlinewidth(ih: ScrollBox_t; value: string)	
drawlinewidth=	niup.html#drawlinewidth=,ScrollBox_t,int	niup: drawlinewidth=(ih: ScrollBox_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,ScrollBox_t,int	niup: drawlinewidth(ih: ScrollBox_t; x: int)	
drawlinewidth	niup.html#drawlinewidth,ScrollBox_t	niup: drawlinewidth(ih: ScrollBox_t): string	
drawmakeinactive=	niup.html#drawmakeinactive=,ScrollBox_t,string	niup: drawmakeinactive=(ih: ScrollBox_t; value: string)	
drawmakeinactive	niup.html#drawmakeinactive,ScrollBox_t,string	niup: drawmakeinactive(ih: ScrollBox_t; value: string)	
drawmakeinactive=	niup.html#drawmakeinactive=,ScrollBox_t,bool	niup: drawmakeinactive=(ih: ScrollBox_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,ScrollBox_t,bool	niup: drawmakeinactive(ih: ScrollBox_t; yes: bool)	
drawmakeinactive	niup.html#drawmakeinactive,ScrollBox_t	niup: drawmakeinactive(ih: ScrollBox_t): bool	
drawsize	niup.html#drawsize,ScrollBox_t	niup: drawsize(ih: ScrollBox_t): string	
drawstyle=	niup.html#drawstyle=,ScrollBox_t,string	niup: drawstyle=(ih: ScrollBox_t; value: string)	
drawstyle	niup.html#drawstyle,ScrollBox_t,string	niup: drawstyle(ih: ScrollBox_t; value: string)	
drawstyle	niup.html#drawstyle,ScrollBox_t	niup: drawstyle(ih: ScrollBox_t): string	
drawtextalignment=	niup.html#drawtextalignment=,ScrollBox_t,string	niup: drawtextalignment=(ih: ScrollBox_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,ScrollBox_t,string	niup: drawtextalignment(ih: ScrollBox_t; value: string)	
drawtextalignment	niup.html#drawtextalignment,ScrollBox_t	niup: drawtextalignment(ih: ScrollBox_t): string	
drawtextclip=	niup.html#drawtextclip=,ScrollBox_t,string	niup: drawtextclip=(ih: ScrollBox_t; value: string)	
drawtextclip	niup.html#drawtextclip,ScrollBox_t,string	niup: drawtextclip(ih: ScrollBox_t; value: string)	
drawtextclip=	niup.html#drawtextclip=,ScrollBox_t,bool	niup: drawtextclip=(ih: ScrollBox_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,ScrollBox_t,bool	niup: drawtextclip(ih: ScrollBox_t; yes: bool)	
drawtextclip	niup.html#drawtextclip,ScrollBox_t	niup: drawtextclip(ih: ScrollBox_t): bool	
drawtextellipsis=	niup.html#drawtextellipsis=,ScrollBox_t,string	niup: drawtextellipsis=(ih: ScrollBox_t; value: string)	
drawtextellipsis	niup.html#drawtextellipsis,ScrollBox_t,string	niup: drawtextellipsis(ih: ScrollBox_t; value: string)	
drawtextellipsis=	niup.html#drawtextellipsis=,ScrollBox_t,bool	niup: drawtextellipsis=(ih: ScrollBox_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,ScrollBox_t,bool	niup: drawtextellipsis(ih: ScrollBox_t; yes: bool)	
drawtextellipsis	niup.html#drawtextellipsis,ScrollBox_t	niup: drawtextellipsis(ih: ScrollBox_t): bool	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,ScrollBox_t,string	niup: drawtextlayoutcenter=(ih: ScrollBox_t; value: string)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,ScrollBox_t,string	niup: drawtextlayoutcenter(ih: ScrollBox_t; value: string)	
drawtextlayoutcenter=	niup.html#drawtextlayoutcenter=,ScrollBox_t,bool	niup: drawtextlayoutcenter=(ih: ScrollBox_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,ScrollBox_t,bool	niup: drawtextlayoutcenter(ih: ScrollBox_t; yes: bool)	
drawtextlayoutcenter	niup.html#drawtextlayoutcenter,ScrollBox_t	niup: drawtextlayoutcenter(ih: ScrollBox_t): bool	
drawtextorientation=	niup.html#drawtextorientation=,ScrollBox_t,string	niup: drawtextorientation=(ih: ScrollBox_t; value: string)	
drawtextorientation	niup.html#drawtextorientation,ScrollBox_t,string	niup: drawtextorientation(ih: ScrollBox_t; value: string)	
drawtextorientation=	niup.html#drawtextorientation=,ScrollBox_t,int64	niup: drawtextorientation=(ih: ScrollBox_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,ScrollBox_t,int64	niup: drawtextorientation(ih: ScrollBox_t; x: int64)	
drawtextorientation	niup.html#drawtextorientation,ScrollBox_t	niup: drawtextorientation(ih: ScrollBox_t): string	
drawtextwrap=	niup.html#drawtextwrap=,ScrollBox_t,string	niup: drawtextwrap=(ih: ScrollBox_t; value: string)	
drawtextwrap	niup.html#drawtextwrap,ScrollBox_t,string	niup: drawtextwrap(ih: ScrollBox_t; value: string)	
drawtextwrap=	niup.html#drawtextwrap=,ScrollBox_t,bool	niup: drawtextwrap=(ih: ScrollBox_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,ScrollBox_t,bool	niup: drawtextwrap(ih: ScrollBox_t; yes: bool)	
drawtextwrap	niup.html#drawtextwrap,ScrollBox_t	niup: drawtextwrap(ih: ScrollBox_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,ScrollBox_t,string	niup: dropfilestarget=(ih: ScrollBox_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,ScrollBox_t,string	niup: dropfilestarget(ih: ScrollBox_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,ScrollBox_t,bool	niup: dropfilestarget=(ih: ScrollBox_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ScrollBox_t,bool	niup: dropfilestarget(ih: ScrollBox_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,ScrollBox_t	niup: dropfilestarget(ih: ScrollBox_t): bool	
droptarget=	niup.html#droptarget=,ScrollBox_t,string	niup: droptarget=(ih: ScrollBox_t; value: string)	
droptarget	niup.html#droptarget,ScrollBox_t,string	niup: droptarget(ih: ScrollBox_t; value: string)	
droptarget=	niup.html#droptarget=,ScrollBox_t,bool	niup: droptarget=(ih: ScrollBox_t; yes: bool)	
droptarget	niup.html#droptarget,ScrollBox_t,bool	niup: droptarget(ih: ScrollBox_t; yes: bool)	
droptarget	niup.html#droptarget,ScrollBox_t	niup: droptarget(ih: ScrollBox_t): bool	
droptypes=	niup.html#droptypes=,ScrollBox_t,string	niup: droptypes=(ih: ScrollBox_t; value: string)	
droptypes	niup.html#droptypes,ScrollBox_t,string	niup: droptypes(ih: ScrollBox_t; value: string)	
droptypes	niup.html#droptypes,ScrollBox_t	niup: droptypes(ih: ScrollBox_t): string	
dx=	niup.html#dx=,ScrollBox_t,string	niup: dx=(ih: ScrollBox_t; value: string)	
dx	niup.html#dx,ScrollBox_t,string	niup: dx(ih: ScrollBox_t; value: string)	
dx=	niup.html#dx=,ScrollBox_t,int64	niup: dx=(ih: ScrollBox_t; x: int64)	
dx	niup.html#dx,ScrollBox_t,int64	niup: dx(ih: ScrollBox_t; x: int64)	
dx	niup.html#dx,ScrollBox_t	niup: dx(ih: ScrollBox_t): string	
dy=	niup.html#dy=,ScrollBox_t,string	niup: dy=(ih: ScrollBox_t; value: string)	
dy	niup.html#dy,ScrollBox_t,string	niup: dy(ih: ScrollBox_t; value: string)	
dy=	niup.html#dy=,ScrollBox_t,int64	niup: dy=(ih: ScrollBox_t; x: int64)	
dy	niup.html#dy,ScrollBox_t,int64	niup: dy(ih: ScrollBox_t; x: int64)	
dy	niup.html#dy,ScrollBox_t	niup: dy(ih: ScrollBox_t): string	
expand=	niup.html#expand=,ScrollBox_t,string	niup: expand=(ih: ScrollBox_t; value: string)	
expand	niup.html#expand,ScrollBox_t,string	niup: expand(ih: ScrollBox_t; value: string)	
expand	niup.html#expand,ScrollBox_t	niup: expand(ih: ScrollBox_t): string	
expandweight=	niup.html#expandweight=,ScrollBox_t,string	niup: expandweight=(ih: ScrollBox_t; value: string)	
expandweight	niup.html#expandweight,ScrollBox_t,string	niup: expandweight(ih: ScrollBox_t; value: string)	
expandweight=	niup.html#expandweight=,ScrollBox_t,int64	niup: expandweight=(ih: ScrollBox_t; x: int64)	
expandweight	niup.html#expandweight,ScrollBox_t,int64	niup: expandweight(ih: ScrollBox_t; x: int64)	
expandweight	niup.html#expandweight,ScrollBox_t	niup: expandweight(ih: ScrollBox_t): string	
floating=	niup.html#floating=,ScrollBox_t,string	niup: floating=(ih: ScrollBox_t; value: string)	
floating	niup.html#floating,ScrollBox_t,string	niup: floating(ih: ScrollBox_t; value: string)	
floating	niup.html#floating,ScrollBox_t	niup: floating(ih: ScrollBox_t): string	
font=	niup.html#font=,ScrollBox_t,string	niup: font=(ih: ScrollBox_t; value: string)	
font	niup.html#font,ScrollBox_t,string	niup: font(ih: ScrollBox_t; value: string)	
font	niup.html#font,ScrollBox_t	niup: font(ih: ScrollBox_t): string	
fontface=	niup.html#fontface=,ScrollBox_t,string	niup: fontface=(ih: ScrollBox_t; value: string)	
fontface	niup.html#fontface,ScrollBox_t,string	niup: fontface(ih: ScrollBox_t; value: string)	
fontface	niup.html#fontface,ScrollBox_t	niup: fontface(ih: ScrollBox_t): string	
fontsize=	niup.html#fontsize=,ScrollBox_t,string	niup: fontsize=(ih: ScrollBox_t; value: string)	
fontsize	niup.html#fontsize,ScrollBox_t,string	niup: fontsize(ih: ScrollBox_t; value: string)	
fontsize=	niup.html#fontsize=,ScrollBox_t,int	niup: fontsize=(ih: ScrollBox_t; x: int)	
fontsize	niup.html#fontsize,ScrollBox_t,int	niup: fontsize(ih: ScrollBox_t; x: int)	
fontsize	niup.html#fontsize,ScrollBox_t	niup: fontsize(ih: ScrollBox_t): string	
fontstyle=	niup.html#fontstyle=,ScrollBox_t,string	niup: fontstyle=(ih: ScrollBox_t; value: string)	
fontstyle	niup.html#fontstyle,ScrollBox_t,string	niup: fontstyle(ih: ScrollBox_t; value: string)	
fontstyle	niup.html#fontstyle,ScrollBox_t	niup: fontstyle(ih: ScrollBox_t): string	
handlename=	niup.html#handlename=,ScrollBox_t,string	niup: handlename=(ih: ScrollBox_t; value: string)	
handlename	niup.html#handlename,ScrollBox_t,string	niup: handlename(ih: ScrollBox_t; value: string)	
handlename	niup.html#handlename,ScrollBox_t	niup: handlename(ih: ScrollBox_t): string	
layoutdrag=	niup.html#layoutdrag=,ScrollBox_t,string	niup: layoutdrag=(ih: ScrollBox_t; value: string)	
layoutdrag	niup.html#layoutdrag,ScrollBox_t,string	niup: layoutdrag(ih: ScrollBox_t; value: string)	
layoutdrag=	niup.html#layoutdrag=,ScrollBox_t,bool	niup: layoutdrag=(ih: ScrollBox_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,ScrollBox_t,bool	niup: layoutdrag(ih: ScrollBox_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,ScrollBox_t	niup: layoutdrag(ih: ScrollBox_t): bool	
linex=	niup.html#linex=,ScrollBox_t,string	niup: linex=(ih: ScrollBox_t; value: string)	
linex	niup.html#linex,ScrollBox_t,string	niup: linex(ih: ScrollBox_t; value: string)	
linex=	niup.html#linex=,ScrollBox_t,int64	niup: linex=(ih: ScrollBox_t; x: int64)	
linex	niup.html#linex,ScrollBox_t,int64	niup: linex(ih: ScrollBox_t; x: int64)	
linex	niup.html#linex,ScrollBox_t	niup: linex(ih: ScrollBox_t): string	
liney=	niup.html#liney=,ScrollBox_t,string	niup: liney=(ih: ScrollBox_t; value: string)	
liney	niup.html#liney,ScrollBox_t,string	niup: liney(ih: ScrollBox_t; value: string)	
liney=	niup.html#liney=,ScrollBox_t,int64	niup: liney=(ih: ScrollBox_t; x: int64)	
liney	niup.html#liney,ScrollBox_t,int64	niup: liney(ih: ScrollBox_t; x: int64)	
liney	niup.html#liney,ScrollBox_t	niup: liney(ih: ScrollBox_t): string	
maxsize=	niup.html#maxsize=,ScrollBox_t,string	niup: maxsize=(ih: ScrollBox_t; value: string)	
maxsize	niup.html#maxsize,ScrollBox_t,string	niup: maxsize(ih: ScrollBox_t; value: string)	
maxsize=	niup.html#maxsize=,ScrollBox_t,int,int	niup: maxsize=(ih: ScrollBox_t; width, height: int)	
maxsize	niup.html#maxsize,ScrollBox_t,int,int	niup: maxsize(ih: ScrollBox_t; width, height: int)	
maxsize	niup.html#maxsize,ScrollBox_t	niup: maxsize(ih: ScrollBox_t): string	
minsize=	niup.html#minsize=,ScrollBox_t,string	niup: minsize=(ih: ScrollBox_t; value: string)	
minsize	niup.html#minsize,ScrollBox_t,string	niup: minsize(ih: ScrollBox_t; value: string)	
minsize=	niup.html#minsize=,ScrollBox_t,int,int	niup: minsize=(ih: ScrollBox_t; width, height: int)	
minsize	niup.html#minsize,ScrollBox_t,int,int	niup: minsize(ih: ScrollBox_t; width, height: int)	
minsize	niup.html#minsize,ScrollBox_t	niup: minsize(ih: ScrollBox_t): string	
name=	niup.html#name=,ScrollBox_t,string	niup: name=(ih: ScrollBox_t; value: string)	
name	niup.html#name,ScrollBox_t,string	niup: name(ih: ScrollBox_t; value: string)	
name	niup.html#name,ScrollBox_t	niup: name(ih: ScrollBox_t): string	
naturalsize	niup.html#naturalsize,ScrollBox_t	niup: naturalsize(ih: ScrollBox_t): string	
normalizergroup=	niup.html#normalizergroup=,ScrollBox_t,string	niup: normalizergroup=(ih: ScrollBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,ScrollBox_t,string	niup: normalizergroup(ih: ScrollBox_t; value: string)	
normalizergroup	niup.html#normalizergroup,ScrollBox_t	niup: normalizergroup(ih: ScrollBox_t): string	
ntheme=	niup.html#ntheme=,ScrollBox_t,string	niup: ntheme=(ih: ScrollBox_t; value: string)	
ntheme	niup.html#ntheme,ScrollBox_t,string	niup: ntheme(ih: ScrollBox_t; value: string)	
ntheme	niup.html#ntheme,ScrollBox_t	niup: ntheme(ih: ScrollBox_t): string	
pangofontdesc	niup.html#pangofontdesc,ScrollBox_t	niup: pangofontdesc(ih: ScrollBox_t): string	
pangolayout	niup.html#pangolayout,ScrollBox_t	niup: pangolayout(ih: ScrollBox_t): string	
position=	niup.html#position=,ScrollBox_t,string	niup: position=(ih: ScrollBox_t; value: string)	
position	niup.html#position,ScrollBox_t,string	niup: position(ih: ScrollBox_t; value: string)	
position=	niup.html#position=,ScrollBox_t,int,int	niup: position=(ih: ScrollBox_t; x, y: int)	
position	niup.html#position,ScrollBox_t,int,int	niup: position(ih: ScrollBox_t; x, y: int)	
position	niup.html#position,ScrollBox_t	niup: position(ih: ScrollBox_t): string	
posx=	niup.html#posx=,ScrollBox_t,string	niup: posx=(ih: ScrollBox_t; value: string)	
posx	niup.html#posx,ScrollBox_t,string	niup: posx(ih: ScrollBox_t; value: string)	
posx=	niup.html#posx=,ScrollBox_t,int64	niup: posx=(ih: ScrollBox_t; x: int64)	
posx	niup.html#posx,ScrollBox_t,int64	niup: posx(ih: ScrollBox_t; x: int64)	
posx	niup.html#posx,ScrollBox_t	niup: posx(ih: ScrollBox_t): string	
posy=	niup.html#posy=,ScrollBox_t,string	niup: posy=(ih: ScrollBox_t; value: string)	
posy	niup.html#posy,ScrollBox_t,string	niup: posy(ih: ScrollBox_t; value: string)	
posy=	niup.html#posy=,ScrollBox_t,int64	niup: posy=(ih: ScrollBox_t; x: int64)	
posy	niup.html#posy,ScrollBox_t,int64	niup: posy(ih: ScrollBox_t; x: int64)	
posy	niup.html#posy,ScrollBox_t	niup: posy(ih: ScrollBox_t): string	
propagatefocus=	niup.html#propagatefocus=,ScrollBox_t,string	niup: propagatefocus=(ih: ScrollBox_t; value: string)	
propagatefocus	niup.html#propagatefocus,ScrollBox_t,string	niup: propagatefocus(ih: ScrollBox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,ScrollBox_t,bool	niup: propagatefocus=(ih: ScrollBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ScrollBox_t,bool	niup: propagatefocus(ih: ScrollBox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,ScrollBox_t	niup: propagatefocus(ih: ScrollBox_t): bool	
rastersize=	niup.html#rastersize=,ScrollBox_t,string	niup: rastersize=(ih: ScrollBox_t; value: string)	
rastersize	niup.html#rastersize,ScrollBox_t,string	niup: rastersize(ih: ScrollBox_t; value: string)	
rastersize=	niup.html#rastersize=,ScrollBox_t,int,int	niup: rastersize=(ih: ScrollBox_t; width, height: int)	
rastersize	niup.html#rastersize,ScrollBox_t,int,int	niup: rastersize(ih: ScrollBox_t; width, height: int)	
rastersize	niup.html#rastersize,ScrollBox_t	niup: rastersize(ih: ScrollBox_t): string	
sb_resize	niup.html#sb_resize,ScrollBox_t	niup: sb_resize(ih: ScrollBox_t): string	
screenposition	niup.html#screenposition,ScrollBox_t	niup: screenposition(ih: ScrollBox_t): string	
scrollbar=	niup.html#scrollbar=,ScrollBox_t,string	niup: scrollbar=(ih: ScrollBox_t; value: string)	
scrollbar	niup.html#scrollbar,ScrollBox_t,string	niup: scrollbar(ih: ScrollBox_t; value: string)	
scrollbar=	niup.html#scrollbar=,ScrollBox_t,bool	niup: scrollbar=(ih: ScrollBox_t; yes: bool)	
scrollbar	niup.html#scrollbar,ScrollBox_t,bool	niup: scrollbar(ih: ScrollBox_t; yes: bool)	
scrollbar	niup.html#scrollbar,ScrollBox_t	niup: scrollbar(ih: ScrollBox_t): bool	
scrollto=	niup.html#scrollto=,ScrollBox_t,string	niup: scrollto=(ih: ScrollBox_t; value: string)	
scrollto	niup.html#scrollto,ScrollBox_t,string	niup: scrollto(ih: ScrollBox_t; value: string)	
scrollto=	niup.html#scrollto=,ScrollBox_t,int	niup: scrollto=(ih: ScrollBox_t; x: int)	
scrollto	niup.html#scrollto,ScrollBox_t,int	niup: scrollto(ih: ScrollBox_t; x: int)	
scrolltochild=	niup.html#scrolltochild=,ScrollBox_t,string	niup: scrolltochild=(ih: ScrollBox_t; value: string)	
scrolltochild	niup.html#scrolltochild,ScrollBox_t,string	niup: scrolltochild(ih: ScrollBox_t; value: string)	
scrolltochild_handle=	niup.html#scrolltochild_handle=,ScrollBox_t,User_t	niup: scrolltochild_handle=(ih: ScrollBox_t; handle: User_t)	
scrolltochild_handle	niup.html#scrolltochild_handle,ScrollBox_t,User_t	niup: scrolltochild_handle(ih: ScrollBox_t; handle: User_t)	
size=	niup.html#size=,ScrollBox_t,string	niup: size=(ih: ScrollBox_t; value: string)	
size	niup.html#size,ScrollBox_t,string	niup: size(ih: ScrollBox_t; value: string)	
size=	niup.html#size=,ScrollBox_t,int,int	niup: size=(ih: ScrollBox_t; width, height: int)	
size	niup.html#size,ScrollBox_t,int,int	niup: size(ih: ScrollBox_t; width, height: int)	
size	niup.html#size,ScrollBox_t	niup: size(ih: ScrollBox_t): string	
theme=	niup.html#theme=,ScrollBox_t,string	niup: theme=(ih: ScrollBox_t; value: string)	
theme	niup.html#theme,ScrollBox_t,string	niup: theme(ih: ScrollBox_t; value: string)	
theme	niup.html#theme,ScrollBox_t	niup: theme(ih: ScrollBox_t): string	
tip=	niup.html#tip=,ScrollBox_t,string	niup: tip=(ih: ScrollBox_t; value: string)	
tip	niup.html#tip,ScrollBox_t,string	niup: tip(ih: ScrollBox_t; value: string)	
tip	niup.html#tip,ScrollBox_t	niup: tip(ih: ScrollBox_t): string	
tipbgcolor=	niup.html#tipbgcolor=,ScrollBox_t,string	niup: tipbgcolor=(ih: ScrollBox_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,ScrollBox_t,string	niup: tipbgcolor(ih: ScrollBox_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,ScrollBox_t,int,int,int,int	niup: tipbgcolor=(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ScrollBox_t,int,int,int,int	niup: tipbgcolor(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,ScrollBox_t	niup: tipbgcolor(ih: ScrollBox_t): string	
tipdelay=	niup.html#tipdelay=,ScrollBox_t,string	niup: tipdelay=(ih: ScrollBox_t; value: string)	
tipdelay	niup.html#tipdelay,ScrollBox_t,string	niup: tipdelay(ih: ScrollBox_t; value: string)	
tipdelay=	niup.html#tipdelay=,ScrollBox_t,int	niup: tipdelay=(ih: ScrollBox_t; x: int)	
tipdelay	niup.html#tipdelay,ScrollBox_t,int	niup: tipdelay(ih: ScrollBox_t; x: int)	
tipdelay	niup.html#tipdelay,ScrollBox_t	niup: tipdelay(ih: ScrollBox_t): string	
tipfgcolor=	niup.html#tipfgcolor=,ScrollBox_t,string	niup: tipfgcolor=(ih: ScrollBox_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,ScrollBox_t,string	niup: tipfgcolor(ih: ScrollBox_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,ScrollBox_t,int,int,int,int	niup: tipfgcolor=(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ScrollBox_t,int,int,int,int	niup: tipfgcolor(ih: ScrollBox_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,ScrollBox_t	niup: tipfgcolor(ih: ScrollBox_t): string	
tipicon=	niup.html#tipicon=,ScrollBox_t,string	niup: tipicon=(ih: ScrollBox_t; value: string)	
tipicon	niup.html#tipicon,ScrollBox_t,string	niup: tipicon(ih: ScrollBox_t; value: string)	
tipicon	niup.html#tipicon,ScrollBox_t	niup: tipicon(ih: ScrollBox_t): string	
tipmarkup=	niup.html#tipmarkup=,ScrollBox_t,string	niup: tipmarkup=(ih: ScrollBox_t; value: string)	
tipmarkup	niup.html#tipmarkup,ScrollBox_t,string	niup: tipmarkup(ih: ScrollBox_t; value: string)	
tipmarkup	niup.html#tipmarkup,ScrollBox_t	niup: tipmarkup(ih: ScrollBox_t): string	
tiprect=	niup.html#tiprect=,ScrollBox_t,string	niup: tiprect=(ih: ScrollBox_t; value: string)	
tiprect	niup.html#tiprect,ScrollBox_t,string	niup: tiprect(ih: ScrollBox_t; value: string)	
tiprect=	niup.html#tiprect=,ScrollBox_t,int,int,int,int	niup: tiprect=(ih: ScrollBox_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ScrollBox_t,int,int,int,int	niup: tiprect(ih: ScrollBox_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,ScrollBox_t	niup: tiprect(ih: ScrollBox_t): string	
tipvisible=	niup.html#tipvisible=,ScrollBox_t,string	niup: tipvisible=(ih: ScrollBox_t; value: string)	
tipvisible	niup.html#tipvisible,ScrollBox_t,string	niup: tipvisible(ih: ScrollBox_t; value: string)	
tipvisible=	niup.html#tipvisible=,ScrollBox_t,bool	niup: tipvisible=(ih: ScrollBox_t; yes: bool)	
tipvisible	niup.html#tipvisible,ScrollBox_t,bool	niup: tipvisible(ih: ScrollBox_t; yes: bool)	
tipvisible	niup.html#tipvisible,ScrollBox_t	niup: tipvisible(ih: ScrollBox_t): bool	
touch=	niup.html#touch=,ScrollBox_t,string	niup: touch=(ih: ScrollBox_t; value: string)	
touch	niup.html#touch,ScrollBox_t,string	niup: touch(ih: ScrollBox_t; value: string)	
touch=	niup.html#touch=,ScrollBox_t,bool	niup: touch=(ih: ScrollBox_t; yes: bool)	
touch	niup.html#touch,ScrollBox_t,bool	niup: touch(ih: ScrollBox_t; yes: bool)	
touch	niup.html#touch,ScrollBox_t	niup: touch(ih: ScrollBox_t): bool	
usersize=	niup.html#usersize=,ScrollBox_t,string	niup: usersize=(ih: ScrollBox_t; value: string)	
usersize	niup.html#usersize,ScrollBox_t,string	niup: usersize(ih: ScrollBox_t; value: string)	
usersize=	niup.html#usersize=,ScrollBox_t,int,int	niup: usersize=(ih: ScrollBox_t; width, height: int)	
usersize	niup.html#usersize,ScrollBox_t,int,int	niup: usersize(ih: ScrollBox_t; width, height: int)	
usersize	niup.html#usersize,ScrollBox_t	niup: usersize(ih: ScrollBox_t): string	
visible=	niup.html#visible=,ScrollBox_t,string	niup: visible=(ih: ScrollBox_t; value: string)	
visible	niup.html#visible,ScrollBox_t,string	niup: visible(ih: ScrollBox_t; value: string)	
visible=	niup.html#visible=,ScrollBox_t,bool	niup: visible=(ih: ScrollBox_t; yes: bool)	
visible	niup.html#visible,ScrollBox_t,bool	niup: visible(ih: ScrollBox_t; yes: bool)	
visible	niup.html#visible,ScrollBox_t	niup: visible(ih: ScrollBox_t): bool	
wheeldropfocus=	niup.html#wheeldropfocus=,ScrollBox_t,string	niup: wheeldropfocus=(ih: ScrollBox_t; value: string)	
wheeldropfocus	niup.html#wheeldropfocus,ScrollBox_t,string	niup: wheeldropfocus(ih: ScrollBox_t; value: string)	
wheeldropfocus=	niup.html#wheeldropfocus=,ScrollBox_t,bool	niup: wheeldropfocus=(ih: ScrollBox_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,ScrollBox_t,bool	niup: wheeldropfocus(ih: ScrollBox_t; yes: bool)	
wheeldropfocus	niup.html#wheeldropfocus,ScrollBox_t	niup: wheeldropfocus(ih: ScrollBox_t): bool	
wid	niup.html#wid,ScrollBox_t	niup: wid(ih: ScrollBox_t): string	
x	niup.html#x,ScrollBox_t	niup: x(ih: ScrollBox_t): string	
xautohide	niup.html#xautohide,ScrollBox_t	niup: xautohide(ih: ScrollBox_t): bool	
xdisplay	niup.html#xdisplay,ScrollBox_t	niup: xdisplay(ih: ScrollBox_t): string	
xfontid	niup.html#xfontid,ScrollBox_t	niup: xfontid(ih: ScrollBox_t): string	
xhidden	niup.html#xhidden,ScrollBox_t	niup: xhidden(ih: ScrollBox_t): bool	
xmax=	niup.html#xmax=,ScrollBox_t,string	niup: xmax=(ih: ScrollBox_t; value: string)	
xmax	niup.html#xmax,ScrollBox_t,string	niup: xmax(ih: ScrollBox_t; value: string)	
xmax=	niup.html#xmax=,ScrollBox_t,int	niup: xmax=(ih: ScrollBox_t; x: int)	
xmax	niup.html#xmax,ScrollBox_t,int	niup: xmax(ih: ScrollBox_t; x: int)	
xmax	niup.html#xmax,ScrollBox_t	niup: xmax(ih: ScrollBox_t): string	
xmin=	niup.html#xmin=,ScrollBox_t,string	niup: xmin=(ih: ScrollBox_t; value: string)	
xmin	niup.html#xmin,ScrollBox_t,string	niup: xmin(ih: ScrollBox_t; value: string)	
xmin=	niup.html#xmin=,ScrollBox_t,int	niup: xmin=(ih: ScrollBox_t; x: int)	
xmin	niup.html#xmin,ScrollBox_t,int	niup: xmin(ih: ScrollBox_t; x: int)	
xmin	niup.html#xmin,ScrollBox_t	niup: xmin(ih: ScrollBox_t): string	
xwindow	niup.html#xwindow,ScrollBox_t	niup: xwindow(ih: ScrollBox_t): string	
y	niup.html#y,ScrollBox_t	niup: y(ih: ScrollBox_t): string	
yautohide	niup.html#yautohide,ScrollBox_t	niup: yautohide(ih: ScrollBox_t): bool	
yhidden	niup.html#yhidden,ScrollBox_t	niup: yhidden(ih: ScrollBox_t): bool	
ymax=	niup.html#ymax=,ScrollBox_t,string	niup: ymax=(ih: ScrollBox_t; value: string)	
ymax	niup.html#ymax,ScrollBox_t,string	niup: ymax(ih: ScrollBox_t; value: string)	
ymax=	niup.html#ymax=,ScrollBox_t,int	niup: ymax=(ih: ScrollBox_t; x: int)	
ymax	niup.html#ymax,ScrollBox_t,int	niup: ymax(ih: ScrollBox_t; x: int)	
ymax	niup.html#ymax,ScrollBox_t	niup: ymax(ih: ScrollBox_t): string	
ymin=	niup.html#ymin=,ScrollBox_t,string	niup: ymin=(ih: ScrollBox_t; value: string)	
ymin	niup.html#ymin,ScrollBox_t,string	niup: ymin(ih: ScrollBox_t; value: string)	
ymin=	niup.html#ymin=,ScrollBox_t,int	niup: ymin=(ih: ScrollBox_t; x: int)	
ymin	niup.html#ymin,ScrollBox_t,int	niup: ymin(ih: ScrollBox_t; x: int)	
ymin	niup.html#ymin,ScrollBox_t	niup: ymin(ih: ScrollBox_t): string	
zorder=	niup.html#zorder=,ScrollBox_t,string	niup: zorder=(ih: ScrollBox_t; value: string)	
zorder	niup.html#zorder,ScrollBox_t,string	niup: zorder(ih: ScrollBox_t; value: string)	
action=	niup.html#action=,ScrollBox_t,proc(PIhandle,cfloat,cfloat)	niup: action=(ih: ScrollBox_t;\n        cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,ScrollBox_t,proc(PIhandle,cfloat,cfloat)	niup: action(ih: ScrollBox_t;\n       cb: proc (ih: PIhandle; arg2: cfloat; arg3: cfloat): cint {.cdecl.})	
action	niup.html#action,ScrollBox_t	niup: action(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,ScrollBox_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                      arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,ScrollBox_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                     arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,ScrollBox_t	niup: button_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,ScrollBox_t,proc(PIhandle)	niup: destroy_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ScrollBox_t,proc(PIhandle)	niup: destroy_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,ScrollBox_t	niup: destroy_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,ScrollBox_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: ScrollBox_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ScrollBox_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: ScrollBox_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,ScrollBox_t	niup: dragbegin_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,ScrollBox_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: ScrollBox_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ScrollBox_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: ScrollBox_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,ScrollBox_t	niup: dragdatasize_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,ScrollBox_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ScrollBox_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,ScrollBox_t	niup: dragdata_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,ScrollBox_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: ScrollBox_t;\n            cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ScrollBox_t,proc(PIhandle,cint)	niup: dragend_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,ScrollBox_t	niup: dragend_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,ScrollBox_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                        data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ScrollBox_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                       data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,ScrollBox_t	niup: dropdata_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,ScrollBox_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: ScrollBox_t; cb: proc (Ih: PIhandle; filename: cstring;\n    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ScrollBox_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: ScrollBox_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                        num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,ScrollBox_t	niup: dropfiles_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,ScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; x, y: cint;\n    status: cstring): cint {.cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,ScrollBox_t	niup: dropmotion_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,ScrollBox_t,proc(PIhandle)	niup: enterwindow_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ScrollBox_t,proc(PIhandle)	niup: enterwindow_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,ScrollBox_t	niup: enterwindow_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,ScrollBox_t,proc(PIhandle,cint)	niup: focus_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ScrollBox_t,proc(PIhandle,cint)	niup: focus_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,ScrollBox_t	niup: focus_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,ScrollBox_t,proc(PIhandle)	niup: getfocus_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ScrollBox_t,proc(PIhandle)	niup: getfocus_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,ScrollBox_t	niup: getfocus_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,ScrollBox_t,proc(PIhandle)	niup: help_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ScrollBox_t,proc(PIhandle)	niup: help_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,ScrollBox_t	niup: help_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
keypress_cb=	niup.html#keypress_cb=,ScrollBox_t,proc(PIhandle,cint,cint)	niup: keypress_cb=(ih: ScrollBox_t;\n             cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,ScrollBox_t,proc(PIhandle,cint,cint)	niup: keypress_cb(ih: ScrollBox_t;\n            cb: proc (ih: PIhandle; c, press: cint): cint {.cdecl.})	
keypress_cb	niup.html#keypress_cb,ScrollBox_t	niup: keypress_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,ScrollBox_t,proc(PIhandle)	niup: killfocus_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ScrollBox_t,proc(PIhandle)	niup: killfocus_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,ScrollBox_t	niup: killfocus_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,ScrollBox_t,proc(PIhandle,cint)	niup: k_any=(ih: ScrollBox_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ScrollBox_t,proc(PIhandle,cint)	niup: k_any(ih: ScrollBox_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,ScrollBox_t	niup: k_any(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
layoutupdate_cb=	niup.html#layoutupdate_cb=,ScrollBox_t,proc(PIhandle)	niup: layoutupdate_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
layoutupdate_cb	niup.html#layoutupdate_cb,ScrollBox_t,proc(PIhandle)	niup: layoutupdate_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
layoutupdate_cb	niup.html#layoutupdate_cb,ScrollBox_t	niup: layoutupdate_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,ScrollBox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ScrollBox_t,proc(PIhandle)	niup: ldestroy_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,ScrollBox_t	niup: ldestroy_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,ScrollBox_t,proc(PIhandle)	niup: leavewindow_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ScrollBox_t,proc(PIhandle)	niup: leavewindow_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,ScrollBox_t	niup: leavewindow_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,ScrollBox_t,proc(PIhandle)	niup: map_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ScrollBox_t,proc(PIhandle)	niup: map_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,ScrollBox_t	niup: map_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,ScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: ScrollBox_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,ScrollBox_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: ScrollBox_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,ScrollBox_t	niup: motion_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,ScrollBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ScrollBox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,ScrollBox_t	niup: postmessage_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
resize_cb=	niup.html#resize_cb=,ScrollBox_t,proc(PIhandle,cint,cint)	niup: resize_cb=(ih: ScrollBox_t;\n           cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ScrollBox_t,proc(PIhandle,cint,cint)	niup: resize_cb(ih: ScrollBox_t;\n          cb: proc (ih: PIhandle; width, height: cint): cint {.cdecl.})	
resize_cb	niup.html#resize_cb,ScrollBox_t	niup: resize_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
scroll_cb=	niup.html#scroll_cb=,ScrollBox_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb=(ih: ScrollBox_t;\n           cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,ScrollBox_t,proc(PIhandle,cint,cfloat,cfloat)	niup: scroll_cb(ih: ScrollBox_t;\n          cb: proc (ih: PIhandle; op: cint; posx, posy: cfloat): cint {.cdecl.})	
scroll_cb	niup.html#scroll_cb,ScrollBox_t	niup: scroll_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,ScrollBox_t,proc(PIhandle)	niup: unmap_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ScrollBox_t,proc(PIhandle)	niup: unmap_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,ScrollBox_t	niup: unmap_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
wheel_cb=	niup.html#wheel_cb=,ScrollBox_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                     status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,ScrollBox_t,proc(PIhandle,cfloat,cint,cint,cstring)	niup: wheel_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; delta: cfloat; x, y: cint;\n                                    status: cstring): cint {.cdecl.})	
wheel_cb	niup.html#wheel_cb,ScrollBox_t	niup: wheel_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
wom_cb=	niup.html#wom_cb=,ScrollBox_t,proc(PIhandle,cint)	niup: wom_cb=(ih: ScrollBox_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,ScrollBox_t,proc(PIhandle,cint)	niup: wom_cb(ih: ScrollBox_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
wom_cb	niup.html#wom_cb,ScrollBox_t	niup: wom_cb(ih: ScrollBox_t): proc (ih: PIhandle): cint {.cdecl.}	
Separator	niup.html#Separator_2	niup: Separator(): Separator_t	
name=	niup.html#name=,Separator_t,string	niup: name=(ih: Separator_t; value: string)	
name	niup.html#name,Separator_t,string	niup: name(ih: Separator_t; value: string)	
name	niup.html#name,Separator_t	niup: name(ih: Separator_t): string	
wid	niup.html#wid,Separator_t	niup: wid(ih: Separator_t): string	
Space	niup.html#Space_2	niup: Space(): Space_t	
active=	niup.html#active=,Space_t,string	niup: active=(ih: Space_t; value: string)	
active	niup.html#active,Space_t,string	niup: active(ih: Space_t; value: string)	
active=	niup.html#active=,Space_t,bool	niup: active=(ih: Space_t; yes: bool)	
active	niup.html#active,Space_t,bool	niup: active(ih: Space_t; yes: bool)	
active	niup.html#active,Space_t	niup: active(ih: Space_t): bool	
canfocus=	niup.html#canfocus=,Space_t,string	niup: canfocus=(ih: Space_t; value: string)	
canfocus	niup.html#canfocus,Space_t,string	niup: canfocus(ih: Space_t; value: string)	
canfocus=	niup.html#canfocus=,Space_t,bool	niup: canfocus=(ih: Space_t; yes: bool)	
canfocus	niup.html#canfocus,Space_t,bool	niup: canfocus(ih: Space_t; yes: bool)	
canfocus	niup.html#canfocus,Space_t	niup: canfocus(ih: Space_t): bool	
charsize	niup.html#charsize,Space_t	niup: charsize(ih: Space_t): string	
expand=	niup.html#expand=,Space_t,string	niup: expand=(ih: Space_t; value: string)	
expand	niup.html#expand,Space_t,string	niup: expand(ih: Space_t; value: string)	
expand	niup.html#expand,Space_t	niup: expand(ih: Space_t): string	
expandweight=	niup.html#expandweight=,Space_t,string	niup: expandweight=(ih: Space_t; value: string)	
expandweight	niup.html#expandweight,Space_t,string	niup: expandweight(ih: Space_t; value: string)	
expandweight=	niup.html#expandweight=,Space_t,int64	niup: expandweight=(ih: Space_t; x: int64)	
expandweight	niup.html#expandweight,Space_t,int64	niup: expandweight(ih: Space_t; x: int64)	
expandweight	niup.html#expandweight,Space_t	niup: expandweight(ih: Space_t): string	
floating=	niup.html#floating=,Space_t,string	niup: floating=(ih: Space_t; value: string)	
floating	niup.html#floating,Space_t,string	niup: floating(ih: Space_t; value: string)	
floating	niup.html#floating,Space_t	niup: floating(ih: Space_t): string	
font=	niup.html#font=,Space_t,string	niup: font=(ih: Space_t; value: string)	
font	niup.html#font,Space_t,string	niup: font(ih: Space_t; value: string)	
font	niup.html#font,Space_t	niup: font(ih: Space_t): string	
fontface=	niup.html#fontface=,Space_t,string	niup: fontface=(ih: Space_t; value: string)	
fontface	niup.html#fontface,Space_t,string	niup: fontface(ih: Space_t; value: string)	
fontface	niup.html#fontface,Space_t	niup: fontface(ih: Space_t): string	
fontsize=	niup.html#fontsize=,Space_t,string	niup: fontsize=(ih: Space_t; value: string)	
fontsize	niup.html#fontsize,Space_t,string	niup: fontsize(ih: Space_t; value: string)	
fontsize=	niup.html#fontsize=,Space_t,int	niup: fontsize=(ih: Space_t; x: int)	
fontsize	niup.html#fontsize,Space_t,int	niup: fontsize(ih: Space_t; x: int)	
fontsize	niup.html#fontsize,Space_t	niup: fontsize(ih: Space_t): string	
fontstyle=	niup.html#fontstyle=,Space_t,string	niup: fontstyle=(ih: Space_t; value: string)	
fontstyle	niup.html#fontstyle,Space_t,string	niup: fontstyle(ih: Space_t; value: string)	
fontstyle	niup.html#fontstyle,Space_t	niup: fontstyle(ih: Space_t): string	
handlename=	niup.html#handlename=,Space_t,string	niup: handlename=(ih: Space_t; value: string)	
handlename	niup.html#handlename,Space_t,string	niup: handlename(ih: Space_t; value: string)	
handlename	niup.html#handlename,Space_t	niup: handlename(ih: Space_t): string	
maxsize=	niup.html#maxsize=,Space_t,string	niup: maxsize=(ih: Space_t; value: string)	
maxsize	niup.html#maxsize,Space_t,string	niup: maxsize(ih: Space_t; value: string)	
maxsize=	niup.html#maxsize=,Space_t,int,int	niup: maxsize=(ih: Space_t; width, height: int)	
maxsize	niup.html#maxsize,Space_t,int,int	niup: maxsize(ih: Space_t; width, height: int)	
maxsize	niup.html#maxsize,Space_t	niup: maxsize(ih: Space_t): string	
minsize=	niup.html#minsize=,Space_t,string	niup: minsize=(ih: Space_t; value: string)	
minsize	niup.html#minsize,Space_t,string	niup: minsize(ih: Space_t; value: string)	
minsize=	niup.html#minsize=,Space_t,int,int	niup: minsize=(ih: Space_t; width, height: int)	
minsize	niup.html#minsize,Space_t,int,int	niup: minsize(ih: Space_t; width, height: int)	
minsize	niup.html#minsize,Space_t	niup: minsize(ih: Space_t): string	
name=	niup.html#name=,Space_t,string	niup: name=(ih: Space_t; value: string)	
name	niup.html#name,Space_t,string	niup: name(ih: Space_t; value: string)	
name	niup.html#name,Space_t	niup: name(ih: Space_t): string	
naturalsize	niup.html#naturalsize,Space_t	niup: naturalsize(ih: Space_t): string	
normalizergroup=	niup.html#normalizergroup=,Space_t,string	niup: normalizergroup=(ih: Space_t; value: string)	
normalizergroup	niup.html#normalizergroup,Space_t,string	niup: normalizergroup(ih: Space_t; value: string)	
normalizergroup	niup.html#normalizergroup,Space_t	niup: normalizergroup(ih: Space_t): string	
ntheme=	niup.html#ntheme=,Space_t,string	niup: ntheme=(ih: Space_t; value: string)	
ntheme	niup.html#ntheme,Space_t,string	niup: ntheme(ih: Space_t; value: string)	
ntheme	niup.html#ntheme,Space_t	niup: ntheme(ih: Space_t): string	
pangofontdesc	niup.html#pangofontdesc,Space_t	niup: pangofontdesc(ih: Space_t): string	
pangolayout	niup.html#pangolayout,Space_t	niup: pangolayout(ih: Space_t): string	
position=	niup.html#position=,Space_t,string	niup: position=(ih: Space_t; value: string)	
position	niup.html#position,Space_t,string	niup: position(ih: Space_t; value: string)	
position=	niup.html#position=,Space_t,int,int	niup: position=(ih: Space_t; x, y: int)	
position	niup.html#position,Space_t,int,int	niup: position(ih: Space_t; x, y: int)	
position	niup.html#position,Space_t	niup: position(ih: Space_t): string	
propagatefocus=	niup.html#propagatefocus=,Space_t,string	niup: propagatefocus=(ih: Space_t; value: string)	
propagatefocus	niup.html#propagatefocus,Space_t,string	niup: propagatefocus(ih: Space_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Space_t,bool	niup: propagatefocus=(ih: Space_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Space_t,bool	niup: propagatefocus(ih: Space_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Space_t	niup: propagatefocus(ih: Space_t): bool	
rastersize=	niup.html#rastersize=,Space_t,string	niup: rastersize=(ih: Space_t; value: string)	
rastersize	niup.html#rastersize,Space_t,string	niup: rastersize(ih: Space_t; value: string)	
rastersize=	niup.html#rastersize=,Space_t,int,int	niup: rastersize=(ih: Space_t; width, height: int)	
rastersize	niup.html#rastersize,Space_t,int,int	niup: rastersize(ih: Space_t; width, height: int)	
rastersize	niup.html#rastersize,Space_t	niup: rastersize(ih: Space_t): string	
size=	niup.html#size=,Space_t,string	niup: size=(ih: Space_t; value: string)	
size	niup.html#size,Space_t,string	niup: size(ih: Space_t; value: string)	
size=	niup.html#size=,Space_t,int,int	niup: size=(ih: Space_t; width, height: int)	
size	niup.html#size,Space_t,int,int	niup: size(ih: Space_t; width, height: int)	
size	niup.html#size,Space_t	niup: size(ih: Space_t): string	
theme=	niup.html#theme=,Space_t,string	niup: theme=(ih: Space_t; value: string)	
theme	niup.html#theme,Space_t,string	niup: theme(ih: Space_t; value: string)	
theme	niup.html#theme,Space_t	niup: theme(ih: Space_t): string	
usersize=	niup.html#usersize=,Space_t,string	niup: usersize=(ih: Space_t; value: string)	
usersize	niup.html#usersize,Space_t,string	niup: usersize(ih: Space_t; value: string)	
usersize=	niup.html#usersize=,Space_t,int,int	niup: usersize=(ih: Space_t; width, height: int)	
usersize	niup.html#usersize,Space_t,int,int	niup: usersize(ih: Space_t; width, height: int)	
usersize	niup.html#usersize,Space_t	niup: usersize(ih: Space_t): string	
visible=	niup.html#visible=,Space_t,string	niup: visible=(ih: Space_t; value: string)	
visible	niup.html#visible,Space_t,string	niup: visible(ih: Space_t; value: string)	
visible=	niup.html#visible=,Space_t,bool	niup: visible=(ih: Space_t; yes: bool)	
visible	niup.html#visible,Space_t,bool	niup: visible(ih: Space_t; yes: bool)	
visible	niup.html#visible,Space_t	niup: visible(ih: Space_t): bool	
wid	niup.html#wid,Space_t	niup: wid(ih: Space_t): string	
xfontid	niup.html#xfontid,Space_t	niup: xfontid(ih: Space_t): string	
destroy_cb=	niup.html#destroy_cb=,Space_t,proc(PIhandle)	niup: destroy_cb=(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Space_t,proc(PIhandle)	niup: destroy_cb(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Space_t	niup: destroy_cb(ih: Space_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Space_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Space_t,proc(PIhandle)	niup: ldestroy_cb(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Space_t	niup: ldestroy_cb(ih: Space_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Space_t,proc(PIhandle)	niup: map_cb=(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Space_t,proc(PIhandle)	niup: map_cb(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Space_t	niup: map_cb(ih: Space_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Space_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Space_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Space_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Space_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Space_t	niup: postmessage_cb(ih: Space_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Space_t,proc(PIhandle)	niup: unmap_cb=(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Space_t,proc(PIhandle)	niup: unmap_cb(ih: Space_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Space_t	niup: unmap_cb(ih: Space_t): proc (ih: PIhandle): cint {.cdecl.}	
Spin	niup.html#Spin_2	niup: Spin(): Spin_t	
active=	niup.html#active=,Spin_t,string	niup: active=(ih: Spin_t; value: string)	
active	niup.html#active,Spin_t,string	niup: active(ih: Spin_t; value: string)	
active=	niup.html#active=,Spin_t,bool	niup: active=(ih: Spin_t; yes: bool)	
active	niup.html#active,Spin_t,bool	niup: active(ih: Spin_t; yes: bool)	
active	niup.html#active,Spin_t	niup: active(ih: Spin_t): bool	
alignment=	niup.html#alignment=,Spin_t,string	niup: alignment=(ih: Spin_t; value: string)	
alignment	niup.html#alignment,Spin_t,string	niup: alignment(ih: Spin_t; value: string)	
alignment	niup.html#alignment,Spin_t	niup: alignment(ih: Spin_t): string	
canfocus=	niup.html#canfocus=,Spin_t,string	niup: canfocus=(ih: Spin_t; value: string)	
canfocus	niup.html#canfocus,Spin_t,string	niup: canfocus(ih: Spin_t; value: string)	
canfocus=	niup.html#canfocus=,Spin_t,bool	niup: canfocus=(ih: Spin_t; yes: bool)	
canfocus	niup.html#canfocus,Spin_t,bool	niup: canfocus(ih: Spin_t; yes: bool)	
canfocus	niup.html#canfocus,Spin_t	niup: canfocus(ih: Spin_t): bool	
cgap=	niup.html#cgap=,Spin_t,string	niup: cgap=(ih: Spin_t; value: string)	
cgap	niup.html#cgap,Spin_t,string	niup: cgap(ih: Spin_t; value: string)	
cgap=	niup.html#cgap=,Spin_t,int	niup: cgap=(ih: Spin_t; x: int)	
cgap	niup.html#cgap,Spin_t,int	niup: cgap(ih: Spin_t; x: int)	
cgap	niup.html#cgap,Spin_t	niup: cgap(ih: Spin_t): string	
charsize	niup.html#charsize,Spin_t	niup: charsize(ih: Spin_t): string	
clientoffset	niup.html#clientoffset,Spin_t	niup: clientoffset(ih: Spin_t): string	
clientsize	niup.html#clientsize,Spin_t	niup: clientsize(ih: Spin_t): string	
cmargin=	niup.html#cmargin=,Spin_t,string	niup: cmargin=(ih: Spin_t; value: string)	
cmargin	niup.html#cmargin,Spin_t,string	niup: cmargin(ih: Spin_t; value: string)	
cmargin=	niup.html#cmargin=,Spin_t,int,int	niup: cmargin=(ih: Spin_t; horiz, vert: int)	
cmargin	niup.html#cmargin,Spin_t,int,int	niup: cmargin(ih: Spin_t; horiz, vert: int)	
cmargin	niup.html#cmargin,Spin_t	niup: cmargin(ih: Spin_t): string	
expand=	niup.html#expand=,Spin_t,string	niup: expand=(ih: Spin_t; value: string)	
expand	niup.html#expand,Spin_t,string	niup: expand(ih: Spin_t; value: string)	
expand	niup.html#expand,Spin_t	niup: expand(ih: Spin_t): string	
expandchildren=	niup.html#expandchildren=,Spin_t,string	niup: expandchildren=(ih: Spin_t; value: string)	
expandchildren	niup.html#expandchildren,Spin_t,string	niup: expandchildren(ih: Spin_t; value: string)	
expandchildren=	niup.html#expandchildren=,Spin_t,bool	niup: expandchildren=(ih: Spin_t; yes: bool)	
expandchildren	niup.html#expandchildren,Spin_t,bool	niup: expandchildren(ih: Spin_t; yes: bool)	
expandchildren	niup.html#expandchildren,Spin_t	niup: expandchildren(ih: Spin_t): bool	
expandweight=	niup.html#expandweight=,Spin_t,string	niup: expandweight=(ih: Spin_t; value: string)	
expandweight	niup.html#expandweight,Spin_t,string	niup: expandweight(ih: Spin_t; value: string)	
expandweight=	niup.html#expandweight=,Spin_t,int64	niup: expandweight=(ih: Spin_t; x: int64)	
expandweight	niup.html#expandweight,Spin_t,int64	niup: expandweight(ih: Spin_t; x: int64)	
expandweight	niup.html#expandweight,Spin_t	niup: expandweight(ih: Spin_t): string	
floating=	niup.html#floating=,Spin_t,string	niup: floating=(ih: Spin_t; value: string)	
floating	niup.html#floating,Spin_t,string	niup: floating(ih: Spin_t; value: string)	
floating	niup.html#floating,Spin_t	niup: floating(ih: Spin_t): string	
font=	niup.html#font=,Spin_t,string	niup: font=(ih: Spin_t; value: string)	
font	niup.html#font,Spin_t,string	niup: font(ih: Spin_t; value: string)	
font	niup.html#font,Spin_t	niup: font(ih: Spin_t): string	
fontface=	niup.html#fontface=,Spin_t,string	niup: fontface=(ih: Spin_t; value: string)	
fontface	niup.html#fontface,Spin_t,string	niup: fontface(ih: Spin_t; value: string)	
fontface	niup.html#fontface,Spin_t	niup: fontface(ih: Spin_t): string	
fontsize=	niup.html#fontsize=,Spin_t,string	niup: fontsize=(ih: Spin_t; value: string)	
fontsize	niup.html#fontsize,Spin_t,string	niup: fontsize(ih: Spin_t; value: string)	
fontsize=	niup.html#fontsize=,Spin_t,int	niup: fontsize=(ih: Spin_t; x: int)	
fontsize	niup.html#fontsize,Spin_t,int	niup: fontsize(ih: Spin_t; x: int)	
fontsize	niup.html#fontsize,Spin_t	niup: fontsize(ih: Spin_t): string	
fontstyle=	niup.html#fontstyle=,Spin_t,string	niup: fontstyle=(ih: Spin_t; value: string)	
fontstyle	niup.html#fontstyle,Spin_t,string	niup: fontstyle(ih: Spin_t; value: string)	
fontstyle	niup.html#fontstyle,Spin_t	niup: fontstyle(ih: Spin_t): string	
gap=	niup.html#gap=,Spin_t,string	niup: gap=(ih: Spin_t; value: string)	
gap	niup.html#gap,Spin_t,string	niup: gap(ih: Spin_t; value: string)	
gap=	niup.html#gap=,Spin_t,int	niup: gap=(ih: Spin_t; x: int)	
gap	niup.html#gap,Spin_t,int	niup: gap(ih: Spin_t; x: int)	
gap	niup.html#gap,Spin_t	niup: gap(ih: Spin_t): string	
handlename=	niup.html#handlename=,Spin_t,string	niup: handlename=(ih: Spin_t; value: string)	
handlename	niup.html#handlename,Spin_t,string	niup: handlename(ih: Spin_t; value: string)	
handlename	niup.html#handlename,Spin_t	niup: handlename(ih: Spin_t): string	
homogeneous=	niup.html#homogeneous=,Spin_t,string	niup: homogeneous=(ih: Spin_t; value: string)	
homogeneous	niup.html#homogeneous,Spin_t,string	niup: homogeneous(ih: Spin_t; value: string)	
homogeneous=	niup.html#homogeneous=,Spin_t,bool	niup: homogeneous=(ih: Spin_t; yes: bool)	
homogeneous	niup.html#homogeneous,Spin_t,bool	niup: homogeneous(ih: Spin_t; yes: bool)	
homogeneous	niup.html#homogeneous,Spin_t	niup: homogeneous(ih: Spin_t): bool	
margin=	niup.html#margin=,Spin_t,string	niup: margin=(ih: Spin_t; value: string)	
margin	niup.html#margin,Spin_t,string	niup: margin(ih: Spin_t; value: string)	
margin=	niup.html#margin=,Spin_t,int,int	niup: margin=(ih: Spin_t; horiz, vert: int)	
margin	niup.html#margin,Spin_t,int,int	niup: margin(ih: Spin_t; horiz, vert: int)	
margin	niup.html#margin,Spin_t	niup: margin(ih: Spin_t): string	
maxsize=	niup.html#maxsize=,Spin_t,string	niup: maxsize=(ih: Spin_t; value: string)	
maxsize	niup.html#maxsize,Spin_t,string	niup: maxsize(ih: Spin_t; value: string)	
maxsize=	niup.html#maxsize=,Spin_t,int,int	niup: maxsize=(ih: Spin_t; width, height: int)	
maxsize	niup.html#maxsize,Spin_t,int,int	niup: maxsize(ih: Spin_t; width, height: int)	
maxsize	niup.html#maxsize,Spin_t	niup: maxsize(ih: Spin_t): string	
minsize=	niup.html#minsize=,Spin_t,string	niup: minsize=(ih: Spin_t; value: string)	
minsize	niup.html#minsize,Spin_t,string	niup: minsize(ih: Spin_t; value: string)	
minsize=	niup.html#minsize=,Spin_t,int,int	niup: minsize=(ih: Spin_t; width, height: int)	
minsize	niup.html#minsize,Spin_t,int,int	niup: minsize(ih: Spin_t; width, height: int)	
minsize	niup.html#minsize,Spin_t	niup: minsize(ih: Spin_t): string	
name=	niup.html#name=,Spin_t,string	niup: name=(ih: Spin_t; value: string)	
name	niup.html#name,Spin_t,string	niup: name(ih: Spin_t; value: string)	
name	niup.html#name,Spin_t	niup: name(ih: Spin_t): string	
naturalsize	niup.html#naturalsize,Spin_t	niup: naturalsize(ih: Spin_t): string	
ncgap=	niup.html#ncgap=,Spin_t,string	niup: ncgap=(ih: Spin_t; value: string)	
ncgap	niup.html#ncgap,Spin_t,string	niup: ncgap(ih: Spin_t; value: string)	
ncgap=	niup.html#ncgap=,Spin_t,int	niup: ncgap=(ih: Spin_t; x: int)	
ncgap	niup.html#ncgap,Spin_t,int	niup: ncgap(ih: Spin_t; x: int)	
ncgap	niup.html#ncgap,Spin_t	niup: ncgap(ih: Spin_t): string	
ncmargin=	niup.html#ncmargin=,Spin_t,string	niup: ncmargin=(ih: Spin_t; value: string)	
ncmargin	niup.html#ncmargin,Spin_t,string	niup: ncmargin(ih: Spin_t; value: string)	
ncmargin=	niup.html#ncmargin=,Spin_t,int,int	niup: ncmargin=(ih: Spin_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,Spin_t,int,int	niup: ncmargin(ih: Spin_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,Spin_t	niup: ncmargin(ih: Spin_t): string	
ngap=	niup.html#ngap=,Spin_t,string	niup: ngap=(ih: Spin_t; value: string)	
ngap	niup.html#ngap,Spin_t,string	niup: ngap(ih: Spin_t; value: string)	
ngap=	niup.html#ngap=,Spin_t,int	niup: ngap=(ih: Spin_t; x: int)	
ngap	niup.html#ngap,Spin_t,int	niup: ngap(ih: Spin_t; x: int)	
ngap	niup.html#ngap,Spin_t	niup: ngap(ih: Spin_t): string	
nmargin=	niup.html#nmargin=,Spin_t,string	niup: nmargin=(ih: Spin_t; value: string)	
nmargin	niup.html#nmargin,Spin_t,string	niup: nmargin(ih: Spin_t; value: string)	
nmargin=	niup.html#nmargin=,Spin_t,int,int	niup: nmargin=(ih: Spin_t; horiz, vert: int)	
nmargin	niup.html#nmargin,Spin_t,int,int	niup: nmargin(ih: Spin_t; horiz, vert: int)	
nmargin	niup.html#nmargin,Spin_t	niup: nmargin(ih: Spin_t): string	
normalizergroup=	niup.html#normalizergroup=,Spin_t,string	niup: normalizergroup=(ih: Spin_t; value: string)	
normalizergroup	niup.html#normalizergroup,Spin_t,string	niup: normalizergroup(ih: Spin_t; value: string)	
normalizergroup	niup.html#normalizergroup,Spin_t	niup: normalizergroup(ih: Spin_t): string	
normalizesize=	niup.html#normalizesize=,Spin_t,string	niup: normalizesize=(ih: Spin_t; value: string)	
normalizesize	niup.html#normalizesize,Spin_t,string	niup: normalizesize(ih: Spin_t; value: string)	
normalizesize	niup.html#normalizesize,Spin_t	niup: normalizesize(ih: Spin_t): string	
ntheme=	niup.html#ntheme=,Spin_t,string	niup: ntheme=(ih: Spin_t; value: string)	
ntheme	niup.html#ntheme,Spin_t,string	niup: ntheme(ih: Spin_t; value: string)	
ntheme	niup.html#ntheme,Spin_t	niup: ntheme(ih: Spin_t): string	
orientation	niup.html#orientation,Spin_t	niup: orientation(ih: Spin_t): string	
pangofontdesc	niup.html#pangofontdesc,Spin_t	niup: pangofontdesc(ih: Spin_t): string	
pangolayout	niup.html#pangolayout,Spin_t	niup: pangolayout(ih: Spin_t): string	
position=	niup.html#position=,Spin_t,string	niup: position=(ih: Spin_t; value: string)	
position	niup.html#position,Spin_t,string	niup: position(ih: Spin_t; value: string)	
position=	niup.html#position=,Spin_t,int,int	niup: position=(ih: Spin_t; x, y: int)	
position	niup.html#position,Spin_t,int,int	niup: position(ih: Spin_t; x, y: int)	
position	niup.html#position,Spin_t	niup: position(ih: Spin_t): string	
propagatefocus=	niup.html#propagatefocus=,Spin_t,string	niup: propagatefocus=(ih: Spin_t; value: string)	
propagatefocus	niup.html#propagatefocus,Spin_t,string	niup: propagatefocus(ih: Spin_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Spin_t,bool	niup: propagatefocus=(ih: Spin_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Spin_t,bool	niup: propagatefocus(ih: Spin_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Spin_t	niup: propagatefocus(ih: Spin_t): bool	
rastersize=	niup.html#rastersize=,Spin_t,string	niup: rastersize=(ih: Spin_t; value: string)	
rastersize	niup.html#rastersize,Spin_t,string	niup: rastersize(ih: Spin_t; value: string)	
rastersize=	niup.html#rastersize=,Spin_t,int,int	niup: rastersize=(ih: Spin_t; width, height: int)	
rastersize	niup.html#rastersize,Spin_t,int,int	niup: rastersize(ih: Spin_t; width, height: int)	
rastersize	niup.html#rastersize,Spin_t	niup: rastersize(ih: Spin_t): string	
size=	niup.html#size=,Spin_t,string	niup: size=(ih: Spin_t; value: string)	
size	niup.html#size,Spin_t,string	niup: size(ih: Spin_t; value: string)	
size=	niup.html#size=,Spin_t,int,int	niup: size=(ih: Spin_t; width, height: int)	
size	niup.html#size,Spin_t,int,int	niup: size(ih: Spin_t; width, height: int)	
size	niup.html#size,Spin_t	niup: size(ih: Spin_t): string	
theme=	niup.html#theme=,Spin_t,string	niup: theme=(ih: Spin_t; value: string)	
theme	niup.html#theme,Spin_t,string	niup: theme(ih: Spin_t; value: string)	
theme	niup.html#theme,Spin_t	niup: theme(ih: Spin_t): string	
usersize=	niup.html#usersize=,Spin_t,string	niup: usersize=(ih: Spin_t; value: string)	
usersize	niup.html#usersize,Spin_t,string	niup: usersize(ih: Spin_t; value: string)	
usersize=	niup.html#usersize=,Spin_t,int,int	niup: usersize=(ih: Spin_t; width, height: int)	
usersize	niup.html#usersize,Spin_t,int,int	niup: usersize(ih: Spin_t; width, height: int)	
usersize	niup.html#usersize,Spin_t	niup: usersize(ih: Spin_t): string	
visible=	niup.html#visible=,Spin_t,string	niup: visible=(ih: Spin_t; value: string)	
visible	niup.html#visible,Spin_t,string	niup: visible(ih: Spin_t; value: string)	
visible=	niup.html#visible=,Spin_t,bool	niup: visible=(ih: Spin_t; yes: bool)	
visible	niup.html#visible,Spin_t,bool	niup: visible(ih: Spin_t; yes: bool)	
visible	niup.html#visible,Spin_t	niup: visible(ih: Spin_t): bool	
wid	niup.html#wid,Spin_t	niup: wid(ih: Spin_t): string	
xfontid	niup.html#xfontid,Spin_t	niup: xfontid(ih: Spin_t): string	
destroy_cb=	niup.html#destroy_cb=,Spin_t,proc(PIhandle)	niup: destroy_cb=(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Spin_t,proc(PIhandle)	niup: destroy_cb(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Spin_t	niup: destroy_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Spin_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Spin_t,proc(PIhandle)	niup: ldestroy_cb(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Spin_t	niup: ldestroy_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Spin_t,proc(PIhandle)	niup: map_cb=(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Spin_t,proc(PIhandle)	niup: map_cb(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Spin_t	niup: map_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Spin_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Spin_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Spin_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Spin_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Spin_t	niup: postmessage_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
spin_cb=	niup.html#spin_cb=,Spin_t,proc(PIhandle,cint)	niup: spin_cb=(ih: Spin_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,Spin_t,proc(PIhandle,cint)	niup: spin_cb(ih: Spin_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,Spin_t	niup: spin_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Spin_t,proc(PIhandle)	niup: unmap_cb=(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Spin_t,proc(PIhandle)	niup: unmap_cb(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Spin_t	niup: unmap_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
updateattribfromfont_cb=	niup.html#updateattribfromfont_cb=,Spin_t,proc(PIhandle)	niup: updateattribfromfont_cb=(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,Spin_t,proc(PIhandle)	niup: updateattribfromfont_cb(ih: Spin_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,Spin_t	niup: updateattribfromfont_cb(ih: Spin_t): proc (ih: PIhandle): cint {.cdecl.}	
Spinbox	niup.html#Spinbox,IUPhandle_t	niup: Spinbox(child: IUPhandle_t): Spinbox_t	
active=	niup.html#active=,Spinbox_t,string	niup: active=(ih: Spinbox_t; value: string)	
active	niup.html#active,Spinbox_t,string	niup: active(ih: Spinbox_t; value: string)	
active=	niup.html#active=,Spinbox_t,bool	niup: active=(ih: Spinbox_t; yes: bool)	
active	niup.html#active,Spinbox_t,bool	niup: active(ih: Spinbox_t; yes: bool)	
active	niup.html#active,Spinbox_t	niup: active(ih: Spinbox_t): bool	
canfocus=	niup.html#canfocus=,Spinbox_t,string	niup: canfocus=(ih: Spinbox_t; value: string)	
canfocus	niup.html#canfocus,Spinbox_t,string	niup: canfocus(ih: Spinbox_t; value: string)	
canfocus=	niup.html#canfocus=,Spinbox_t,bool	niup: canfocus=(ih: Spinbox_t; yes: bool)	
canfocus	niup.html#canfocus,Spinbox_t,bool	niup: canfocus(ih: Spinbox_t; yes: bool)	
canfocus	niup.html#canfocus,Spinbox_t	niup: canfocus(ih: Spinbox_t): bool	
charsize	niup.html#charsize,Spinbox_t	niup: charsize(ih: Spinbox_t): string	
clientoffset	niup.html#clientoffset,Spinbox_t	niup: clientoffset(ih: Spinbox_t): string	
clientsize	niup.html#clientsize,Spinbox_t	niup: clientsize(ih: Spinbox_t): string	
expand=	niup.html#expand=,Spinbox_t,string	niup: expand=(ih: Spinbox_t; value: string)	
expand	niup.html#expand,Spinbox_t,string	niup: expand(ih: Spinbox_t; value: string)	
expand	niup.html#expand,Spinbox_t	niup: expand(ih: Spinbox_t): string	
expandweight=	niup.html#expandweight=,Spinbox_t,string	niup: expandweight=(ih: Spinbox_t; value: string)	
expandweight	niup.html#expandweight,Spinbox_t,string	niup: expandweight(ih: Spinbox_t; value: string)	
expandweight=	niup.html#expandweight=,Spinbox_t,int64	niup: expandweight=(ih: Spinbox_t; x: int64)	
expandweight	niup.html#expandweight,Spinbox_t,int64	niup: expandweight(ih: Spinbox_t; x: int64)	
expandweight	niup.html#expandweight,Spinbox_t	niup: expandweight(ih: Spinbox_t): string	
floating=	niup.html#floating=,Spinbox_t,string	niup: floating=(ih: Spinbox_t; value: string)	
floating	niup.html#floating,Spinbox_t,string	niup: floating(ih: Spinbox_t; value: string)	
floating	niup.html#floating,Spinbox_t	niup: floating(ih: Spinbox_t): string	
font=	niup.html#font=,Spinbox_t,string	niup: font=(ih: Spinbox_t; value: string)	
font	niup.html#font,Spinbox_t,string	niup: font(ih: Spinbox_t; value: string)	
font	niup.html#font,Spinbox_t	niup: font(ih: Spinbox_t): string	
fontface=	niup.html#fontface=,Spinbox_t,string	niup: fontface=(ih: Spinbox_t; value: string)	
fontface	niup.html#fontface,Spinbox_t,string	niup: fontface(ih: Spinbox_t; value: string)	
fontface	niup.html#fontface,Spinbox_t	niup: fontface(ih: Spinbox_t): string	
fontsize=	niup.html#fontsize=,Spinbox_t,string	niup: fontsize=(ih: Spinbox_t; value: string)	
fontsize	niup.html#fontsize,Spinbox_t,string	niup: fontsize(ih: Spinbox_t; value: string)	
fontsize=	niup.html#fontsize=,Spinbox_t,int	niup: fontsize=(ih: Spinbox_t; x: int)	
fontsize	niup.html#fontsize,Spinbox_t,int	niup: fontsize(ih: Spinbox_t; x: int)	
fontsize	niup.html#fontsize,Spinbox_t	niup: fontsize(ih: Spinbox_t): string	
fontstyle=	niup.html#fontstyle=,Spinbox_t,string	niup: fontstyle=(ih: Spinbox_t; value: string)	
fontstyle	niup.html#fontstyle,Spinbox_t,string	niup: fontstyle(ih: Spinbox_t; value: string)	
fontstyle	niup.html#fontstyle,Spinbox_t	niup: fontstyle(ih: Spinbox_t): string	
handlename=	niup.html#handlename=,Spinbox_t,string	niup: handlename=(ih: Spinbox_t; value: string)	
handlename	niup.html#handlename,Spinbox_t,string	niup: handlename(ih: Spinbox_t; value: string)	
handlename	niup.html#handlename,Spinbox_t	niup: handlename(ih: Spinbox_t): string	
maxsize=	niup.html#maxsize=,Spinbox_t,string	niup: maxsize=(ih: Spinbox_t; value: string)	
maxsize	niup.html#maxsize,Spinbox_t,string	niup: maxsize(ih: Spinbox_t; value: string)	
maxsize=	niup.html#maxsize=,Spinbox_t,int,int	niup: maxsize=(ih: Spinbox_t; width, height: int)	
maxsize	niup.html#maxsize,Spinbox_t,int,int	niup: maxsize(ih: Spinbox_t; width, height: int)	
maxsize	niup.html#maxsize,Spinbox_t	niup: maxsize(ih: Spinbox_t): string	
minsize=	niup.html#minsize=,Spinbox_t,string	niup: minsize=(ih: Spinbox_t; value: string)	
minsize	niup.html#minsize,Spinbox_t,string	niup: minsize(ih: Spinbox_t; value: string)	
minsize=	niup.html#minsize=,Spinbox_t,int,int	niup: minsize=(ih: Spinbox_t; width, height: int)	
minsize	niup.html#minsize,Spinbox_t,int,int	niup: minsize(ih: Spinbox_t; width, height: int)	
minsize	niup.html#minsize,Spinbox_t	niup: minsize(ih: Spinbox_t): string	
name=	niup.html#name=,Spinbox_t,string	niup: name=(ih: Spinbox_t; value: string)	
name	niup.html#name,Spinbox_t,string	niup: name(ih: Spinbox_t; value: string)	
name	niup.html#name,Spinbox_t	niup: name(ih: Spinbox_t): string	
naturalsize	niup.html#naturalsize,Spinbox_t	niup: naturalsize(ih: Spinbox_t): string	
normalizergroup=	niup.html#normalizergroup=,Spinbox_t,string	niup: normalizergroup=(ih: Spinbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Spinbox_t,string	niup: normalizergroup(ih: Spinbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Spinbox_t	niup: normalizergroup(ih: Spinbox_t): string	
ntheme=	niup.html#ntheme=,Spinbox_t,string	niup: ntheme=(ih: Spinbox_t; value: string)	
ntheme	niup.html#ntheme,Spinbox_t,string	niup: ntheme(ih: Spinbox_t; value: string)	
ntheme	niup.html#ntheme,Spinbox_t	niup: ntheme(ih: Spinbox_t): string	
pangofontdesc	niup.html#pangofontdesc,Spinbox_t	niup: pangofontdesc(ih: Spinbox_t): string	
pangolayout	niup.html#pangolayout,Spinbox_t	niup: pangolayout(ih: Spinbox_t): string	
position=	niup.html#position=,Spinbox_t,string	niup: position=(ih: Spinbox_t; value: string)	
position	niup.html#position,Spinbox_t,string	niup: position(ih: Spinbox_t; value: string)	
position=	niup.html#position=,Spinbox_t,int,int	niup: position=(ih: Spinbox_t; x, y: int)	
position	niup.html#position,Spinbox_t,int,int	niup: position(ih: Spinbox_t; x, y: int)	
position	niup.html#position,Spinbox_t	niup: position(ih: Spinbox_t): string	
propagatefocus=	niup.html#propagatefocus=,Spinbox_t,string	niup: propagatefocus=(ih: Spinbox_t; value: string)	
propagatefocus	niup.html#propagatefocus,Spinbox_t,string	niup: propagatefocus(ih: Spinbox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Spinbox_t,bool	niup: propagatefocus=(ih: Spinbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Spinbox_t,bool	niup: propagatefocus(ih: Spinbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Spinbox_t	niup: propagatefocus(ih: Spinbox_t): bool	
rastersize=	niup.html#rastersize=,Spinbox_t,string	niup: rastersize=(ih: Spinbox_t; value: string)	
rastersize	niup.html#rastersize,Spinbox_t,string	niup: rastersize(ih: Spinbox_t; value: string)	
rastersize=	niup.html#rastersize=,Spinbox_t,int,int	niup: rastersize=(ih: Spinbox_t; width, height: int)	
rastersize	niup.html#rastersize,Spinbox_t,int,int	niup: rastersize(ih: Spinbox_t; width, height: int)	
rastersize	niup.html#rastersize,Spinbox_t	niup: rastersize(ih: Spinbox_t): string	
size=	niup.html#size=,Spinbox_t,string	niup: size=(ih: Spinbox_t; value: string)	
size	niup.html#size,Spinbox_t,string	niup: size(ih: Spinbox_t; value: string)	
size=	niup.html#size=,Spinbox_t,int,int	niup: size=(ih: Spinbox_t; width, height: int)	
size	niup.html#size,Spinbox_t,int,int	niup: size(ih: Spinbox_t; width, height: int)	
size	niup.html#size,Spinbox_t	niup: size(ih: Spinbox_t): string	
theme=	niup.html#theme=,Spinbox_t,string	niup: theme=(ih: Spinbox_t; value: string)	
theme	niup.html#theme,Spinbox_t,string	niup: theme(ih: Spinbox_t; value: string)	
theme	niup.html#theme,Spinbox_t	niup: theme(ih: Spinbox_t): string	
usersize=	niup.html#usersize=,Spinbox_t,string	niup: usersize=(ih: Spinbox_t; value: string)	
usersize	niup.html#usersize,Spinbox_t,string	niup: usersize(ih: Spinbox_t; value: string)	
usersize=	niup.html#usersize=,Spinbox_t,int,int	niup: usersize=(ih: Spinbox_t; width, height: int)	
usersize	niup.html#usersize,Spinbox_t,int,int	niup: usersize(ih: Spinbox_t; width, height: int)	
usersize	niup.html#usersize,Spinbox_t	niup: usersize(ih: Spinbox_t): string	
visible=	niup.html#visible=,Spinbox_t,string	niup: visible=(ih: Spinbox_t; value: string)	
visible	niup.html#visible,Spinbox_t,string	niup: visible(ih: Spinbox_t; value: string)	
visible=	niup.html#visible=,Spinbox_t,bool	niup: visible=(ih: Spinbox_t; yes: bool)	
visible	niup.html#visible,Spinbox_t,bool	niup: visible(ih: Spinbox_t; yes: bool)	
visible	niup.html#visible,Spinbox_t	niup: visible(ih: Spinbox_t): bool	
wid	niup.html#wid,Spinbox_t	niup: wid(ih: Spinbox_t): string	
xfontid	niup.html#xfontid,Spinbox_t	niup: xfontid(ih: Spinbox_t): string	
destroy_cb=	niup.html#destroy_cb=,Spinbox_t,proc(PIhandle)	niup: destroy_cb=(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Spinbox_t,proc(PIhandle)	niup: destroy_cb(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Spinbox_t	niup: destroy_cb(ih: Spinbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Spinbox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Spinbox_t,proc(PIhandle)	niup: ldestroy_cb(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Spinbox_t	niup: ldestroy_cb(ih: Spinbox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Spinbox_t,proc(PIhandle)	niup: map_cb=(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Spinbox_t,proc(PIhandle)	niup: map_cb(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Spinbox_t	niup: map_cb(ih: Spinbox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Spinbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Spinbox_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Spinbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Spinbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Spinbox_t	niup: postmessage_cb(ih: Spinbox_t): proc (ih: PIhandle): cint {.cdecl.}	
spin_cb=	niup.html#spin_cb=,Spinbox_t,proc(PIhandle,cint)	niup: spin_cb=(ih: Spinbox_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,Spinbox_t,proc(PIhandle,cint)	niup: spin_cb(ih: Spinbox_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,Spinbox_t	niup: spin_cb(ih: Spinbox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Spinbox_t,proc(PIhandle)	niup: unmap_cb=(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Spinbox_t,proc(PIhandle)	niup: unmap_cb(ih: Spinbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Spinbox_t	niup: unmap_cb(ih: Spinbox_t): proc (ih: PIhandle): cint {.cdecl.}	
Split	niup.html#Split,IUPhandle_t,IUPhandle_t	niup: Split(child1: IUPhandle_t; child2: IUPhandle_t): Split_t	
active=	niup.html#active=,Split_t,string	niup: active=(ih: Split_t; value: string)	
active	niup.html#active,Split_t,string	niup: active(ih: Split_t; value: string)	
active=	niup.html#active=,Split_t,bool	niup: active=(ih: Split_t; yes: bool)	
active	niup.html#active,Split_t,bool	niup: active(ih: Split_t; yes: bool)	
active	niup.html#active,Split_t	niup: active(ih: Split_t): bool	
autohide=	niup.html#autohide=,Split_t,string	niup: autohide=(ih: Split_t; value: string)	
autohide	niup.html#autohide,Split_t,string	niup: autohide(ih: Split_t; value: string)	
autohide=	niup.html#autohide=,Split_t,bool	niup: autohide=(ih: Split_t; yes: bool)	
autohide	niup.html#autohide,Split_t,bool	niup: autohide(ih: Split_t; yes: bool)	
autohide	niup.html#autohide,Split_t	niup: autohide(ih: Split_t): bool	
barsize=	niup.html#barsize=,Split_t,string	niup: barsize=(ih: Split_t; value: string)	
barsize	niup.html#barsize,Split_t,string	niup: barsize(ih: Split_t; value: string)	
barsize=	niup.html#barsize=,Split_t,int	niup: barsize=(ih: Split_t; x: int)	
barsize	niup.html#barsize,Split_t,int	niup: barsize(ih: Split_t; x: int)	
barsize	niup.html#barsize,Split_t	niup: barsize(ih: Split_t): string	
canfocus=	niup.html#canfocus=,Split_t,string	niup: canfocus=(ih: Split_t; value: string)	
canfocus	niup.html#canfocus,Split_t,string	niup: canfocus(ih: Split_t; value: string)	
canfocus=	niup.html#canfocus=,Split_t,bool	niup: canfocus=(ih: Split_t; yes: bool)	
canfocus	niup.html#canfocus,Split_t,bool	niup: canfocus(ih: Split_t; yes: bool)	
canfocus	niup.html#canfocus,Split_t	niup: canfocus(ih: Split_t): bool	
charsize	niup.html#charsize,Split_t	niup: charsize(ih: Split_t): string	
clientoffset	niup.html#clientoffset,Split_t	niup: clientoffset(ih: Split_t): string	
clientsize	niup.html#clientsize,Split_t	niup: clientsize(ih: Split_t): string	
color=	niup.html#color=,Split_t,string	niup: color=(ih: Split_t; value: string)	
color	niup.html#color,Split_t,string	niup: color(ih: Split_t; value: string)	
color=	niup.html#color=,Split_t,int,int,int,int	niup: color=(ih: Split_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,Split_t,int,int,int,int	niup: color(ih: Split_t; red, green, blue: int; alpha: int = 255)	
color	niup.html#color,Split_t	niup: color(ih: Split_t): string	
direction=	niup.html#direction=,Split_t,string	niup: direction=(ih: Split_t; value: string)	
direction	niup.html#direction,Split_t,string	niup: direction(ih: Split_t; value: string)	
direction	niup.html#direction,Split_t	niup: direction(ih: Split_t): string	
expand=	niup.html#expand=,Split_t,string	niup: expand=(ih: Split_t; value: string)	
expand	niup.html#expand,Split_t,string	niup: expand(ih: Split_t; value: string)	
expand	niup.html#expand,Split_t	niup: expand(ih: Split_t): string	
expandweight=	niup.html#expandweight=,Split_t,string	niup: expandweight=(ih: Split_t; value: string)	
expandweight	niup.html#expandweight,Split_t,string	niup: expandweight(ih: Split_t; value: string)	
expandweight=	niup.html#expandweight=,Split_t,int64	niup: expandweight=(ih: Split_t; x: int64)	
expandweight	niup.html#expandweight,Split_t,int64	niup: expandweight(ih: Split_t; x: int64)	
expandweight	niup.html#expandweight,Split_t	niup: expandweight(ih: Split_t): string	
floating=	niup.html#floating=,Split_t,string	niup: floating=(ih: Split_t; value: string)	
floating	niup.html#floating,Split_t,string	niup: floating(ih: Split_t; value: string)	
floating	niup.html#floating,Split_t	niup: floating(ih: Split_t): string	
font=	niup.html#font=,Split_t,string	niup: font=(ih: Split_t; value: string)	
font	niup.html#font,Split_t,string	niup: font(ih: Split_t; value: string)	
font	niup.html#font,Split_t	niup: font(ih: Split_t): string	
fontface=	niup.html#fontface=,Split_t,string	niup: fontface=(ih: Split_t; value: string)	
fontface	niup.html#fontface,Split_t,string	niup: fontface(ih: Split_t; value: string)	
fontface	niup.html#fontface,Split_t	niup: fontface(ih: Split_t): string	
fontsize=	niup.html#fontsize=,Split_t,string	niup: fontsize=(ih: Split_t; value: string)	
fontsize	niup.html#fontsize,Split_t,string	niup: fontsize(ih: Split_t; value: string)	
fontsize=	niup.html#fontsize=,Split_t,int	niup: fontsize=(ih: Split_t; x: int)	
fontsize	niup.html#fontsize,Split_t,int	niup: fontsize(ih: Split_t; x: int)	
fontsize	niup.html#fontsize,Split_t	niup: fontsize(ih: Split_t): string	
fontstyle=	niup.html#fontstyle=,Split_t,string	niup: fontstyle=(ih: Split_t; value: string)	
fontstyle	niup.html#fontstyle,Split_t,string	niup: fontstyle(ih: Split_t; value: string)	
fontstyle	niup.html#fontstyle,Split_t	niup: fontstyle(ih: Split_t): string	
handlename=	niup.html#handlename=,Split_t,string	niup: handlename=(ih: Split_t; value: string)	
handlename	niup.html#handlename,Split_t,string	niup: handlename(ih: Split_t; value: string)	
handlename	niup.html#handlename,Split_t	niup: handlename(ih: Split_t): string	
layoutdrag=	niup.html#layoutdrag=,Split_t,string	niup: layoutdrag=(ih: Split_t; value: string)	
layoutdrag	niup.html#layoutdrag,Split_t,string	niup: layoutdrag(ih: Split_t; value: string)	
layoutdrag=	niup.html#layoutdrag=,Split_t,bool	niup: layoutdrag=(ih: Split_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,Split_t,bool	niup: layoutdrag(ih: Split_t; yes: bool)	
layoutdrag	niup.html#layoutdrag,Split_t	niup: layoutdrag(ih: Split_t): bool	
maxsize=	niup.html#maxsize=,Split_t,string	niup: maxsize=(ih: Split_t; value: string)	
maxsize	niup.html#maxsize,Split_t,string	niup: maxsize(ih: Split_t; value: string)	
maxsize=	niup.html#maxsize=,Split_t,int,int	niup: maxsize=(ih: Split_t; width, height: int)	
maxsize	niup.html#maxsize,Split_t,int,int	niup: maxsize(ih: Split_t; width, height: int)	
maxsize	niup.html#maxsize,Split_t	niup: maxsize(ih: Split_t): string	
minmax	niup.html#minmax,Split_t	niup: minmax(ih: Split_t): string	
minsize=	niup.html#minsize=,Split_t,string	niup: minsize=(ih: Split_t; value: string)	
minsize	niup.html#minsize,Split_t,string	niup: minsize(ih: Split_t; value: string)	
minsize=	niup.html#minsize=,Split_t,int,int	niup: minsize=(ih: Split_t; width, height: int)	
minsize	niup.html#minsize,Split_t,int,int	niup: minsize(ih: Split_t; width, height: int)	
minsize	niup.html#minsize,Split_t	niup: minsize(ih: Split_t): string	
name=	niup.html#name=,Split_t,string	niup: name=(ih: Split_t; value: string)	
name	niup.html#name,Split_t,string	niup: name(ih: Split_t; value: string)	
name	niup.html#name,Split_t	niup: name(ih: Split_t): string	
naturalsize	niup.html#naturalsize,Split_t	niup: naturalsize(ih: Split_t): string	
normalizergroup=	niup.html#normalizergroup=,Split_t,string	niup: normalizergroup=(ih: Split_t; value: string)	
normalizergroup	niup.html#normalizergroup,Split_t,string	niup: normalizergroup(ih: Split_t; value: string)	
normalizergroup	niup.html#normalizergroup,Split_t	niup: normalizergroup(ih: Split_t): string	
ntheme=	niup.html#ntheme=,Split_t,string	niup: ntheme=(ih: Split_t; value: string)	
ntheme	niup.html#ntheme,Split_t,string	niup: ntheme(ih: Split_t; value: string)	
ntheme	niup.html#ntheme,Split_t	niup: ntheme(ih: Split_t): string	
orientation=	niup.html#orientation=,Split_t,string	niup: orientation=(ih: Split_t; value: string)	
orientation	niup.html#orientation,Split_t,string	niup: orientation(ih: Split_t; value: string)	
orientation	niup.html#orientation,Split_t	niup: orientation(ih: Split_t): string	
pangofontdesc	niup.html#pangofontdesc,Split_t	niup: pangofontdesc(ih: Split_t): string	
pangolayout	niup.html#pangolayout,Split_t	niup: pangolayout(ih: Split_t): string	
position=	niup.html#position=,Split_t,string	niup: position=(ih: Split_t; value: string)	
position	niup.html#position,Split_t,string	niup: position(ih: Split_t; value: string)	
position=	niup.html#position=,Split_t,int,int	niup: position=(ih: Split_t; x, y: int)	
position	niup.html#position,Split_t,int,int	niup: position(ih: Split_t; x, y: int)	
position	niup.html#position,Split_t	niup: position(ih: Split_t): string	
propagatefocus=	niup.html#propagatefocus=,Split_t,string	niup: propagatefocus=(ih: Split_t; value: string)	
propagatefocus	niup.html#propagatefocus,Split_t,string	niup: propagatefocus(ih: Split_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Split_t,bool	niup: propagatefocus=(ih: Split_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Split_t,bool	niup: propagatefocus(ih: Split_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Split_t	niup: propagatefocus(ih: Split_t): bool	
rastersize=	niup.html#rastersize=,Split_t,string	niup: rastersize=(ih: Split_t; value: string)	
rastersize	niup.html#rastersize,Split_t,string	niup: rastersize(ih: Split_t; value: string)	
rastersize=	niup.html#rastersize=,Split_t,int,int	niup: rastersize=(ih: Split_t; width, height: int)	
rastersize	niup.html#rastersize,Split_t,int,int	niup: rastersize(ih: Split_t; width, height: int)	
rastersize	niup.html#rastersize,Split_t	niup: rastersize(ih: Split_t): string	
showgrip=	niup.html#showgrip=,Split_t,string	niup: showgrip=(ih: Split_t; value: string)	
showgrip	niup.html#showgrip,Split_t,string	niup: showgrip(ih: Split_t; value: string)	
showgrip=	niup.html#showgrip=,Split_t,bool	niup: showgrip=(ih: Split_t; yes: bool)	
showgrip	niup.html#showgrip,Split_t,bool	niup: showgrip(ih: Split_t; yes: bool)	
showgrip	niup.html#showgrip,Split_t	niup: showgrip(ih: Split_t): bool	
size=	niup.html#size=,Split_t,string	niup: size=(ih: Split_t; value: string)	
size	niup.html#size,Split_t,string	niup: size(ih: Split_t; value: string)	
size=	niup.html#size=,Split_t,int,int	niup: size=(ih: Split_t; width, height: int)	
size	niup.html#size,Split_t,int,int	niup: size(ih: Split_t; width, height: int)	
size	niup.html#size,Split_t	niup: size(ih: Split_t): string	
theme=	niup.html#theme=,Split_t,string	niup: theme=(ih: Split_t; value: string)	
theme	niup.html#theme,Split_t,string	niup: theme(ih: Split_t; value: string)	
theme	niup.html#theme,Split_t	niup: theme(ih: Split_t): string	
usersize=	niup.html#usersize=,Split_t,string	niup: usersize=(ih: Split_t; value: string)	
usersize	niup.html#usersize,Split_t,string	niup: usersize(ih: Split_t; value: string)	
usersize=	niup.html#usersize=,Split_t,int,int	niup: usersize=(ih: Split_t; width, height: int)	
usersize	niup.html#usersize,Split_t,int,int	niup: usersize(ih: Split_t; width, height: int)	
usersize	niup.html#usersize,Split_t	niup: usersize(ih: Split_t): string	
value=	niup.html#value=,Split_t,string	niup: value=(ih: Split_t; value: string)	
value	niup.html#value,Split_t,string	niup: value(ih: Split_t; value: string)	
value	niup.html#value,Split_t	niup: value(ih: Split_t): string	
visible=	niup.html#visible=,Split_t,string	niup: visible=(ih: Split_t; value: string)	
visible	niup.html#visible,Split_t,string	niup: visible(ih: Split_t; value: string)	
visible=	niup.html#visible=,Split_t,bool	niup: visible=(ih: Split_t; yes: bool)	
visible	niup.html#visible,Split_t,bool	niup: visible(ih: Split_t; yes: bool)	
visible	niup.html#visible,Split_t	niup: visible(ih: Split_t): bool	
wid	niup.html#wid,Split_t	niup: wid(ih: Split_t): string	
xfontid	niup.html#xfontid,Split_t	niup: xfontid(ih: Split_t): string	
destroy_cb=	niup.html#destroy_cb=,Split_t,proc(PIhandle)	niup: destroy_cb=(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Split_t,proc(PIhandle)	niup: destroy_cb(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Split_t	niup: destroy_cb(ih: Split_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Split_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Split_t,proc(PIhandle)	niup: ldestroy_cb(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Split_t	niup: ldestroy_cb(ih: Split_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Split_t,proc(PIhandle)	niup: map_cb=(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Split_t,proc(PIhandle)	niup: map_cb(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Split_t	niup: map_cb(ih: Split_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Split_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Split_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Split_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Split_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Split_t	niup: postmessage_cb(ih: Split_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Split_t,proc(PIhandle)	niup: unmap_cb=(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Split_t,proc(PIhandle)	niup: unmap_cb(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Split_t	niup: unmap_cb(ih: Split_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,Split_t,proc(PIhandle)	niup: valuechanged_cb=(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Split_t,proc(PIhandle)	niup: valuechanged_cb(ih: Split_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Split_t	niup: valuechanged_cb(ih: Split_t): proc (ih: PIhandle): cint {.cdecl.}	
Submenu	niup.html#Submenu,string,IUPhandle_t	niup: Submenu(title: string; child: IUPhandle_t): Submenu_t	
active=	niup.html#active=,Submenu_t,string	niup: active=(ih: Submenu_t; value: string)	
active	niup.html#active,Submenu_t,string	niup: active(ih: Submenu_t; value: string)	
active=	niup.html#active=,Submenu_t,bool	niup: active=(ih: Submenu_t; yes: bool)	
active	niup.html#active,Submenu_t,bool	niup: active(ih: Submenu_t; yes: bool)	
active	niup.html#active,Submenu_t	niup: active(ih: Submenu_t): bool	
bgcolor=	niup.html#bgcolor=,Submenu_t,string	niup: bgcolor=(ih: Submenu_t; value: string)	
bgcolor	niup.html#bgcolor,Submenu_t,string	niup: bgcolor(ih: Submenu_t; value: string)	
bgcolor=	niup.html#bgcolor=,Submenu_t,int,int,int,int	niup: bgcolor=(ih: Submenu_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Submenu_t,int,int,int,int	niup: bgcolor(ih: Submenu_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Submenu_t	niup: bgcolor(ih: Submenu_t): string	
font=	niup.html#font=,Submenu_t,string	niup: font=(ih: Submenu_t; value: string)	
font	niup.html#font,Submenu_t,string	niup: font(ih: Submenu_t; value: string)	
font	niup.html#font,Submenu_t	niup: font(ih: Submenu_t): string	
handlename=	niup.html#handlename=,Submenu_t,string	niup: handlename=(ih: Submenu_t; value: string)	
handlename	niup.html#handlename,Submenu_t,string	niup: handlename(ih: Submenu_t; value: string)	
handlename	niup.html#handlename,Submenu_t	niup: handlename(ih: Submenu_t): string	
image=	niup.html#image=,Submenu_t,	niup: image=(ih: Submenu_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Submenu_t,	niup: image(ih: Submenu_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Submenu_t	niup: image(ih: Submenu_t): string	
key=	niup.html#key=,Submenu_t,string	niup: key=(ih: Submenu_t; value: string)	
key	niup.html#key,Submenu_t,string	niup: key(ih: Submenu_t; value: string)	
key=	niup.html#key=,Submenu_t,int	niup: key=(ih: Submenu_t; x: int)	
key	niup.html#key,Submenu_t,int	niup: key(ih: Submenu_t; x: int)	
key	niup.html#key,Submenu_t	niup: key(ih: Submenu_t): string	
name=	niup.html#name=,Submenu_t,string	niup: name=(ih: Submenu_t; value: string)	
name	niup.html#name,Submenu_t,string	niup: name(ih: Submenu_t; value: string)	
name	niup.html#name,Submenu_t	niup: name(ih: Submenu_t): string	
title=	niup.html#title=,Submenu_t,string	niup: title=(ih: Submenu_t; value: string)	
title	niup.html#title,Submenu_t,string	niup: title(ih: Submenu_t; value: string)	
title	niup.html#title,Submenu_t	niup: title(ih: Submenu_t): string	
wid	niup.html#wid,Submenu_t	niup: wid(ih: Submenu_t): string	
destroy_cb=	niup.html#destroy_cb=,Submenu_t,proc(PIhandle)	niup: destroy_cb=(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Submenu_t,proc(PIhandle)	niup: destroy_cb(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Submenu_t	niup: destroy_cb(ih: Submenu_t): proc (ih: PIhandle): cint {.cdecl.}	
highlight_cb=	niup.html#highlight_cb=,Submenu_t,proc(PIhandle)	niup: highlight_cb=(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
highlight_cb	niup.html#highlight_cb,Submenu_t,proc(PIhandle)	niup: highlight_cb(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
highlight_cb	niup.html#highlight_cb,Submenu_t	niup: highlight_cb(ih: Submenu_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Submenu_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Submenu_t,proc(PIhandle)	niup: ldestroy_cb(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Submenu_t	niup: ldestroy_cb(ih: Submenu_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Submenu_t,proc(PIhandle)	niup: map_cb=(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Submenu_t,proc(PIhandle)	niup: map_cb(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Submenu_t	niup: map_cb(ih: Submenu_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Submenu_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Submenu_t; cb: proc (ih: PIhandle; arg2: cstring;\n    arg3: cint; arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Submenu_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Submenu_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Submenu_t	niup: postmessage_cb(ih: Submenu_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Submenu_t,proc(PIhandle)	niup: unmap_cb=(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Submenu_t,proc(PIhandle)	niup: unmap_cb(ih: Submenu_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Submenu_t	niup: unmap_cb(ih: Submenu_t): proc (ih: PIhandle): cint {.cdecl.}	
Tabs	niup.html#Tabs.m,varargs[untyped]	niup: Tabs(args: varargs[untyped]): Tabs_t	
active=	niup.html#active=,Tabs_t,string	niup: active=(ih: Tabs_t; value: string)	
active	niup.html#active,Tabs_t,string	niup: active(ih: Tabs_t; value: string)	
active=	niup.html#active=,Tabs_t,bool	niup: active=(ih: Tabs_t; yes: bool)	
active	niup.html#active,Tabs_t,bool	niup: active(ih: Tabs_t; yes: bool)	
active	niup.html#active,Tabs_t	niup: active(ih: Tabs_t): bool	
bgcolor=	niup.html#bgcolor=,Tabs_t,string	niup: bgcolor=(ih: Tabs_t; value: string)	
bgcolor	niup.html#bgcolor,Tabs_t,string	niup: bgcolor(ih: Tabs_t; value: string)	
bgcolor=	niup.html#bgcolor=,Tabs_t,int,int,int,int	niup: bgcolor=(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Tabs_t,int,int,int,int	niup: bgcolor(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Tabs_t	niup: bgcolor(ih: Tabs_t): string	
canfocus=	niup.html#canfocus=,Tabs_t,string	niup: canfocus=(ih: Tabs_t; value: string)	
canfocus	niup.html#canfocus,Tabs_t,string	niup: canfocus(ih: Tabs_t; value: string)	
canfocus=	niup.html#canfocus=,Tabs_t,bool	niup: canfocus=(ih: Tabs_t; yes: bool)	
canfocus	niup.html#canfocus,Tabs_t,bool	niup: canfocus(ih: Tabs_t; yes: bool)	
canfocus	niup.html#canfocus,Tabs_t	niup: canfocus(ih: Tabs_t): bool	
charsize	niup.html#charsize,Tabs_t	niup: charsize(ih: Tabs_t): string	
childoffset=	niup.html#childoffset=,Tabs_t,string	niup: childoffset=(ih: Tabs_t; value: string)	
childoffset	niup.html#childoffset,Tabs_t,string	niup: childoffset(ih: Tabs_t; value: string)	
childoffset=	niup.html#childoffset=,Tabs_t,int,int	niup: childoffset=(ih: Tabs_t; width, height: int)	
childoffset	niup.html#childoffset,Tabs_t,int,int	niup: childoffset(ih: Tabs_t; width, height: int)	
childoffset	niup.html#childoffset,Tabs_t	niup: childoffset(ih: Tabs_t): string	
childsizeall=	niup.html#childsizeall=,Tabs_t,string	niup: childsizeall=(ih: Tabs_t; value: string)	
childsizeall	niup.html#childsizeall,Tabs_t,string	niup: childsizeall(ih: Tabs_t; value: string)	
childsizeall=	niup.html#childsizeall=,Tabs_t,bool	niup: childsizeall=(ih: Tabs_t; yes: bool)	
childsizeall	niup.html#childsizeall,Tabs_t,bool	niup: childsizeall(ih: Tabs_t; yes: bool)	
childsizeall	niup.html#childsizeall,Tabs_t	niup: childsizeall(ih: Tabs_t): bool	
clientoffset	niup.html#clientoffset,Tabs_t	niup: clientoffset(ih: Tabs_t): string	
clientsize	niup.html#clientsize,Tabs_t	niup: clientsize(ih: Tabs_t): string	
count	niup.html#count,Tabs_t	niup: count(ih: Tabs_t): string	
expand=	niup.html#expand=,Tabs_t,string	niup: expand=(ih: Tabs_t; value: string)	
expand	niup.html#expand,Tabs_t,string	niup: expand(ih: Tabs_t; value: string)	
expand	niup.html#expand,Tabs_t	niup: expand(ih: Tabs_t): string	
expandweight=	niup.html#expandweight=,Tabs_t,string	niup: expandweight=(ih: Tabs_t; value: string)	
expandweight	niup.html#expandweight,Tabs_t,string	niup: expandweight(ih: Tabs_t; value: string)	
expandweight=	niup.html#expandweight=,Tabs_t,int64	niup: expandweight=(ih: Tabs_t; x: int64)	
expandweight	niup.html#expandweight,Tabs_t,int64	niup: expandweight(ih: Tabs_t; x: int64)	
expandweight	niup.html#expandweight,Tabs_t	niup: expandweight(ih: Tabs_t): string	
fgcolor=	niup.html#fgcolor=,Tabs_t,string	niup: fgcolor=(ih: Tabs_t; value: string)	
fgcolor	niup.html#fgcolor,Tabs_t,string	niup: fgcolor(ih: Tabs_t; value: string)	
fgcolor=	niup.html#fgcolor=,Tabs_t,int,int,int,int	niup: fgcolor=(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Tabs_t,int,int,int,int	niup: fgcolor(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Tabs_t	niup: fgcolor(ih: Tabs_t): string	
floating=	niup.html#floating=,Tabs_t,string	niup: floating=(ih: Tabs_t; value: string)	
floating	niup.html#floating,Tabs_t,string	niup: floating(ih: Tabs_t; value: string)	
floating	niup.html#floating,Tabs_t	niup: floating(ih: Tabs_t): string	
font=	niup.html#font=,Tabs_t,string	niup: font=(ih: Tabs_t; value: string)	
font	niup.html#font,Tabs_t,string	niup: font(ih: Tabs_t; value: string)	
font	niup.html#font,Tabs_t	niup: font(ih: Tabs_t): string	
fontface=	niup.html#fontface=,Tabs_t,string	niup: fontface=(ih: Tabs_t; value: string)	
fontface	niup.html#fontface,Tabs_t,string	niup: fontface(ih: Tabs_t; value: string)	
fontface	niup.html#fontface,Tabs_t	niup: fontface(ih: Tabs_t): string	
fontsize=	niup.html#fontsize=,Tabs_t,string	niup: fontsize=(ih: Tabs_t; value: string)	
fontsize	niup.html#fontsize,Tabs_t,string	niup: fontsize(ih: Tabs_t; value: string)	
fontsize=	niup.html#fontsize=,Tabs_t,int	niup: fontsize=(ih: Tabs_t; x: int)	
fontsize	niup.html#fontsize,Tabs_t,int	niup: fontsize(ih: Tabs_t; x: int)	
fontsize	niup.html#fontsize,Tabs_t	niup: fontsize(ih: Tabs_t): string	
fontstyle=	niup.html#fontstyle=,Tabs_t,string	niup: fontstyle=(ih: Tabs_t; value: string)	
fontstyle	niup.html#fontstyle,Tabs_t,string	niup: fontstyle(ih: Tabs_t; value: string)	
fontstyle	niup.html#fontstyle,Tabs_t	niup: fontstyle(ih: Tabs_t): string	
handlename=	niup.html#handlename=,Tabs_t,string	niup: handlename=(ih: Tabs_t; value: string)	
handlename	niup.html#handlename,Tabs_t,string	niup: handlename(ih: Tabs_t; value: string)	
handlename	niup.html#handlename,Tabs_t	niup: handlename(ih: Tabs_t): string	
maxsize=	niup.html#maxsize=,Tabs_t,string	niup: maxsize=(ih: Tabs_t; value: string)	
maxsize	niup.html#maxsize,Tabs_t,string	niup: maxsize(ih: Tabs_t; value: string)	
maxsize=	niup.html#maxsize=,Tabs_t,int,int	niup: maxsize=(ih: Tabs_t; width, height: int)	
maxsize	niup.html#maxsize,Tabs_t,int,int	niup: maxsize(ih: Tabs_t; width, height: int)	
maxsize	niup.html#maxsize,Tabs_t	niup: maxsize(ih: Tabs_t): string	
minsize=	niup.html#minsize=,Tabs_t,string	niup: minsize=(ih: Tabs_t; value: string)	
minsize	niup.html#minsize,Tabs_t,string	niup: minsize(ih: Tabs_t; value: string)	
minsize=	niup.html#minsize=,Tabs_t,int,int	niup: minsize=(ih: Tabs_t; width, height: int)	
minsize	niup.html#minsize,Tabs_t,int,int	niup: minsize(ih: Tabs_t; width, height: int)	
minsize	niup.html#minsize,Tabs_t	niup: minsize(ih: Tabs_t): string	
multiline=	niup.html#multiline=,Tabs_t,string	niup: multiline=(ih: Tabs_t; value: string)	
multiline	niup.html#multiline,Tabs_t,string	niup: multiline(ih: Tabs_t; value: string)	
multiline=	niup.html#multiline=,Tabs_t,bool	niup: multiline=(ih: Tabs_t; yes: bool)	
multiline	niup.html#multiline,Tabs_t,bool	niup: multiline(ih: Tabs_t; yes: bool)	
multiline	niup.html#multiline,Tabs_t	niup: multiline(ih: Tabs_t): bool	
name=	niup.html#name=,Tabs_t,string	niup: name=(ih: Tabs_t; value: string)	
name	niup.html#name,Tabs_t,string	niup: name(ih: Tabs_t; value: string)	
name	niup.html#name,Tabs_t	niup: name(ih: Tabs_t): string	
naturalsize	niup.html#naturalsize,Tabs_t	niup: naturalsize(ih: Tabs_t): string	
normalizergroup=	niup.html#normalizergroup=,Tabs_t,string	niup: normalizergroup=(ih: Tabs_t; value: string)	
normalizergroup	niup.html#normalizergroup,Tabs_t,string	niup: normalizergroup(ih: Tabs_t; value: string)	
normalizergroup	niup.html#normalizergroup,Tabs_t	niup: normalizergroup(ih: Tabs_t): string	
ntheme=	niup.html#ntheme=,Tabs_t,string	niup: ntheme=(ih: Tabs_t; value: string)	
ntheme	niup.html#ntheme,Tabs_t,string	niup: ntheme(ih: Tabs_t; value: string)	
ntheme	niup.html#ntheme,Tabs_t	niup: ntheme(ih: Tabs_t): string	
pangofontdesc	niup.html#pangofontdesc,Tabs_t	niup: pangofontdesc(ih: Tabs_t): string	
pangolayout	niup.html#pangolayout,Tabs_t	niup: pangolayout(ih: Tabs_t): string	
position=	niup.html#position=,Tabs_t,string	niup: position=(ih: Tabs_t; value: string)	
position	niup.html#position,Tabs_t,string	niup: position(ih: Tabs_t; value: string)	
position=	niup.html#position=,Tabs_t,int,int	niup: position=(ih: Tabs_t; x, y: int)	
position	niup.html#position,Tabs_t,int,int	niup: position(ih: Tabs_t; x, y: int)	
position	niup.html#position,Tabs_t	niup: position(ih: Tabs_t): string	
propagatefocus=	niup.html#propagatefocus=,Tabs_t,string	niup: propagatefocus=(ih: Tabs_t; value: string)	
propagatefocus	niup.html#propagatefocus,Tabs_t,string	niup: propagatefocus(ih: Tabs_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Tabs_t,bool	niup: propagatefocus=(ih: Tabs_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Tabs_t,bool	niup: propagatefocus(ih: Tabs_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Tabs_t	niup: propagatefocus(ih: Tabs_t): bool	
rastersize=	niup.html#rastersize=,Tabs_t,string	niup: rastersize=(ih: Tabs_t; value: string)	
rastersize	niup.html#rastersize,Tabs_t,string	niup: rastersize(ih: Tabs_t; value: string)	
rastersize=	niup.html#rastersize=,Tabs_t,int,int	niup: rastersize=(ih: Tabs_t; width, height: int)	
rastersize	niup.html#rastersize,Tabs_t,int,int	niup: rastersize(ih: Tabs_t; width, height: int)	
rastersize	niup.html#rastersize,Tabs_t	niup: rastersize(ih: Tabs_t): string	
screenposition	niup.html#screenposition,Tabs_t	niup: screenposition(ih: Tabs_t): string	
showclose=	niup.html#showclose=,Tabs_t,string	niup: showclose=(ih: Tabs_t; value: string)	
showclose	niup.html#showclose,Tabs_t,string	niup: showclose(ih: Tabs_t; value: string)	
showclose=	niup.html#showclose=,Tabs_t,bool	niup: showclose=(ih: Tabs_t; yes: bool)	
showclose	niup.html#showclose,Tabs_t,bool	niup: showclose(ih: Tabs_t; yes: bool)	
showclose	niup.html#showclose,Tabs_t	niup: showclose(ih: Tabs_t): bool	
size=	niup.html#size=,Tabs_t,string	niup: size=(ih: Tabs_t; value: string)	
size	niup.html#size,Tabs_t,string	niup: size(ih: Tabs_t; value: string)	
size=	niup.html#size=,Tabs_t,int,int	niup: size=(ih: Tabs_t; width, height: int)	
size	niup.html#size,Tabs_t,int,int	niup: size(ih: Tabs_t; width, height: int)	
size	niup.html#size,Tabs_t	niup: size(ih: Tabs_t): string	
taborientation=	niup.html#taborientation=,Tabs_t,string	niup: taborientation=(ih: Tabs_t; value: string)	
taborientation	niup.html#taborientation,Tabs_t,string	niup: taborientation(ih: Tabs_t; value: string)	
taborientation	niup.html#taborientation,Tabs_t	niup: taborientation(ih: Tabs_t): string	
tabpadding	niup.html#tabpadding,Tabs_t	niup: tabpadding(ih: Tabs_t): string	
tabtype=	niup.html#tabtype=,Tabs_t,string	niup: tabtype=(ih: Tabs_t; value: string)	
tabtype	niup.html#tabtype,Tabs_t,string	niup: tabtype(ih: Tabs_t; value: string)	
tabtype	niup.html#tabtype,Tabs_t	niup: tabtype(ih: Tabs_t): string	
theme=	niup.html#theme=,Tabs_t,string	niup: theme=(ih: Tabs_t; value: string)	
theme	niup.html#theme,Tabs_t,string	niup: theme(ih: Tabs_t; value: string)	
theme	niup.html#theme,Tabs_t	niup: theme(ih: Tabs_t): string	
tip=	niup.html#tip=,Tabs_t,string	niup: tip=(ih: Tabs_t; value: string)	
tip	niup.html#tip,Tabs_t,string	niup: tip(ih: Tabs_t; value: string)	
tip	niup.html#tip,Tabs_t	niup: tip(ih: Tabs_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Tabs_t,string	niup: tipbgcolor=(ih: Tabs_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Tabs_t,string	niup: tipbgcolor(ih: Tabs_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Tabs_t,int,int,int,int	niup: tipbgcolor=(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Tabs_t,int,int,int,int	niup: tipbgcolor(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Tabs_t	niup: tipbgcolor(ih: Tabs_t): string	
tipdelay=	niup.html#tipdelay=,Tabs_t,string	niup: tipdelay=(ih: Tabs_t; value: string)	
tipdelay	niup.html#tipdelay,Tabs_t,string	niup: tipdelay(ih: Tabs_t; value: string)	
tipdelay=	niup.html#tipdelay=,Tabs_t,int	niup: tipdelay=(ih: Tabs_t; x: int)	
tipdelay	niup.html#tipdelay,Tabs_t,int	niup: tipdelay(ih: Tabs_t; x: int)	
tipdelay	niup.html#tipdelay,Tabs_t	niup: tipdelay(ih: Tabs_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Tabs_t,string	niup: tipfgcolor=(ih: Tabs_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Tabs_t,string	niup: tipfgcolor(ih: Tabs_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Tabs_t,int,int,int,int	niup: tipfgcolor=(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Tabs_t,int,int,int,int	niup: tipfgcolor(ih: Tabs_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Tabs_t	niup: tipfgcolor(ih: Tabs_t): string	
tipicon=	niup.html#tipicon=,Tabs_t,string	niup: tipicon=(ih: Tabs_t; value: string)	
tipicon	niup.html#tipicon,Tabs_t,string	niup: tipicon(ih: Tabs_t; value: string)	
tipicon	niup.html#tipicon,Tabs_t	niup: tipicon(ih: Tabs_t): string	
tipmarkup=	niup.html#tipmarkup=,Tabs_t,string	niup: tipmarkup=(ih: Tabs_t; value: string)	
tipmarkup	niup.html#tipmarkup,Tabs_t,string	niup: tipmarkup(ih: Tabs_t; value: string)	
tipmarkup	niup.html#tipmarkup,Tabs_t	niup: tipmarkup(ih: Tabs_t): string	
tiprect=	niup.html#tiprect=,Tabs_t,string	niup: tiprect=(ih: Tabs_t; value: string)	
tiprect	niup.html#tiprect,Tabs_t,string	niup: tiprect(ih: Tabs_t; value: string)	
tiprect=	niup.html#tiprect=,Tabs_t,int,int,int,int	niup: tiprect=(ih: Tabs_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Tabs_t,int,int,int,int	niup: tiprect(ih: Tabs_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Tabs_t	niup: tiprect(ih: Tabs_t): string	
tipvisible=	niup.html#tipvisible=,Tabs_t,string	niup: tipvisible=(ih: Tabs_t; value: string)	
tipvisible	niup.html#tipvisible,Tabs_t,string	niup: tipvisible(ih: Tabs_t; value: string)	
tipvisible=	niup.html#tipvisible=,Tabs_t,bool	niup: tipvisible=(ih: Tabs_t; yes: bool)	
tipvisible	niup.html#tipvisible,Tabs_t,bool	niup: tipvisible(ih: Tabs_t; yes: bool)	
tipvisible	niup.html#tipvisible,Tabs_t	niup: tipvisible(ih: Tabs_t): bool	
usersize=	niup.html#usersize=,Tabs_t,string	niup: usersize=(ih: Tabs_t; value: string)	
usersize	niup.html#usersize,Tabs_t,string	niup: usersize(ih: Tabs_t; value: string)	
usersize=	niup.html#usersize=,Tabs_t,int,int	niup: usersize=(ih: Tabs_t; width, height: int)	
usersize	niup.html#usersize,Tabs_t,int,int	niup: usersize(ih: Tabs_t; width, height: int)	
usersize	niup.html#usersize,Tabs_t	niup: usersize(ih: Tabs_t): string	
value=	niup.html#value=,Tabs_t,string	niup: value=(ih: Tabs_t; value: string)	
value	niup.html#value,Tabs_t,string	niup: value(ih: Tabs_t; value: string)	
value	niup.html#value,Tabs_t	niup: value(ih: Tabs_t): string	
valuepos=	niup.html#valuepos=,Tabs_t,string	niup: valuepos=(ih: Tabs_t; value: string)	
valuepos	niup.html#valuepos,Tabs_t,string	niup: valuepos(ih: Tabs_t; value: string)	
valuepos=	niup.html#valuepos=,Tabs_t,int	niup: valuepos=(ih: Tabs_t; x: int)	
valuepos	niup.html#valuepos,Tabs_t,int	niup: valuepos(ih: Tabs_t; x: int)	
valuepos	niup.html#valuepos,Tabs_t	niup: valuepos(ih: Tabs_t): string	
value_handle=	niup.html#value_handle=,Tabs_t,User_t	niup: value_handle=(ih: Tabs_t; handle: User_t)	
value_handle	niup.html#value_handle,Tabs_t,User_t	niup: value_handle(ih: Tabs_t; handle: User_t)	
value_handle	niup.html#value_handle,Tabs_t	niup: value_handle(ih: Tabs_t): string	
visible=	niup.html#visible=,Tabs_t,string	niup: visible=(ih: Tabs_t; value: string)	
visible	niup.html#visible,Tabs_t,string	niup: visible(ih: Tabs_t; value: string)	
visible=	niup.html#visible=,Tabs_t,bool	niup: visible=(ih: Tabs_t; yes: bool)	
visible	niup.html#visible,Tabs_t,bool	niup: visible(ih: Tabs_t; yes: bool)	
visible	niup.html#visible,Tabs_t	niup: visible(ih: Tabs_t): bool	
wid	niup.html#wid,Tabs_t	niup: wid(ih: Tabs_t): string	
x	niup.html#x,Tabs_t	niup: x(ih: Tabs_t): string	
xfontid	niup.html#xfontid,Tabs_t	niup: xfontid(ih: Tabs_t): string	
y	niup.html#y,Tabs_t	niup: y(ih: Tabs_t): string	
zorder=	niup.html#zorder=,Tabs_t,string	niup: zorder=(ih: Tabs_t; value: string)	
zorder	niup.html#zorder,Tabs_t,string	niup: zorder(ih: Tabs_t; value: string)	
destroy_cb=	niup.html#destroy_cb=,Tabs_t,proc(PIhandle)	niup: destroy_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Tabs_t,proc(PIhandle)	niup: destroy_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Tabs_t	niup: destroy_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Tabs_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Tabs_t,proc(PIhandle)	niup: enterwindow_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Tabs_t	niup: enterwindow_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
focus_cb=	niup.html#focus_cb=,Tabs_t,proc(PIhandle,cint)	niup: focus_cb=(ih: Tabs_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Tabs_t,proc(PIhandle,cint)	niup: focus_cb(ih: Tabs_t; cb: proc (ih: PIhandle; focus: cint): cint {.cdecl.})	
focus_cb	niup.html#focus_cb,Tabs_t	niup: focus_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Tabs_t,proc(PIhandle)	niup: getfocus_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Tabs_t,proc(PIhandle)	niup: getfocus_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Tabs_t	niup: getfocus_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Tabs_t,proc(PIhandle)	niup: help_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Tabs_t,proc(PIhandle)	niup: help_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Tabs_t	niup: help_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Tabs_t,proc(PIhandle)	niup: killfocus_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Tabs_t,proc(PIhandle)	niup: killfocus_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Tabs_t	niup: killfocus_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Tabs_t,proc(PIhandle,cint)	niup: k_any=(ih: Tabs_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Tabs_t,proc(PIhandle,cint)	niup: k_any(ih: Tabs_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Tabs_t	niup: k_any(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Tabs_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Tabs_t,proc(PIhandle)	niup: ldestroy_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Tabs_t	niup: ldestroy_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Tabs_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Tabs_t,proc(PIhandle)	niup: leavewindow_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Tabs_t	niup: leavewindow_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Tabs_t,proc(PIhandle)	niup: map_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Tabs_t,proc(PIhandle)	niup: map_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Tabs_t	niup: map_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Tabs_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Tabs_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Tabs_t	niup: postmessage_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
rightclick_cb=	niup.html#rightclick_cb=,Tabs_t,proc(PIhandle,cint)	niup: rightclick_cb=(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,Tabs_t,proc(PIhandle,cint)	niup: rightclick_cb(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,Tabs_t	niup: rightclick_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
tabchangepos_cb=	niup.html#tabchangepos_cb=,Tabs_t,proc(PIhandle,cint,cint)	niup: tabchangepos_cb=(ih: Tabs_t;\n                 cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
tabchangepos_cb	niup.html#tabchangepos_cb,Tabs_t,proc(PIhandle,cint,cint)	niup: tabchangepos_cb(ih: Tabs_t;\n                cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
tabchangepos_cb	niup.html#tabchangepos_cb,Tabs_t	niup: tabchangepos_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
tabchange_cb=	niup.html#tabchange_cb=,Tabs_t,proc(PIhandle,PIhandle,PIhandle)	niup: tabchange_cb=(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: PIhandle; arg3: PIhandle): cint {.\n    cdecl.})	
tabchange_cb	niup.html#tabchange_cb,Tabs_t,proc(PIhandle,PIhandle,PIhandle)	niup: tabchange_cb(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: PIhandle; arg3: PIhandle): cint {.\n    cdecl.})	
tabchange_cb	niup.html#tabchange_cb,Tabs_t	niup: tabchange_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
tabclose_cb=	niup.html#tabclose_cb=,Tabs_t,proc(PIhandle,cint)	niup: tabclose_cb=(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
tabclose_cb	niup.html#tabclose_cb,Tabs_t,proc(PIhandle,cint)	niup: tabclose_cb(ih: Tabs_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
tabclose_cb	niup.html#tabclose_cb,Tabs_t	niup: tabclose_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Tabs_t,proc(PIhandle)	niup: unmap_cb=(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Tabs_t,proc(PIhandle)	niup: unmap_cb(ih: Tabs_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Tabs_t	niup: unmap_cb(ih: Tabs_t): proc (ih: PIhandle): cint {.cdecl.}	
Text	niup.html#Text,string	niup: Text(action: string): Text_t	
Text	niup.html#Text	niup: Text(): Text_t	
active=	niup.html#active=,Text_t,string	niup: active=(ih: Text_t; value: string)	
active	niup.html#active,Text_t,string	niup: active(ih: Text_t; value: string)	
active=	niup.html#active=,Text_t,bool	niup: active=(ih: Text_t; yes: bool)	
active	niup.html#active,Text_t,bool	niup: active(ih: Text_t; yes: bool)	
active	niup.html#active,Text_t	niup: active(ih: Text_t): bool	
addformattag=	niup.html#addformattag=,Text_t,string	niup: addformattag=(ih: Text_t; value: string)	
addformattag	niup.html#addformattag,Text_t,string	niup: addformattag(ih: Text_t; value: string)	
addformattag	niup.html#addformattag,Text_t	niup: addformattag(ih: Text_t): string	
addformattag_handle=	niup.html#addformattag_handle=,Text_t,User_t	niup: addformattag_handle=(ih: Text_t; handle: User_t)	
addformattag_handle	niup.html#addformattag_handle,Text_t,User_t	niup: addformattag_handle(ih: Text_t; handle: User_t)	
addformattag_handle	niup.html#addformattag_handle,Text_t	niup: addformattag_handle(ih: Text_t): string	
alignment=	niup.html#alignment=,Text_t,string	niup: alignment=(ih: Text_t; value: string)	
alignment	niup.html#alignment,Text_t,string	niup: alignment(ih: Text_t; value: string)	
alignment	niup.html#alignment,Text_t	niup: alignment(ih: Text_t): string	
append=	niup.html#append=,Text_t,string	niup: append=(ih: Text_t; value: string)	
append	niup.html#append,Text_t,string	niup: append(ih: Text_t; value: string)	
appendnewline=	niup.html#appendnewline=,Text_t,string	niup: appendnewline=(ih: Text_t; value: string)	
appendnewline	niup.html#appendnewline,Text_t,string	niup: appendnewline(ih: Text_t; value: string)	
appendnewline=	niup.html#appendnewline=,Text_t,bool	niup: appendnewline=(ih: Text_t; yes: bool)	
appendnewline	niup.html#appendnewline,Text_t,bool	niup: appendnewline(ih: Text_t; yes: bool)	
appendnewline	niup.html#appendnewline,Text_t	niup: appendnewline(ih: Text_t): bool	
autohide=	niup.html#autohide=,Text_t,string	niup: autohide=(ih: Text_t; value: string)	
autohide	niup.html#autohide,Text_t,string	niup: autohide(ih: Text_t; value: string)	
autohide=	niup.html#autohide=,Text_t,bool	niup: autohide=(ih: Text_t; yes: bool)	
autohide	niup.html#autohide,Text_t,bool	niup: autohide(ih: Text_t; yes: bool)	
autohide	niup.html#autohide,Text_t	niup: autohide(ih: Text_t): bool	
bgcolor=	niup.html#bgcolor=,Text_t,string	niup: bgcolor=(ih: Text_t; value: string)	
bgcolor	niup.html#bgcolor,Text_t,string	niup: bgcolor(ih: Text_t; value: string)	
bgcolor=	niup.html#bgcolor=,Text_t,int,int,int,int	niup: bgcolor=(ih: Text_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Text_t,int,int,int,int	niup: bgcolor(ih: Text_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Text_t	niup: bgcolor(ih: Text_t): string	
border=	niup.html#border=,Text_t,string	niup: border=(ih: Text_t; value: string)	
border	niup.html#border,Text_t,string	niup: border(ih: Text_t; value: string)	
border=	niup.html#border=,Text_t,bool	niup: border=(ih: Text_t; yes: bool)	
border	niup.html#border,Text_t,bool	niup: border(ih: Text_t; yes: bool)	
border	niup.html#border,Text_t	niup: border(ih: Text_t): bool	
canfocus=	niup.html#canfocus=,Text_t,string	niup: canfocus=(ih: Text_t; value: string)	
canfocus	niup.html#canfocus,Text_t,string	niup: canfocus(ih: Text_t; value: string)	
canfocus=	niup.html#canfocus=,Text_t,bool	niup: canfocus=(ih: Text_t; yes: bool)	
canfocus	niup.html#canfocus,Text_t,bool	niup: canfocus(ih: Text_t; yes: bool)	
canfocus	niup.html#canfocus,Text_t	niup: canfocus(ih: Text_t): bool	
caret=	niup.html#caret=,Text_t,string	niup: caret=(ih: Text_t; value: string)	
caret	niup.html#caret,Text_t,string	niup: caret(ih: Text_t; value: string)	
caret=	niup.html#caret=,Text_t,int,int	niup: caret=(ih: Text_t; lin, col: int)	
caret	niup.html#caret,Text_t,int,int	niup: caret(ih: Text_t; lin, col: int)	
caret	niup.html#caret,Text_t	niup: caret(ih: Text_t): string	
caretpos=	niup.html#caretpos=,Text_t,string	niup: caretpos=(ih: Text_t; value: string)	
caretpos	niup.html#caretpos,Text_t,string	niup: caretpos(ih: Text_t; value: string)	
caretpos=	niup.html#caretpos=,Text_t,int	niup: caretpos=(ih: Text_t; x: int)	
caretpos	niup.html#caretpos,Text_t,int	niup: caretpos(ih: Text_t; x: int)	
caretpos	niup.html#caretpos,Text_t	niup: caretpos(ih: Text_t): string	
changecase=	niup.html#changecase=,Text_t,string	niup: changecase=(ih: Text_t; value: string)	
changecase	niup.html#changecase,Text_t,string	niup: changecase(ih: Text_t; value: string)	
charsize	niup.html#charsize,Text_t	niup: charsize(ih: Text_t): string	
clipboard=	niup.html#clipboard=,Text_t,string	niup: clipboard=(ih: Text_t; value: string)	
clipboard	niup.html#clipboard,Text_t,string	niup: clipboard(ih: Text_t; value: string)	
clipboard	niup.html#clipboard,Text_t	niup: clipboard(ih: Text_t): string	
count	niup.html#count,Text_t	niup: count(ih: Text_t): string	
cpadding=	niup.html#cpadding=,Text_t,string	niup: cpadding=(ih: Text_t; value: string)	
cpadding	niup.html#cpadding,Text_t,string	niup: cpadding(ih: Text_t; value: string)	
cpadding=	niup.html#cpadding=,Text_t,int,int	niup: cpadding=(ih: Text_t; width, height: int)	
cpadding	niup.html#cpadding,Text_t,int,int	niup: cpadding(ih: Text_t; width, height: int)	
cpadding	niup.html#cpadding,Text_t	niup: cpadding(ih: Text_t): string	
cuebanner=	niup.html#cuebanner=,Text_t,string	niup: cuebanner=(ih: Text_t; value: string)	
cuebanner	niup.html#cuebanner,Text_t,string	niup: cuebanner(ih: Text_t; value: string)	
cuebanner	niup.html#cuebanner,Text_t	niup: cuebanner(ih: Text_t): string	
dragdrop=	niup.html#dragdrop=,Text_t,string	niup: dragdrop=(ih: Text_t; value: string)	
dragdrop	niup.html#dragdrop,Text_t,string	niup: dragdrop(ih: Text_t; value: string)	
dragdrop=	niup.html#dragdrop=,Text_t,bool	niup: dragdrop=(ih: Text_t; yes: bool)	
dragdrop	niup.html#dragdrop,Text_t,bool	niup: dragdrop(ih: Text_t; yes: bool)	
dragdrop	niup.html#dragdrop,Text_t	niup: dragdrop(ih: Text_t): bool	
dragsource=	niup.html#dragsource=,Text_t,string	niup: dragsource=(ih: Text_t; value: string)	
dragsource	niup.html#dragsource,Text_t,string	niup: dragsource(ih: Text_t; value: string)	
dragsource=	niup.html#dragsource=,Text_t,bool	niup: dragsource=(ih: Text_t; yes: bool)	
dragsource	niup.html#dragsource,Text_t,bool	niup: dragsource(ih: Text_t; yes: bool)	
dragsource	niup.html#dragsource,Text_t	niup: dragsource(ih: Text_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Text_t,string	niup: dragsourcemove=(ih: Text_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Text_t,string	niup: dragsourcemove(ih: Text_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Text_t,bool	niup: dragsourcemove=(ih: Text_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Text_t,bool	niup: dragsourcemove(ih: Text_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Text_t	niup: dragsourcemove(ih: Text_t): bool	
dragtypes=	niup.html#dragtypes=,Text_t,string	niup: dragtypes=(ih: Text_t; value: string)	
dragtypes	niup.html#dragtypes,Text_t,string	niup: dragtypes(ih: Text_t; value: string)	
dragtypes	niup.html#dragtypes,Text_t	niup: dragtypes(ih: Text_t): string	
dropfilestarget=	niup.html#dropfilestarget=,Text_t,string	niup: dropfilestarget=(ih: Text_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Text_t,string	niup: dropfilestarget(ih: Text_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Text_t,bool	niup: dropfilestarget=(ih: Text_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Text_t,bool	niup: dropfilestarget(ih: Text_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Text_t	niup: dropfilestarget(ih: Text_t): bool	
droptarget=	niup.html#droptarget=,Text_t,string	niup: droptarget=(ih: Text_t; value: string)	
droptarget	niup.html#droptarget,Text_t,string	niup: droptarget(ih: Text_t; value: string)	
droptarget=	niup.html#droptarget=,Text_t,bool	niup: droptarget=(ih: Text_t; yes: bool)	
droptarget	niup.html#droptarget,Text_t,bool	niup: droptarget(ih: Text_t; yes: bool)	
droptarget	niup.html#droptarget,Text_t	niup: droptarget(ih: Text_t): bool	
droptypes=	niup.html#droptypes=,Text_t,string	niup: droptypes=(ih: Text_t; value: string)	
droptypes	niup.html#droptypes,Text_t,string	niup: droptypes(ih: Text_t; value: string)	
droptypes	niup.html#droptypes,Text_t	niup: droptypes(ih: Text_t): string	
expand=	niup.html#expand=,Text_t,string	niup: expand=(ih: Text_t; value: string)	
expand	niup.html#expand,Text_t,string	niup: expand(ih: Text_t; value: string)	
expand	niup.html#expand,Text_t	niup: expand(ih: Text_t): string	
expandweight=	niup.html#expandweight=,Text_t,string	niup: expandweight=(ih: Text_t; value: string)	
expandweight	niup.html#expandweight,Text_t,string	niup: expandweight(ih: Text_t; value: string)	
expandweight=	niup.html#expandweight=,Text_t,int64	niup: expandweight=(ih: Text_t; x: int64)	
expandweight	niup.html#expandweight,Text_t,int64	niup: expandweight(ih: Text_t; x: int64)	
expandweight	niup.html#expandweight,Text_t	niup: expandweight(ih: Text_t): string	
fgcolor=	niup.html#fgcolor=,Text_t,string	niup: fgcolor=(ih: Text_t; value: string)	
fgcolor	niup.html#fgcolor,Text_t,string	niup: fgcolor(ih: Text_t; value: string)	
fgcolor=	niup.html#fgcolor=,Text_t,int,int,int,int	niup: fgcolor=(ih: Text_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Text_t,int,int,int,int	niup: fgcolor(ih: Text_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Text_t	niup: fgcolor(ih: Text_t): string	
filter=	niup.html#filter=,Text_t,string	niup: filter=(ih: Text_t; value: string)	
filter	niup.html#filter,Text_t,string	niup: filter(ih: Text_t; value: string)	
filter	niup.html#filter,Text_t	niup: filter(ih: Text_t): string	
floating=	niup.html#floating=,Text_t,string	niup: floating=(ih: Text_t; value: string)	
floating	niup.html#floating,Text_t,string	niup: floating(ih: Text_t; value: string)	
floating	niup.html#floating,Text_t	niup: floating(ih: Text_t): string	
font=	niup.html#font=,Text_t,string	niup: font=(ih: Text_t; value: string)	
font	niup.html#font,Text_t,string	niup: font(ih: Text_t; value: string)	
font	niup.html#font,Text_t	niup: font(ih: Text_t): string	
fontface=	niup.html#fontface=,Text_t,string	niup: fontface=(ih: Text_t; value: string)	
fontface	niup.html#fontface,Text_t,string	niup: fontface(ih: Text_t; value: string)	
fontface	niup.html#fontface,Text_t	niup: fontface(ih: Text_t): string	
fontsize=	niup.html#fontsize=,Text_t,string	niup: fontsize=(ih: Text_t; value: string)	
fontsize	niup.html#fontsize,Text_t,string	niup: fontsize(ih: Text_t; value: string)	
fontsize=	niup.html#fontsize=,Text_t,int	niup: fontsize=(ih: Text_t; x: int)	
fontsize	niup.html#fontsize,Text_t,int	niup: fontsize(ih: Text_t; x: int)	
fontsize	niup.html#fontsize,Text_t	niup: fontsize(ih: Text_t): string	
fontstyle=	niup.html#fontstyle=,Text_t,string	niup: fontstyle=(ih: Text_t; value: string)	
fontstyle	niup.html#fontstyle,Text_t,string	niup: fontstyle(ih: Text_t; value: string)	
fontstyle	niup.html#fontstyle,Text_t	niup: fontstyle(ih: Text_t): string	
formatting=	niup.html#formatting=,Text_t,string	niup: formatting=(ih: Text_t; value: string)	
formatting	niup.html#formatting,Text_t,string	niup: formatting(ih: Text_t; value: string)	
formatting=	niup.html#formatting=,Text_t,bool	niup: formatting=(ih: Text_t; yes: bool)	
formatting	niup.html#formatting,Text_t,bool	niup: formatting(ih: Text_t; yes: bool)	
formatting	niup.html#formatting,Text_t	niup: formatting(ih: Text_t): bool	
handlename=	niup.html#handlename=,Text_t,string	niup: handlename=(ih: Text_t; value: string)	
handlename	niup.html#handlename,Text_t,string	niup: handlename(ih: Text_t; value: string)	
handlename	niup.html#handlename,Text_t	niup: handlename(ih: Text_t): string	
linecount	niup.html#linecount,Text_t	niup: linecount(ih: Text_t): string	
linevalue	niup.html#linevalue,Text_t	niup: linevalue(ih: Text_t): string	
mask=	niup.html#mask=,Text_t,string	niup: mask=(ih: Text_t; value: string)	
mask	niup.html#mask,Text_t,string	niup: mask(ih: Text_t; value: string)	
mask	niup.html#mask,Text_t	niup: mask(ih: Text_t): string	
maskcasei=	niup.html#maskcasei=,Text_t,string	niup: maskcasei=(ih: Text_t; value: string)	
maskcasei	niup.html#maskcasei,Text_t,string	niup: maskcasei(ih: Text_t; value: string)	
maskcasei=	niup.html#maskcasei=,Text_t,bool	niup: maskcasei=(ih: Text_t; yes: bool)	
maskcasei	niup.html#maskcasei,Text_t,bool	niup: maskcasei(ih: Text_t; yes: bool)	
maskcasei	niup.html#maskcasei,Text_t	niup: maskcasei(ih: Text_t): bool	
maskdecimalsymbol=	niup.html#maskdecimalsymbol=,Text_t,string	niup: maskdecimalsymbol=(ih: Text_t; value: string)	
maskdecimalsymbol	niup.html#maskdecimalsymbol,Text_t,string	niup: maskdecimalsymbol(ih: Text_t; value: string)	
maskdecimalsymbol	niup.html#maskdecimalsymbol,Text_t	niup: maskdecimalsymbol(ih: Text_t): string	
maskfloat=	niup.html#maskfloat=,Text_t,string	niup: maskfloat=(ih: Text_t; value: string)	
maskfloat	niup.html#maskfloat,Text_t,string	niup: maskfloat(ih: Text_t; value: string)	
maskfloat=	niup.html#maskfloat=,Text_t,float,float	niup: maskfloat=(ih: Text_t; min, max: float)	
maskfloat	niup.html#maskfloat,Text_t,float,float	niup: maskfloat(ih: Text_t; min, max: float)	
maskfloat	niup.html#maskfloat,Text_t	niup: maskfloat(ih: Text_t): string	
maskint=	niup.html#maskint=,Text_t,string	niup: maskint=(ih: Text_t; value: string)	
maskint	niup.html#maskint,Text_t,string	niup: maskint(ih: Text_t; value: string)	
maskint=	niup.html#maskint=,Text_t,int,int	niup: maskint=(ih: Text_t; min, max: int)	
maskint	niup.html#maskint,Text_t,int,int	niup: maskint(ih: Text_t; min, max: int)	
maskint	niup.html#maskint,Text_t	niup: maskint(ih: Text_t): string	
masknoempty=	niup.html#masknoempty=,Text_t,string	niup: masknoempty=(ih: Text_t; value: string)	
masknoempty	niup.html#masknoempty,Text_t,string	niup: masknoempty(ih: Text_t; value: string)	
masknoempty=	niup.html#masknoempty=,Text_t,bool	niup: masknoempty=(ih: Text_t; yes: bool)	
masknoempty	niup.html#masknoempty,Text_t,bool	niup: masknoempty(ih: Text_t; yes: bool)	
masknoempty	niup.html#masknoempty,Text_t	niup: masknoempty(ih: Text_t): bool	
maskreal=	niup.html#maskreal=,Text_t,string	niup: maskreal=(ih: Text_t; value: string)	
maskreal	niup.html#maskreal,Text_t,string	niup: maskreal(ih: Text_t; value: string)	
maskreal	niup.html#maskreal,Text_t	niup: maskreal(ih: Text_t): string	
maxsize=	niup.html#maxsize=,Text_t,string	niup: maxsize=(ih: Text_t; value: string)	
maxsize	niup.html#maxsize,Text_t,string	niup: maxsize(ih: Text_t; value: string)	
maxsize=	niup.html#maxsize=,Text_t,int,int	niup: maxsize=(ih: Text_t; width, height: int)	
maxsize	niup.html#maxsize,Text_t,int,int	niup: maxsize(ih: Text_t; width, height: int)	
maxsize	niup.html#maxsize,Text_t	niup: maxsize(ih: Text_t): string	
minsize=	niup.html#minsize=,Text_t,string	niup: minsize=(ih: Text_t; value: string)	
minsize	niup.html#minsize,Text_t,string	niup: minsize(ih: Text_t; value: string)	
minsize=	niup.html#minsize=,Text_t,int,int	niup: minsize=(ih: Text_t; width, height: int)	
minsize	niup.html#minsize,Text_t,int,int	niup: minsize(ih: Text_t; width, height: int)	
minsize	niup.html#minsize,Text_t	niup: minsize(ih: Text_t): string	
multiline=	niup.html#multiline=,Text_t,string	niup: multiline=(ih: Text_t; value: string)	
multiline	niup.html#multiline,Text_t,string	niup: multiline(ih: Text_t; value: string)	
multiline=	niup.html#multiline=,Text_t,bool	niup: multiline=(ih: Text_t; yes: bool)	
multiline	niup.html#multiline,Text_t,bool	niup: multiline(ih: Text_t; yes: bool)	
multiline	niup.html#multiline,Text_t	niup: multiline(ih: Text_t): bool	
name=	niup.html#name=,Text_t,string	niup: name=(ih: Text_t; value: string)	
name	niup.html#name,Text_t,string	niup: name(ih: Text_t; value: string)	
name	niup.html#name,Text_t	niup: name(ih: Text_t): string	
naturalsize	niup.html#naturalsize,Text_t	niup: naturalsize(ih: Text_t): string	
nc=	niup.html#nc=,Text_t,string	niup: nc=(ih: Text_t; value: string)	
nc	niup.html#nc,Text_t,string	niup: nc(ih: Text_t; value: string)	
nc=	niup.html#nc=,Text_t,int	niup: nc=(ih: Text_t; x: int)	
nc	niup.html#nc,Text_t,int	niup: nc(ih: Text_t; x: int)	
nc	niup.html#nc,Text_t	niup: nc(ih: Text_t): string	
normalizergroup=	niup.html#normalizergroup=,Text_t,string	niup: normalizergroup=(ih: Text_t; value: string)	
normalizergroup	niup.html#normalizergroup,Text_t,string	niup: normalizergroup(ih: Text_t; value: string)	
normalizergroup	niup.html#normalizergroup,Text_t	niup: normalizergroup(ih: Text_t): string	
ntheme=	niup.html#ntheme=,Text_t,string	niup: ntheme=(ih: Text_t; value: string)	
ntheme	niup.html#ntheme,Text_t,string	niup: ntheme(ih: Text_t; value: string)	
ntheme	niup.html#ntheme,Text_t	niup: ntheme(ih: Text_t): string	
overwrite=	niup.html#overwrite=,Text_t,string	niup: overwrite=(ih: Text_t; value: string)	
overwrite	niup.html#overwrite,Text_t,string	niup: overwrite(ih: Text_t; value: string)	
overwrite=	niup.html#overwrite=,Text_t,bool	niup: overwrite=(ih: Text_t; yes: bool)	
overwrite	niup.html#overwrite,Text_t,bool	niup: overwrite(ih: Text_t; yes: bool)	
overwrite	niup.html#overwrite,Text_t	niup: overwrite(ih: Text_t): bool	
padding=	niup.html#padding=,Text_t,string	niup: padding=(ih: Text_t; value: string)	
padding	niup.html#padding,Text_t,string	niup: padding(ih: Text_t; value: string)	
padding=	niup.html#padding=,Text_t,int,int	niup: padding=(ih: Text_t; width, height: int)	
padding	niup.html#padding,Text_t,int,int	niup: padding(ih: Text_t; width, height: int)	
padding	niup.html#padding,Text_t	niup: padding(ih: Text_t): string	
pangofontdesc	niup.html#pangofontdesc,Text_t	niup: pangofontdesc(ih: Text_t): string	
pangolayout	niup.html#pangolayout,Text_t	niup: pangolayout(ih: Text_t): string	
password=	niup.html#password=,Text_t,string	niup: password=(ih: Text_t; value: string)	
password	niup.html#password,Text_t,string	niup: password(ih: Text_t; value: string)	
password=	niup.html#password=,Text_t,bool	niup: password=(ih: Text_t; yes: bool)	
password	niup.html#password,Text_t,bool	niup: password(ih: Text_t; yes: bool)	
password	niup.html#password,Text_t	niup: password(ih: Text_t): bool	
position=	niup.html#position=,Text_t,string	niup: position=(ih: Text_t; value: string)	
position	niup.html#position,Text_t,string	niup: position(ih: Text_t; value: string)	
position=	niup.html#position=,Text_t,int,int	niup: position=(ih: Text_t; x, y: int)	
position	niup.html#position,Text_t,int,int	niup: position(ih: Text_t; x, y: int)	
position	niup.html#position,Text_t	niup: position(ih: Text_t): string	
propagatefocus=	niup.html#propagatefocus=,Text_t,string	niup: propagatefocus=(ih: Text_t; value: string)	
propagatefocus	niup.html#propagatefocus,Text_t,string	niup: propagatefocus(ih: Text_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Text_t,bool	niup: propagatefocus=(ih: Text_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Text_t,bool	niup: propagatefocus(ih: Text_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Text_t	niup: propagatefocus(ih: Text_t): bool	
rastersize=	niup.html#rastersize=,Text_t,string	niup: rastersize=(ih: Text_t; value: string)	
rastersize	niup.html#rastersize,Text_t,string	niup: rastersize(ih: Text_t; value: string)	
rastersize=	niup.html#rastersize=,Text_t,int,int	niup: rastersize=(ih: Text_t; width, height: int)	
rastersize	niup.html#rastersize,Text_t,int,int	niup: rastersize(ih: Text_t; width, height: int)	
rastersize	niup.html#rastersize,Text_t	niup: rastersize(ih: Text_t): string	
readonly=	niup.html#readonly=,Text_t,string	niup: readonly=(ih: Text_t; value: string)	
readonly	niup.html#readonly,Text_t,string	niup: readonly(ih: Text_t; value: string)	
readonly=	niup.html#readonly=,Text_t,bool	niup: readonly=(ih: Text_t; yes: bool)	
readonly	niup.html#readonly,Text_t,bool	niup: readonly(ih: Text_t; yes: bool)	
readonly	niup.html#readonly,Text_t	niup: readonly(ih: Text_t): bool	
removeformatting=	niup.html#removeformatting=,Text_t,string	niup: removeformatting=(ih: Text_t; value: string)	
removeformatting	niup.html#removeformatting,Text_t,string	niup: removeformatting(ih: Text_t; value: string)	
screenposition	niup.html#screenposition,Text_t	niup: screenposition(ih: Text_t): string	
scrollbar=	niup.html#scrollbar=,Text_t,string	niup: scrollbar=(ih: Text_t; value: string)	
scrollbar	niup.html#scrollbar,Text_t,string	niup: scrollbar(ih: Text_t; value: string)	
scrollbar=	niup.html#scrollbar=,Text_t,bool	niup: scrollbar=(ih: Text_t; yes: bool)	
scrollbar	niup.html#scrollbar,Text_t,bool	niup: scrollbar(ih: Text_t; yes: bool)	
scrollbar	niup.html#scrollbar,Text_t	niup: scrollbar(ih: Text_t): bool	
scrollto=	niup.html#scrollto=,Text_t,string	niup: scrollto=(ih: Text_t; value: string)	
scrollto	niup.html#scrollto,Text_t,string	niup: scrollto(ih: Text_t; value: string)	
scrollto=	niup.html#scrollto=,Text_t,int	niup: scrollto=(ih: Text_t; x: int)	
scrollto	niup.html#scrollto,Text_t,int	niup: scrollto(ih: Text_t; x: int)	
scrolltopos=	niup.html#scrolltopos=,Text_t,string	niup: scrolltopos=(ih: Text_t; value: string)	
scrolltopos	niup.html#scrolltopos,Text_t,string	niup: scrolltopos(ih: Text_t; value: string)	
scrolltopos=	niup.html#scrolltopos=,Text_t,int	niup: scrolltopos=(ih: Text_t; x: int)	
scrolltopos	niup.html#scrolltopos,Text_t,int	niup: scrolltopos(ih: Text_t; x: int)	
selectedtext=	niup.html#selectedtext=,Text_t,string	niup: selectedtext=(ih: Text_t; value: string)	
selectedtext	niup.html#selectedtext,Text_t,string	niup: selectedtext(ih: Text_t; value: string)	
selectedtext	niup.html#selectedtext,Text_t	niup: selectedtext(ih: Text_t): string	
selection=	niup.html#selection=,Text_t,string	niup: selection=(ih: Text_t; value: string)	
selection	niup.html#selection,Text_t,string	niup: selection(ih: Text_t; value: string)	
selection=	niup.html#selection=,Text_t,int,int,int,int	niup: selection=(ih: Text_t; lin1, col1, lin2, col2: int)	
selection	niup.html#selection,Text_t,int,int,int,int	niup: selection(ih: Text_t; lin1, col1, lin2, col2: int)	
selection=	niup.html#selection=,Text_t,int,int	niup: selection=(ih: Text_t; col1, col2: int)	
selection	niup.html#selection,Text_t,int,int	niup: selection(ih: Text_t; col1, col2: int)	
selection	niup.html#selection,Text_t	niup: selection(ih: Text_t): string	
selectionpos=	niup.html#selectionpos=,Text_t,string	niup: selectionpos=(ih: Text_t; value: string)	
selectionpos	niup.html#selectionpos,Text_t,string	niup: selectionpos(ih: Text_t; value: string)	
selectionpos=	niup.html#selectionpos=,Text_t,int,int	niup: selectionpos=(ih: Text_t; min, max: int)	
selectionpos	niup.html#selectionpos,Text_t,int,int	niup: selectionpos(ih: Text_t; min, max: int)	
selectionpos	niup.html#selectionpos,Text_t	niup: selectionpos(ih: Text_t): string	
size=	niup.html#size=,Text_t,string	niup: size=(ih: Text_t; value: string)	
size	niup.html#size,Text_t,string	niup: size(ih: Text_t; value: string)	
size=	niup.html#size=,Text_t,int,int	niup: size=(ih: Text_t; width, height: int)	
size	niup.html#size,Text_t,int,int	niup: size(ih: Text_t; width, height: int)	
size	niup.html#size,Text_t	niup: size(ih: Text_t): string	
spin=	niup.html#spin=,Text_t,string	niup: spin=(ih: Text_t; value: string)	
spin	niup.html#spin,Text_t,string	niup: spin(ih: Text_t; value: string)	
spin=	niup.html#spin=,Text_t,bool	niup: spin=(ih: Text_t; yes: bool)	
spin	niup.html#spin,Text_t,bool	niup: spin(ih: Text_t; yes: bool)	
spin	niup.html#spin,Text_t	niup: spin(ih: Text_t): bool	
spinalign=	niup.html#spinalign=,Text_t,string	niup: spinalign=(ih: Text_t; value: string)	
spinalign	niup.html#spinalign,Text_t,string	niup: spinalign(ih: Text_t; value: string)	
spinalign	niup.html#spinalign,Text_t	niup: spinalign(ih: Text_t): string	
spinauto=	niup.html#spinauto=,Text_t,string	niup: spinauto=(ih: Text_t; value: string)	
spinauto	niup.html#spinauto,Text_t,string	niup: spinauto(ih: Text_t; value: string)	
spinauto=	niup.html#spinauto=,Text_t,bool	niup: spinauto=(ih: Text_t; yes: bool)	
spinauto	niup.html#spinauto,Text_t,bool	niup: spinauto(ih: Text_t; yes: bool)	
spinauto	niup.html#spinauto,Text_t	niup: spinauto(ih: Text_t): bool	
spininc=	niup.html#spininc=,Text_t,string	niup: spininc=(ih: Text_t; value: string)	
spininc	niup.html#spininc,Text_t,string	niup: spininc(ih: Text_t; value: string)	
spininc=	niup.html#spininc=,Text_t,int	niup: spininc=(ih: Text_t; x: int)	
spininc	niup.html#spininc,Text_t,int	niup: spininc(ih: Text_t; x: int)	
spininc	niup.html#spininc,Text_t	niup: spininc(ih: Text_t): string	
spinmax=	niup.html#spinmax=,Text_t,string	niup: spinmax=(ih: Text_t; value: string)	
spinmax	niup.html#spinmax,Text_t,string	niup: spinmax(ih: Text_t; value: string)	
spinmax=	niup.html#spinmax=,Text_t,int	niup: spinmax=(ih: Text_t; x: int)	
spinmax	niup.html#spinmax,Text_t,int	niup: spinmax(ih: Text_t; x: int)	
spinmax	niup.html#spinmax,Text_t	niup: spinmax(ih: Text_t): string	
spinmin=	niup.html#spinmin=,Text_t,string	niup: spinmin=(ih: Text_t; value: string)	
spinmin	niup.html#spinmin,Text_t,string	niup: spinmin(ih: Text_t; value: string)	
spinmin=	niup.html#spinmin=,Text_t,int	niup: spinmin=(ih: Text_t; x: int)	
spinmin	niup.html#spinmin,Text_t,int	niup: spinmin(ih: Text_t; x: int)	
spinmin	niup.html#spinmin,Text_t	niup: spinmin(ih: Text_t): string	
spinvalue=	niup.html#spinvalue=,Text_t,string	niup: spinvalue=(ih: Text_t; value: string)	
spinvalue	niup.html#spinvalue,Text_t,string	niup: spinvalue(ih: Text_t; value: string)	
spinvalue=	niup.html#spinvalue=,Text_t,int	niup: spinvalue=(ih: Text_t; x: int)	
spinvalue	niup.html#spinvalue,Text_t,int	niup: spinvalue(ih: Text_t; x: int)	
spinvalue	niup.html#spinvalue,Text_t	niup: spinvalue(ih: Text_t): string	
spinwrap=	niup.html#spinwrap=,Text_t,string	niup: spinwrap=(ih: Text_t; value: string)	
spinwrap	niup.html#spinwrap,Text_t,string	niup: spinwrap(ih: Text_t; value: string)	
spinwrap=	niup.html#spinwrap=,Text_t,bool	niup: spinwrap=(ih: Text_t; yes: bool)	
spinwrap	niup.html#spinwrap,Text_t,bool	niup: spinwrap(ih: Text_t; yes: bool)	
spinwrap	niup.html#spinwrap,Text_t	niup: spinwrap(ih: Text_t): bool	
tabsize=	niup.html#tabsize=,Text_t,string	niup: tabsize=(ih: Text_t; value: string)	
tabsize	niup.html#tabsize,Text_t,string	niup: tabsize(ih: Text_t; value: string)	
tabsize=	niup.html#tabsize=,Text_t,int	niup: tabsize=(ih: Text_t; x: int)	
tabsize	niup.html#tabsize,Text_t,int	niup: tabsize(ih: Text_t; x: int)	
tabsize	niup.html#tabsize,Text_t	niup: tabsize(ih: Text_t): string	
theme=	niup.html#theme=,Text_t,string	niup: theme=(ih: Text_t; value: string)	
theme	niup.html#theme,Text_t,string	niup: theme(ih: Text_t; value: string)	
theme	niup.html#theme,Text_t	niup: theme(ih: Text_t): string	
tip=	niup.html#tip=,Text_t,string	niup: tip=(ih: Text_t; value: string)	
tip	niup.html#tip,Text_t,string	niup: tip(ih: Text_t; value: string)	
tip	niup.html#tip,Text_t	niup: tip(ih: Text_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Text_t,string	niup: tipbgcolor=(ih: Text_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Text_t,string	niup: tipbgcolor(ih: Text_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Text_t,int,int,int,int	niup: tipbgcolor=(ih: Text_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Text_t,int,int,int,int	niup: tipbgcolor(ih: Text_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Text_t	niup: tipbgcolor(ih: Text_t): string	
tipdelay=	niup.html#tipdelay=,Text_t,string	niup: tipdelay=(ih: Text_t; value: string)	
tipdelay	niup.html#tipdelay,Text_t,string	niup: tipdelay(ih: Text_t; value: string)	
tipdelay=	niup.html#tipdelay=,Text_t,int	niup: tipdelay=(ih: Text_t; x: int)	
tipdelay	niup.html#tipdelay,Text_t,int	niup: tipdelay(ih: Text_t; x: int)	
tipdelay	niup.html#tipdelay,Text_t	niup: tipdelay(ih: Text_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Text_t,string	niup: tipfgcolor=(ih: Text_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Text_t,string	niup: tipfgcolor(ih: Text_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Text_t,int,int,int,int	niup: tipfgcolor=(ih: Text_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Text_t,int,int,int,int	niup: tipfgcolor(ih: Text_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Text_t	niup: tipfgcolor(ih: Text_t): string	
tipicon=	niup.html#tipicon=,Text_t,string	niup: tipicon=(ih: Text_t; value: string)	
tipicon	niup.html#tipicon,Text_t,string	niup: tipicon(ih: Text_t; value: string)	
tipicon	niup.html#tipicon,Text_t	niup: tipicon(ih: Text_t): string	
tipmarkup=	niup.html#tipmarkup=,Text_t,string	niup: tipmarkup=(ih: Text_t; value: string)	
tipmarkup	niup.html#tipmarkup,Text_t,string	niup: tipmarkup(ih: Text_t; value: string)	
tipmarkup	niup.html#tipmarkup,Text_t	niup: tipmarkup(ih: Text_t): string	
tiprect=	niup.html#tiprect=,Text_t,string	niup: tiprect=(ih: Text_t; value: string)	
tiprect	niup.html#tiprect,Text_t,string	niup: tiprect(ih: Text_t; value: string)	
tiprect=	niup.html#tiprect=,Text_t,int,int,int,int	niup: tiprect=(ih: Text_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Text_t,int,int,int,int	niup: tiprect(ih: Text_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Text_t	niup: tiprect(ih: Text_t): string	
tipvisible=	niup.html#tipvisible=,Text_t,string	niup: tipvisible=(ih: Text_t; value: string)	
tipvisible	niup.html#tipvisible,Text_t,string	niup: tipvisible(ih: Text_t; value: string)	
tipvisible=	niup.html#tipvisible=,Text_t,bool	niup: tipvisible=(ih: Text_t; yes: bool)	
tipvisible	niup.html#tipvisible,Text_t,bool	niup: tipvisible(ih: Text_t; yes: bool)	
tipvisible	niup.html#tipvisible,Text_t	niup: tipvisible(ih: Text_t): bool	
usersize=	niup.html#usersize=,Text_t,string	niup: usersize=(ih: Text_t; value: string)	
usersize	niup.html#usersize,Text_t,string	niup: usersize(ih: Text_t; value: string)	
usersize=	niup.html#usersize=,Text_t,int,int	niup: usersize=(ih: Text_t; width, height: int)	
usersize	niup.html#usersize,Text_t,int,int	niup: usersize(ih: Text_t; width, height: int)	
usersize	niup.html#usersize,Text_t	niup: usersize(ih: Text_t): string	
value=	niup.html#value=,Text_t,string	niup: value=(ih: Text_t; value: string)	
value	niup.html#value,Text_t,string	niup: value(ih: Text_t; value: string)	
value	niup.html#value,Text_t	niup: value(ih: Text_t): string	
valuemasked=	niup.html#valuemasked=,Text_t,string	niup: valuemasked=(ih: Text_t; value: string)	
valuemasked	niup.html#valuemasked,Text_t,string	niup: valuemasked(ih: Text_t; value: string)	
visible=	niup.html#visible=,Text_t,string	niup: visible=(ih: Text_t; value: string)	
visible	niup.html#visible,Text_t,string	niup: visible(ih: Text_t; value: string)	
visible=	niup.html#visible=,Text_t,bool	niup: visible=(ih: Text_t; yes: bool)	
visible	niup.html#visible,Text_t,bool	niup: visible(ih: Text_t; yes: bool)	
visible	niup.html#visible,Text_t	niup: visible(ih: Text_t): bool	
visiblecolumns=	niup.html#visiblecolumns=,Text_t,string	niup: visiblecolumns=(ih: Text_t; value: string)	
visiblecolumns	niup.html#visiblecolumns,Text_t,string	niup: visiblecolumns(ih: Text_t; value: string)	
visiblecolumns=	niup.html#visiblecolumns=,Text_t,int	niup: visiblecolumns=(ih: Text_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,Text_t,int	niup: visiblecolumns(ih: Text_t; x: int)	
visiblecolumns	niup.html#visiblecolumns,Text_t	niup: visiblecolumns(ih: Text_t): string	
visiblelines=	niup.html#visiblelines=,Text_t,string	niup: visiblelines=(ih: Text_t; value: string)	
visiblelines	niup.html#visiblelines,Text_t,string	niup: visiblelines(ih: Text_t; value: string)	
visiblelines=	niup.html#visiblelines=,Text_t,int	niup: visiblelines=(ih: Text_t; x: int)	
visiblelines	niup.html#visiblelines,Text_t,int	niup: visiblelines(ih: Text_t; x: int)	
visiblelines	niup.html#visiblelines,Text_t	niup: visiblelines(ih: Text_t): string	
wid	niup.html#wid,Text_t	niup: wid(ih: Text_t): string	
wordwrap=	niup.html#wordwrap=,Text_t,string	niup: wordwrap=(ih: Text_t; value: string)	
wordwrap	niup.html#wordwrap,Text_t,string	niup: wordwrap(ih: Text_t; value: string)	
wordwrap=	niup.html#wordwrap=,Text_t,bool	niup: wordwrap=(ih: Text_t; yes: bool)	
wordwrap	niup.html#wordwrap,Text_t,bool	niup: wordwrap(ih: Text_t; yes: bool)	
wordwrap	niup.html#wordwrap,Text_t	niup: wordwrap(ih: Text_t): bool	
x	niup.html#x,Text_t	niup: x(ih: Text_t): string	
xfontid	niup.html#xfontid,Text_t	niup: xfontid(ih: Text_t): string	
y	niup.html#y,Text_t	niup: y(ih: Text_t): string	
zorder=	niup.html#zorder=,Text_t,string	niup: zorder=(ih: Text_t; value: string)	
zorder	niup.html#zorder,Text_t,string	niup: zorder(ih: Text_t; value: string)	
action=	niup.html#action=,Text_t,proc(PIhandle,cint,cstring)	niup: action=(ih: Text_t;\n        cb: proc (ih: PIhandle; c: cint; new_value: cstring): cint {.cdecl.})	
action	niup.html#action,Text_t,proc(PIhandle,cint,cstring)	niup: action(ih: Text_t;\n       cb: proc (ih: PIhandle; c: cint; new_value: cstring): cint {.cdecl.})	
action	niup.html#action,Text_t	niup: action(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Text_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Text_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Text_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Text_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Text_t	niup: button_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
caret_cb=	niup.html#caret_cb=,Text_t,proc(PIhandle,cint,cint,cint)	niup: caret_cb=(ih: Text_t;\n          cb: proc (ih: PIhandle; lin, col, pos: cint): cint {.cdecl.})	
caret_cb	niup.html#caret_cb,Text_t,proc(PIhandle,cint,cint,cint)	niup: caret_cb(ih: Text_t; cb: proc (ih: PIhandle; lin, col, pos: cint): cint {.cdecl.})	
caret_cb	niup.html#caret_cb,Text_t	niup: caret_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Text_t,proc(PIhandle)	niup: destroy_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Text_t,proc(PIhandle)	niup: destroy_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Text_t	niup: destroy_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Text_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Text_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Text_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Text_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Text_t	niup: dragbegin_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Text_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Text_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Text_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Text_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Text_t	niup: dragdatasize_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Text_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Text_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Text_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Text_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Text_t	niup: dragdata_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Text_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Text_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Text_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Text_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Text_t	niup: dragend_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Text_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Text_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Text_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Text_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Text_t	niup: dropdata_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Text_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Text_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Text_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Text_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                   num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Text_t	niup: dropfiles_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Text_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Text_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Text_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Text_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Text_t	niup: dropmotion_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Text_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Text_t,proc(PIhandle)	niup: enterwindow_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Text_t	niup: enterwindow_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Text_t,proc(PIhandle)	niup: getfocus_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Text_t,proc(PIhandle)	niup: getfocus_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Text_t	niup: getfocus_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Text_t,proc(PIhandle)	niup: help_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Text_t,proc(PIhandle)	niup: help_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Text_t	niup: help_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Text_t,proc(PIhandle)	niup: killfocus_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Text_t,proc(PIhandle)	niup: killfocus_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Text_t	niup: killfocus_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Text_t,proc(PIhandle,cint)	niup: k_any=(ih: Text_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Text_t,proc(PIhandle,cint)	niup: k_any(ih: Text_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Text_t	niup: k_any(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Text_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Text_t,proc(PIhandle)	niup: ldestroy_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Text_t	niup: ldestroy_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Text_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Text_t,proc(PIhandle)	niup: leavewindow_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Text_t	niup: leavewindow_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Text_t,proc(PIhandle)	niup: map_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Text_t,proc(PIhandle)	niup: map_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Text_t	niup: map_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Text_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Text_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Text_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Text_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Text_t	niup: motion_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Text_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Text_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Text_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Text_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Text_t	niup: postmessage_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
spin_cb=	niup.html#spin_cb=,Text_t,proc(PIhandle,cint)	niup: spin_cb=(ih: Text_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,Text_t,proc(PIhandle,cint)	niup: spin_cb(ih: Text_t; cb: proc (ih: PIhandle; pos: cint): cint {.cdecl.})	
spin_cb	niup.html#spin_cb,Text_t	niup: spin_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Text_t,proc(PIhandle)	niup: unmap_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Text_t,proc(PIhandle)	niup: unmap_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Text_t	niup: unmap_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,Text_t,proc(PIhandle)	niup: valuechanged_cb=(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Text_t,proc(PIhandle)	niup: valuechanged_cb(ih: Text_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Text_t	niup: valuechanged_cb(ih: Text_t): proc (ih: PIhandle): cint {.cdecl.}	
Thread	niup.html#Thread_2	niup: Thread(): Thread_t	
iscurrent	niup.html#iscurrent,Thread_t	niup: iscurrent(ih: Thread_t): string	
lock	niup.html#lock,Thread_t	niup: lock(ih: Thread_t): string	
start=	niup.html#start=,Thread_t,string	niup: start=(ih: Thread_t; value: string)	
start	niup.html#start,Thread_t,string	niup: start(ih: Thread_t; value: string)	
start=	niup.html#start=,Thread_t,bool	niup: start=(ih: Thread_t; yes: bool)	
start	niup.html#start,Thread_t,bool	niup: start(ih: Thread_t; yes: bool)	
thread_cb=	niup.html#thread_cb=,Thread_t,proc(PIhandle)	niup: thread_cb=(ih: Thread_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
thread_cb	niup.html#thread_cb,Thread_t,proc(PIhandle)	niup: thread_cb(ih: Thread_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
thread_cb	niup.html#thread_cb,Thread_t	niup: thread_cb(ih: Thread_t): proc (ih: PIhandle): cint {.cdecl.}	
Timer	niup.html#Timer	niup: Timer(): Timer_t	
run	niup.html#run,Timer_t	niup: run(ih: Timer_t): string	
time	niup.html#time,Timer_t	niup: time(ih: Timer_t): string	
wid	niup.html#wid,Timer_t	niup: wid(ih: Timer_t): string	
run=	niup.html#run=,Timer_t,bool	niup: run=(ih: Timer_t; yes: bool)	
run	niup.html#run,Timer_t,bool	niup: run(ih: Timer_t; yes: bool)	
time=	niup.html#time=,Timer_t,int	niup: time=(ih: Timer_t; miliseconds: int)	
time	niup.html#time,Timer_t,int	niup: time(ih: Timer_t; miliseconds: int)	
action_cb=	niup.html#action_cb=,Timer_t,proc(PIhandle)	niup: action_cb=(ih: Timer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action_cb	niup.html#action_cb,Timer_t,proc(PIhandle)	niup: action_cb(ih: Timer_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
action_cb	niup.html#action_cb,Timer_t	niup: action_cb(ih: Timer_t): proc (ih: PIhandle): cint {.cdecl.}	
Toggle	niup.html#Toggle,string,string	niup: Toggle(title: string; action: string): Toggle_t	
Toggle	niup.html#Toggle,string	niup: Toggle(title: string): Toggle_t	
active=	niup.html#active=,Toggle_t,string	niup: active=(ih: Toggle_t; value: string)	
active	niup.html#active,Toggle_t,string	niup: active(ih: Toggle_t; value: string)	
active=	niup.html#active=,Toggle_t,bool	niup: active=(ih: Toggle_t; yes: bool)	
active	niup.html#active,Toggle_t,bool	niup: active(ih: Toggle_t; yes: bool)	
active	niup.html#active,Toggle_t	niup: active(ih: Toggle_t): bool	
alignment=	niup.html#alignment=,Toggle_t,string	niup: alignment=(ih: Toggle_t; value: string)	
alignment	niup.html#alignment,Toggle_t,string	niup: alignment(ih: Toggle_t; value: string)	
alignment	niup.html#alignment,Toggle_t	niup: alignment(ih: Toggle_t): string	
bgcolor=	niup.html#bgcolor=,Toggle_t,string	niup: bgcolor=(ih: Toggle_t; value: string)	
bgcolor	niup.html#bgcolor,Toggle_t,string	niup: bgcolor(ih: Toggle_t; value: string)	
bgcolor=	niup.html#bgcolor=,Toggle_t,int,int,int,int	niup: bgcolor=(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Toggle_t,int,int,int,int	niup: bgcolor(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Toggle_t	niup: bgcolor(ih: Toggle_t): string	
canfocus=	niup.html#canfocus=,Toggle_t,string	niup: canfocus=(ih: Toggle_t; value: string)	
canfocus	niup.html#canfocus,Toggle_t,string	niup: canfocus(ih: Toggle_t; value: string)	
canfocus=	niup.html#canfocus=,Toggle_t,bool	niup: canfocus=(ih: Toggle_t; yes: bool)	
canfocus	niup.html#canfocus,Toggle_t,bool	niup: canfocus(ih: Toggle_t; yes: bool)	
canfocus	niup.html#canfocus,Toggle_t	niup: canfocus(ih: Toggle_t): bool	
charsize	niup.html#charsize,Toggle_t	niup: charsize(ih: Toggle_t): string	
expand=	niup.html#expand=,Toggle_t,string	niup: expand=(ih: Toggle_t; value: string)	
expand	niup.html#expand,Toggle_t,string	niup: expand(ih: Toggle_t; value: string)	
expand	niup.html#expand,Toggle_t	niup: expand(ih: Toggle_t): string	
expandweight=	niup.html#expandweight=,Toggle_t,string	niup: expandweight=(ih: Toggle_t; value: string)	
expandweight	niup.html#expandweight,Toggle_t,string	niup: expandweight(ih: Toggle_t; value: string)	
expandweight=	niup.html#expandweight=,Toggle_t,int64	niup: expandweight=(ih: Toggle_t; x: int64)	
expandweight	niup.html#expandweight,Toggle_t,int64	niup: expandweight(ih: Toggle_t; x: int64)	
expandweight	niup.html#expandweight,Toggle_t	niup: expandweight(ih: Toggle_t): string	
fgcolor=	niup.html#fgcolor=,Toggle_t,string	niup: fgcolor=(ih: Toggle_t; value: string)	
fgcolor	niup.html#fgcolor,Toggle_t,string	niup: fgcolor(ih: Toggle_t; value: string)	
fgcolor=	niup.html#fgcolor=,Toggle_t,int,int,int,int	niup: fgcolor=(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Toggle_t,int,int,int,int	niup: fgcolor(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Toggle_t	niup: fgcolor(ih: Toggle_t): string	
flat=	niup.html#flat=,Toggle_t,string	niup: flat=(ih: Toggle_t; value: string)	
flat	niup.html#flat,Toggle_t,string	niup: flat(ih: Toggle_t; value: string)	
flat=	niup.html#flat=,Toggle_t,bool	niup: flat=(ih: Toggle_t; yes: bool)	
flat	niup.html#flat,Toggle_t,bool	niup: flat(ih: Toggle_t; yes: bool)	
flat	niup.html#flat,Toggle_t	niup: flat(ih: Toggle_t): bool	
floating=	niup.html#floating=,Toggle_t,string	niup: floating=(ih: Toggle_t; value: string)	
floating	niup.html#floating,Toggle_t,string	niup: floating(ih: Toggle_t; value: string)	
floating	niup.html#floating,Toggle_t	niup: floating(ih: Toggle_t): string	
font=	niup.html#font=,Toggle_t,string	niup: font=(ih: Toggle_t; value: string)	
font	niup.html#font,Toggle_t,string	niup: font(ih: Toggle_t; value: string)	
font	niup.html#font,Toggle_t	niup: font(ih: Toggle_t): string	
fontface=	niup.html#fontface=,Toggle_t,string	niup: fontface=(ih: Toggle_t; value: string)	
fontface	niup.html#fontface,Toggle_t,string	niup: fontface(ih: Toggle_t; value: string)	
fontface	niup.html#fontface,Toggle_t	niup: fontface(ih: Toggle_t): string	
fontsize=	niup.html#fontsize=,Toggle_t,string	niup: fontsize=(ih: Toggle_t; value: string)	
fontsize	niup.html#fontsize,Toggle_t,string	niup: fontsize(ih: Toggle_t; value: string)	
fontsize=	niup.html#fontsize=,Toggle_t,int	niup: fontsize=(ih: Toggle_t; x: int)	
fontsize	niup.html#fontsize,Toggle_t,int	niup: fontsize(ih: Toggle_t; x: int)	
fontsize	niup.html#fontsize,Toggle_t	niup: fontsize(ih: Toggle_t): string	
fontstyle=	niup.html#fontstyle=,Toggle_t,string	niup: fontstyle=(ih: Toggle_t; value: string)	
fontstyle	niup.html#fontstyle,Toggle_t,string	niup: fontstyle(ih: Toggle_t; value: string)	
fontstyle	niup.html#fontstyle,Toggle_t	niup: fontstyle(ih: Toggle_t): string	
handlename=	niup.html#handlename=,Toggle_t,string	niup: handlename=(ih: Toggle_t; value: string)	
handlename	niup.html#handlename,Toggle_t,string	niup: handlename(ih: Toggle_t; value: string)	
handlename	niup.html#handlename,Toggle_t	niup: handlename(ih: Toggle_t): string	
ignoreradio=	niup.html#ignoreradio=,Toggle_t,string	niup: ignoreradio=(ih: Toggle_t; value: string)	
ignoreradio	niup.html#ignoreradio,Toggle_t,string	niup: ignoreradio(ih: Toggle_t; value: string)	
ignoreradio=	niup.html#ignoreradio=,Toggle_t,bool	niup: ignoreradio=(ih: Toggle_t; yes: bool)	
ignoreradio	niup.html#ignoreradio,Toggle_t,bool	niup: ignoreradio(ih: Toggle_t; yes: bool)	
ignoreradio	niup.html#ignoreradio,Toggle_t	niup: ignoreradio(ih: Toggle_t): bool	
image=	niup.html#image=,Toggle_t,	niup: image=(ih: Toggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Toggle_t,	niup: image(ih: Toggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
image	niup.html#image,Toggle_t	niup: image(ih: Toggle_t): string	
iminactive=	niup.html#iminactive=,Toggle_t,	niup: iminactive=(ih: Toggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Toggle_t,	niup: iminactive(ih: Toggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
iminactive	niup.html#iminactive,Toggle_t	niup: iminactive(ih: Toggle_t): string	
impress=	niup.html#impress=,Toggle_t,	niup: impress=(ih: Toggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
impress	niup.html#impress,Toggle_t,	niup: impress(ih: Toggle_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
impress	niup.html#impress,Toggle_t	niup: impress(ih: Toggle_t): string	
markup=	niup.html#markup=,Toggle_t,string	niup: markup=(ih: Toggle_t; value: string)	
markup	niup.html#markup,Toggle_t,string	niup: markup(ih: Toggle_t; value: string)	
markup=	niup.html#markup=,Toggle_t,bool	niup: markup=(ih: Toggle_t; yes: bool)	
markup	niup.html#markup,Toggle_t,bool	niup: markup(ih: Toggle_t; yes: bool)	
markup	niup.html#markup,Toggle_t	niup: markup(ih: Toggle_t): bool	
maxsize=	niup.html#maxsize=,Toggle_t,string	niup: maxsize=(ih: Toggle_t; value: string)	
maxsize	niup.html#maxsize,Toggle_t,string	niup: maxsize(ih: Toggle_t; value: string)	
maxsize=	niup.html#maxsize=,Toggle_t,int,int	niup: maxsize=(ih: Toggle_t; width, height: int)	
maxsize	niup.html#maxsize,Toggle_t,int,int	niup: maxsize(ih: Toggle_t; width, height: int)	
maxsize	niup.html#maxsize,Toggle_t	niup: maxsize(ih: Toggle_t): string	
minsize=	niup.html#minsize=,Toggle_t,string	niup: minsize=(ih: Toggle_t; value: string)	
minsize	niup.html#minsize,Toggle_t,string	niup: minsize(ih: Toggle_t; value: string)	
minsize=	niup.html#minsize=,Toggle_t,int,int	niup: minsize=(ih: Toggle_t; width, height: int)	
minsize	niup.html#minsize,Toggle_t,int,int	niup: minsize(ih: Toggle_t; width, height: int)	
minsize	niup.html#minsize,Toggle_t	niup: minsize(ih: Toggle_t): string	
name=	niup.html#name=,Toggle_t,string	niup: name=(ih: Toggle_t; value: string)	
name	niup.html#name,Toggle_t,string	niup: name(ih: Toggle_t; value: string)	
name	niup.html#name,Toggle_t	niup: name(ih: Toggle_t): string	
naturalsize	niup.html#naturalsize,Toggle_t	niup: naturalsize(ih: Toggle_t): string	
normalizergroup=	niup.html#normalizergroup=,Toggle_t,string	niup: normalizergroup=(ih: Toggle_t; value: string)	
normalizergroup	niup.html#normalizergroup,Toggle_t,string	niup: normalizergroup(ih: Toggle_t; value: string)	
normalizergroup	niup.html#normalizergroup,Toggle_t	niup: normalizergroup(ih: Toggle_t): string	
ntheme=	niup.html#ntheme=,Toggle_t,string	niup: ntheme=(ih: Toggle_t; value: string)	
ntheme	niup.html#ntheme,Toggle_t,string	niup: ntheme(ih: Toggle_t; value: string)	
ntheme	niup.html#ntheme,Toggle_t	niup: ntheme(ih: Toggle_t): string	
padding=	niup.html#padding=,Toggle_t,string	niup: padding=(ih: Toggle_t; value: string)	
padding	niup.html#padding,Toggle_t,string	niup: padding(ih: Toggle_t; value: string)	
padding=	niup.html#padding=,Toggle_t,int,int	niup: padding=(ih: Toggle_t; width, height: int)	
padding	niup.html#padding,Toggle_t,int,int	niup: padding(ih: Toggle_t; width, height: int)	
padding	niup.html#padding,Toggle_t	niup: padding(ih: Toggle_t): string	
pangofontdesc	niup.html#pangofontdesc,Toggle_t	niup: pangofontdesc(ih: Toggle_t): string	
pangolayout	niup.html#pangolayout,Toggle_t	niup: pangolayout(ih: Toggle_t): string	
position=	niup.html#position=,Toggle_t,string	niup: position=(ih: Toggle_t; value: string)	
position	niup.html#position,Toggle_t,string	niup: position(ih: Toggle_t; value: string)	
position=	niup.html#position=,Toggle_t,int,int	niup: position=(ih: Toggle_t; x, y: int)	
position	niup.html#position,Toggle_t,int,int	niup: position(ih: Toggle_t; x, y: int)	
position	niup.html#position,Toggle_t	niup: position(ih: Toggle_t): string	
propagatefocus=	niup.html#propagatefocus=,Toggle_t,string	niup: propagatefocus=(ih: Toggle_t; value: string)	
propagatefocus	niup.html#propagatefocus,Toggle_t,string	niup: propagatefocus(ih: Toggle_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Toggle_t,bool	niup: propagatefocus=(ih: Toggle_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Toggle_t,bool	niup: propagatefocus(ih: Toggle_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Toggle_t	niup: propagatefocus(ih: Toggle_t): bool	
radio	niup.html#radio,Toggle_t	niup: radio(ih: Toggle_t): bool	
rastersize=	niup.html#rastersize=,Toggle_t,string	niup: rastersize=(ih: Toggle_t; value: string)	
rastersize	niup.html#rastersize,Toggle_t,string	niup: rastersize(ih: Toggle_t; value: string)	
rastersize=	niup.html#rastersize=,Toggle_t,int,int	niup: rastersize=(ih: Toggle_t; width, height: int)	
rastersize	niup.html#rastersize,Toggle_t,int,int	niup: rastersize(ih: Toggle_t; width, height: int)	
rastersize	niup.html#rastersize,Toggle_t	niup: rastersize(ih: Toggle_t): string	
rightbutton=	niup.html#rightbutton=,Toggle_t,string	niup: rightbutton=(ih: Toggle_t; value: string)	
rightbutton	niup.html#rightbutton,Toggle_t,string	niup: rightbutton(ih: Toggle_t; value: string)	
rightbutton=	niup.html#rightbutton=,Toggle_t,bool	niup: rightbutton=(ih: Toggle_t; yes: bool)	
rightbutton	niup.html#rightbutton,Toggle_t,bool	niup: rightbutton(ih: Toggle_t; yes: bool)	
rightbutton	niup.html#rightbutton,Toggle_t	niup: rightbutton(ih: Toggle_t): bool	
screenposition	niup.html#screenposition,Toggle_t	niup: screenposition(ih: Toggle_t): string	
size=	niup.html#size=,Toggle_t,string	niup: size=(ih: Toggle_t; value: string)	
size	niup.html#size,Toggle_t,string	niup: size(ih: Toggle_t; value: string)	
size=	niup.html#size=,Toggle_t,int,int	niup: size=(ih: Toggle_t; width, height: int)	
size	niup.html#size,Toggle_t,int,int	niup: size(ih: Toggle_t; width, height: int)	
size	niup.html#size,Toggle_t	niup: size(ih: Toggle_t): string	
theme=	niup.html#theme=,Toggle_t,string	niup: theme=(ih: Toggle_t; value: string)	
theme	niup.html#theme,Toggle_t,string	niup: theme(ih: Toggle_t; value: string)	
theme	niup.html#theme,Toggle_t	niup: theme(ih: Toggle_t): string	
tip=	niup.html#tip=,Toggle_t,string	niup: tip=(ih: Toggle_t; value: string)	
tip	niup.html#tip,Toggle_t,string	niup: tip(ih: Toggle_t; value: string)	
tip	niup.html#tip,Toggle_t	niup: tip(ih: Toggle_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Toggle_t,string	niup: tipbgcolor=(ih: Toggle_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Toggle_t,string	niup: tipbgcolor(ih: Toggle_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Toggle_t,int,int,int,int	niup: tipbgcolor=(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Toggle_t,int,int,int,int	niup: tipbgcolor(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Toggle_t	niup: tipbgcolor(ih: Toggle_t): string	
tipdelay=	niup.html#tipdelay=,Toggle_t,string	niup: tipdelay=(ih: Toggle_t; value: string)	
tipdelay	niup.html#tipdelay,Toggle_t,string	niup: tipdelay(ih: Toggle_t; value: string)	
tipdelay=	niup.html#tipdelay=,Toggle_t,int	niup: tipdelay=(ih: Toggle_t; x: int)	
tipdelay	niup.html#tipdelay,Toggle_t,int	niup: tipdelay(ih: Toggle_t; x: int)	
tipdelay	niup.html#tipdelay,Toggle_t	niup: tipdelay(ih: Toggle_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Toggle_t,string	niup: tipfgcolor=(ih: Toggle_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Toggle_t,string	niup: tipfgcolor(ih: Toggle_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Toggle_t,int,int,int,int	niup: tipfgcolor=(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Toggle_t,int,int,int,int	niup: tipfgcolor(ih: Toggle_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Toggle_t	niup: tipfgcolor(ih: Toggle_t): string	
tipicon=	niup.html#tipicon=,Toggle_t,string	niup: tipicon=(ih: Toggle_t; value: string)	
tipicon	niup.html#tipicon,Toggle_t,string	niup: tipicon(ih: Toggle_t; value: string)	
tipicon	niup.html#tipicon,Toggle_t	niup: tipicon(ih: Toggle_t): string	
tipmarkup=	niup.html#tipmarkup=,Toggle_t,string	niup: tipmarkup=(ih: Toggle_t; value: string)	
tipmarkup	niup.html#tipmarkup,Toggle_t,string	niup: tipmarkup(ih: Toggle_t; value: string)	
tipmarkup	niup.html#tipmarkup,Toggle_t	niup: tipmarkup(ih: Toggle_t): string	
tiprect=	niup.html#tiprect=,Toggle_t,string	niup: tiprect=(ih: Toggle_t; value: string)	
tiprect	niup.html#tiprect,Toggle_t,string	niup: tiprect(ih: Toggle_t; value: string)	
tiprect=	niup.html#tiprect=,Toggle_t,int,int,int,int	niup: tiprect=(ih: Toggle_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Toggle_t,int,int,int,int	niup: tiprect(ih: Toggle_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Toggle_t	niup: tiprect(ih: Toggle_t): string	
tipvisible=	niup.html#tipvisible=,Toggle_t,string	niup: tipvisible=(ih: Toggle_t; value: string)	
tipvisible	niup.html#tipvisible,Toggle_t,string	niup: tipvisible(ih: Toggle_t; value: string)	
tipvisible=	niup.html#tipvisible=,Toggle_t,bool	niup: tipvisible=(ih: Toggle_t; yes: bool)	
tipvisible	niup.html#tipvisible,Toggle_t,bool	niup: tipvisible(ih: Toggle_t; yes: bool)	
tipvisible	niup.html#tipvisible,Toggle_t	niup: tipvisible(ih: Toggle_t): bool	
title=	niup.html#title=,Toggle_t,string	niup: title=(ih: Toggle_t; value: string)	
title	niup.html#title,Toggle_t,string	niup: title(ih: Toggle_t; value: string)	
title	niup.html#title,Toggle_t	niup: title(ih: Toggle_t): string	
usersize=	niup.html#usersize=,Toggle_t,string	niup: usersize=(ih: Toggle_t; value: string)	
usersize	niup.html#usersize,Toggle_t,string	niup: usersize(ih: Toggle_t; value: string)	
usersize=	niup.html#usersize=,Toggle_t,int,int	niup: usersize=(ih: Toggle_t; width, height: int)	
usersize	niup.html#usersize,Toggle_t,int,int	niup: usersize(ih: Toggle_t; width, height: int)	
usersize	niup.html#usersize,Toggle_t	niup: usersize(ih: Toggle_t): string	
value=	niup.html#value=,Toggle_t,string	niup: value=(ih: Toggle_t; value: string)	
value	niup.html#value,Toggle_t,string	niup: value(ih: Toggle_t; value: string)	
value	niup.html#value,Toggle_t	niup: value(ih: Toggle_t): string	
visible=	niup.html#visible=,Toggle_t,string	niup: visible=(ih: Toggle_t; value: string)	
visible	niup.html#visible,Toggle_t,string	niup: visible(ih: Toggle_t; value: string)	
visible=	niup.html#visible=,Toggle_t,bool	niup: visible=(ih: Toggle_t; yes: bool)	
visible	niup.html#visible,Toggle_t,bool	niup: visible(ih: Toggle_t; yes: bool)	
visible	niup.html#visible,Toggle_t	niup: visible(ih: Toggle_t): bool	
wid	niup.html#wid,Toggle_t	niup: wid(ih: Toggle_t): string	
x	niup.html#x,Toggle_t	niup: x(ih: Toggle_t): string	
xfontid	niup.html#xfontid,Toggle_t	niup: xfontid(ih: Toggle_t): string	
y	niup.html#y,Toggle_t	niup: y(ih: Toggle_t): string	
zorder=	niup.html#zorder=,Toggle_t,string	niup: zorder=(ih: Toggle_t; value: string)	
zorder	niup.html#zorder,Toggle_t,string	niup: zorder(ih: Toggle_t; value: string)	
action=	niup.html#action=,Toggle_t,proc(PIhandle,cint)	niup: action=(ih: Toggle_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
action	niup.html#action,Toggle_t,proc(PIhandle,cint)	niup: action(ih: Toggle_t; cb: proc (ih: PIhandle; state: cint): cint {.cdecl.})	
action	niup.html#action,Toggle_t	niup: action(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Toggle_t,proc(PIhandle)	niup: destroy_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Toggle_t,proc(PIhandle)	niup: destroy_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Toggle_t	niup: destroy_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Toggle_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Toggle_t,proc(PIhandle)	niup: enterwindow_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Toggle_t	niup: enterwindow_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Toggle_t,proc(PIhandle)	niup: getfocus_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Toggle_t,proc(PIhandle)	niup: getfocus_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Toggle_t	niup: getfocus_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Toggle_t,proc(PIhandle)	niup: help_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Toggle_t,proc(PIhandle)	niup: help_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Toggle_t	niup: help_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Toggle_t,proc(PIhandle)	niup: killfocus_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Toggle_t,proc(PIhandle)	niup: killfocus_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Toggle_t	niup: killfocus_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Toggle_t,proc(PIhandle,cint)	niup: k_any=(ih: Toggle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Toggle_t,proc(PIhandle,cint)	niup: k_any(ih: Toggle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Toggle_t	niup: k_any(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Toggle_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Toggle_t,proc(PIhandle)	niup: ldestroy_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Toggle_t	niup: ldestroy_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Toggle_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Toggle_t,proc(PIhandle)	niup: leavewindow_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Toggle_t	niup: leavewindow_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Toggle_t,proc(PIhandle)	niup: map_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Toggle_t,proc(PIhandle)	niup: map_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Toggle_t	niup: map_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Toggle_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Toggle_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                        arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Toggle_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Toggle_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                       arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Toggle_t	niup: postmessage_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Toggle_t,proc(PIhandle)	niup: unmap_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Toggle_t,proc(PIhandle)	niup: unmap_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Toggle_t	niup: unmap_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,Toggle_t,proc(PIhandle)	niup: valuechanged_cb=(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Toggle_t,proc(PIhandle)	niup: valuechanged_cb(ih: Toggle_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Toggle_t	niup: valuechanged_cb(ih: Toggle_t): proc (ih: PIhandle): cint {.cdecl.}	
Tree	niup.html#Tree_2	niup: Tree(): Tree_t	
active=	niup.html#active=,Tree_t,string	niup: active=(ih: Tree_t; value: string)	
active	niup.html#active,Tree_t,string	niup: active(ih: Tree_t; value: string)	
active=	niup.html#active=,Tree_t,bool	niup: active=(ih: Tree_t; yes: bool)	
active	niup.html#active,Tree_t,bool	niup: active(ih: Tree_t; yes: bool)	
active	niup.html#active,Tree_t	niup: active(ih: Tree_t): bool	
addexpanded=	niup.html#addexpanded=,Tree_t,string	niup: addexpanded=(ih: Tree_t; value: string)	
addexpanded	niup.html#addexpanded,Tree_t,string	niup: addexpanded(ih: Tree_t; value: string)	
addexpanded=	niup.html#addexpanded=,Tree_t,bool	niup: addexpanded=(ih: Tree_t; yes: bool)	
addexpanded	niup.html#addexpanded,Tree_t,bool	niup: addexpanded(ih: Tree_t; yes: bool)	
addexpanded	niup.html#addexpanded,Tree_t	niup: addexpanded(ih: Tree_t): bool	
addroot	niup.html#addroot,Tree_t	niup: addroot(ih: Tree_t): string	
bgcolor=	niup.html#bgcolor=,Tree_t,string	niup: bgcolor=(ih: Tree_t; value: string)	
bgcolor	niup.html#bgcolor,Tree_t,string	niup: bgcolor(ih: Tree_t; value: string)	
bgcolor=	niup.html#bgcolor=,Tree_t,int,int,int,int	niup: bgcolor=(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Tree_t,int,int,int,int	niup: bgcolor(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Tree_t	niup: bgcolor(ih: Tree_t): string	
canfocus=	niup.html#canfocus=,Tree_t,string	niup: canfocus=(ih: Tree_t; value: string)	
canfocus	niup.html#canfocus,Tree_t,string	niup: canfocus(ih: Tree_t; value: string)	
canfocus=	niup.html#canfocus=,Tree_t,bool	niup: canfocus=(ih: Tree_t; yes: bool)	
canfocus	niup.html#canfocus,Tree_t,bool	niup: canfocus(ih: Tree_t; yes: bool)	
canfocus	niup.html#canfocus,Tree_t	niup: canfocus(ih: Tree_t): bool	
charsize	niup.html#charsize,Tree_t	niup: charsize(ih: Tree_t): string	
count	niup.html#count,Tree_t	niup: count(ih: Tree_t): string	
cpadding=	niup.html#cpadding=,Tree_t,string	niup: cpadding=(ih: Tree_t; value: string)	
cpadding	niup.html#cpadding,Tree_t,string	niup: cpadding(ih: Tree_t; value: string)	
cpadding=	niup.html#cpadding=,Tree_t,int,int	niup: cpadding=(ih: Tree_t; width, height: int)	
cpadding	niup.html#cpadding,Tree_t,int,int	niup: cpadding(ih: Tree_t; width, height: int)	
cpadding	niup.html#cpadding,Tree_t	niup: cpadding(ih: Tree_t): string	
cspacing=	niup.html#cspacing=,Tree_t,string	niup: cspacing=(ih: Tree_t; value: string)	
cspacing	niup.html#cspacing,Tree_t,string	niup: cspacing(ih: Tree_t; value: string)	
cspacing=	niup.html#cspacing=,Tree_t,int	niup: cspacing=(ih: Tree_t; x: int)	
cspacing	niup.html#cspacing,Tree_t,int	niup: cspacing(ih: Tree_t; x: int)	
cspacing	niup.html#cspacing,Tree_t	niup: cspacing(ih: Tree_t): string	
ctrl	niup.html#ctrl,Tree_t	niup: ctrl(ih: Tree_t): string	
dragdrop=	niup.html#dragdrop=,Tree_t,string	niup: dragdrop=(ih: Tree_t; value: string)	
dragdrop	niup.html#dragdrop,Tree_t,string	niup: dragdrop(ih: Tree_t; value: string)	
dragdrop=	niup.html#dragdrop=,Tree_t,bool	niup: dragdrop=(ih: Tree_t; yes: bool)	
dragdrop	niup.html#dragdrop,Tree_t,bool	niup: dragdrop(ih: Tree_t; yes: bool)	
dragdrop	niup.html#dragdrop,Tree_t	niup: dragdrop(ih: Tree_t): bool	
dragdroptree=	niup.html#dragdroptree=,Tree_t,string	niup: dragdroptree=(ih: Tree_t; value: string)	
dragdroptree	niup.html#dragdroptree,Tree_t,string	niup: dragdroptree(ih: Tree_t; value: string)	
dragdroptree=	niup.html#dragdroptree=,Tree_t,bool	niup: dragdroptree=(ih: Tree_t; yes: bool)	
dragdroptree	niup.html#dragdroptree,Tree_t,bool	niup: dragdroptree(ih: Tree_t; yes: bool)	
dragdroptree	niup.html#dragdroptree,Tree_t	niup: dragdroptree(ih: Tree_t): bool	
dragsource=	niup.html#dragsource=,Tree_t,string	niup: dragsource=(ih: Tree_t; value: string)	
dragsource	niup.html#dragsource,Tree_t,string	niup: dragsource(ih: Tree_t; value: string)	
dragsource=	niup.html#dragsource=,Tree_t,bool	niup: dragsource=(ih: Tree_t; yes: bool)	
dragsource	niup.html#dragsource,Tree_t,bool	niup: dragsource(ih: Tree_t; yes: bool)	
dragsource	niup.html#dragsource,Tree_t	niup: dragsource(ih: Tree_t): bool	
dragsourcemove=	niup.html#dragsourcemove=,Tree_t,string	niup: dragsourcemove=(ih: Tree_t; value: string)	
dragsourcemove	niup.html#dragsourcemove,Tree_t,string	niup: dragsourcemove(ih: Tree_t; value: string)	
dragsourcemove=	niup.html#dragsourcemove=,Tree_t,bool	niup: dragsourcemove=(ih: Tree_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Tree_t,bool	niup: dragsourcemove(ih: Tree_t; yes: bool)	
dragsourcemove	niup.html#dragsourcemove,Tree_t	niup: dragsourcemove(ih: Tree_t): bool	
dragtypes=	niup.html#dragtypes=,Tree_t,string	niup: dragtypes=(ih: Tree_t; value: string)	
dragtypes	niup.html#dragtypes,Tree_t,string	niup: dragtypes(ih: Tree_t; value: string)	
dragtypes	niup.html#dragtypes,Tree_t	niup: dragtypes(ih: Tree_t): string	
dropequaldrag=	niup.html#dropequaldrag=,Tree_t,string	niup: dropequaldrag=(ih: Tree_t; value: string)	
dropequaldrag	niup.html#dropequaldrag,Tree_t,string	niup: dropequaldrag(ih: Tree_t; value: string)	
dropequaldrag=	niup.html#dropequaldrag=,Tree_t,bool	niup: dropequaldrag=(ih: Tree_t; yes: bool)	
dropequaldrag	niup.html#dropequaldrag,Tree_t,bool	niup: dropequaldrag(ih: Tree_t; yes: bool)	
dropequaldrag	niup.html#dropequaldrag,Tree_t	niup: dropequaldrag(ih: Tree_t): bool	
dropfilestarget=	niup.html#dropfilestarget=,Tree_t,string	niup: dropfilestarget=(ih: Tree_t; value: string)	
dropfilestarget	niup.html#dropfilestarget,Tree_t,string	niup: dropfilestarget(ih: Tree_t; value: string)	
dropfilestarget=	niup.html#dropfilestarget=,Tree_t,bool	niup: dropfilestarget=(ih: Tree_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Tree_t,bool	niup: dropfilestarget(ih: Tree_t; yes: bool)	
dropfilestarget	niup.html#dropfilestarget,Tree_t	niup: dropfilestarget(ih: Tree_t): bool	
droptarget=	niup.html#droptarget=,Tree_t,string	niup: droptarget=(ih: Tree_t; value: string)	
droptarget	niup.html#droptarget,Tree_t,string	niup: droptarget(ih: Tree_t; value: string)	
droptarget=	niup.html#droptarget=,Tree_t,bool	niup: droptarget=(ih: Tree_t; yes: bool)	
droptarget	niup.html#droptarget,Tree_t,bool	niup: droptarget(ih: Tree_t; yes: bool)	
droptarget	niup.html#droptarget,Tree_t	niup: droptarget(ih: Tree_t): bool	
droptypes=	niup.html#droptypes=,Tree_t,string	niup: droptypes=(ih: Tree_t; value: string)	
droptypes	niup.html#droptypes,Tree_t,string	niup: droptypes(ih: Tree_t; value: string)	
droptypes	niup.html#droptypes,Tree_t	niup: droptypes(ih: Tree_t): string	
expand=	niup.html#expand=,Tree_t,string	niup: expand=(ih: Tree_t; value: string)	
expand	niup.html#expand,Tree_t,string	niup: expand(ih: Tree_t; value: string)	
expand	niup.html#expand,Tree_t	niup: expand(ih: Tree_t): string	
expandall=	niup.html#expandall=,Tree_t	niup: expandall=(ih: Tree_t)	
expandall	niup.html#expandall,Tree_t	niup: expandall(ih: Tree_t)	
expandweight=	niup.html#expandweight=,Tree_t,string	niup: expandweight=(ih: Tree_t; value: string)	
expandweight	niup.html#expandweight,Tree_t,string	niup: expandweight(ih: Tree_t; value: string)	
expandweight=	niup.html#expandweight=,Tree_t,int64	niup: expandweight=(ih: Tree_t; x: int64)	
expandweight	niup.html#expandweight,Tree_t,int64	niup: expandweight(ih: Tree_t; x: int64)	
expandweight	niup.html#expandweight,Tree_t	niup: expandweight(ih: Tree_t): string	
fgcolor=	niup.html#fgcolor=,Tree_t,string	niup: fgcolor=(ih: Tree_t; value: string)	
fgcolor	niup.html#fgcolor,Tree_t,string	niup: fgcolor(ih: Tree_t; value: string)	
fgcolor=	niup.html#fgcolor=,Tree_t,int,int,int,int	niup: fgcolor=(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Tree_t,int,int,int,int	niup: fgcolor(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
fgcolor	niup.html#fgcolor,Tree_t	niup: fgcolor(ih: Tree_t): string	
floating=	niup.html#floating=,Tree_t,string	niup: floating=(ih: Tree_t; value: string)	
floating	niup.html#floating,Tree_t,string	niup: floating(ih: Tree_t; value: string)	
floating	niup.html#floating,Tree_t	niup: floating(ih: Tree_t): string	
font=	niup.html#font=,Tree_t,string	niup: font=(ih: Tree_t; value: string)	
font	niup.html#font,Tree_t,string	niup: font(ih: Tree_t; value: string)	
font	niup.html#font,Tree_t	niup: font(ih: Tree_t): string	
fontface=	niup.html#fontface=,Tree_t,string	niup: fontface=(ih: Tree_t; value: string)	
fontface	niup.html#fontface,Tree_t,string	niup: fontface(ih: Tree_t; value: string)	
fontface	niup.html#fontface,Tree_t	niup: fontface(ih: Tree_t): string	
fontsize=	niup.html#fontsize=,Tree_t,string	niup: fontsize=(ih: Tree_t; value: string)	
fontsize	niup.html#fontsize,Tree_t,string	niup: fontsize(ih: Tree_t; value: string)	
fontsize=	niup.html#fontsize=,Tree_t,int	niup: fontsize=(ih: Tree_t; x: int)	
fontsize	niup.html#fontsize,Tree_t,int	niup: fontsize(ih: Tree_t; x: int)	
fontsize	niup.html#fontsize,Tree_t	niup: fontsize(ih: Tree_t): string	
fontstyle=	niup.html#fontstyle=,Tree_t,string	niup: fontstyle=(ih: Tree_t; value: string)	
fontstyle	niup.html#fontstyle,Tree_t,string	niup: fontstyle(ih: Tree_t; value: string)	
fontstyle	niup.html#fontstyle,Tree_t	niup: fontstyle(ih: Tree_t): string	
handlename=	niup.html#handlename=,Tree_t,string	niup: handlename=(ih: Tree_t; value: string)	
handlename	niup.html#handlename,Tree_t,string	niup: handlename(ih: Tree_t; value: string)	
handlename	niup.html#handlename,Tree_t	niup: handlename(ih: Tree_t): string	
hidebuttons=	niup.html#hidebuttons=,Tree_t,string	niup: hidebuttons=(ih: Tree_t; value: string)	
hidebuttons	niup.html#hidebuttons,Tree_t,string	niup: hidebuttons(ih: Tree_t; value: string)	
hidebuttons=	niup.html#hidebuttons=,Tree_t,bool	niup: hidebuttons=(ih: Tree_t; yes: bool)	
hidebuttons	niup.html#hidebuttons,Tree_t,bool	niup: hidebuttons(ih: Tree_t; yes: bool)	
hidebuttons	niup.html#hidebuttons,Tree_t	niup: hidebuttons(ih: Tree_t): bool	
hidelines=	niup.html#hidelines=,Tree_t,string	niup: hidelines=(ih: Tree_t; value: string)	
hidelines	niup.html#hidelines,Tree_t,string	niup: hidelines(ih: Tree_t; value: string)	
hidelines=	niup.html#hidelines=,Tree_t,bool	niup: hidelines=(ih: Tree_t; yes: bool)	
hidelines	niup.html#hidelines,Tree_t,bool	niup: hidelines(ih: Tree_t; yes: bool)	
hidelines	niup.html#hidelines,Tree_t	niup: hidelines(ih: Tree_t): bool	
imagebranchcollapsed=	niup.html#imagebranchcollapsed=,Tree_t,	niup: imagebranchcollapsed=(ih: Tree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchcollapsed	niup.html#imagebranchcollapsed,Tree_t,	niup: imagebranchcollapsed(ih: Tree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchcollapsed	niup.html#imagebranchcollapsed,Tree_t	niup: imagebranchcollapsed(ih: Tree_t): string	
imagebranchexpanded=	niup.html#imagebranchexpanded=,Tree_t,	niup: imagebranchexpanded=(ih: Tree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchexpanded	niup.html#imagebranchexpanded,Tree_t,	niup: imagebranchexpanded(ih: Tree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imagebranchexpanded	niup.html#imagebranchexpanded,Tree_t	niup: imagebranchexpanded(ih: Tree_t): string	
imageleaf=	niup.html#imageleaf=,Tree_t,	niup: imageleaf=(ih: Tree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageleaf	niup.html#imageleaf,Tree_t,	niup: imageleaf(ih: Tree_t; handle: Image_t | ImageRGB_t | ImageRGBA_t)	
imageleaf	niup.html#imageleaf,Tree_t	niup: imageleaf(ih: Tree_t): string	
indentation=	niup.html#indentation=,Tree_t,string	niup: indentation=(ih: Tree_t; value: string)	
indentation	niup.html#indentation,Tree_t,string	niup: indentation(ih: Tree_t; value: string)	
indentation=	niup.html#indentation=,Tree_t,int	niup: indentation=(ih: Tree_t; x: int)	
indentation	niup.html#indentation,Tree_t,int	niup: indentation(ih: Tree_t; x: int)	
indentation	niup.html#indentation,Tree_t	niup: indentation(ih: Tree_t): string	
lastaddnode	niup.html#lastaddnode,Tree_t	niup: lastaddnode(ih: Tree_t): string	
mark=	niup.html#mark=,Tree_t,string	niup: mark=(ih: Tree_t; value: string)	
mark	niup.html#mark,Tree_t,string	niup: mark(ih: Tree_t; value: string)	
markednodes=	niup.html#markednodes=,Tree_t,string	niup: markednodes=(ih: Tree_t; value: string)	
markednodes	niup.html#markednodes,Tree_t,string	niup: markednodes(ih: Tree_t; value: string)	
markednodes	niup.html#markednodes,Tree_t	niup: markednodes(ih: Tree_t): string	
markmode=	niup.html#markmode=,Tree_t,string	niup: markmode=(ih: Tree_t; value: string)	
markmode	niup.html#markmode,Tree_t,string	niup: markmode(ih: Tree_t; value: string)	
markmode	niup.html#markmode,Tree_t	niup: markmode(ih: Tree_t): string	
markstart=	niup.html#markstart=,Tree_t,string	niup: markstart=(ih: Tree_t; value: string)	
markstart	niup.html#markstart,Tree_t,string	niup: markstart(ih: Tree_t; value: string)	
markstart=	niup.html#markstart=,Tree_t,bool	niup: markstart=(ih: Tree_t; yes: bool)	
markstart	niup.html#markstart,Tree_t,bool	niup: markstart(ih: Tree_t; yes: bool)	
markstart	niup.html#markstart,Tree_t	niup: markstart(ih: Tree_t): bool	
markwhentoggle=	niup.html#markwhentoggle=,Tree_t,string	niup: markwhentoggle=(ih: Tree_t; value: string)	
markwhentoggle	niup.html#markwhentoggle,Tree_t,string	niup: markwhentoggle(ih: Tree_t; value: string)	
markwhentoggle=	niup.html#markwhentoggle=,Tree_t,bool	niup: markwhentoggle=(ih: Tree_t; yes: bool)	
markwhentoggle	niup.html#markwhentoggle,Tree_t,bool	niup: markwhentoggle(ih: Tree_t; yes: bool)	
markwhentoggle	niup.html#markwhentoggle,Tree_t	niup: markwhentoggle(ih: Tree_t): bool	
maxsize=	niup.html#maxsize=,Tree_t,string	niup: maxsize=(ih: Tree_t; value: string)	
maxsize	niup.html#maxsize,Tree_t,string	niup: maxsize(ih: Tree_t; value: string)	
maxsize=	niup.html#maxsize=,Tree_t,int,int	niup: maxsize=(ih: Tree_t; width, height: int)	
maxsize	niup.html#maxsize,Tree_t,int,int	niup: maxsize(ih: Tree_t; width, height: int)	
maxsize	niup.html#maxsize,Tree_t	niup: maxsize(ih: Tree_t): string	
minsize=	niup.html#minsize=,Tree_t,string	niup: minsize=(ih: Tree_t; value: string)	
minsize	niup.html#minsize,Tree_t,string	niup: minsize(ih: Tree_t; value: string)	
minsize=	niup.html#minsize=,Tree_t,int,int	niup: minsize=(ih: Tree_t; width, height: int)	
minsize	niup.html#minsize,Tree_t,int,int	niup: minsize(ih: Tree_t; width, height: int)	
minsize	niup.html#minsize,Tree_t	niup: minsize(ih: Tree_t): string	
name=	niup.html#name=,Tree_t,string	niup: name=(ih: Tree_t; value: string)	
name	niup.html#name,Tree_t,string	niup: name(ih: Tree_t; value: string)	
name	niup.html#name,Tree_t	niup: name(ih: Tree_t): string	
naturalsize	niup.html#naturalsize,Tree_t	niup: naturalsize(ih: Tree_t): string	
normalizergroup=	niup.html#normalizergroup=,Tree_t,string	niup: normalizergroup=(ih: Tree_t; value: string)	
normalizergroup	niup.html#normalizergroup,Tree_t,string	niup: normalizergroup(ih: Tree_t; value: string)	
normalizergroup	niup.html#normalizergroup,Tree_t	niup: normalizergroup(ih: Tree_t): string	
ntheme=	niup.html#ntheme=,Tree_t,string	niup: ntheme=(ih: Tree_t; value: string)	
ntheme	niup.html#ntheme,Tree_t,string	niup: ntheme(ih: Tree_t; value: string)	
ntheme	niup.html#ntheme,Tree_t	niup: ntheme(ih: Tree_t): string	
pangofontdesc	niup.html#pangofontdesc,Tree_t	niup: pangofontdesc(ih: Tree_t): string	
pangolayout	niup.html#pangolayout,Tree_t	niup: pangolayout(ih: Tree_t): string	
position=	niup.html#position=,Tree_t,string	niup: position=(ih: Tree_t; value: string)	
position	niup.html#position,Tree_t,string	niup: position(ih: Tree_t; value: string)	
position=	niup.html#position=,Tree_t,int,int	niup: position=(ih: Tree_t; x, y: int)	
position	niup.html#position,Tree_t,int,int	niup: position(ih: Tree_t; x, y: int)	
position	niup.html#position,Tree_t	niup: position(ih: Tree_t): string	
propagatefocus=	niup.html#propagatefocus=,Tree_t,string	niup: propagatefocus=(ih: Tree_t; value: string)	
propagatefocus	niup.html#propagatefocus,Tree_t,string	niup: propagatefocus(ih: Tree_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Tree_t,bool	niup: propagatefocus=(ih: Tree_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Tree_t,bool	niup: propagatefocus(ih: Tree_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Tree_t	niup: propagatefocus(ih: Tree_t): bool	
rastersize=	niup.html#rastersize=,Tree_t,string	niup: rastersize=(ih: Tree_t; value: string)	
rastersize	niup.html#rastersize,Tree_t,string	niup: rastersize(ih: Tree_t; value: string)	
rastersize=	niup.html#rastersize=,Tree_t,int,int	niup: rastersize=(ih: Tree_t; width, height: int)	
rastersize	niup.html#rastersize,Tree_t,int,int	niup: rastersize(ih: Tree_t; width, height: int)	
rastersize	niup.html#rastersize,Tree_t	niup: rastersize(ih: Tree_t): string	
rename=	niup.html#rename=,Tree_t	niup: rename=(ih: Tree_t)	
rename	niup.html#rename,Tree_t	niup: rename(ih: Tree_t)	
renamecaret=	niup.html#renamecaret=,Tree_t,string	niup: renamecaret=(ih: Tree_t; value: string)	
renamecaret	niup.html#renamecaret,Tree_t,string	niup: renamecaret(ih: Tree_t; value: string)	
renamecaret	niup.html#renamecaret,Tree_t	niup: renamecaret(ih: Tree_t): string	
renameselection=	niup.html#renameselection=,Tree_t,string	niup: renameselection=(ih: Tree_t; value: string)	
renameselection	niup.html#renameselection,Tree_t,string	niup: renameselection(ih: Tree_t; value: string)	
renameselection	niup.html#renameselection,Tree_t	niup: renameselection(ih: Tree_t): string	
rootcount	niup.html#rootcount,Tree_t	niup: rootcount(ih: Tree_t): string	
rubberband=	niup.html#rubberband=,Tree_t,string	niup: rubberband=(ih: Tree_t; value: string)	
rubberband	niup.html#rubberband,Tree_t,string	niup: rubberband(ih: Tree_t; value: string)	
rubberband	niup.html#rubberband,Tree_t	niup: rubberband(ih: Tree_t): string	
screenposition	niup.html#screenposition,Tree_t	niup: screenposition(ih: Tree_t): string	
shift	niup.html#shift,Tree_t	niup: shift(ih: Tree_t): string	
showdragdrop=	niup.html#showdragdrop=,Tree_t,string	niup: showdragdrop=(ih: Tree_t; value: string)	
showdragdrop	niup.html#showdragdrop,Tree_t,string	niup: showdragdrop(ih: Tree_t; value: string)	
showdragdrop=	niup.html#showdragdrop=,Tree_t,bool	niup: showdragdrop=(ih: Tree_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,Tree_t,bool	niup: showdragdrop(ih: Tree_t; yes: bool)	
showdragdrop	niup.html#showdragdrop,Tree_t	niup: showdragdrop(ih: Tree_t): bool	
showrename=	niup.html#showrename=,Tree_t,string	niup: showrename=(ih: Tree_t; value: string)	
showrename	niup.html#showrename,Tree_t,string	niup: showrename(ih: Tree_t; value: string)	
showrename=	niup.html#showrename=,Tree_t,bool	niup: showrename=(ih: Tree_t; yes: bool)	
showrename	niup.html#showrename,Tree_t,bool	niup: showrename(ih: Tree_t; yes: bool)	
showrename	niup.html#showrename,Tree_t	niup: showrename(ih: Tree_t): bool	
showtoggle=	niup.html#showtoggle=,Tree_t,string	niup: showtoggle=(ih: Tree_t; value: string)	
showtoggle	niup.html#showtoggle,Tree_t,string	niup: showtoggle(ih: Tree_t; value: string)	
showtoggle=	niup.html#showtoggle=,Tree_t,bool	niup: showtoggle=(ih: Tree_t; yes: bool)	
showtoggle	niup.html#showtoggle,Tree_t,bool	niup: showtoggle(ih: Tree_t; yes: bool)	
showtoggle	niup.html#showtoggle,Tree_t	niup: showtoggle(ih: Tree_t): bool	
size=	niup.html#size=,Tree_t,string	niup: size=(ih: Tree_t; value: string)	
size	niup.html#size,Tree_t,string	niup: size(ih: Tree_t; value: string)	
size=	niup.html#size=,Tree_t,int,int	niup: size=(ih: Tree_t; width, height: int)	
size	niup.html#size,Tree_t,int,int	niup: size(ih: Tree_t; width, height: int)	
size	niup.html#size,Tree_t	niup: size(ih: Tree_t): string	
spacing=	niup.html#spacing=,Tree_t,string	niup: spacing=(ih: Tree_t; value: string)	
spacing	niup.html#spacing,Tree_t,string	niup: spacing(ih: Tree_t; value: string)	
spacing=	niup.html#spacing=,Tree_t,int	niup: spacing=(ih: Tree_t; x: int)	
spacing	niup.html#spacing,Tree_t,int	niup: spacing(ih: Tree_t; x: int)	
spacing	niup.html#spacing,Tree_t	niup: spacing(ih: Tree_t): string	
starting	niup.html#starting,Tree_t	niup: starting(ih: Tree_t): string	
theme=	niup.html#theme=,Tree_t,string	niup: theme=(ih: Tree_t; value: string)	
theme	niup.html#theme,Tree_t,string	niup: theme(ih: Tree_t; value: string)	
theme	niup.html#theme,Tree_t	niup: theme(ih: Tree_t): string	
tip=	niup.html#tip=,Tree_t,string	niup: tip=(ih: Tree_t; value: string)	
tip	niup.html#tip,Tree_t,string	niup: tip(ih: Tree_t; value: string)	
tip	niup.html#tip,Tree_t	niup: tip(ih: Tree_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Tree_t,string	niup: tipbgcolor=(ih: Tree_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Tree_t,string	niup: tipbgcolor(ih: Tree_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Tree_t,int,int,int,int	niup: tipbgcolor=(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Tree_t,int,int,int,int	niup: tipbgcolor(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Tree_t	niup: tipbgcolor(ih: Tree_t): string	
tipdelay=	niup.html#tipdelay=,Tree_t,string	niup: tipdelay=(ih: Tree_t; value: string)	
tipdelay	niup.html#tipdelay,Tree_t,string	niup: tipdelay(ih: Tree_t; value: string)	
tipdelay=	niup.html#tipdelay=,Tree_t,int	niup: tipdelay=(ih: Tree_t; x: int)	
tipdelay	niup.html#tipdelay,Tree_t,int	niup: tipdelay(ih: Tree_t; x: int)	
tipdelay	niup.html#tipdelay,Tree_t	niup: tipdelay(ih: Tree_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Tree_t,string	niup: tipfgcolor=(ih: Tree_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Tree_t,string	niup: tipfgcolor(ih: Tree_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Tree_t,int,int,int,int	niup: tipfgcolor=(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Tree_t,int,int,int,int	niup: tipfgcolor(ih: Tree_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Tree_t	niup: tipfgcolor(ih: Tree_t): string	
tipicon=	niup.html#tipicon=,Tree_t,string	niup: tipicon=(ih: Tree_t; value: string)	
tipicon	niup.html#tipicon,Tree_t,string	niup: tipicon(ih: Tree_t; value: string)	
tipicon	niup.html#tipicon,Tree_t	niup: tipicon(ih: Tree_t): string	
tipmarkup=	niup.html#tipmarkup=,Tree_t,string	niup: tipmarkup=(ih: Tree_t; value: string)	
tipmarkup	niup.html#tipmarkup,Tree_t,string	niup: tipmarkup(ih: Tree_t; value: string)	
tipmarkup	niup.html#tipmarkup,Tree_t	niup: tipmarkup(ih: Tree_t): string	
tiprect=	niup.html#tiprect=,Tree_t,string	niup: tiprect=(ih: Tree_t; value: string)	
tiprect	niup.html#tiprect,Tree_t,string	niup: tiprect(ih: Tree_t; value: string)	
tiprect=	niup.html#tiprect=,Tree_t,int,int,int,int	niup: tiprect=(ih: Tree_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Tree_t,int,int,int,int	niup: tiprect(ih: Tree_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Tree_t	niup: tiprect(ih: Tree_t): string	
tipvisible=	niup.html#tipvisible=,Tree_t,string	niup: tipvisible=(ih: Tree_t; value: string)	
tipvisible	niup.html#tipvisible,Tree_t,string	niup: tipvisible(ih: Tree_t; value: string)	
tipvisible=	niup.html#tipvisible=,Tree_t,bool	niup: tipvisible=(ih: Tree_t; yes: bool)	
tipvisible	niup.html#tipvisible,Tree_t,bool	niup: tipvisible(ih: Tree_t; yes: bool)	
tipvisible	niup.html#tipvisible,Tree_t	niup: tipvisible(ih: Tree_t): bool	
topitem=	niup.html#topitem=,Tree_t,string	niup: topitem=(ih: Tree_t; value: string)	
topitem	niup.html#topitem,Tree_t,string	niup: topitem(ih: Tree_t; value: string)	
topitem=	niup.html#topitem=,Tree_t,int	niup: topitem=(ih: Tree_t; x: int)	
topitem	niup.html#topitem,Tree_t,int	niup: topitem(ih: Tree_t; x: int)	
usersize=	niup.html#usersize=,Tree_t,string	niup: usersize=(ih: Tree_t; value: string)	
usersize	niup.html#usersize,Tree_t,string	niup: usersize(ih: Tree_t; value: string)	
usersize=	niup.html#usersize=,Tree_t,int,int	niup: usersize=(ih: Tree_t; width, height: int)	
usersize	niup.html#usersize,Tree_t,int,int	niup: usersize(ih: Tree_t; width, height: int)	
usersize	niup.html#usersize,Tree_t	niup: usersize(ih: Tree_t): string	
value=	niup.html#value=,Tree_t,string	niup: value=(ih: Tree_t; value: string)	
value	niup.html#value,Tree_t,string	niup: value(ih: Tree_t; value: string)	
value=	niup.html#value=,Tree_t,int	niup: value=(ih: Tree_t; x: int)	
value	niup.html#value,Tree_t,int	niup: value(ih: Tree_t; x: int)	
value	niup.html#value,Tree_t	niup: value(ih: Tree_t): string	
visible=	niup.html#visible=,Tree_t,string	niup: visible=(ih: Tree_t; value: string)	
visible	niup.html#visible,Tree_t,string	niup: visible(ih: Tree_t; value: string)	
visible=	niup.html#visible=,Tree_t,bool	niup: visible=(ih: Tree_t; yes: bool)	
visible	niup.html#visible,Tree_t,bool	niup: visible(ih: Tree_t; yes: bool)	
visible	niup.html#visible,Tree_t	niup: visible(ih: Tree_t): bool	
wid	niup.html#wid,Tree_t	niup: wid(ih: Tree_t): string	
x	niup.html#x,Tree_t	niup: x(ih: Tree_t): string	
xfontid	niup.html#xfontid,Tree_t	niup: xfontid(ih: Tree_t): string	
y	niup.html#y,Tree_t	niup: y(ih: Tree_t): string	
zorder=	niup.html#zorder=,Tree_t,string	niup: zorder=(ih: Tree_t; value: string)	
zorder	niup.html#zorder,Tree_t,string	niup: zorder(ih: Tree_t; value: string)	
branchclose_cb=	niup.html#branchclose_cb=,Tree_t,proc(PIhandle,cint)	niup: branchclose_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchclose_cb	niup.html#branchclose_cb,Tree_t,proc(PIhandle,cint)	niup: branchclose_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchclose_cb	niup.html#branchclose_cb,Tree_t	niup: branchclose_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
branchopen_cb=	niup.html#branchopen_cb=,Tree_t,proc(PIhandle,cint)	niup: branchopen_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchopen_cb	niup.html#branchopen_cb,Tree_t,proc(PIhandle,cint)	niup: branchopen_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
branchopen_cb	niup.html#branchopen_cb,Tree_t	niup: branchopen_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
button_cb=	niup.html#button_cb=,Tree_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                 arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Tree_t,proc(PIhandle,cint,cint,cint,cint,cstring)	niup: button_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint; arg3: cint;\n                                arg4: cint; arg5: cint; arg6: cstring): cint {.\n    cdecl.})	
button_cb	niup.html#button_cb,Tree_t	niup: button_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Tree_t,proc(PIhandle)	niup: destroy_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Tree_t,proc(PIhandle)	niup: destroy_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Tree_t	niup: destroy_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragbegin_cb=	niup.html#dragbegin_cb=,Tree_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb=(ih: Tree_t;\n              cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Tree_t,proc(PIhandle,cint,cint)	niup: dragbegin_cb(ih: Tree_t;\n             cb: proc (ih: PIhandle; x: cint; y: cint): cint {.cdecl.})	
dragbegin_cb	niup.html#dragbegin_cb,Tree_t	niup: dragbegin_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdatasize_cb=	niup.html#dragdatasize_cb=,Tree_t,proc(PIhandle,cstring)	niup: dragdatasize_cb=(ih: Tree_t;\n                 cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Tree_t,proc(PIhandle,cstring)	niup: dragdatasize_cb(ih: Tree_t;\n                cb: proc (ih: PIhandle; dragtype: cstring): cint {.cdecl.})	
dragdatasize_cb	niup.html#dragdatasize_cb,Tree_t	niup: dragdatasize_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdata_cb=	niup.html#dragdata_cb=,Tree_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb=(ih: Tree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Tree_t,proc(PIhandle,cstring,pointer,cint)	niup: dragdata_cb(ih: Tree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size: cint): cint {.cdecl.})	
dragdata_cb	niup.html#dragdata_cb,Tree_t	niup: dragdata_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragdrop_cb=	niup.html#dragdrop_cb=,Tree_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb=(ih: Tree_t; cb: proc (ih: PIhandle;\n                                   drag_id, drop_id, isshift, iscontrol: cint): cint {.\n    cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,Tree_t,proc(PIhandle,cint,cint,cint,cint)	niup: dragdrop_cb(ih: Tree_t; cb: proc (ih: PIhandle;\n                                  drag_id, drop_id, isshift, iscontrol: cint): cint {.\n    cdecl.})	
dragdrop_cb	niup.html#dragdrop_cb,Tree_t	niup: dragdrop_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dragend_cb=	niup.html#dragend_cb=,Tree_t,proc(PIhandle,cint)	niup: dragend_cb=(ih: Tree_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Tree_t,proc(PIhandle,cint)	niup: dragend_cb(ih: Tree_t; cb: proc (ih: PIhandle; action: cint): cint {.cdecl.})	
dragend_cb	niup.html#dragend_cb,Tree_t	niup: dragend_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dropdata_cb=	niup.html#dropdata_cb=,Tree_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb=(ih: Tree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                   data: pointer; size, x, y: cint): cint {.\n    cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Tree_t,proc(PIhandle,cstring,pointer,cint,cint,cint)	niup: dropdata_cb(ih: Tree_t; cb: proc (ih: PIhandle; dragtype: cstring;\n                                  data: pointer; size, x, y: cint): cint {.cdecl.})	
dropdata_cb	niup.html#dropdata_cb,Tree_t	niup: dropdata_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dropfiles_cb=	niup.html#dropfiles_cb=,Tree_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb=(ih: Tree_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                    num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Tree_t,proc(PIhandle,cstring,cint,cint,cint)	niup: dropfiles_cb(ih: Tree_t; cb: proc (Ih: PIhandle; filename: cstring;\n                                   num, x, y: cint): cint {.cdecl.})	
dropfiles_cb	niup.html#dropfiles_cb,Tree_t	niup: dropfiles_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
dropmotion_cb=	niup.html#dropmotion_cb=,Tree_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb=(ih: Tree_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Tree_t,proc(PIhandle,cint,cint,cstring)	niup: dropmotion_cb(ih: Tree_t; cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.\n    cdecl.})	
dropmotion_cb	niup.html#dropmotion_cb,Tree_t	niup: dropmotion_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Tree_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Tree_t,proc(PIhandle)	niup: enterwindow_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Tree_t	niup: enterwindow_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
executebranch_cb=	niup.html#executebranch_cb=,Tree_t,proc(PIhandle,cint)	niup: executebranch_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executebranch_cb	niup.html#executebranch_cb,Tree_t,proc(PIhandle,cint)	niup: executebranch_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executebranch_cb	niup.html#executebranch_cb,Tree_t	niup: executebranch_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
executeleaf_cb=	niup.html#executeleaf_cb=,Tree_t,proc(PIhandle,cint)	niup: executeleaf_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executeleaf_cb	niup.html#executeleaf_cb,Tree_t,proc(PIhandle,cint)	niup: executeleaf_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
executeleaf_cb	niup.html#executeleaf_cb,Tree_t	niup: executeleaf_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Tree_t,proc(PIhandle)	niup: getfocus_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Tree_t,proc(PIhandle)	niup: getfocus_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Tree_t	niup: getfocus_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Tree_t,proc(PIhandle)	niup: help_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Tree_t,proc(PIhandle)	niup: help_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Tree_t	niup: help_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Tree_t,proc(PIhandle)	niup: killfocus_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Tree_t,proc(PIhandle)	niup: killfocus_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Tree_t	niup: killfocus_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Tree_t,proc(PIhandle,cint)	niup: k_any=(ih: Tree_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Tree_t,proc(PIhandle,cint)	niup: k_any(ih: Tree_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Tree_t	niup: k_any(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Tree_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Tree_t,proc(PIhandle)	niup: ldestroy_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Tree_t	niup: ldestroy_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Tree_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Tree_t,proc(PIhandle)	niup: leavewindow_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Tree_t	niup: leavewindow_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Tree_t,proc(PIhandle)	niup: map_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Tree_t,proc(PIhandle)	niup: map_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Tree_t	niup: map_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
motion_cb=	niup.html#motion_cb=,Tree_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb=(ih: Tree_t;\n           cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Tree_t,proc(PIhandle,cint,cint,cstring)	niup: motion_cb(ih: Tree_t;\n          cb: proc (ih: PIhandle; x, y: cint; status: cstring): cint {.cdecl.})	
motion_cb	niup.html#motion_cb,Tree_t	niup: motion_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
multiselection_cb=	niup.html#multiselection_cb=,Tree_t,proc(PIhandle,ptr.cint,cint)	niup: multiselection_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiselection_cb	niup.html#multiselection_cb,Tree_t,proc(PIhandle,ptr.cint,cint)	niup: multiselection_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: ptr cint; arg3: cint): cint {.\n    cdecl.})	
multiselection_cb	niup.html#multiselection_cb,Tree_t	niup: multiselection_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
multiunselection_cb=	niup.html#multiunselection_cb=,Tree_t,proc(PIhandle,ptr.cint,cint)	niup: multiunselection_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiunselection_cb	niup.html#multiunselection_cb,Tree_t,proc(PIhandle,ptr.cint,cint)	niup: multiunselection_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: ptr cint;\n    arg3: cint): cint {.cdecl.})	
multiunselection_cb	niup.html#multiunselection_cb,Tree_t	niup: multiunselection_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
noderemoved_cb=	niup.html#noderemoved_cb=,Tree_t,proc(PIhandle,cstring)	niup: noderemoved_cb=(ih: Tree_t;\n                cb: proc (ih: PIhandle; arg2: cstring): cint {.cdecl.})	
noderemoved_cb	niup.html#noderemoved_cb,Tree_t,proc(PIhandle,cstring)	niup: noderemoved_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cstring): cint {.cdecl.})	
noderemoved_cb	niup.html#noderemoved_cb,Tree_t	niup: noderemoved_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Tree_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Tree_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Tree_t	niup: postmessage_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
rename_cb=	niup.html#rename_cb=,Tree_t,proc(PIhandle,cint,cstring)	niup: rename_cb=(ih: Tree_t;\n           cb: proc (ih: PIhandle; arg2: cint; arg3: cstring): cint {.cdecl.})	
rename_cb	niup.html#rename_cb,Tree_t,proc(PIhandle,cint,cstring)	niup: rename_cb(ih: Tree_t;\n          cb: proc (ih: PIhandle; arg2: cint; arg3: cstring): cint {.cdecl.})	
rename_cb	niup.html#rename_cb,Tree_t	niup: rename_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
rightclick_cb=	niup.html#rightclick_cb=,Tree_t,proc(PIhandle,cint)	niup: rightclick_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,Tree_t,proc(PIhandle,cint)	niup: rightclick_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
rightclick_cb	niup.html#rightclick_cb,Tree_t	niup: rightclick_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
selection_cb=	niup.html#selection_cb=,Tree_t,proc(PIhandle,cint,cint)	niup: selection_cb=(ih: Tree_t;\n              cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
selection_cb	niup.html#selection_cb,Tree_t,proc(PIhandle,cint,cint)	niup: selection_cb(ih: Tree_t;\n             cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
selection_cb	niup.html#selection_cb,Tree_t	niup: selection_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
showrename_cb=	niup.html#showrename_cb=,Tree_t,proc(PIhandle,cint)	niup: showrename_cb=(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
showrename_cb	niup.html#showrename_cb,Tree_t,proc(PIhandle,cint)	niup: showrename_cb(ih: Tree_t; cb: proc (ih: PIhandle; arg2: cint): cint {.cdecl.})	
showrename_cb	niup.html#showrename_cb,Tree_t	niup: showrename_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
togglevalue_cb=	niup.html#togglevalue_cb=,Tree_t,proc(PIhandle,cint,cint)	niup: togglevalue_cb=(ih: Tree_t;\n                cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
togglevalue_cb	niup.html#togglevalue_cb,Tree_t,proc(PIhandle,cint,cint)	niup: togglevalue_cb(ih: Tree_t;\n               cb: proc (ih: PIhandle; arg2: cint; arg3: cint): cint {.cdecl.})	
togglevalue_cb	niup.html#togglevalue_cb,Tree_t	niup: togglevalue_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Tree_t,proc(PIhandle)	niup: unmap_cb=(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Tree_t,proc(PIhandle)	niup: unmap_cb(ih: Tree_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Tree_t	niup: unmap_cb(ih: Tree_t): proc (ih: PIhandle): cint {.cdecl.}	
User	niup.html#User	niup: User(): User_t	
alignment=	niup.html#alignment=,User_t,string	niup: alignment=(ih: User_t; value: string)	
alignment	niup.html#alignment,User_t,string	niup: alignment(ih: User_t; value: string)	
bgcolor=	niup.html#bgcolor=,User_t,int,int,int,int	niup: bgcolor=(ih: User_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,User_t,int,int,int,int	niup: bgcolor(ih: User_t; red, green, blue: int; alpha: int = 255)	
bulk=	niup.html#bulk=,User_t,string	niup: bulk=(ih: User_t; value: string)	
bulk	niup.html#bulk,User_t,string	niup: bulk(ih: User_t; value: string)	
cleanout=	niup.html#cleanout=,User_t,string	niup: cleanout=(ih: User_t; value: string)	
cleanout	niup.html#cleanout,User_t,string	niup: cleanout(ih: User_t; value: string)	
clearattributes=	niup.html#clearattributes=,User_t,string	niup: clearattributes=(ih: User_t; value: string)	
clearattributes	niup.html#clearattributes,User_t,string	niup: clearattributes(ih: User_t; value: string)	
disabled=	niup.html#disabled=,User_t,string	niup: disabled=(ih: User_t; value: string)	
disabled	niup.html#disabled,User_t,string	niup: disabled(ih: User_t; value: string)	
fgcolor=	niup.html#fgcolor=,User_t,string	niup: fgcolor=(ih: User_t; value: string)	
fgcolor	niup.html#fgcolor,User_t,string	niup: fgcolor(ih: User_t; value: string)	
fontface=	niup.html#fontface=,User_t,string	niup: fontface=(ih: User_t; value: string)	
fontface	niup.html#fontface,User_t,string	niup: fontface(ih: User_t; value: string)	
fontscale=	niup.html#fontscale=,User_t,string	niup: fontscale=(ih: User_t; value: string)	
fontscale	niup.html#fontscale,User_t,string	niup: fontscale(ih: User_t; value: string)	
fontsize=	niup.html#fontsize=,User_t,string	niup: fontsize=(ih: User_t; value: string)	
fontsize	niup.html#fontsize,User_t,string	niup: fontsize(ih: User_t; value: string)	
indent=	niup.html#indent=,User_t,string	niup: indent=(ih: User_t; value: string)	
indent	niup.html#indent,User_t,string	niup: indent(ih: User_t; value: string)	
italic=	niup.html#italic=,User_t,string	niup: italic=(ih: User_t; value: string)	
italic	niup.html#italic,User_t,string	niup: italic(ih: User_t; value: string)	
italic=	niup.html#italic=,User_t,bool	niup: italic=(ih: User_t; yes: bool)	
italic	niup.html#italic,User_t,bool	niup: italic(ih: User_t; yes: bool)	
language=	niup.html#language=,User_t,string	niup: language=(ih: User_t; value: string)	
language	niup.html#language,User_t,string	niup: language(ih: User_t; value: string)	
linespacing=	niup.html#linespacing=,User_t,string	niup: linespacing=(ih: User_t; value: string)	
linespacing	niup.html#linespacing,User_t,string	niup: linespacing(ih: User_t; value: string)	
name=	niup.html#name=,User_t,string	niup: name=(ih: User_t; value: string)	
name	niup.html#name,User_t,string	niup: name(ih: User_t; value: string)	
numbering=	niup.html#numbering=,User_t,string	niup: numbering=(ih: User_t; value: string)	
numbering	niup.html#numbering,User_t,string	niup: numbering(ih: User_t; value: string)	
numberingstyle=	niup.html#numberingstyle=,User_t,string	niup: numberingstyle=(ih: User_t; value: string)	
numberingstyle	niup.html#numberingstyle,User_t,string	niup: numberingstyle(ih: User_t; value: string)	
numberingtab=	niup.html#numberingtab=,User_t,string	niup: numberingtab=(ih: User_t; value: string)	
numberingtab	niup.html#numberingtab,User_t,string	niup: numberingtab(ih: User_t; value: string)	
protected=	niup.html#protected=,User_t,string	niup: protected=(ih: User_t; value: string)	
protected	niup.html#protected,User_t,string	niup: protected(ih: User_t; value: string)	
rise=	niup.html#rise=,User_t,string	niup: rise=(ih: User_t; value: string)	
rise	niup.html#rise,User_t,string	niup: rise(ih: User_t; value: string)	
selection=	niup.html#selection=,User_t,string	niup: selection=(ih: User_t; value: string)	
selection	niup.html#selection,User_t,string	niup: selection(ih: User_t; value: string)	
selectionpos=	niup.html#selectionpos=,User_t,string	niup: selectionpos=(ih: User_t; value: string)	
selectionpos	niup.html#selectionpos,User_t,string	niup: selectionpos(ih: User_t; value: string)	
smallcaps=	niup.html#smallcaps=,User_t,string	niup: smallcaps=(ih: User_t; value: string)	
smallcaps	niup.html#smallcaps,User_t,string	niup: smallcaps(ih: User_t; value: string)	
spaceafter=	niup.html#spaceafter=,User_t,string	niup: spaceafter=(ih: User_t; value: string)	
spaceafter	niup.html#spaceafter,User_t,string	niup: spaceafter(ih: User_t; value: string)	
spacebefore=	niup.html#spacebefore=,User_t,string	niup: spacebefore=(ih: User_t; value: string)	
spacebefore	niup.html#spacebefore,User_t,string	niup: spacebefore(ih: User_t; value: string)	
stretch=	niup.html#stretch=,User_t,string	niup: stretch=(ih: User_t; value: string)	
stretch	niup.html#stretch,User_t,string	niup: stretch(ih: User_t; value: string)	
strikeout=	niup.html#strikeout=,User_t,string	niup: strikeout=(ih: User_t; value: string)	
strikeout	niup.html#strikeout,User_t,string	niup: strikeout(ih: User_t; value: string)	
strikeout=	niup.html#strikeout=,User_t,bool	niup: strikeout=(ih: User_t; yes: bool)	
strikeout	niup.html#strikeout,User_t,bool	niup: strikeout(ih: User_t; yes: bool)	
tabsarray=	niup.html#tabsarray=,User_t,string	niup: tabsarray=(ih: User_t; value: string)	
tabsarray	niup.html#tabsarray,User_t,string	niup: tabsarray(ih: User_t; value: string)	
underline=	niup.html#underline=,User_t,string	niup: underline=(ih: User_t; value: string)	
underline	niup.html#underline,User_t,string	niup: underline(ih: User_t; value: string)	
units=	niup.html#units=,User_t,string	niup: units=(ih: User_t; value: string)	
units	niup.html#units,User_t,string	niup: units(ih: User_t; value: string)	
weight=	niup.html#weight=,User_t,string	niup: weight=(ih: User_t; value: string)	
weight	niup.html#weight,User_t,string	niup: weight(ih: User_t; value: string)	
destroy_cb=	niup.html#destroy_cb=,User_t,proc(PIhandle)	niup: destroy_cb=(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,User_t,proc(PIhandle)	niup: destroy_cb(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,User_t	niup: destroy_cb(ih: User_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,User_t,proc(PIhandle)	niup: ldestroy_cb=(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,User_t,proc(PIhandle)	niup: ldestroy_cb(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,User_t	niup: ldestroy_cb(ih: User_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,User_t,proc(PIhandle)	niup: map_cb=(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,User_t,proc(PIhandle)	niup: map_cb(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,User_t	niup: map_cb(ih: User_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,User_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: User_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,User_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: User_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,User_t	niup: postmessage_cb(ih: User_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,User_t,proc(PIhandle)	niup: unmap_cb=(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,User_t,proc(PIhandle)	niup: unmap_cb(ih: User_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,User_t	niup: unmap_cb(ih: User_t): proc (ih: PIhandle): cint {.cdecl.}	
Val	niup.html#Val,string	niup: Val(type: string): Val_t	
active=	niup.html#active=,Val_t,string	niup: active=(ih: Val_t; value: string)	
active	niup.html#active,Val_t,string	niup: active(ih: Val_t; value: string)	
active=	niup.html#active=,Val_t,bool	niup: active=(ih: Val_t; yes: bool)	
active	niup.html#active,Val_t,bool	niup: active(ih: Val_t; yes: bool)	
active	niup.html#active,Val_t	niup: active(ih: Val_t): bool	
bgcolor=	niup.html#bgcolor=,Val_t,string	niup: bgcolor=(ih: Val_t; value: string)	
bgcolor	niup.html#bgcolor,Val_t,string	niup: bgcolor(ih: Val_t; value: string)	
bgcolor=	niup.html#bgcolor=,Val_t,int,int,int,int	niup: bgcolor=(ih: Val_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Val_t,int,int,int,int	niup: bgcolor(ih: Val_t; red, green, blue: int; alpha: int = 255)	
bgcolor	niup.html#bgcolor,Val_t	niup: bgcolor(ih: Val_t): string	
canfocus=	niup.html#canfocus=,Val_t,string	niup: canfocus=(ih: Val_t; value: string)	
canfocus	niup.html#canfocus,Val_t,string	niup: canfocus(ih: Val_t; value: string)	
canfocus=	niup.html#canfocus=,Val_t,bool	niup: canfocus=(ih: Val_t; yes: bool)	
canfocus	niup.html#canfocus,Val_t,bool	niup: canfocus(ih: Val_t; yes: bool)	
canfocus	niup.html#canfocus,Val_t	niup: canfocus(ih: Val_t): bool	
charsize	niup.html#charsize,Val_t	niup: charsize(ih: Val_t): string	
expand=	niup.html#expand=,Val_t,string	niup: expand=(ih: Val_t; value: string)	
expand	niup.html#expand,Val_t,string	niup: expand(ih: Val_t; value: string)	
expand	niup.html#expand,Val_t	niup: expand(ih: Val_t): string	
expandweight=	niup.html#expandweight=,Val_t,string	niup: expandweight=(ih: Val_t; value: string)	
expandweight	niup.html#expandweight,Val_t,string	niup: expandweight(ih: Val_t; value: string)	
expandweight=	niup.html#expandweight=,Val_t,int64	niup: expandweight=(ih: Val_t; x: int64)	
expandweight	niup.html#expandweight,Val_t,int64	niup: expandweight(ih: Val_t; x: int64)	
expandweight	niup.html#expandweight,Val_t	niup: expandweight(ih: Val_t): string	
floating=	niup.html#floating=,Val_t,string	niup: floating=(ih: Val_t; value: string)	
floating	niup.html#floating,Val_t,string	niup: floating(ih: Val_t; value: string)	
floating	niup.html#floating,Val_t	niup: floating(ih: Val_t): string	
font=	niup.html#font=,Val_t,string	niup: font=(ih: Val_t; value: string)	
font	niup.html#font,Val_t,string	niup: font(ih: Val_t; value: string)	
font	niup.html#font,Val_t	niup: font(ih: Val_t): string	
fontface=	niup.html#fontface=,Val_t,string	niup: fontface=(ih: Val_t; value: string)	
fontface	niup.html#fontface,Val_t,string	niup: fontface(ih: Val_t; value: string)	
fontface	niup.html#fontface,Val_t	niup: fontface(ih: Val_t): string	
fontsize=	niup.html#fontsize=,Val_t,string	niup: fontsize=(ih: Val_t; value: string)	
fontsize	niup.html#fontsize,Val_t,string	niup: fontsize(ih: Val_t; value: string)	
fontsize=	niup.html#fontsize=,Val_t,int	niup: fontsize=(ih: Val_t; x: int)	
fontsize	niup.html#fontsize,Val_t,int	niup: fontsize(ih: Val_t; x: int)	
fontsize	niup.html#fontsize,Val_t	niup: fontsize(ih: Val_t): string	
fontstyle=	niup.html#fontstyle=,Val_t,string	niup: fontstyle=(ih: Val_t; value: string)	
fontstyle	niup.html#fontstyle,Val_t,string	niup: fontstyle(ih: Val_t; value: string)	
fontstyle	niup.html#fontstyle,Val_t	niup: fontstyle(ih: Val_t): string	
handlename=	niup.html#handlename=,Val_t,string	niup: handlename=(ih: Val_t; value: string)	
handlename	niup.html#handlename,Val_t,string	niup: handlename(ih: Val_t; value: string)	
handlename	niup.html#handlename,Val_t	niup: handlename(ih: Val_t): string	
inverted	niup.html#inverted,Val_t	niup: inverted(ih: Val_t): string	
max=	niup.html#max=,Val_t,string	niup: max=(ih: Val_t; value: string)	
max	niup.html#max,Val_t,string	niup: max(ih: Val_t; value: string)	
max=	niup.html#max=,Val_t,int64	niup: max=(ih: Val_t; x: int64)	
max	niup.html#max,Val_t,int64	niup: max(ih: Val_t; x: int64)	
max	niup.html#max,Val_t	niup: max(ih: Val_t): string	
maxsize=	niup.html#maxsize=,Val_t,string	niup: maxsize=(ih: Val_t; value: string)	
maxsize	niup.html#maxsize,Val_t,string	niup: maxsize(ih: Val_t; value: string)	
maxsize=	niup.html#maxsize=,Val_t,int,int	niup: maxsize=(ih: Val_t; width, height: int)	
maxsize	niup.html#maxsize,Val_t,int,int	niup: maxsize(ih: Val_t; width, height: int)	
maxsize	niup.html#maxsize,Val_t	niup: maxsize(ih: Val_t): string	
min=	niup.html#min=,Val_t,string	niup: min=(ih: Val_t; value: string)	
min	niup.html#min,Val_t,string	niup: min(ih: Val_t; value: string)	
min=	niup.html#min=,Val_t,int64	niup: min=(ih: Val_t; x: int64)	
min	niup.html#min,Val_t,int64	niup: min(ih: Val_t; x: int64)	
min	niup.html#min,Val_t	niup: min(ih: Val_t): string	
minsize=	niup.html#minsize=,Val_t,string	niup: minsize=(ih: Val_t; value: string)	
minsize	niup.html#minsize,Val_t,string	niup: minsize(ih: Val_t; value: string)	
minsize=	niup.html#minsize=,Val_t,int,int	niup: minsize=(ih: Val_t; width, height: int)	
minsize	niup.html#minsize,Val_t,int,int	niup: minsize(ih: Val_t; width, height: int)	
minsize	niup.html#minsize,Val_t	niup: minsize(ih: Val_t): string	
name=	niup.html#name=,Val_t,string	niup: name=(ih: Val_t; value: string)	
name	niup.html#name,Val_t,string	niup: name(ih: Val_t; value: string)	
name	niup.html#name,Val_t	niup: name(ih: Val_t): string	
naturalsize	niup.html#naturalsize,Val_t	niup: naturalsize(ih: Val_t): string	
normalizergroup=	niup.html#normalizergroup=,Val_t,string	niup: normalizergroup=(ih: Val_t; value: string)	
normalizergroup	niup.html#normalizergroup,Val_t,string	niup: normalizergroup(ih: Val_t; value: string)	
normalizergroup	niup.html#normalizergroup,Val_t	niup: normalizergroup(ih: Val_t): string	
ntheme=	niup.html#ntheme=,Val_t,string	niup: ntheme=(ih: Val_t; value: string)	
ntheme	niup.html#ntheme,Val_t,string	niup: ntheme(ih: Val_t; value: string)	
ntheme	niup.html#ntheme,Val_t	niup: ntheme(ih: Val_t): string	
orientation=	niup.html#orientation=,Val_t,string	niup: orientation=(ih: Val_t; value: string)	
orientation	niup.html#orientation,Val_t,string	niup: orientation(ih: Val_t; value: string)	
orientation	niup.html#orientation,Val_t	niup: orientation(ih: Val_t): string	
pagestep	niup.html#pagestep,Val_t	niup: pagestep(ih: Val_t): string	
pangofontdesc	niup.html#pangofontdesc,Val_t	niup: pangofontdesc(ih: Val_t): string	
pangolayout	niup.html#pangolayout,Val_t	niup: pangolayout(ih: Val_t): string	
position=	niup.html#position=,Val_t,string	niup: position=(ih: Val_t; value: string)	
position	niup.html#position,Val_t,string	niup: position(ih: Val_t; value: string)	
position=	niup.html#position=,Val_t,int,int	niup: position=(ih: Val_t; x, y: int)	
position	niup.html#position,Val_t,int,int	niup: position(ih: Val_t; x, y: int)	
position	niup.html#position,Val_t	niup: position(ih: Val_t): string	
propagatefocus=	niup.html#propagatefocus=,Val_t,string	niup: propagatefocus=(ih: Val_t; value: string)	
propagatefocus	niup.html#propagatefocus,Val_t,string	niup: propagatefocus(ih: Val_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Val_t,bool	niup: propagatefocus=(ih: Val_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Val_t,bool	niup: propagatefocus(ih: Val_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Val_t	niup: propagatefocus(ih: Val_t): bool	
rastersize=	niup.html#rastersize=,Val_t,string	niup: rastersize=(ih: Val_t; value: string)	
rastersize	niup.html#rastersize,Val_t,string	niup: rastersize(ih: Val_t; value: string)	
rastersize=	niup.html#rastersize=,Val_t,int,int	niup: rastersize=(ih: Val_t; width, height: int)	
rastersize	niup.html#rastersize,Val_t,int,int	niup: rastersize(ih: Val_t; width, height: int)	
rastersize	niup.html#rastersize,Val_t	niup: rastersize(ih: Val_t): string	
screenposition	niup.html#screenposition,Val_t	niup: screenposition(ih: Val_t): string	
showticks	niup.html#showticks,Val_t	niup: showticks(ih: Val_t): string	
size=	niup.html#size=,Val_t,string	niup: size=(ih: Val_t; value: string)	
size	niup.html#size,Val_t,string	niup: size(ih: Val_t; value: string)	
size=	niup.html#size=,Val_t,int,int	niup: size=(ih: Val_t; width, height: int)	
size	niup.html#size,Val_t,int,int	niup: size(ih: Val_t; width, height: int)	
size	niup.html#size,Val_t	niup: size(ih: Val_t): string	
step=	niup.html#step=,Val_t,string	niup: step=(ih: Val_t; value: string)	
step	niup.html#step,Val_t,string	niup: step(ih: Val_t; value: string)	
step=	niup.html#step=,Val_t,int64	niup: step=(ih: Val_t; x: int64)	
step	niup.html#step,Val_t,int64	niup: step(ih: Val_t; x: int64)	
step	niup.html#step,Val_t	niup: step(ih: Val_t): string	
theme=	niup.html#theme=,Val_t,string	niup: theme=(ih: Val_t; value: string)	
theme	niup.html#theme,Val_t,string	niup: theme(ih: Val_t; value: string)	
theme	niup.html#theme,Val_t	niup: theme(ih: Val_t): string	
tickspos	niup.html#tickspos,Val_t	niup: tickspos(ih: Val_t): string	
tip=	niup.html#tip=,Val_t,string	niup: tip=(ih: Val_t; value: string)	
tip	niup.html#tip,Val_t,string	niup: tip(ih: Val_t; value: string)	
tip	niup.html#tip,Val_t	niup: tip(ih: Val_t): string	
tipbgcolor=	niup.html#tipbgcolor=,Val_t,string	niup: tipbgcolor=(ih: Val_t; value: string)	
tipbgcolor	niup.html#tipbgcolor,Val_t,string	niup: tipbgcolor(ih: Val_t; value: string)	
tipbgcolor=	niup.html#tipbgcolor=,Val_t,int,int,int,int	niup: tipbgcolor=(ih: Val_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Val_t,int,int,int,int	niup: tipbgcolor(ih: Val_t; red, green, blue: int; alpha: int = 255)	
tipbgcolor	niup.html#tipbgcolor,Val_t	niup: tipbgcolor(ih: Val_t): string	
tipdelay=	niup.html#tipdelay=,Val_t,string	niup: tipdelay=(ih: Val_t; value: string)	
tipdelay	niup.html#tipdelay,Val_t,string	niup: tipdelay(ih: Val_t; value: string)	
tipdelay=	niup.html#tipdelay=,Val_t,int	niup: tipdelay=(ih: Val_t; x: int)	
tipdelay	niup.html#tipdelay,Val_t,int	niup: tipdelay(ih: Val_t; x: int)	
tipdelay	niup.html#tipdelay,Val_t	niup: tipdelay(ih: Val_t): string	
tipfgcolor=	niup.html#tipfgcolor=,Val_t,string	niup: tipfgcolor=(ih: Val_t; value: string)	
tipfgcolor	niup.html#tipfgcolor,Val_t,string	niup: tipfgcolor(ih: Val_t; value: string)	
tipfgcolor=	niup.html#tipfgcolor=,Val_t,int,int,int,int	niup: tipfgcolor=(ih: Val_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Val_t,int,int,int,int	niup: tipfgcolor(ih: Val_t; red, green, blue: int; alpha: int = 255)	
tipfgcolor	niup.html#tipfgcolor,Val_t	niup: tipfgcolor(ih: Val_t): string	
tipicon=	niup.html#tipicon=,Val_t,string	niup: tipicon=(ih: Val_t; value: string)	
tipicon	niup.html#tipicon,Val_t,string	niup: tipicon(ih: Val_t; value: string)	
tipicon	niup.html#tipicon,Val_t	niup: tipicon(ih: Val_t): string	
tipmarkup=	niup.html#tipmarkup=,Val_t,string	niup: tipmarkup=(ih: Val_t; value: string)	
tipmarkup	niup.html#tipmarkup,Val_t,string	niup: tipmarkup(ih: Val_t; value: string)	
tipmarkup	niup.html#tipmarkup,Val_t	niup: tipmarkup(ih: Val_t): string	
tiprect=	niup.html#tiprect=,Val_t,string	niup: tiprect=(ih: Val_t; value: string)	
tiprect	niup.html#tiprect,Val_t,string	niup: tiprect(ih: Val_t; value: string)	
tiprect=	niup.html#tiprect=,Val_t,int,int,int,int	niup: tiprect=(ih: Val_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Val_t,int,int,int,int	niup: tiprect(ih: Val_t; x1, y1, x2, y2: int)	
tiprect	niup.html#tiprect,Val_t	niup: tiprect(ih: Val_t): string	
tipvisible=	niup.html#tipvisible=,Val_t,string	niup: tipvisible=(ih: Val_t; value: string)	
tipvisible	niup.html#tipvisible,Val_t,string	niup: tipvisible(ih: Val_t; value: string)	
tipvisible=	niup.html#tipvisible=,Val_t,bool	niup: tipvisible=(ih: Val_t; yes: bool)	
tipvisible	niup.html#tipvisible,Val_t,bool	niup: tipvisible(ih: Val_t; yes: bool)	
tipvisible	niup.html#tipvisible,Val_t	niup: tipvisible(ih: Val_t): bool	
type=	niup.html#type=,Val_t,string	niup: type=(ih: Val_t; value: string)	
`type`	niup.html#type,Val_t,string	niup: `type`(ih: Val_t; value: string)	
`type`	niup.html#type,Val_t	niup: `type`(ih: Val_t): string	
usersize=	niup.html#usersize=,Val_t,string	niup: usersize=(ih: Val_t; value: string)	
usersize	niup.html#usersize,Val_t,string	niup: usersize(ih: Val_t; value: string)	
usersize=	niup.html#usersize=,Val_t,int,int	niup: usersize=(ih: Val_t; width, height: int)	
usersize	niup.html#usersize,Val_t,int,int	niup: usersize(ih: Val_t; width, height: int)	
usersize	niup.html#usersize,Val_t	niup: usersize(ih: Val_t): string	
value=	niup.html#value=,Val_t,string	niup: value=(ih: Val_t; value: string)	
value	niup.html#value,Val_t,string	niup: value(ih: Val_t; value: string)	
value	niup.html#value,Val_t	niup: value(ih: Val_t): string	
visible=	niup.html#visible=,Val_t,string	niup: visible=(ih: Val_t; value: string)	
visible	niup.html#visible,Val_t,string	niup: visible(ih: Val_t; value: string)	
visible=	niup.html#visible=,Val_t,bool	niup: visible=(ih: Val_t; yes: bool)	
visible	niup.html#visible,Val_t,bool	niup: visible(ih: Val_t; yes: bool)	
visible	niup.html#visible,Val_t	niup: visible(ih: Val_t): bool	
wid	niup.html#wid,Val_t	niup: wid(ih: Val_t): string	
x	niup.html#x,Val_t	niup: x(ih: Val_t): string	
xfontid	niup.html#xfontid,Val_t	niup: xfontid(ih: Val_t): string	
y	niup.html#y,Val_t	niup: y(ih: Val_t): string	
zorder=	niup.html#zorder=,Val_t,string	niup: zorder=(ih: Val_t; value: string)	
zorder	niup.html#zorder,Val_t,string	niup: zorder(ih: Val_t; value: string)	
button_press_cb=	niup.html#button_press_cb=,Val_t,proc(PIhandle,cdouble)	niup: button_press_cb=(ih: Val_t;\n                 cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_press_cb	niup.html#button_press_cb,Val_t,proc(PIhandle,cdouble)	niup: button_press_cb(ih: Val_t; cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_press_cb	niup.html#button_press_cb,Val_t	niup: button_press_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
button_release_cb=	niup.html#button_release_cb=,Val_t,proc(PIhandle,cdouble)	niup: button_release_cb=(ih: Val_t;\n                   cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_release_cb	niup.html#button_release_cb,Val_t,proc(PIhandle,cdouble)	niup: button_release_cb(ih: Val_t;\n                  cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
button_release_cb	niup.html#button_release_cb,Val_t	niup: button_release_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
destroy_cb=	niup.html#destroy_cb=,Val_t,proc(PIhandle)	niup: destroy_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Val_t,proc(PIhandle)	niup: destroy_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Val_t	niup: destroy_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
enterwindow_cb=	niup.html#enterwindow_cb=,Val_t,proc(PIhandle)	niup: enterwindow_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Val_t,proc(PIhandle)	niup: enterwindow_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
enterwindow_cb	niup.html#enterwindow_cb,Val_t	niup: enterwindow_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
getfocus_cb=	niup.html#getfocus_cb=,Val_t,proc(PIhandle)	niup: getfocus_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Val_t,proc(PIhandle)	niup: getfocus_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
getfocus_cb	niup.html#getfocus_cb,Val_t	niup: getfocus_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
help_cb=	niup.html#help_cb=,Val_t,proc(PIhandle)	niup: help_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Val_t,proc(PIhandle)	niup: help_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
help_cb	niup.html#help_cb,Val_t	niup: help_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
killfocus_cb=	niup.html#killfocus_cb=,Val_t,proc(PIhandle)	niup: killfocus_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Val_t,proc(PIhandle)	niup: killfocus_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
killfocus_cb	niup.html#killfocus_cb,Val_t	niup: killfocus_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
k_any=	niup.html#k_any=,Val_t,proc(PIhandle,cint)	niup: k_any=(ih: Val_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Val_t,proc(PIhandle,cint)	niup: k_any(ih: Val_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_any	niup.html#k_any,Val_t	niup: k_any(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Val_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Val_t,proc(PIhandle)	niup: ldestroy_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Val_t	niup: ldestroy_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
leavewindow_cb=	niup.html#leavewindow_cb=,Val_t,proc(PIhandle)	niup: leavewindow_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Val_t,proc(PIhandle)	niup: leavewindow_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
leavewindow_cb	niup.html#leavewindow_cb,Val_t	niup: leavewindow_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Val_t,proc(PIhandle)	niup: map_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Val_t,proc(PIhandle)	niup: map_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Val_t	niup: map_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
mousemove_cb=	niup.html#mousemove_cb=,Val_t,proc(PIhandle,cdouble)	niup: mousemove_cb=(ih: Val_t; cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
mousemove_cb	niup.html#mousemove_cb,Val_t,proc(PIhandle,cdouble)	niup: mousemove_cb(ih: Val_t; cb: proc (ih: PIhandle; arg2: cdouble): cint {.cdecl.})	
mousemove_cb	niup.html#mousemove_cb,Val_t	niup: mousemove_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Val_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Val_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Val_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Val_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                    arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Val_t	niup: postmessage_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Val_t,proc(PIhandle)	niup: unmap_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Val_t,proc(PIhandle)	niup: unmap_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Val_t	niup: unmap_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
valuechanged_cb=	niup.html#valuechanged_cb=,Val_t,proc(PIhandle)	niup: valuechanged_cb=(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Val_t,proc(PIhandle)	niup: valuechanged_cb(ih: Val_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
valuechanged_cb	niup.html#valuechanged_cb,Val_t	niup: valuechanged_cb(ih: Val_t): proc (ih: PIhandle): cint {.cdecl.}	
Vbox	niup.html#Vbox.m,varargs[untyped]	niup: Vbox(args: varargs[untyped]): Vbox_t	
active=	niup.html#active=,Vbox_t,string	niup: active=(ih: Vbox_t; value: string)	
active	niup.html#active,Vbox_t,string	niup: active(ih: Vbox_t; value: string)	
active=	niup.html#active=,Vbox_t,bool	niup: active=(ih: Vbox_t; yes: bool)	
active	niup.html#active,Vbox_t,bool	niup: active(ih: Vbox_t; yes: bool)	
active	niup.html#active,Vbox_t	niup: active(ih: Vbox_t): bool	
alignment=	niup.html#alignment=,Vbox_t,string	niup: alignment=(ih: Vbox_t; value: string)	
alignment	niup.html#alignment,Vbox_t,string	niup: alignment(ih: Vbox_t; value: string)	
alignment	niup.html#alignment,Vbox_t	niup: alignment(ih: Vbox_t): string	
canfocus=	niup.html#canfocus=,Vbox_t,string	niup: canfocus=(ih: Vbox_t; value: string)	
canfocus	niup.html#canfocus,Vbox_t,string	niup: canfocus(ih: Vbox_t; value: string)	
canfocus=	niup.html#canfocus=,Vbox_t,bool	niup: canfocus=(ih: Vbox_t; yes: bool)	
canfocus	niup.html#canfocus,Vbox_t,bool	niup: canfocus(ih: Vbox_t; yes: bool)	
canfocus	niup.html#canfocus,Vbox_t	niup: canfocus(ih: Vbox_t): bool	
cgap=	niup.html#cgap=,Vbox_t,string	niup: cgap=(ih: Vbox_t; value: string)	
cgap	niup.html#cgap,Vbox_t,string	niup: cgap(ih: Vbox_t; value: string)	
cgap=	niup.html#cgap=,Vbox_t,int	niup: cgap=(ih: Vbox_t; x: int)	
cgap	niup.html#cgap,Vbox_t,int	niup: cgap(ih: Vbox_t; x: int)	
cgap	niup.html#cgap,Vbox_t	niup: cgap(ih: Vbox_t): string	
charsize	niup.html#charsize,Vbox_t	niup: charsize(ih: Vbox_t): string	
clientoffset	niup.html#clientoffset,Vbox_t	niup: clientoffset(ih: Vbox_t): string	
clientsize	niup.html#clientsize,Vbox_t	niup: clientsize(ih: Vbox_t): string	
cmargin=	niup.html#cmargin=,Vbox_t,string	niup: cmargin=(ih: Vbox_t; value: string)	
cmargin	niup.html#cmargin,Vbox_t,string	niup: cmargin(ih: Vbox_t; value: string)	
cmargin=	niup.html#cmargin=,Vbox_t,int,int	niup: cmargin=(ih: Vbox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,Vbox_t,int,int	niup: cmargin(ih: Vbox_t; horiz, vert: int)	
cmargin	niup.html#cmargin,Vbox_t	niup: cmargin(ih: Vbox_t): string	
expand=	niup.html#expand=,Vbox_t,string	niup: expand=(ih: Vbox_t; value: string)	
expand	niup.html#expand,Vbox_t,string	niup: expand(ih: Vbox_t; value: string)	
expand	niup.html#expand,Vbox_t	niup: expand(ih: Vbox_t): string	
expandchildren=	niup.html#expandchildren=,Vbox_t,string	niup: expandchildren=(ih: Vbox_t; value: string)	
expandchildren	niup.html#expandchildren,Vbox_t,string	niup: expandchildren(ih: Vbox_t; value: string)	
expandchildren=	niup.html#expandchildren=,Vbox_t,bool	niup: expandchildren=(ih: Vbox_t; yes: bool)	
expandchildren	niup.html#expandchildren,Vbox_t,bool	niup: expandchildren(ih: Vbox_t; yes: bool)	
expandchildren	niup.html#expandchildren,Vbox_t	niup: expandchildren(ih: Vbox_t): bool	
expandweight=	niup.html#expandweight=,Vbox_t,string	niup: expandweight=(ih: Vbox_t; value: string)	
expandweight	niup.html#expandweight,Vbox_t,string	niup: expandweight(ih: Vbox_t; value: string)	
expandweight=	niup.html#expandweight=,Vbox_t,int64	niup: expandweight=(ih: Vbox_t; x: int64)	
expandweight	niup.html#expandweight,Vbox_t,int64	niup: expandweight(ih: Vbox_t; x: int64)	
expandweight	niup.html#expandweight,Vbox_t	niup: expandweight(ih: Vbox_t): string	
floating=	niup.html#floating=,Vbox_t,string	niup: floating=(ih: Vbox_t; value: string)	
floating	niup.html#floating,Vbox_t,string	niup: floating(ih: Vbox_t; value: string)	
floating	niup.html#floating,Vbox_t	niup: floating(ih: Vbox_t): string	
font=	niup.html#font=,Vbox_t,string	niup: font=(ih: Vbox_t; value: string)	
font	niup.html#font,Vbox_t,string	niup: font(ih: Vbox_t; value: string)	
font	niup.html#font,Vbox_t	niup: font(ih: Vbox_t): string	
fontface=	niup.html#fontface=,Vbox_t,string	niup: fontface=(ih: Vbox_t; value: string)	
fontface	niup.html#fontface,Vbox_t,string	niup: fontface(ih: Vbox_t; value: string)	
fontface	niup.html#fontface,Vbox_t	niup: fontface(ih: Vbox_t): string	
fontsize=	niup.html#fontsize=,Vbox_t,string	niup: fontsize=(ih: Vbox_t; value: string)	
fontsize	niup.html#fontsize,Vbox_t,string	niup: fontsize(ih: Vbox_t; value: string)	
fontsize=	niup.html#fontsize=,Vbox_t,int	niup: fontsize=(ih: Vbox_t; x: int)	
fontsize	niup.html#fontsize,Vbox_t,int	niup: fontsize(ih: Vbox_t; x: int)	
fontsize	niup.html#fontsize,Vbox_t	niup: fontsize(ih: Vbox_t): string	
fontstyle=	niup.html#fontstyle=,Vbox_t,string	niup: fontstyle=(ih: Vbox_t; value: string)	
fontstyle	niup.html#fontstyle,Vbox_t,string	niup: fontstyle(ih: Vbox_t; value: string)	
fontstyle	niup.html#fontstyle,Vbox_t	niup: fontstyle(ih: Vbox_t): string	
gap=	niup.html#gap=,Vbox_t,string	niup: gap=(ih: Vbox_t; value: string)	
gap	niup.html#gap,Vbox_t,string	niup: gap(ih: Vbox_t; value: string)	
gap=	niup.html#gap=,Vbox_t,int	niup: gap=(ih: Vbox_t; x: int)	
gap	niup.html#gap,Vbox_t,int	niup: gap(ih: Vbox_t; x: int)	
gap	niup.html#gap,Vbox_t	niup: gap(ih: Vbox_t): string	
handlename=	niup.html#handlename=,Vbox_t,string	niup: handlename=(ih: Vbox_t; value: string)	
handlename	niup.html#handlename,Vbox_t,string	niup: handlename(ih: Vbox_t; value: string)	
handlename	niup.html#handlename,Vbox_t	niup: handlename(ih: Vbox_t): string	
homogeneous=	niup.html#homogeneous=,Vbox_t,string	niup: homogeneous=(ih: Vbox_t; value: string)	
homogeneous	niup.html#homogeneous,Vbox_t,string	niup: homogeneous(ih: Vbox_t; value: string)	
homogeneous=	niup.html#homogeneous=,Vbox_t,bool	niup: homogeneous=(ih: Vbox_t; yes: bool)	
homogeneous	niup.html#homogeneous,Vbox_t,bool	niup: homogeneous(ih: Vbox_t; yes: bool)	
homogeneous	niup.html#homogeneous,Vbox_t	niup: homogeneous(ih: Vbox_t): bool	
margin=	niup.html#margin=,Vbox_t,string	niup: margin=(ih: Vbox_t; value: string)	
margin	niup.html#margin,Vbox_t,string	niup: margin(ih: Vbox_t; value: string)	
margin=	niup.html#margin=,Vbox_t,int,int	niup: margin=(ih: Vbox_t; horiz, vert: int)	
margin	niup.html#margin,Vbox_t,int,int	niup: margin(ih: Vbox_t; horiz, vert: int)	
margin	niup.html#margin,Vbox_t	niup: margin(ih: Vbox_t): string	
maxsize=	niup.html#maxsize=,Vbox_t,string	niup: maxsize=(ih: Vbox_t; value: string)	
maxsize	niup.html#maxsize,Vbox_t,string	niup: maxsize(ih: Vbox_t; value: string)	
maxsize=	niup.html#maxsize=,Vbox_t,int,int	niup: maxsize=(ih: Vbox_t; width, height: int)	
maxsize	niup.html#maxsize,Vbox_t,int,int	niup: maxsize(ih: Vbox_t; width, height: int)	
maxsize	niup.html#maxsize,Vbox_t	niup: maxsize(ih: Vbox_t): string	
minsize=	niup.html#minsize=,Vbox_t,string	niup: minsize=(ih: Vbox_t; value: string)	
minsize	niup.html#minsize,Vbox_t,string	niup: minsize(ih: Vbox_t; value: string)	
minsize=	niup.html#minsize=,Vbox_t,int,int	niup: minsize=(ih: Vbox_t; width, height: int)	
minsize	niup.html#minsize,Vbox_t,int,int	niup: minsize(ih: Vbox_t; width, height: int)	
minsize	niup.html#minsize,Vbox_t	niup: minsize(ih: Vbox_t): string	
name=	niup.html#name=,Vbox_t,string	niup: name=(ih: Vbox_t; value: string)	
name	niup.html#name,Vbox_t,string	niup: name(ih: Vbox_t; value: string)	
name	niup.html#name,Vbox_t	niup: name(ih: Vbox_t): string	
naturalsize	niup.html#naturalsize,Vbox_t	niup: naturalsize(ih: Vbox_t): string	
ncgap=	niup.html#ncgap=,Vbox_t,string	niup: ncgap=(ih: Vbox_t; value: string)	
ncgap	niup.html#ncgap,Vbox_t,string	niup: ncgap(ih: Vbox_t; value: string)	
ncgap=	niup.html#ncgap=,Vbox_t,int	niup: ncgap=(ih: Vbox_t; x: int)	
ncgap	niup.html#ncgap,Vbox_t,int	niup: ncgap(ih: Vbox_t; x: int)	
ncgap	niup.html#ncgap,Vbox_t	niup: ncgap(ih: Vbox_t): string	
ncmargin=	niup.html#ncmargin=,Vbox_t,string	niup: ncmargin=(ih: Vbox_t; value: string)	
ncmargin	niup.html#ncmargin,Vbox_t,string	niup: ncmargin(ih: Vbox_t; value: string)	
ncmargin=	niup.html#ncmargin=,Vbox_t,int,int	niup: ncmargin=(ih: Vbox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,Vbox_t,int,int	niup: ncmargin(ih: Vbox_t; horiz, vert: int)	
ncmargin	niup.html#ncmargin,Vbox_t	niup: ncmargin(ih: Vbox_t): string	
ngap=	niup.html#ngap=,Vbox_t,string	niup: ngap=(ih: Vbox_t; value: string)	
ngap	niup.html#ngap,Vbox_t,string	niup: ngap(ih: Vbox_t; value: string)	
ngap=	niup.html#ngap=,Vbox_t,int	niup: ngap=(ih: Vbox_t; x: int)	
ngap	niup.html#ngap,Vbox_t,int	niup: ngap(ih: Vbox_t; x: int)	
ngap	niup.html#ngap,Vbox_t	niup: ngap(ih: Vbox_t): string	
nmargin=	niup.html#nmargin=,Vbox_t,string	niup: nmargin=(ih: Vbox_t; value: string)	
nmargin	niup.html#nmargin,Vbox_t,string	niup: nmargin(ih: Vbox_t; value: string)	
nmargin=	niup.html#nmargin=,Vbox_t,int,int	niup: nmargin=(ih: Vbox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,Vbox_t,int,int	niup: nmargin(ih: Vbox_t; horiz, vert: int)	
nmargin	niup.html#nmargin,Vbox_t	niup: nmargin(ih: Vbox_t): string	
normalizergroup=	niup.html#normalizergroup=,Vbox_t,string	niup: normalizergroup=(ih: Vbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Vbox_t,string	niup: normalizergroup(ih: Vbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Vbox_t	niup: normalizergroup(ih: Vbox_t): string	
normalizesize=	niup.html#normalizesize=,Vbox_t,string	niup: normalizesize=(ih: Vbox_t; value: string)	
normalizesize	niup.html#normalizesize,Vbox_t,string	niup: normalizesize(ih: Vbox_t; value: string)	
normalizesize	niup.html#normalizesize,Vbox_t	niup: normalizesize(ih: Vbox_t): string	
ntheme=	niup.html#ntheme=,Vbox_t,string	niup: ntheme=(ih: Vbox_t; value: string)	
ntheme	niup.html#ntheme,Vbox_t,string	niup: ntheme(ih: Vbox_t; value: string)	
ntheme	niup.html#ntheme,Vbox_t	niup: ntheme(ih: Vbox_t): string	
orientation	niup.html#orientation,Vbox_t	niup: orientation(ih: Vbox_t): string	
pangofontdesc	niup.html#pangofontdesc,Vbox_t	niup: pangofontdesc(ih: Vbox_t): string	
pangolayout	niup.html#pangolayout,Vbox_t	niup: pangolayout(ih: Vbox_t): string	
position=	niup.html#position=,Vbox_t,string	niup: position=(ih: Vbox_t; value: string)	
position	niup.html#position,Vbox_t,string	niup: position(ih: Vbox_t; value: string)	
position=	niup.html#position=,Vbox_t,int,int	niup: position=(ih: Vbox_t; x, y: int)	
position	niup.html#position,Vbox_t,int,int	niup: position(ih: Vbox_t; x, y: int)	
position	niup.html#position,Vbox_t	niup: position(ih: Vbox_t): string	
propagatefocus=	niup.html#propagatefocus=,Vbox_t,string	niup: propagatefocus=(ih: Vbox_t; value: string)	
propagatefocus	niup.html#propagatefocus,Vbox_t,string	niup: propagatefocus(ih: Vbox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Vbox_t,bool	niup: propagatefocus=(ih: Vbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Vbox_t,bool	niup: propagatefocus(ih: Vbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Vbox_t	niup: propagatefocus(ih: Vbox_t): bool	
rastersize=	niup.html#rastersize=,Vbox_t,string	niup: rastersize=(ih: Vbox_t; value: string)	
rastersize	niup.html#rastersize,Vbox_t,string	niup: rastersize(ih: Vbox_t; value: string)	
rastersize=	niup.html#rastersize=,Vbox_t,int,int	niup: rastersize=(ih: Vbox_t; width, height: int)	
rastersize	niup.html#rastersize,Vbox_t,int,int	niup: rastersize(ih: Vbox_t; width, height: int)	
rastersize	niup.html#rastersize,Vbox_t	niup: rastersize(ih: Vbox_t): string	
size=	niup.html#size=,Vbox_t,string	niup: size=(ih: Vbox_t; value: string)	
size	niup.html#size,Vbox_t,string	niup: size(ih: Vbox_t; value: string)	
size=	niup.html#size=,Vbox_t,int	niup: size=(ih: Vbox_t; x: int)	
size	niup.html#size,Vbox_t,int	niup: size(ih: Vbox_t; x: int)	
size	niup.html#size,Vbox_t	niup: size(ih: Vbox_t): string	
theme=	niup.html#theme=,Vbox_t,string	niup: theme=(ih: Vbox_t; value: string)	
theme	niup.html#theme,Vbox_t,string	niup: theme(ih: Vbox_t; value: string)	
theme	niup.html#theme,Vbox_t	niup: theme(ih: Vbox_t): string	
usersize=	niup.html#usersize=,Vbox_t,string	niup: usersize=(ih: Vbox_t; value: string)	
usersize	niup.html#usersize,Vbox_t,string	niup: usersize(ih: Vbox_t; value: string)	
usersize=	niup.html#usersize=,Vbox_t,int,int	niup: usersize=(ih: Vbox_t; width, height: int)	
usersize	niup.html#usersize,Vbox_t,int,int	niup: usersize(ih: Vbox_t; width, height: int)	
usersize	niup.html#usersize,Vbox_t	niup: usersize(ih: Vbox_t): string	
visible=	niup.html#visible=,Vbox_t,string	niup: visible=(ih: Vbox_t; value: string)	
visible	niup.html#visible,Vbox_t,string	niup: visible(ih: Vbox_t; value: string)	
visible=	niup.html#visible=,Vbox_t,bool	niup: visible=(ih: Vbox_t; yes: bool)	
visible	niup.html#visible,Vbox_t,bool	niup: visible(ih: Vbox_t; yes: bool)	
visible	niup.html#visible,Vbox_t	niup: visible(ih: Vbox_t): bool	
wid	niup.html#wid,Vbox_t	niup: wid(ih: Vbox_t): string	
xfontid	niup.html#xfontid,Vbox_t	niup: xfontid(ih: Vbox_t): string	
destroy_cb=	niup.html#destroy_cb=,Vbox_t,proc(PIhandle)	niup: destroy_cb=(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Vbox_t,proc(PIhandle)	niup: destroy_cb(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Vbox_t	niup: destroy_cb(ih: Vbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Vbox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Vbox_t,proc(PIhandle)	niup: ldestroy_cb(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Vbox_t	niup: ldestroy_cb(ih: Vbox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Vbox_t,proc(PIhandle)	niup: map_cb=(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Vbox_t,proc(PIhandle)	niup: map_cb(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Vbox_t	niup: map_cb(ih: Vbox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Vbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Vbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Vbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Vbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Vbox_t	niup: postmessage_cb(ih: Vbox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Vbox_t,proc(PIhandle)	niup: unmap_cb=(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Vbox_t,proc(PIhandle)	niup: unmap_cb(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Vbox_t	niup: unmap_cb(ih: Vbox_t): proc (ih: PIhandle): cint {.cdecl.}	
updateattribfromfont_cb=	niup.html#updateattribfromfont_cb=,Vbox_t,proc(PIhandle)	niup: updateattribfromfont_cb=(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,Vbox_t,proc(PIhandle)	niup: updateattribfromfont_cb(ih: Vbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
updateattribfromfont_cb	niup.html#updateattribfromfont_cb,Vbox_t	niup: updateattribfromfont_cb(ih: Vbox_t): proc (ih: PIhandle): cint {.cdecl.}	
Zbox	niup.html#Zbox.m,varargs[untyped]	niup: Zbox(args: varargs[untyped]): Zbox_t	
active=	niup.html#active=,Zbox_t,string	niup: active=(ih: Zbox_t; value: string)	
active	niup.html#active,Zbox_t,string	niup: active(ih: Zbox_t; value: string)	
active=	niup.html#active=,Zbox_t,bool	niup: active=(ih: Zbox_t; yes: bool)	
active	niup.html#active,Zbox_t,bool	niup: active(ih: Zbox_t; yes: bool)	
active	niup.html#active,Zbox_t	niup: active(ih: Zbox_t): bool	
alignment=	niup.html#alignment=,Zbox_t,string	niup: alignment=(ih: Zbox_t; value: string)	
alignment	niup.html#alignment,Zbox_t,string	niup: alignment(ih: Zbox_t; value: string)	
alignment	niup.html#alignment,Zbox_t	niup: alignment(ih: Zbox_t): string	
canfocus=	niup.html#canfocus=,Zbox_t,string	niup: canfocus=(ih: Zbox_t; value: string)	
canfocus	niup.html#canfocus,Zbox_t,string	niup: canfocus(ih: Zbox_t; value: string)	
canfocus=	niup.html#canfocus=,Zbox_t,bool	niup: canfocus=(ih: Zbox_t; yes: bool)	
canfocus	niup.html#canfocus,Zbox_t,bool	niup: canfocus(ih: Zbox_t; yes: bool)	
canfocus	niup.html#canfocus,Zbox_t	niup: canfocus(ih: Zbox_t): bool	
charsize	niup.html#charsize,Zbox_t	niup: charsize(ih: Zbox_t): string	
childsizeall=	niup.html#childsizeall=,Zbox_t,string	niup: childsizeall=(ih: Zbox_t; value: string)	
childsizeall	niup.html#childsizeall,Zbox_t,string	niup: childsizeall(ih: Zbox_t; value: string)	
childsizeall=	niup.html#childsizeall=,Zbox_t,bool	niup: childsizeall=(ih: Zbox_t; yes: bool)	
childsizeall	niup.html#childsizeall,Zbox_t,bool	niup: childsizeall(ih: Zbox_t; yes: bool)	
childsizeall	niup.html#childsizeall,Zbox_t	niup: childsizeall(ih: Zbox_t): bool	
clientoffset	niup.html#clientoffset,Zbox_t	niup: clientoffset(ih: Zbox_t): string	
clientsize	niup.html#clientsize,Zbox_t	niup: clientsize(ih: Zbox_t): string	
expand=	niup.html#expand=,Zbox_t,string	niup: expand=(ih: Zbox_t; value: string)	
expand	niup.html#expand,Zbox_t,string	niup: expand(ih: Zbox_t; value: string)	
expand	niup.html#expand,Zbox_t	niup: expand(ih: Zbox_t): string	
expandweight=	niup.html#expandweight=,Zbox_t,string	niup: expandweight=(ih: Zbox_t; value: string)	
expandweight	niup.html#expandweight,Zbox_t,string	niup: expandweight(ih: Zbox_t; value: string)	
expandweight=	niup.html#expandweight=,Zbox_t,int64	niup: expandweight=(ih: Zbox_t; x: int64)	
expandweight	niup.html#expandweight,Zbox_t,int64	niup: expandweight(ih: Zbox_t; x: int64)	
expandweight	niup.html#expandweight,Zbox_t	niup: expandweight(ih: Zbox_t): string	
floating=	niup.html#floating=,Zbox_t,string	niup: floating=(ih: Zbox_t; value: string)	
floating	niup.html#floating,Zbox_t,string	niup: floating(ih: Zbox_t; value: string)	
floating	niup.html#floating,Zbox_t	niup: floating(ih: Zbox_t): string	
font=	niup.html#font=,Zbox_t,string	niup: font=(ih: Zbox_t; value: string)	
font	niup.html#font,Zbox_t,string	niup: font(ih: Zbox_t; value: string)	
font	niup.html#font,Zbox_t	niup: font(ih: Zbox_t): string	
fontface=	niup.html#fontface=,Zbox_t,string	niup: fontface=(ih: Zbox_t; value: string)	
fontface	niup.html#fontface,Zbox_t,string	niup: fontface(ih: Zbox_t; value: string)	
fontface	niup.html#fontface,Zbox_t	niup: fontface(ih: Zbox_t): string	
fontsize=	niup.html#fontsize=,Zbox_t,string	niup: fontsize=(ih: Zbox_t; value: string)	
fontsize	niup.html#fontsize,Zbox_t,string	niup: fontsize(ih: Zbox_t; value: string)	
fontsize=	niup.html#fontsize=,Zbox_t,int	niup: fontsize=(ih: Zbox_t; x: int)	
fontsize	niup.html#fontsize,Zbox_t,int	niup: fontsize(ih: Zbox_t; x: int)	
fontsize	niup.html#fontsize,Zbox_t	niup: fontsize(ih: Zbox_t): string	
fontstyle=	niup.html#fontstyle=,Zbox_t,string	niup: fontstyle=(ih: Zbox_t; value: string)	
fontstyle	niup.html#fontstyle,Zbox_t,string	niup: fontstyle(ih: Zbox_t; value: string)	
fontstyle	niup.html#fontstyle,Zbox_t	niup: fontstyle(ih: Zbox_t): string	
handlename=	niup.html#handlename=,Zbox_t,string	niup: handlename=(ih: Zbox_t; value: string)	
handlename	niup.html#handlename,Zbox_t,string	niup: handlename(ih: Zbox_t; value: string)	
handlename	niup.html#handlename,Zbox_t	niup: handlename(ih: Zbox_t): string	
maxsize=	niup.html#maxsize=,Zbox_t,string	niup: maxsize=(ih: Zbox_t; value: string)	
maxsize	niup.html#maxsize,Zbox_t,string	niup: maxsize(ih: Zbox_t; value: string)	
maxsize=	niup.html#maxsize=,Zbox_t,int,int	niup: maxsize=(ih: Zbox_t; width, height: int)	
maxsize	niup.html#maxsize,Zbox_t,int,int	niup: maxsize(ih: Zbox_t; width, height: int)	
maxsize	niup.html#maxsize,Zbox_t	niup: maxsize(ih: Zbox_t): string	
minsize=	niup.html#minsize=,Zbox_t,string	niup: minsize=(ih: Zbox_t; value: string)	
minsize	niup.html#minsize,Zbox_t,string	niup: minsize(ih: Zbox_t; value: string)	
minsize=	niup.html#minsize=,Zbox_t,int,int	niup: minsize=(ih: Zbox_t; width, height: int)	
minsize	niup.html#minsize,Zbox_t,int,int	niup: minsize(ih: Zbox_t; width, height: int)	
minsize	niup.html#minsize,Zbox_t	niup: minsize(ih: Zbox_t): string	
name=	niup.html#name=,Zbox_t,string	niup: name=(ih: Zbox_t; value: string)	
name	niup.html#name,Zbox_t,string	niup: name(ih: Zbox_t; value: string)	
name	niup.html#name,Zbox_t	niup: name(ih: Zbox_t): string	
naturalsize	niup.html#naturalsize,Zbox_t	niup: naturalsize(ih: Zbox_t): string	
normalizergroup=	niup.html#normalizergroup=,Zbox_t,string	niup: normalizergroup=(ih: Zbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Zbox_t,string	niup: normalizergroup(ih: Zbox_t; value: string)	
normalizergroup	niup.html#normalizergroup,Zbox_t	niup: normalizergroup(ih: Zbox_t): string	
ntheme=	niup.html#ntheme=,Zbox_t,string	niup: ntheme=(ih: Zbox_t; value: string)	
ntheme	niup.html#ntheme,Zbox_t,string	niup: ntheme(ih: Zbox_t; value: string)	
ntheme	niup.html#ntheme,Zbox_t	niup: ntheme(ih: Zbox_t): string	
pangofontdesc	niup.html#pangofontdesc,Zbox_t	niup: pangofontdesc(ih: Zbox_t): string	
pangolayout	niup.html#pangolayout,Zbox_t	niup: pangolayout(ih: Zbox_t): string	
position=	niup.html#position=,Zbox_t,string	niup: position=(ih: Zbox_t; value: string)	
position	niup.html#position,Zbox_t,string	niup: position(ih: Zbox_t; value: string)	
position=	niup.html#position=,Zbox_t,int,int	niup: position=(ih: Zbox_t; x, y: int)	
position	niup.html#position,Zbox_t,int,int	niup: position(ih: Zbox_t; x, y: int)	
position	niup.html#position,Zbox_t	niup: position(ih: Zbox_t): string	
propagatefocus=	niup.html#propagatefocus=,Zbox_t,string	niup: propagatefocus=(ih: Zbox_t; value: string)	
propagatefocus	niup.html#propagatefocus,Zbox_t,string	niup: propagatefocus(ih: Zbox_t; value: string)	
propagatefocus=	niup.html#propagatefocus=,Zbox_t,bool	niup: propagatefocus=(ih: Zbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Zbox_t,bool	niup: propagatefocus(ih: Zbox_t; yes: bool)	
propagatefocus	niup.html#propagatefocus,Zbox_t	niup: propagatefocus(ih: Zbox_t): bool	
rastersize=	niup.html#rastersize=,Zbox_t,string	niup: rastersize=(ih: Zbox_t; value: string)	
rastersize	niup.html#rastersize,Zbox_t,string	niup: rastersize(ih: Zbox_t; value: string)	
rastersize=	niup.html#rastersize=,Zbox_t,int,int	niup: rastersize=(ih: Zbox_t; width, height: int)	
rastersize	niup.html#rastersize,Zbox_t,int,int	niup: rastersize(ih: Zbox_t; width, height: int)	
rastersize	niup.html#rastersize,Zbox_t	niup: rastersize(ih: Zbox_t): string	
size=	niup.html#size=,Zbox_t,string	niup: size=(ih: Zbox_t; value: string)	
size	niup.html#size,Zbox_t,string	niup: size(ih: Zbox_t; value: string)	
size=	niup.html#size=,Zbox_t,int,int	niup: size=(ih: Zbox_t; width, height: int)	
size	niup.html#size,Zbox_t,int,int	niup: size(ih: Zbox_t; width, height: int)	
size	niup.html#size,Zbox_t	niup: size(ih: Zbox_t): string	
theme=	niup.html#theme=,Zbox_t,string	niup: theme=(ih: Zbox_t; value: string)	
theme	niup.html#theme,Zbox_t,string	niup: theme(ih: Zbox_t; value: string)	
theme	niup.html#theme,Zbox_t	niup: theme(ih: Zbox_t): string	
usersize=	niup.html#usersize=,Zbox_t,string	niup: usersize=(ih: Zbox_t; value: string)	
usersize	niup.html#usersize,Zbox_t,string	niup: usersize(ih: Zbox_t; value: string)	
usersize=	niup.html#usersize=,Zbox_t,int,int	niup: usersize=(ih: Zbox_t; width, height: int)	
usersize	niup.html#usersize,Zbox_t,int,int	niup: usersize(ih: Zbox_t; width, height: int)	
usersize	niup.html#usersize,Zbox_t	niup: usersize(ih: Zbox_t): string	
value=	niup.html#value=,Zbox_t,string	niup: value=(ih: Zbox_t; value: string)	
value	niup.html#value,Zbox_t,string	niup: value(ih: Zbox_t; value: string)	
value	niup.html#value,Zbox_t	niup: value(ih: Zbox_t): string	
valuepos=	niup.html#valuepos=,Zbox_t,string	niup: valuepos=(ih: Zbox_t; value: string)	
valuepos	niup.html#valuepos,Zbox_t,string	niup: valuepos(ih: Zbox_t; value: string)	
valuepos=	niup.html#valuepos=,Zbox_t,int	niup: valuepos=(ih: Zbox_t; x: int)	
valuepos	niup.html#valuepos,Zbox_t,int	niup: valuepos(ih: Zbox_t; x: int)	
valuepos	niup.html#valuepos,Zbox_t	niup: valuepos(ih: Zbox_t): string	
value_handle=	niup.html#value_handle=,Zbox_t,User_t	niup: value_handle=(ih: Zbox_t; handle: User_t)	
value_handle	niup.html#value_handle,Zbox_t,User_t	niup: value_handle(ih: Zbox_t; handle: User_t)	
value_handle	niup.html#value_handle,Zbox_t	niup: value_handle(ih: Zbox_t): string	
visible=	niup.html#visible=,Zbox_t,string	niup: visible=(ih: Zbox_t; value: string)	
visible	niup.html#visible,Zbox_t,string	niup: visible(ih: Zbox_t; value: string)	
visible=	niup.html#visible=,Zbox_t,bool	niup: visible=(ih: Zbox_t; yes: bool)	
visible	niup.html#visible,Zbox_t,bool	niup: visible(ih: Zbox_t; yes: bool)	
visible	niup.html#visible,Zbox_t	niup: visible(ih: Zbox_t): bool	
wid	niup.html#wid,Zbox_t	niup: wid(ih: Zbox_t): string	
xfontid	niup.html#xfontid,Zbox_t	niup: xfontid(ih: Zbox_t): string	
destroy_cb=	niup.html#destroy_cb=,Zbox_t,proc(PIhandle)	niup: destroy_cb=(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Zbox_t,proc(PIhandle)	niup: destroy_cb(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
destroy_cb	niup.html#destroy_cb,Zbox_t	niup: destroy_cb(ih: Zbox_t): proc (ih: PIhandle): cint {.cdecl.}	
ldestroy_cb=	niup.html#ldestroy_cb=,Zbox_t,proc(PIhandle)	niup: ldestroy_cb=(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Zbox_t,proc(PIhandle)	niup: ldestroy_cb(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
ldestroy_cb	niup.html#ldestroy_cb,Zbox_t	niup: ldestroy_cb(ih: Zbox_t): proc (ih: PIhandle): cint {.cdecl.}	
map_cb=	niup.html#map_cb=,Zbox_t,proc(PIhandle)	niup: map_cb=(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Zbox_t,proc(PIhandle)	niup: map_cb(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
map_cb	niup.html#map_cb,Zbox_t	niup: map_cb(ih: Zbox_t): proc (ih: PIhandle): cint {.cdecl.}	
postmessage_cb=	niup.html#postmessage_cb=,Zbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb=(ih: Zbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                      arg4: cdouble; arg5: pointer): cint {.\n    cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Zbox_t,proc(PIhandle,cstring,cint,cdouble,pointer)	niup: postmessage_cb(ih: Zbox_t; cb: proc (ih: PIhandle; arg2: cstring; arg3: cint;\n                                     arg4: cdouble; arg5: pointer): cint {.cdecl.})	
postmessage_cb	niup.html#postmessage_cb,Zbox_t	niup: postmessage_cb(ih: Zbox_t): proc (ih: PIhandle): cint {.cdecl.}	
unmap_cb=	niup.html#unmap_cb=,Zbox_t,proc(PIhandle)	niup: unmap_cb=(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Zbox_t,proc(PIhandle)	niup: unmap_cb(ih: Zbox_t; cb: proc (ih: PIhandle): cint {.cdecl.})	
unmap_cb	niup.html#unmap_cb,Zbox_t	niup: unmap_cb(ih: Zbox_t): proc (ih: PIhandle): cint {.cdecl.}	
`[]`	niup.html#[],IUPhandle_t,string	niup: `[]`(ih: IUPhandle_t; attribute: string): string	
`[]=`	niup.html#[]=,IUPhandle_t,,	niup: `[]=`(ih: IUPhandle_t; attribute, value: string or typeof(nil))	
SetAttributes	niup.html#SetAttributes,IUPhandle_t,string	niup: SetAttributes(ih: IUPhandle_t; attrs: string): IUPhandle_t	
SetAttributeHandle	niup.html#SetAttributeHandle,IUPhandle_t,string,	niup: SetAttributeHandle(ih: IUPhandle_t; attribute: string;\n                   img: Image_t | ImageRGB_t | ImageRGBA_t)	
GetAttributeHandle	niup.html#GetAttributeHandle,IUPhandle_t,string	niup: GetAttributeHandle(ih: IUPhandle_t; attribute: string): PIhandle	
GetInt	niup.html#GetInt,IUPhandle_t,string	niup: GetInt(ih: IUPhandle_t; name: string): int	
Show	niup.html#Show,IUPhandle_t	niup: Show(ih: IUPhandle_t)	
ShowXY	niup.html#ShowXY,IUPhandle_t,,	niup: ShowXY(ih: IUPhandle_t; x, y: cint | int)	
Hide	niup.html#Hide,IUPhandle_t	niup: Hide(ih: IUPhandle_t)	
Message	niup.html#Message,string,string	niup: Message(title, message: string)	
MessageError	niup.html#MessageError,IUPhandle_t,string	niup: MessageError(ih: IUPhandle_t; message: string)	
MessageAlarm	niup.html#MessageAlarm,IUPhandle_t,string,string,string	niup: MessageAlarm(parent: IUPhandle_t; title, message, buttons: string)	
Map	niup.html#Map,IUPhandle_t	niup: Map(ih: IUPhandle_t)	
Unmap	niup.html#Unmap,IUPhandle_t	niup: Unmap(ih: IUPhandle_t)	
Destroy	niup.html#Destroy,IUPhandle_t	niup: Destroy(ih: IUPhandle_t)	
SetHandle	niup.html#SetHandle,string,IUPhandle_t	niup: SetHandle(name: string; handle: IUPhandle_t)	
SetFocus	niup.html#SetFocus,IUPhandle_t	niup: SetFocus(ih: IUPhandle_t)	
SetAttributeId	niup.html#SetAttributeId,IUPhandle_t,string,int,string	niup: SetAttributeId(ih: IUPhandle_t; name: string; id: int; value: string)	
GetAttributeId	niup.html#GetAttributeId,IUPhandle_t,string,int	niup: GetAttributeId(ih: IUPhandle_t; name: string; id: int): string	
SetIntId	niup.html#SetIntId,IUPhandle_t,string,int,int	niup: SetIntId(ih: IUPhandle_t; name: string; id: int; value: int)	
GetIntId	niup.html#GetIntId,IUPhandle_t,string,int	niup: GetIntId(ih: IUPhandle_t; name: string; id: int): int	
SetFloatId	niup.html#SetFloatId,IUPhandle_t,string,int,float	niup: SetFloatId(ih: IUPhandle_t; name: string; id: int; value: float)	
GetFloatId	niup.html#GetFloatId,IUPhandle_t,string,int	niup: GetFloatId(ih: IUPhandle_t; name: string; id: int): float	
image	niup.html#image,List_t,int,	niup: image(ih: List_t; n: int; img: Image_t | ImageRGB_t | ImageRGBA_t)	
insertitem	niup.html#insertitem,List_t,int,string	niup: insertitem(ih: List_t; n: int; value: string)	
k_sp=	niup.html#k_sp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sp	niup.html#k_sp,IUPhandle_t	niup: k_sp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_exclam=	niup.html#k_exclam=,IUPhandle_t,proc(PIhandle,cint)	niup: k_exclam=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_exclam	niup.html#k_exclam,IUPhandle_t	niup: k_exclam(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_quotedbl=	niup.html#k_quotedbl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_quotedbl=(control: IUPhandle_t;\n            cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_quotedbl	niup.html#k_quotedbl,IUPhandle_t	niup: k_quotedbl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_numbersign=	niup.html#k_numbersign=,IUPhandle_t,proc(PIhandle,cint)	niup: k_numbersign=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_numbersign	niup.html#k_numbersign,IUPhandle_t	niup: k_numbersign(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_dollar=	niup.html#k_dollar=,IUPhandle_t,proc(PIhandle,cint)	niup: k_dollar=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_dollar	niup.html#k_dollar,IUPhandle_t	niup: k_dollar(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_percent=	niup.html#k_percent=,IUPhandle_t,proc(PIhandle,cint)	niup: k_percent=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_percent	niup.html#k_percent,IUPhandle_t	niup: k_percent(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ampersand=	niup.html#k_ampersand=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ampersand=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ampersand	niup.html#k_ampersand,IUPhandle_t	niup: k_ampersand(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_apostrophe=	niup.html#k_apostrophe=,IUPhandle_t,proc(PIhandle,cint)	niup: k_apostrophe=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_apostrophe	niup.html#k_apostrophe,IUPhandle_t	niup: k_apostrophe(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_parentleft=	niup.html#k_parentleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_parentleft=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_parentleft	niup.html#k_parentleft,IUPhandle_t	niup: k_parentleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_parentright=	niup.html#k_parentright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_parentright=(control: IUPhandle_t;\n               cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_parentright	niup.html#k_parentright,IUPhandle_t	niup: k_parentright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_asterisk=	niup.html#k_asterisk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_asterisk=(control: IUPhandle_t;\n            cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_asterisk	niup.html#k_asterisk,IUPhandle_t	niup: k_asterisk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_plus=	niup.html#k_plus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_plus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_plus	niup.html#k_plus,IUPhandle_t	niup: k_plus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_comma=	niup.html#k_comma=,IUPhandle_t,proc(PIhandle,cint)	niup: k_comma=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_comma	niup.html#k_comma,IUPhandle_t	niup: k_comma(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_minus=	niup.html#k_minus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_minus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_minus	niup.html#k_minus,IUPhandle_t	niup: k_minus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_period=	niup.html#k_period=,IUPhandle_t,proc(PIhandle,cint)	niup: k_period=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_period	niup.html#k_period,IUPhandle_t	niup: k_period(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_slash=	niup.html#k_slash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_slash=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_slash	niup.html#k_slash,IUPhandle_t	niup: k_slash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_0=	niup.html#k_0=,IUPhandle_t,proc(PIhandle,cint)	niup: k_0=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_0	niup.html#k_0,IUPhandle_t	niup: k_0(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_1=	niup.html#k_1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_1	niup.html#k_1,IUPhandle_t	niup: k_1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_2=	niup.html#k_2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_2	niup.html#k_2,IUPhandle_t	niup: k_2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_3=	niup.html#k_3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_3	niup.html#k_3,IUPhandle_t	niup: k_3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_4=	niup.html#k_4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_4	niup.html#k_4,IUPhandle_t	niup: k_4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_5=	niup.html#k_5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_5	niup.html#k_5,IUPhandle_t	niup: k_5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_6=	niup.html#k_6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_6	niup.html#k_6,IUPhandle_t	niup: k_6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_7=	niup.html#k_7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_7	niup.html#k_7,IUPhandle_t	niup: k_7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_8=	niup.html#k_8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_8	niup.html#k_8,IUPhandle_t	niup: k_8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_9=	niup.html#k_9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_9	niup.html#k_9,IUPhandle_t	niup: k_9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_colon=	niup.html#k_colon=,IUPhandle_t,proc(PIhandle,cint)	niup: k_colon=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_colon	niup.html#k_colon,IUPhandle_t	niup: k_colon(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_semicolon=	niup.html#k_semicolon=,IUPhandle_t,proc(PIhandle,cint)	niup: k_semicolon=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_semicolon	niup.html#k_semicolon,IUPhandle_t	niup: k_semicolon(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_less=	niup.html#k_less=,IUPhandle_t,proc(PIhandle,cint)	niup: k_less=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_less	niup.html#k_less,IUPhandle_t	niup: k_less(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_equal=	niup.html#k_equal=,IUPhandle_t,proc(PIhandle,cint)	niup: k_equal=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_equal	niup.html#k_equal,IUPhandle_t	niup: k_equal(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_greater=	niup.html#k_greater=,IUPhandle_t,proc(PIhandle,cint)	niup: k_greater=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_greater	niup.html#k_greater,IUPhandle_t	niup: k_greater(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_question=	niup.html#k_question=,IUPhandle_t,proc(PIhandle,cint)	niup: k_question=(control: IUPhandle_t;\n            cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_question	niup.html#k_question,IUPhandle_t	niup: k_question(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_at=	niup.html#k_at=,IUPhandle_t,proc(PIhandle,cint)	niup: k_at=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_at	niup.html#k_at,IUPhandle_t	niup: k_at(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppera=	niup.html#k_uppera=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppera=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppera	niup.html#k_uppera,IUPhandle_t	niup: k_uppera(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperb=	niup.html#k_upperb=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperb=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperb	niup.html#k_upperb,IUPhandle_t	niup: k_upperb(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperc=	niup.html#k_upperc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperc	niup.html#k_upperc,IUPhandle_t	niup: k_upperc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperd=	niup.html#k_upperd=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperd=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperd	niup.html#k_upperd,IUPhandle_t	niup: k_upperd(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppere=	niup.html#k_uppere=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppere=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppere	niup.html#k_uppere,IUPhandle_t	niup: k_uppere(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperf=	niup.html#k_upperf=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperf=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperf	niup.html#k_upperf,IUPhandle_t	niup: k_upperf(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperg=	niup.html#k_upperg=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperg=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperg	niup.html#k_upperg,IUPhandle_t	niup: k_upperg(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperh=	niup.html#k_upperh=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperh=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperh	niup.html#k_upperh,IUPhandle_t	niup: k_upperh(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperi=	niup.html#k_upperi=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperi=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperi	niup.html#k_upperi,IUPhandle_t	niup: k_upperi(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperj=	niup.html#k_upperj=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperj=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperj	niup.html#k_upperj,IUPhandle_t	niup: k_upperj(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperk=	niup.html#k_upperk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperk=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperk	niup.html#k_upperk,IUPhandle_t	niup: k_upperk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperl=	niup.html#k_upperl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperl=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperl	niup.html#k_upperl,IUPhandle_t	niup: k_upperl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperm=	niup.html#k_upperm=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperm=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperm	niup.html#k_upperm,IUPhandle_t	niup: k_upperm(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppern=	niup.html#k_uppern=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppern=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppern	niup.html#k_uppern,IUPhandle_t	niup: k_uppern(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppero=	niup.html#k_uppero=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppero=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppero	niup.html#k_uppero,IUPhandle_t	niup: k_uppero(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperp=	niup.html#k_upperp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperp	niup.html#k_upperp,IUPhandle_t	niup: k_upperp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperq=	niup.html#k_upperq=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperq=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperq	niup.html#k_upperq,IUPhandle_t	niup: k_upperq(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperr=	niup.html#k_upperr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperr	niup.html#k_upperr,IUPhandle_t	niup: k_upperr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppers=	niup.html#k_uppers=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppers=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppers	niup.html#k_uppers,IUPhandle_t	niup: k_uppers(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppert=	niup.html#k_uppert=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppert=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppert	niup.html#k_uppert,IUPhandle_t	niup: k_uppert(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperu=	niup.html#k_upperu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperu	niup.html#k_upperu,IUPhandle_t	niup: k_upperu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperv=	niup.html#k_upperv=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperv=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperv	niup.html#k_upperv,IUPhandle_t	niup: k_upperv(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperw=	niup.html#k_upperw=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperw=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperw	niup.html#k_upperw,IUPhandle_t	niup: k_upperw(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperx=	niup.html#k_upperx=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperx=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperx	niup.html#k_upperx,IUPhandle_t	niup: k_upperx(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_uppery=	niup.html#k_uppery=,IUPhandle_t,proc(PIhandle,cint)	niup: k_uppery=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_uppery	niup.html#k_uppery,IUPhandle_t	niup: k_uppery(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_upperz=	niup.html#k_upperz=,IUPhandle_t,proc(PIhandle,cint)	niup: k_upperz=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_upperz	niup.html#k_upperz,IUPhandle_t	niup: k_upperz(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_bracketleft=	niup.html#k_bracketleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_bracketleft=(control: IUPhandle_t;\n               cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_bracketleft	niup.html#k_bracketleft,IUPhandle_t	niup: k_bracketleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_backslash=	niup.html#k_backslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_backslash=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_backslash	niup.html#k_backslash,IUPhandle_t	niup: k_backslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_bracketright=	niup.html#k_bracketright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_bracketright=(control: IUPhandle_t;\n                cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_bracketright	niup.html#k_bracketright,IUPhandle_t	niup: k_bracketright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_circum=	niup.html#k_circum=,IUPhandle_t,proc(PIhandle,cint)	niup: k_circum=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_circum	niup.html#k_circum,IUPhandle_t	niup: k_circum(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_underscore=	niup.html#k_underscore=,IUPhandle_t,proc(PIhandle,cint)	niup: k_underscore=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_underscore	niup.html#k_underscore,IUPhandle_t	niup: k_underscore(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_grave=	niup.html#k_grave=,IUPhandle_t,proc(PIhandle,cint)	niup: k_grave=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_grave	niup.html#k_grave,IUPhandle_t	niup: k_grave(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowera=	niup.html#k_lowera=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowera=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowera	niup.html#k_lowera,IUPhandle_t	niup: k_lowera(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerb=	niup.html#k_lowerb=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerb=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerb	niup.html#k_lowerb,IUPhandle_t	niup: k_lowerb(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerc=	niup.html#k_lowerc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerc	niup.html#k_lowerc,IUPhandle_t	niup: k_lowerc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerd=	niup.html#k_lowerd=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerd=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerd	niup.html#k_lowerd,IUPhandle_t	niup: k_lowerd(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowere=	niup.html#k_lowere=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowere=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowere	niup.html#k_lowere,IUPhandle_t	niup: k_lowere(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerf=	niup.html#k_lowerf=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerf=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerf	niup.html#k_lowerf,IUPhandle_t	niup: k_lowerf(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerg=	niup.html#k_lowerg=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerg=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerg	niup.html#k_lowerg,IUPhandle_t	niup: k_lowerg(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerh=	niup.html#k_lowerh=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerh=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerh	niup.html#k_lowerh,IUPhandle_t	niup: k_lowerh(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_loweri=	niup.html#k_loweri=,IUPhandle_t,proc(PIhandle,cint)	niup: k_loweri=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_loweri	niup.html#k_loweri,IUPhandle_t	niup: k_loweri(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerj=	niup.html#k_lowerj=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerj=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerj	niup.html#k_lowerj,IUPhandle_t	niup: k_lowerj(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerk=	niup.html#k_lowerk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerk=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerk	niup.html#k_lowerk,IUPhandle_t	niup: k_lowerk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerl=	niup.html#k_lowerl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerl=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerl	niup.html#k_lowerl,IUPhandle_t	niup: k_lowerl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerm=	niup.html#k_lowerm=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerm=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerm	niup.html#k_lowerm,IUPhandle_t	niup: k_lowerm(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowern=	niup.html#k_lowern=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowern=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowern	niup.html#k_lowern,IUPhandle_t	niup: k_lowern(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowero=	niup.html#k_lowero=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowero=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowero	niup.html#k_lowero,IUPhandle_t	niup: k_lowero(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerp=	niup.html#k_lowerp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerp	niup.html#k_lowerp,IUPhandle_t	niup: k_lowerp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerq=	niup.html#k_lowerq=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerq=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerq	niup.html#k_lowerq,IUPhandle_t	niup: k_lowerq(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerr=	niup.html#k_lowerr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerr	niup.html#k_lowerr,IUPhandle_t	niup: k_lowerr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowers=	niup.html#k_lowers=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowers=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowers	niup.html#k_lowers,IUPhandle_t	niup: k_lowers(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowert=	niup.html#k_lowert=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowert=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowert	niup.html#k_lowert,IUPhandle_t	niup: k_lowert(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_loweru=	niup.html#k_loweru=,IUPhandle_t,proc(PIhandle,cint)	niup: k_loweru=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_loweru	niup.html#k_loweru,IUPhandle_t	niup: k_loweru(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerv=	niup.html#k_lowerv=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerv=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerv	niup.html#k_lowerv,IUPhandle_t	niup: k_lowerv(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerw=	niup.html#k_lowerw=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerw=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerw	niup.html#k_lowerw,IUPhandle_t	niup: k_lowerw(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerx=	niup.html#k_lowerx=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerx=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerx	niup.html#k_lowerx,IUPhandle_t	niup: k_lowerx(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowery=	niup.html#k_lowery=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowery=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowery	niup.html#k_lowery,IUPhandle_t	niup: k_lowery(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerz=	niup.html#k_lowerz=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerz=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerz	niup.html#k_lowerz,IUPhandle_t	niup: k_lowerz(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_braceleft=	niup.html#k_braceleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_braceleft=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_braceleft	niup.html#k_braceleft,IUPhandle_t	niup: k_braceleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_bar=	niup.html#k_bar=,IUPhandle_t,proc(PIhandle,cint)	niup: k_bar=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_bar	niup.html#k_bar,IUPhandle_t	niup: k_bar(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_braceright=	niup.html#k_braceright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_braceright=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_braceright	niup.html#k_braceright,IUPhandle_t	niup: k_braceright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_tilde=	niup.html#k_tilde=,IUPhandle_t,proc(PIhandle,cint)	niup: k_tilde=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_tilde	niup.html#k_tilde,IUPhandle_t	niup: k_tilde(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_bs=	niup.html#k_bs=,IUPhandle_t,proc(PIhandle,cint)	niup: k_bs=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_bs	niup.html#k_bs,IUPhandle_t	niup: k_bs(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_tab=	niup.html#k_tab=,IUPhandle_t,proc(PIhandle,cint)	niup: k_tab=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_tab	niup.html#k_tab,IUPhandle_t	niup: k_tab(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lf=	niup.html#k_lf=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lf=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lf	niup.html#k_lf,IUPhandle_t	niup: k_lf(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cr=	niup.html#k_cr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cr	niup.html#k_cr,IUPhandle_t	niup: k_cr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_quoteleft=	niup.html#k_quoteleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_quoteleft=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_quoteleft	niup.html#k_quoteleft,IUPhandle_t	niup: k_quoteleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_quoteright=	niup.html#k_quoteright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_quoteright=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_quoteright	niup.html#k_quoteright,IUPhandle_t	niup: k_quoteright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_pause=	niup.html#k_pause=,IUPhandle_t,proc(PIhandle,cint)	niup: k_pause=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_pause	niup.html#k_pause,IUPhandle_t	niup: k_pause(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_esc=	niup.html#k_esc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_esc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_esc	niup.html#k_esc,IUPhandle_t	niup: k_esc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_home=	niup.html#k_home=,IUPhandle_t,proc(PIhandle,cint)	niup: k_home=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_home	niup.html#k_home,IUPhandle_t	niup: k_home(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_left=	niup.html#k_left=,IUPhandle_t,proc(PIhandle,cint)	niup: k_left=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_left	niup.html#k_left,IUPhandle_t	niup: k_left(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_up=	niup.html#k_up=,IUPhandle_t,proc(PIhandle,cint)	niup: k_up=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_up	niup.html#k_up,IUPhandle_t	niup: k_up(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_right=	niup.html#k_right=,IUPhandle_t,proc(PIhandle,cint)	niup: k_right=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_right	niup.html#k_right,IUPhandle_t	niup: k_right(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_down=	niup.html#k_down=,IUPhandle_t,proc(PIhandle,cint)	niup: k_down=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_down	niup.html#k_down,IUPhandle_t	niup: k_down(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_pgup=	niup.html#k_pgup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_pgup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_pgup	niup.html#k_pgup,IUPhandle_t	niup: k_pgup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_pgdn=	niup.html#k_pgdn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_pgdn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_pgdn	niup.html#k_pgdn,IUPhandle_t	niup: k_pgdn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_end=	niup.html#k_end=,IUPhandle_t,proc(PIhandle,cint)	niup: k_end=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_end	niup.html#k_end,IUPhandle_t	niup: k_end(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_middle=	niup.html#k_middle=,IUPhandle_t,proc(PIhandle,cint)	niup: k_middle=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_middle	niup.html#k_middle,IUPhandle_t	niup: k_middle(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_print=	niup.html#k_print=,IUPhandle_t,proc(PIhandle,cint)	niup: k_print=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_print	niup.html#k_print,IUPhandle_t	niup: k_print(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ins=	niup.html#k_ins=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ins=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ins	niup.html#k_ins,IUPhandle_t	niup: k_ins(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_menu=	niup.html#k_menu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_menu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_menu	niup.html#k_menu,IUPhandle_t	niup: k_menu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_del=	niup.html#k_del=,IUPhandle_t,proc(PIhandle,cint)	niup: k_del=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_del	niup.html#k_del,IUPhandle_t	niup: k_del(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f1=	niup.html#k_f1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f1	niup.html#k_f1,IUPhandle_t	niup: k_f1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f2=	niup.html#k_f2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f2	niup.html#k_f2,IUPhandle_t	niup: k_f2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f3=	niup.html#k_f3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f3	niup.html#k_f3,IUPhandle_t	niup: k_f3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f4=	niup.html#k_f4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f4	niup.html#k_f4,IUPhandle_t	niup: k_f4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f5=	niup.html#k_f5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f5	niup.html#k_f5,IUPhandle_t	niup: k_f5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f6=	niup.html#k_f6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f6	niup.html#k_f6,IUPhandle_t	niup: k_f6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f7=	niup.html#k_f7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f7	niup.html#k_f7,IUPhandle_t	niup: k_f7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f8=	niup.html#k_f8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f8	niup.html#k_f8,IUPhandle_t	niup: k_f8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f9=	niup.html#k_f9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f9	niup.html#k_f9,IUPhandle_t	niup: k_f9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f10=	niup.html#k_f10=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f10=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f10	niup.html#k_f10,IUPhandle_t	niup: k_f10(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f11=	niup.html#k_f11=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f11=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f11	niup.html#k_f11,IUPhandle_t	niup: k_f11(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f12=	niup.html#k_f12=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f12=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f12	niup.html#k_f12,IUPhandle_t	niup: k_f12(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f13=	niup.html#k_f13=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f13=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f13	niup.html#k_f13,IUPhandle_t	niup: k_f13(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f14=	niup.html#k_f14=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f14=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f14	niup.html#k_f14,IUPhandle_t	niup: k_f14(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f15=	niup.html#k_f15=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f15=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f15	niup.html#k_f15,IUPhandle_t	niup: k_f15(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f16=	niup.html#k_f16=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f16=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f16	niup.html#k_f16,IUPhandle_t	niup: k_f16(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f17=	niup.html#k_f17=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f17=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f17	niup.html#k_f17,IUPhandle_t	niup: k_f17(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f18=	niup.html#k_f18=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f18=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f18	niup.html#k_f18,IUPhandle_t	niup: k_f18(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f19=	niup.html#k_f19=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f19=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f19	niup.html#k_f19,IUPhandle_t	niup: k_f19(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_f20=	niup.html#k_f20=,IUPhandle_t,proc(PIhandle,cint)	niup: k_f20=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_f20	niup.html#k_f20,IUPhandle_t	niup: k_f20(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lshift=	niup.html#k_lshift=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lshift=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lshift	niup.html#k_lshift,IUPhandle_t	niup: k_lshift(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_rshift=	niup.html#k_rshift=,IUPhandle_t,proc(PIhandle,cint)	niup: k_rshift=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_rshift	niup.html#k_rshift,IUPhandle_t	niup: k_rshift(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lctrl=	niup.html#k_lctrl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lctrl=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lctrl	niup.html#k_lctrl,IUPhandle_t	niup: k_lctrl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_rctrl=	niup.html#k_rctrl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_rctrl=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_rctrl	niup.html#k_rctrl,IUPhandle_t	niup: k_rctrl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lalt=	niup.html#k_lalt=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lalt=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lalt	niup.html#k_lalt,IUPhandle_t	niup: k_lalt(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ralt=	niup.html#k_ralt=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ralt=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ralt	niup.html#k_ralt,IUPhandle_t	niup: k_ralt(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_num=	niup.html#k_num=,IUPhandle_t,proc(PIhandle,cint)	niup: k_num=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_num	niup.html#k_num,IUPhandle_t	niup: k_num(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_scroll=	niup.html#k_scroll=,IUPhandle_t,proc(PIhandle,cint)	niup: k_scroll=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_scroll	niup.html#k_scroll,IUPhandle_t	niup: k_scroll(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_caps=	niup.html#k_caps=,IUPhandle_t,proc(PIhandle,cint)	niup: k_caps=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_caps	niup.html#k_caps,IUPhandle_t	niup: k_caps(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_clear=	niup.html#k_clear=,IUPhandle_t,proc(PIhandle,cint)	niup: k_clear=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_clear	niup.html#k_clear,IUPhandle_t	niup: k_clear(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_help=	niup.html#k_help=,IUPhandle_t,proc(PIhandle,cint)	niup: k_help=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_help	niup.html#k_help,IUPhandle_t	niup: k_help(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_lowerccedilla=	niup.html#k_lowerccedilla=,IUPhandle_t,proc(PIhandle,cint)	niup: k_lowerccedilla=(control: IUPhandle_t;\n                 cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_lowerccedilla	niup.html#k_lowerccedilla,IUPhandle_t	niup: k_lowerccedilla(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.\n    cdecl.}	
k_ccedilla=	niup.html#k_ccedilla=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ccedilla=(control: IUPhandle_t;\n            cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ccedilla	niup.html#k_ccedilla,IUPhandle_t	niup: k_ccedilla(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_acute=	niup.html#k_acute=,IUPhandle_t,proc(PIhandle,cint)	niup: k_acute=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_acute	niup.html#k_acute,IUPhandle_t	niup: k_acute(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_diaeresis=	niup.html#k_diaeresis=,IUPhandle_t,proc(PIhandle,cint)	niup: k_diaeresis=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_diaeresis	niup.html#k_diaeresis,IUPhandle_t	niup: k_diaeresis(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_shome=	niup.html#k_shome=,IUPhandle_t,proc(PIhandle,cint)	niup: k_shome=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_shome	niup.html#k_shome,IUPhandle_t	niup: k_shome(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sup=	niup.html#k_sup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sup	niup.html#k_sup,IUPhandle_t	niup: k_sup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_spgup=	niup.html#k_spgup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_spgup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_spgup	niup.html#k_spgup,IUPhandle_t	niup: k_spgup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sleft=	niup.html#k_sleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sleft=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sleft	niup.html#k_sleft,IUPhandle_t	niup: k_sleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_smiddle=	niup.html#k_smiddle=,IUPhandle_t,proc(PIhandle,cint)	niup: k_smiddle=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_smiddle	niup.html#k_smiddle,IUPhandle_t	niup: k_smiddle(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sright=	niup.html#k_sright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sright=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sright	niup.html#k_sright,IUPhandle_t	niup: k_sright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_send=	niup.html#k_send=,IUPhandle_t,proc(PIhandle,cint)	niup: k_send=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_send	niup.html#k_send,IUPhandle_t	niup: k_send(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sdown=	niup.html#k_sdown=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sdown=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sdown	niup.html#k_sdown,IUPhandle_t	niup: k_sdown(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_spgdn=	niup.html#k_spgdn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_spgdn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_spgdn	niup.html#k_spgdn,IUPhandle_t	niup: k_spgdn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sins=	niup.html#k_sins=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sins=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sins	niup.html#k_sins,IUPhandle_t	niup: k_sins(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sdel=	niup.html#k_sdel=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sdel=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sdel	niup.html#k_sdel,IUPhandle_t	niup: k_sdel(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ssp=	niup.html#k_ssp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ssp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ssp	niup.html#k_ssp,IUPhandle_t	niup: k_ssp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_stab=	niup.html#k_stab=,IUPhandle_t,proc(PIhandle,cint)	niup: k_stab=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_stab	niup.html#k_stab,IUPhandle_t	niup: k_stab(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_scr=	niup.html#k_scr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_scr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_scr	niup.html#k_scr,IUPhandle_t	niup: k_scr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sbs=	niup.html#k_sbs=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sbs=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sbs	niup.html#k_sbs,IUPhandle_t	niup: k_sbs(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_spause=	niup.html#k_spause=,IUPhandle_t,proc(PIhandle,cint)	niup: k_spause=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_spause	niup.html#k_spause,IUPhandle_t	niup: k_spause(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sesc=	niup.html#k_sesc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sesc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sesc	niup.html#k_sesc,IUPhandle_t	niup: k_sesc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sclear=	niup.html#k_sclear=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sclear=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sclear	niup.html#k_sclear,IUPhandle_t	niup: k_sclear(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf1=	niup.html#k_sf1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf1	niup.html#k_sf1,IUPhandle_t	niup: k_sf1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf2=	niup.html#k_sf2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf2	niup.html#k_sf2,IUPhandle_t	niup: k_sf2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf3=	niup.html#k_sf3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf3	niup.html#k_sf3,IUPhandle_t	niup: k_sf3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf4=	niup.html#k_sf4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf4	niup.html#k_sf4,IUPhandle_t	niup: k_sf4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf5=	niup.html#k_sf5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf5	niup.html#k_sf5,IUPhandle_t	niup: k_sf5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf6=	niup.html#k_sf6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf6	niup.html#k_sf6,IUPhandle_t	niup: k_sf6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf7=	niup.html#k_sf7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf7	niup.html#k_sf7,IUPhandle_t	niup: k_sf7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf8=	niup.html#k_sf8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf8	niup.html#k_sf8,IUPhandle_t	niup: k_sf8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf9=	niup.html#k_sf9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf9	niup.html#k_sf9,IUPhandle_t	niup: k_sf9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf10=	niup.html#k_sf10=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf10=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf10	niup.html#k_sf10,IUPhandle_t	niup: k_sf10(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf11=	niup.html#k_sf11=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf11=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf11	niup.html#k_sf11,IUPhandle_t	niup: k_sf11(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf12=	niup.html#k_sf12=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf12=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf12	niup.html#k_sf12,IUPhandle_t	niup: k_sf12(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf13=	niup.html#k_sf13=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf13=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf13	niup.html#k_sf13,IUPhandle_t	niup: k_sf13(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf14=	niup.html#k_sf14=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf14=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf14	niup.html#k_sf14,IUPhandle_t	niup: k_sf14(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf15=	niup.html#k_sf15=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf15=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf15	niup.html#k_sf15,IUPhandle_t	niup: k_sf15(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf16=	niup.html#k_sf16=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf16=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf16	niup.html#k_sf16,IUPhandle_t	niup: k_sf16(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf17=	niup.html#k_sf17=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf17=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf17	niup.html#k_sf17,IUPhandle_t	niup: k_sf17(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf18=	niup.html#k_sf18=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf18=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf18	niup.html#k_sf18,IUPhandle_t	niup: k_sf18(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf19=	niup.html#k_sf19=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf19=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf19	niup.html#k_sf19,IUPhandle_t	niup: k_sf19(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sf20=	niup.html#k_sf20=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sf20=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sf20	niup.html#k_sf20,IUPhandle_t	niup: k_sf20(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sprint=	niup.html#k_sprint=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sprint=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sprint	niup.html#k_sprint,IUPhandle_t	niup: k_sprint(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_smenu=	niup.html#k_smenu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_smenu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_smenu	niup.html#k_smenu,IUPhandle_t	niup: k_smenu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_chome=	niup.html#k_chome=,IUPhandle_t,proc(PIhandle,cint)	niup: k_chome=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_chome	niup.html#k_chome,IUPhandle_t	niup: k_chome(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cup=	niup.html#k_cup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cup	niup.html#k_cup,IUPhandle_t	niup: k_cup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cpgup=	niup.html#k_cpgup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cpgup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cpgup	niup.html#k_cpgup,IUPhandle_t	niup: k_cpgup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cleft=	niup.html#k_cleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cleft=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cleft	niup.html#k_cleft,IUPhandle_t	niup: k_cleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cmiddle=	niup.html#k_cmiddle=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cmiddle=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cmiddle	niup.html#k_cmiddle,IUPhandle_t	niup: k_cmiddle(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cright=	niup.html#k_cright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cright=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cright	niup.html#k_cright,IUPhandle_t	niup: k_cright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cend=	niup.html#k_cend=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cend=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cend	niup.html#k_cend,IUPhandle_t	niup: k_cend(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cdown=	niup.html#k_cdown=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cdown=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cdown	niup.html#k_cdown,IUPhandle_t	niup: k_cdown(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cpgdn=	niup.html#k_cpgdn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cpgdn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cpgdn	niup.html#k_cpgdn,IUPhandle_t	niup: k_cpgdn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cins=	niup.html#k_cins=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cins=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cins	niup.html#k_cins,IUPhandle_t	niup: k_cins(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cdel=	niup.html#k_cdel=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cdel=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cdel	niup.html#k_cdel,IUPhandle_t	niup: k_cdel(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_csp=	niup.html#k_csp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_csp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_csp	niup.html#k_csp,IUPhandle_t	niup: k_csp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ctab=	niup.html#k_ctab=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ctab=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ctab	niup.html#k_ctab,IUPhandle_t	niup: k_ctab(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ccr=	niup.html#k_ccr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ccr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ccr	niup.html#k_ccr,IUPhandle_t	niup: k_ccr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cbs=	niup.html#k_cbs=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cbs=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cbs	niup.html#k_cbs,IUPhandle_t	niup: k_cbs(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cpause=	niup.html#k_cpause=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cpause=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cpause	niup.html#k_cpause,IUPhandle_t	niup: k_cpause(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cesc=	niup.html#k_cesc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cesc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cesc	niup.html#k_cesc,IUPhandle_t	niup: k_cesc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cclear=	niup.html#k_cclear=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cclear=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cclear	niup.html#k_cclear,IUPhandle_t	niup: k_cclear(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cccedilla=	niup.html#k_cccedilla=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cccedilla=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cccedilla	niup.html#k_cccedilla,IUPhandle_t	niup: k_cccedilla(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf1=	niup.html#k_cf1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf1	niup.html#k_cf1,IUPhandle_t	niup: k_cf1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf2=	niup.html#k_cf2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf2	niup.html#k_cf2,IUPhandle_t	niup: k_cf2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf3=	niup.html#k_cf3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf3	niup.html#k_cf3,IUPhandle_t	niup: k_cf3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf4=	niup.html#k_cf4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf4	niup.html#k_cf4,IUPhandle_t	niup: k_cf4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf5=	niup.html#k_cf5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf5	niup.html#k_cf5,IUPhandle_t	niup: k_cf5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf6=	niup.html#k_cf6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf6	niup.html#k_cf6,IUPhandle_t	niup: k_cf6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf7=	niup.html#k_cf7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf7	niup.html#k_cf7,IUPhandle_t	niup: k_cf7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf8=	niup.html#k_cf8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf8	niup.html#k_cf8,IUPhandle_t	niup: k_cf8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf9=	niup.html#k_cf9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf9	niup.html#k_cf9,IUPhandle_t	niup: k_cf9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf10=	niup.html#k_cf10=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf10=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf10	niup.html#k_cf10,IUPhandle_t	niup: k_cf10(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf11=	niup.html#k_cf11=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf11=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf11	niup.html#k_cf11,IUPhandle_t	niup: k_cf11(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf12=	niup.html#k_cf12=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf12=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf12	niup.html#k_cf12,IUPhandle_t	niup: k_cf12(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf13=	niup.html#k_cf13=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf13=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf13	niup.html#k_cf13,IUPhandle_t	niup: k_cf13(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf14=	niup.html#k_cf14=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf14=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf14	niup.html#k_cf14,IUPhandle_t	niup: k_cf14(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf15=	niup.html#k_cf15=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf15=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf15	niup.html#k_cf15,IUPhandle_t	niup: k_cf15(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf16=	niup.html#k_cf16=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf16=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf16	niup.html#k_cf16,IUPhandle_t	niup: k_cf16(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf17=	niup.html#k_cf17=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf17=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf17	niup.html#k_cf17,IUPhandle_t	niup: k_cf17(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf18=	niup.html#k_cf18=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf18=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf18	niup.html#k_cf18,IUPhandle_t	niup: k_cf18(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf19=	niup.html#k_cf19=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf19=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf19	niup.html#k_cf19,IUPhandle_t	niup: k_cf19(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cf20=	niup.html#k_cf20=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cf20=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cf20	niup.html#k_cf20,IUPhandle_t	niup: k_cf20(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cprint=	niup.html#k_cprint=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cprint=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cprint	niup.html#k_cprint,IUPhandle_t	niup: k_cprint(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cmenu=	niup.html#k_cmenu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cmenu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cmenu	niup.html#k_cmenu,IUPhandle_t	niup: k_cmenu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mhome=	niup.html#k_mhome=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mhome=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mhome	niup.html#k_mhome,IUPhandle_t	niup: k_mhome(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mup=	niup.html#k_mup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mup	niup.html#k_mup,IUPhandle_t	niup: k_mup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mpgup=	niup.html#k_mpgup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mpgup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mpgup	niup.html#k_mpgup,IUPhandle_t	niup: k_mpgup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mleft=	niup.html#k_mleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mleft=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mleft	niup.html#k_mleft,IUPhandle_t	niup: k_mleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mmiddle=	niup.html#k_mmiddle=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mmiddle=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mmiddle	niup.html#k_mmiddle,IUPhandle_t	niup: k_mmiddle(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mright=	niup.html#k_mright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mright=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mright	niup.html#k_mright,IUPhandle_t	niup: k_mright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mend=	niup.html#k_mend=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mend=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mend	niup.html#k_mend,IUPhandle_t	niup: k_mend(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mdown=	niup.html#k_mdown=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mdown=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mdown	niup.html#k_mdown,IUPhandle_t	niup: k_mdown(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mpgdn=	niup.html#k_mpgdn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mpgdn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mpgdn	niup.html#k_mpgdn,IUPhandle_t	niup: k_mpgdn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mins=	niup.html#k_mins=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mins=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mins	niup.html#k_mins,IUPhandle_t	niup: k_mins(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mdel=	niup.html#k_mdel=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mdel=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mdel	niup.html#k_mdel,IUPhandle_t	niup: k_mdel(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_msp=	niup.html#k_msp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_msp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_msp	niup.html#k_msp,IUPhandle_t	niup: k_msp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mtab=	niup.html#k_mtab=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mtab=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mtab	niup.html#k_mtab,IUPhandle_t	niup: k_mtab(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mcr=	niup.html#k_mcr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mcr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mcr	niup.html#k_mcr,IUPhandle_t	niup: k_mcr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mbs=	niup.html#k_mbs=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mbs=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mbs	niup.html#k_mbs,IUPhandle_t	niup: k_mbs(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mpause=	niup.html#k_mpause=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mpause=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mpause	niup.html#k_mpause,IUPhandle_t	niup: k_mpause(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mesc=	niup.html#k_mesc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mesc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mesc	niup.html#k_mesc,IUPhandle_t	niup: k_mesc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mclear=	niup.html#k_mclear=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mclear=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mclear	niup.html#k_mclear,IUPhandle_t	niup: k_mclear(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mccedilla=	niup.html#k_mccedilla=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mccedilla=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mccedilla	niup.html#k_mccedilla,IUPhandle_t	niup: k_mccedilla(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf1=	niup.html#k_mf1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf1	niup.html#k_mf1,IUPhandle_t	niup: k_mf1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf2=	niup.html#k_mf2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf2	niup.html#k_mf2,IUPhandle_t	niup: k_mf2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf3=	niup.html#k_mf3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf3	niup.html#k_mf3,IUPhandle_t	niup: k_mf3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf4=	niup.html#k_mf4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf4	niup.html#k_mf4,IUPhandle_t	niup: k_mf4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf5=	niup.html#k_mf5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf5	niup.html#k_mf5,IUPhandle_t	niup: k_mf5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf6=	niup.html#k_mf6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf6	niup.html#k_mf6,IUPhandle_t	niup: k_mf6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf7=	niup.html#k_mf7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf7	niup.html#k_mf7,IUPhandle_t	niup: k_mf7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf8=	niup.html#k_mf8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf8	niup.html#k_mf8,IUPhandle_t	niup: k_mf8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf9=	niup.html#k_mf9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf9	niup.html#k_mf9,IUPhandle_t	niup: k_mf9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf10=	niup.html#k_mf10=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf10=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf10	niup.html#k_mf10,IUPhandle_t	niup: k_mf10(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf11=	niup.html#k_mf11=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf11=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf11	niup.html#k_mf11,IUPhandle_t	niup: k_mf11(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf12=	niup.html#k_mf12=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf12=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf12	niup.html#k_mf12,IUPhandle_t	niup: k_mf12(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf13=	niup.html#k_mf13=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf13=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf13	niup.html#k_mf13,IUPhandle_t	niup: k_mf13(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf14=	niup.html#k_mf14=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf14=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf14	niup.html#k_mf14,IUPhandle_t	niup: k_mf14(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf15=	niup.html#k_mf15=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf15=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf15	niup.html#k_mf15,IUPhandle_t	niup: k_mf15(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf16=	niup.html#k_mf16=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf16=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf16	niup.html#k_mf16,IUPhandle_t	niup: k_mf16(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf17=	niup.html#k_mf17=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf17=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf17	niup.html#k_mf17,IUPhandle_t	niup: k_mf17(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf18=	niup.html#k_mf18=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf18=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf18	niup.html#k_mf18,IUPhandle_t	niup: k_mf18(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf19=	niup.html#k_mf19=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf19=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf19	niup.html#k_mf19,IUPhandle_t	niup: k_mf19(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf20=	niup.html#k_mf20=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf20=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf20	niup.html#k_mf20,IUPhandle_t	niup: k_mf20(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mprint=	niup.html#k_mprint=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mprint=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mprint	niup.html#k_mprint,IUPhandle_t	niup: k_mprint(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mmenu=	niup.html#k_mmenu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mmenu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mmenu	niup.html#k_mmenu,IUPhandle_t	niup: k_mmenu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yhome=	niup.html#k_yhome=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yhome=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yhome	niup.html#k_yhome,IUPhandle_t	niup: k_yhome(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yup=	niup.html#k_yup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yup	niup.html#k_yup,IUPhandle_t	niup: k_yup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ypgup=	niup.html#k_ypgup=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ypgup=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ypgup	niup.html#k_ypgup,IUPhandle_t	niup: k_ypgup(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yleft=	niup.html#k_yleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yleft=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yleft	niup.html#k_yleft,IUPhandle_t	niup: k_yleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ymiddle=	niup.html#k_ymiddle=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ymiddle=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ymiddle	niup.html#k_ymiddle,IUPhandle_t	niup: k_ymiddle(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yright=	niup.html#k_yright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yright=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yright	niup.html#k_yright,IUPhandle_t	niup: k_yright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yend=	niup.html#k_yend=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yend=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yend	niup.html#k_yend,IUPhandle_t	niup: k_yend(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ydown=	niup.html#k_ydown=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ydown=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ydown	niup.html#k_ydown,IUPhandle_t	niup: k_ydown(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ypgdn=	niup.html#k_ypgdn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ypgdn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ypgdn	niup.html#k_ypgdn,IUPhandle_t	niup: k_ypgdn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yins=	niup.html#k_yins=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yins=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yins	niup.html#k_yins,IUPhandle_t	niup: k_yins(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ydel=	niup.html#k_ydel=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ydel=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ydel	niup.html#k_ydel,IUPhandle_t	niup: k_ydel(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ysp=	niup.html#k_ysp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ysp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ysp	niup.html#k_ysp,IUPhandle_t	niup: k_ysp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ytab=	niup.html#k_ytab=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ytab=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ytab	niup.html#k_ytab,IUPhandle_t	niup: k_ytab(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ycr=	niup.html#k_ycr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ycr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ycr	niup.html#k_ycr,IUPhandle_t	niup: k_ycr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ybs=	niup.html#k_ybs=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ybs=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ybs	niup.html#k_ybs,IUPhandle_t	niup: k_ybs(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ypause=	niup.html#k_ypause=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ypause=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ypause	niup.html#k_ypause,IUPhandle_t	niup: k_ypause(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yesc=	niup.html#k_yesc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yesc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yesc	niup.html#k_yesc,IUPhandle_t	niup: k_yesc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yclear=	niup.html#k_yclear=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yclear=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yclear	niup.html#k_yclear,IUPhandle_t	niup: k_yclear(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yccedilla=	niup.html#k_yccedilla=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yccedilla=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yccedilla	niup.html#k_yccedilla,IUPhandle_t	niup: k_yccedilla(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf1=	niup.html#k_yf1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf1	niup.html#k_yf1,IUPhandle_t	niup: k_yf1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf2=	niup.html#k_yf2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf2	niup.html#k_yf2,IUPhandle_t	niup: k_yf2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf3=	niup.html#k_yf3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf3	niup.html#k_yf3,IUPhandle_t	niup: k_yf3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf4=	niup.html#k_yf4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf4	niup.html#k_yf4,IUPhandle_t	niup: k_yf4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf5=	niup.html#k_yf5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf5	niup.html#k_yf5,IUPhandle_t	niup: k_yf5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf6=	niup.html#k_yf6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf6	niup.html#k_yf6,IUPhandle_t	niup: k_yf6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf7=	niup.html#k_yf7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf7	niup.html#k_yf7,IUPhandle_t	niup: k_yf7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf8=	niup.html#k_yf8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf8	niup.html#k_yf8,IUPhandle_t	niup: k_yf8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf9=	niup.html#k_yf9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf9	niup.html#k_yf9,IUPhandle_t	niup: k_yf9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf10=	niup.html#k_yf10=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf10=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf10	niup.html#k_yf10,IUPhandle_t	niup: k_yf10(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf11=	niup.html#k_yf11=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf11=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf11	niup.html#k_yf11,IUPhandle_t	niup: k_yf11(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf12=	niup.html#k_yf12=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf12=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf12	niup.html#k_yf12,IUPhandle_t	niup: k_yf12(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf13=	niup.html#k_yf13=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf13=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf13	niup.html#k_yf13,IUPhandle_t	niup: k_yf13(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf14=	niup.html#k_yf14=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf14=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf14	niup.html#k_yf14,IUPhandle_t	niup: k_yf14(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf15=	niup.html#k_yf15=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf15=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf15	niup.html#k_yf15,IUPhandle_t	niup: k_yf15(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf16=	niup.html#k_yf16=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf16=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf16	niup.html#k_yf16,IUPhandle_t	niup: k_yf16(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf17=	niup.html#k_yf17=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf17=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf17	niup.html#k_yf17,IUPhandle_t	niup: k_yf17(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf18=	niup.html#k_yf18=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf18=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf18	niup.html#k_yf18,IUPhandle_t	niup: k_yf18(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf19=	niup.html#k_yf19=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf19=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf19	niup.html#k_yf19,IUPhandle_t	niup: k_yf19(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf20=	niup.html#k_yf20=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf20=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf20	niup.html#k_yf20,IUPhandle_t	niup: k_yf20(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yprint=	niup.html#k_yprint=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yprint=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yprint	niup.html#k_yprint,IUPhandle_t	niup: k_yprint(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ymenu=	niup.html#k_ymenu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ymenu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ymenu	niup.html#k_ymenu,IUPhandle_t	niup: k_ymenu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_splus=	niup.html#k_splus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_splus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_splus	niup.html#k_splus,IUPhandle_t	niup: k_splus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_scomma=	niup.html#k_scomma=,IUPhandle_t,proc(PIhandle,cint)	niup: k_scomma=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_scomma	niup.html#k_scomma,IUPhandle_t	niup: k_scomma(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sminus=	niup.html#k_sminus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sminus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sminus	niup.html#k_sminus,IUPhandle_t	niup: k_sminus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_speriod=	niup.html#k_speriod=,IUPhandle_t,proc(PIhandle,cint)	niup: k_speriod=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_speriod	niup.html#k_speriod,IUPhandle_t	niup: k_speriod(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sslash=	niup.html#k_sslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sslash=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sslash	niup.html#k_sslash,IUPhandle_t	niup: k_sslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_sasterisk=	niup.html#k_sasterisk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_sasterisk=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_sasterisk	niup.html#k_sasterisk,IUPhandle_t	niup: k_sasterisk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppera=	niup.html#k_cuppera=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppera=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppera	niup.html#k_cuppera,IUPhandle_t	niup: k_cuppera(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperb=	niup.html#k_cupperb=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperb=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperb	niup.html#k_cupperb,IUPhandle_t	niup: k_cupperb(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperc=	niup.html#k_cupperc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperc	niup.html#k_cupperc,IUPhandle_t	niup: k_cupperc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperd=	niup.html#k_cupperd=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperd=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperd	niup.html#k_cupperd,IUPhandle_t	niup: k_cupperd(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppere=	niup.html#k_cuppere=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppere=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppere	niup.html#k_cuppere,IUPhandle_t	niup: k_cuppere(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperf=	niup.html#k_cupperf=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperf=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperf	niup.html#k_cupperf,IUPhandle_t	niup: k_cupperf(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperg=	niup.html#k_cupperg=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperg=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperg	niup.html#k_cupperg,IUPhandle_t	niup: k_cupperg(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperh=	niup.html#k_cupperh=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperh=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperh	niup.html#k_cupperh,IUPhandle_t	niup: k_cupperh(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperi=	niup.html#k_cupperi=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperi=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperi	niup.html#k_cupperi,IUPhandle_t	niup: k_cupperi(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperj=	niup.html#k_cupperj=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperj=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperj	niup.html#k_cupperj,IUPhandle_t	niup: k_cupperj(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperk=	niup.html#k_cupperk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperk=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperk	niup.html#k_cupperk,IUPhandle_t	niup: k_cupperk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperl=	niup.html#k_cupperl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperl=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperl	niup.html#k_cupperl,IUPhandle_t	niup: k_cupperl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperm=	niup.html#k_cupperm=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperm=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperm	niup.html#k_cupperm,IUPhandle_t	niup: k_cupperm(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppern=	niup.html#k_cuppern=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppern=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppern	niup.html#k_cuppern,IUPhandle_t	niup: k_cuppern(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppero=	niup.html#k_cuppero=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppero=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppero	niup.html#k_cuppero,IUPhandle_t	niup: k_cuppero(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperp=	niup.html#k_cupperp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperp	niup.html#k_cupperp,IUPhandle_t	niup: k_cupperp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperq=	niup.html#k_cupperq=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperq=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperq	niup.html#k_cupperq,IUPhandle_t	niup: k_cupperq(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperr=	niup.html#k_cupperr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperr	niup.html#k_cupperr,IUPhandle_t	niup: k_cupperr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppers=	niup.html#k_cuppers=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppers=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppers	niup.html#k_cuppers,IUPhandle_t	niup: k_cuppers(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppert=	niup.html#k_cuppert=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppert=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppert	niup.html#k_cuppert,IUPhandle_t	niup: k_cuppert(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperu=	niup.html#k_cupperu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperu	niup.html#k_cupperu,IUPhandle_t	niup: k_cupperu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperv=	niup.html#k_cupperv=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperv=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperv	niup.html#k_cupperv,IUPhandle_t	niup: k_cupperv(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperw=	niup.html#k_cupperw=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperw=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperw	niup.html#k_cupperw,IUPhandle_t	niup: k_cupperw(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperx=	niup.html#k_cupperx=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperx=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperx	niup.html#k_cupperx,IUPhandle_t	niup: k_cupperx(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cuppery=	niup.html#k_cuppery=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cuppery=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cuppery	niup.html#k_cuppery,IUPhandle_t	niup: k_cuppery(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cupperz=	niup.html#k_cupperz=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cupperz=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cupperz	niup.html#k_cupperz,IUPhandle_t	niup: k_cupperz(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c1=	niup.html#k_c1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c1	niup.html#k_c1,IUPhandle_t	niup: k_c1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c2=	niup.html#k_c2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c2	niup.html#k_c2,IUPhandle_t	niup: k_c2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c3=	niup.html#k_c3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c3	niup.html#k_c3,IUPhandle_t	niup: k_c3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c4=	niup.html#k_c4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c4	niup.html#k_c4,IUPhandle_t	niup: k_c4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c5=	niup.html#k_c5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c5	niup.html#k_c5,IUPhandle_t	niup: k_c5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c6=	niup.html#k_c6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c6	niup.html#k_c6,IUPhandle_t	niup: k_c6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c7=	niup.html#k_c7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c7	niup.html#k_c7,IUPhandle_t	niup: k_c7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c8=	niup.html#k_c8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c8	niup.html#k_c8,IUPhandle_t	niup: k_c8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c9=	niup.html#k_c9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c9	niup.html#k_c9,IUPhandle_t	niup: k_c9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_c0=	niup.html#k_c0=,IUPhandle_t,proc(PIhandle,cint)	niup: k_c0=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_c0	niup.html#k_c0,IUPhandle_t	niup: k_c0(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cplus=	niup.html#k_cplus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cplus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cplus	niup.html#k_cplus,IUPhandle_t	niup: k_cplus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ccomma=	niup.html#k_ccomma=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ccomma=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ccomma	niup.html#k_ccomma,IUPhandle_t	niup: k_ccomma(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cminus=	niup.html#k_cminus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cminus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cminus	niup.html#k_cminus,IUPhandle_t	niup: k_cminus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cperiod=	niup.html#k_cperiod=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cperiod=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cperiod	niup.html#k_cperiod,IUPhandle_t	niup: k_cperiod(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cslash=	niup.html#k_cslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cslash=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cslash	niup.html#k_cslash,IUPhandle_t	niup: k_cslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_csemicolon=	niup.html#k_csemicolon=,IUPhandle_t,proc(PIhandle,cint)	niup: k_csemicolon=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_csemicolon	niup.html#k_csemicolon,IUPhandle_t	niup: k_csemicolon(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cequal=	niup.html#k_cequal=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cequal=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cequal	niup.html#k_cequal,IUPhandle_t	niup: k_cequal(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cbracketleft=	niup.html#k_cbracketleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cbracketleft=(control: IUPhandle_t;\n                cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cbracketleft	niup.html#k_cbracketleft,IUPhandle_t	niup: k_cbracketleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_cbracketright=	niup.html#k_cbracketright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cbracketright=(control: IUPhandle_t;\n                 cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cbracketright	niup.html#k_cbracketright,IUPhandle_t	niup: k_cbracketright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.\n    cdecl.}	
k_cbackslash=	niup.html#k_cbackslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_cbackslash=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_cbackslash	niup.html#k_cbackslash,IUPhandle_t	niup: k_cbackslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_casterisk=	niup.html#k_casterisk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_casterisk=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_casterisk	niup.html#k_casterisk,IUPhandle_t	niup: k_casterisk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ma=	niup.html#k_ma=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ma=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ma	niup.html#k_ma,IUPhandle_t	niup: k_ma(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mb=	niup.html#k_mb=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mb=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mb	niup.html#k_mb,IUPhandle_t	niup: k_mb(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mc=	niup.html#k_mc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mc	niup.html#k_mc,IUPhandle_t	niup: k_mc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_md=	niup.html#k_md=,IUPhandle_t,proc(PIhandle,cint)	niup: k_md=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_md	niup.html#k_md,IUPhandle_t	niup: k_md(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_me=	niup.html#k_me=,IUPhandle_t,proc(PIhandle,cint)	niup: k_me=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_me	niup.html#k_me,IUPhandle_t	niup: k_me(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mf=	niup.html#k_mf=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mf=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mf	niup.html#k_mf,IUPhandle_t	niup: k_mf(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mg=	niup.html#k_mg=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mg=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mg	niup.html#k_mg,IUPhandle_t	niup: k_mg(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mh=	niup.html#k_mh=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mh=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mh	niup.html#k_mh,IUPhandle_t	niup: k_mh(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mi=	niup.html#k_mi=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mi=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mi	niup.html#k_mi,IUPhandle_t	niup: k_mi(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mj=	niup.html#k_mj=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mj=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mj	niup.html#k_mj,IUPhandle_t	niup: k_mj(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mk=	niup.html#k_mk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mk=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mk	niup.html#k_mk,IUPhandle_t	niup: k_mk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ml=	niup.html#k_ml=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ml=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ml	niup.html#k_ml,IUPhandle_t	niup: k_ml(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mm=	niup.html#k_mm=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mm=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mm	niup.html#k_mm,IUPhandle_t	niup: k_mm(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mn=	niup.html#k_mn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mn	niup.html#k_mn,IUPhandle_t	niup: k_mn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mo=	niup.html#k_mo=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mo=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mo	niup.html#k_mo,IUPhandle_t	niup: k_mo(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mp=	niup.html#k_mp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mp	niup.html#k_mp,IUPhandle_t	niup: k_mp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mq=	niup.html#k_mq=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mq=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mq	niup.html#k_mq,IUPhandle_t	niup: k_mq(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mr=	niup.html#k_mr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mr	niup.html#k_mr,IUPhandle_t	niup: k_mr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ms=	niup.html#k_ms=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ms=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ms	niup.html#k_ms,IUPhandle_t	niup: k_ms(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mt=	niup.html#k_mt=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mt=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mt	niup.html#k_mt,IUPhandle_t	niup: k_mt(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mu=	niup.html#k_mu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mu	niup.html#k_mu,IUPhandle_t	niup: k_mu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mv=	niup.html#k_mv=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mv=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mv	niup.html#k_mv,IUPhandle_t	niup: k_mv(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mw=	niup.html#k_mw=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mw=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mw	niup.html#k_mw,IUPhandle_t	niup: k_mw(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mx=	niup.html#k_mx=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mx=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mx	niup.html#k_mx,IUPhandle_t	niup: k_mx(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_my=	niup.html#k_my=,IUPhandle_t,proc(PIhandle,cint)	niup: k_my=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_my	niup.html#k_my,IUPhandle_t	niup: k_my(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mz=	niup.html#k_mz=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mz=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mz	niup.html#k_mz,IUPhandle_t	niup: k_mz(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m1=	niup.html#k_m1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m1	niup.html#k_m1,IUPhandle_t	niup: k_m1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m2=	niup.html#k_m2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m2	niup.html#k_m2,IUPhandle_t	niup: k_m2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m3=	niup.html#k_m3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m3	niup.html#k_m3,IUPhandle_t	niup: k_m3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m4=	niup.html#k_m4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m4	niup.html#k_m4,IUPhandle_t	niup: k_m4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m5=	niup.html#k_m5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m5	niup.html#k_m5,IUPhandle_t	niup: k_m5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m6=	niup.html#k_m6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m6	niup.html#k_m6,IUPhandle_t	niup: k_m6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m7=	niup.html#k_m7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m7	niup.html#k_m7,IUPhandle_t	niup: k_m7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m8=	niup.html#k_m8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m8	niup.html#k_m8,IUPhandle_t	niup: k_m8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m9=	niup.html#k_m9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m9	niup.html#k_m9,IUPhandle_t	niup: k_m9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_m0=	niup.html#k_m0=,IUPhandle_t,proc(PIhandle,cint)	niup: k_m0=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_m0	niup.html#k_m0,IUPhandle_t	niup: k_m0(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mplus=	niup.html#k_mplus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mplus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mplus	niup.html#k_mplus,IUPhandle_t	niup: k_mplus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mcomma=	niup.html#k_mcomma=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mcomma=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mcomma	niup.html#k_mcomma,IUPhandle_t	niup: k_mcomma(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mminus=	niup.html#k_mminus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mminus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mminus	niup.html#k_mminus,IUPhandle_t	niup: k_mminus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mperiod=	niup.html#k_mperiod=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mperiod=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mperiod	niup.html#k_mperiod,IUPhandle_t	niup: k_mperiod(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mslash=	niup.html#k_mslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mslash=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mslash	niup.html#k_mslash,IUPhandle_t	niup: k_mslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_msemicolon=	niup.html#k_msemicolon=,IUPhandle_t,proc(PIhandle,cint)	niup: k_msemicolon=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_msemicolon	niup.html#k_msemicolon,IUPhandle_t	niup: k_msemicolon(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mequal=	niup.html#k_mequal=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mequal=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mequal	niup.html#k_mequal,IUPhandle_t	niup: k_mequal(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mbracketleft=	niup.html#k_mbracketleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mbracketleft=(control: IUPhandle_t;\n                cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mbracketleft	niup.html#k_mbracketleft,IUPhandle_t	niup: k_mbracketleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_mbracketright=	niup.html#k_mbracketright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mbracketright=(control: IUPhandle_t;\n                 cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mbracketright	niup.html#k_mbracketright,IUPhandle_t	niup: k_mbracketright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.\n    cdecl.}	
k_mbackslash=	niup.html#k_mbackslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_mbackslash=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_mbackslash	niup.html#k_mbackslash,IUPhandle_t	niup: k_mbackslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_masterisk=	niup.html#k_masterisk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_masterisk=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_masterisk	niup.html#k_masterisk,IUPhandle_t	niup: k_masterisk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ya=	niup.html#k_ya=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ya=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ya	niup.html#k_ya,IUPhandle_t	niup: k_ya(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yb=	niup.html#k_yb=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yb=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yb	niup.html#k_yb,IUPhandle_t	niup: k_yb(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yc=	niup.html#k_yc=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yc=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yc	niup.html#k_yc,IUPhandle_t	niup: k_yc(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yd=	niup.html#k_yd=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yd=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yd	niup.html#k_yd,IUPhandle_t	niup: k_yd(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ye=	niup.html#k_ye=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ye=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ye	niup.html#k_ye,IUPhandle_t	niup: k_ye(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yf=	niup.html#k_yf=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yf=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yf	niup.html#k_yf,IUPhandle_t	niup: k_yf(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yg=	niup.html#k_yg=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yg=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yg	niup.html#k_yg,IUPhandle_t	niup: k_yg(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yh=	niup.html#k_yh=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yh=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yh	niup.html#k_yh,IUPhandle_t	niup: k_yh(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yi=	niup.html#k_yi=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yi=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yi	niup.html#k_yi,IUPhandle_t	niup: k_yi(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yj=	niup.html#k_yj=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yj=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yj	niup.html#k_yj,IUPhandle_t	niup: k_yj(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yk=	niup.html#k_yk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yk=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yk	niup.html#k_yk,IUPhandle_t	niup: k_yk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yl=	niup.html#k_yl=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yl=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yl	niup.html#k_yl,IUPhandle_t	niup: k_yl(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ym=	niup.html#k_ym=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ym=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ym	niup.html#k_ym,IUPhandle_t	niup: k_ym(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yn=	niup.html#k_yn=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yn=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yn	niup.html#k_yn,IUPhandle_t	niup: k_yn(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yo=	niup.html#k_yo=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yo=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yo	niup.html#k_yo,IUPhandle_t	niup: k_yo(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yp=	niup.html#k_yp=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yp=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yp	niup.html#k_yp,IUPhandle_t	niup: k_yp(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yq=	niup.html#k_yq=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yq=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yq	niup.html#k_yq,IUPhandle_t	niup: k_yq(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yr=	niup.html#k_yr=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yr=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yr	niup.html#k_yr,IUPhandle_t	niup: k_yr(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ys=	niup.html#k_ys=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ys=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ys	niup.html#k_ys,IUPhandle_t	niup: k_ys(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yt=	niup.html#k_yt=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yt=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yt	niup.html#k_yt,IUPhandle_t	niup: k_yt(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yu=	niup.html#k_yu=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yu=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yu	niup.html#k_yu,IUPhandle_t	niup: k_yu(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yv=	niup.html#k_yv=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yv=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yv	niup.html#k_yv,IUPhandle_t	niup: k_yv(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yw=	niup.html#k_yw=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yw=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yw	niup.html#k_yw,IUPhandle_t	niup: k_yw(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yx=	niup.html#k_yx=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yx=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yx	niup.html#k_yx,IUPhandle_t	niup: k_yx(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yy=	niup.html#k_yy=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yy=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yy	niup.html#k_yy,IUPhandle_t	niup: k_yy(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yz=	niup.html#k_yz=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yz=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yz	niup.html#k_yz,IUPhandle_t	niup: k_yz(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y1=	niup.html#k_y1=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y1=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y1	niup.html#k_y1,IUPhandle_t	niup: k_y1(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y2=	niup.html#k_y2=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y2=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y2	niup.html#k_y2,IUPhandle_t	niup: k_y2(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y3=	niup.html#k_y3=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y3=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y3	niup.html#k_y3,IUPhandle_t	niup: k_y3(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y4=	niup.html#k_y4=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y4=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y4	niup.html#k_y4,IUPhandle_t	niup: k_y4(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y5=	niup.html#k_y5=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y5=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y5	niup.html#k_y5,IUPhandle_t	niup: k_y5(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y6=	niup.html#k_y6=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y6=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y6	niup.html#k_y6,IUPhandle_t	niup: k_y6(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y7=	niup.html#k_y7=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y7=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y7	niup.html#k_y7,IUPhandle_t	niup: k_y7(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y8=	niup.html#k_y8=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y8=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y8	niup.html#k_y8,IUPhandle_t	niup: k_y8(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y9=	niup.html#k_y9=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y9=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y9	niup.html#k_y9,IUPhandle_t	niup: k_y9(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_y0=	niup.html#k_y0=,IUPhandle_t,proc(PIhandle,cint)	niup: k_y0=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_y0	niup.html#k_y0,IUPhandle_t	niup: k_y0(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yplus=	niup.html#k_yplus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yplus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yplus	niup.html#k_yplus,IUPhandle_t	niup: k_yplus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ycomma=	niup.html#k_ycomma=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ycomma=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ycomma	niup.html#k_ycomma,IUPhandle_t	niup: k_ycomma(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yminus=	niup.html#k_yminus=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yminus=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yminus	niup.html#k_yminus,IUPhandle_t	niup: k_yminus(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yperiod=	niup.html#k_yperiod=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yperiod=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yperiod	niup.html#k_yperiod,IUPhandle_t	niup: k_yperiod(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yslash=	niup.html#k_yslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yslash=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yslash	niup.html#k_yslash,IUPhandle_t	niup: k_yslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ysemicolon=	niup.html#k_ysemicolon=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ysemicolon=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ysemicolon	niup.html#k_ysemicolon,IUPhandle_t	niup: k_ysemicolon(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yequal=	niup.html#k_yequal=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yequal=(control: IUPhandle_t; cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yequal	niup.html#k_yequal,IUPhandle_t	niup: k_yequal(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ybracketleft=	niup.html#k_ybracketleft=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ybracketleft=(control: IUPhandle_t;\n                cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ybracketleft	niup.html#k_ybracketleft,IUPhandle_t	niup: k_ybracketleft(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_ybracketright=	niup.html#k_ybracketright=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ybracketright=(control: IUPhandle_t;\n                 cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ybracketright	niup.html#k_ybracketright,IUPhandle_t	niup: k_ybracketright(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.\n    cdecl.}	
k_ybackslash=	niup.html#k_ybackslash=,IUPhandle_t,proc(PIhandle,cint)	niup: k_ybackslash=(control: IUPhandle_t;\n              cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_ybackslash	niup.html#k_ybackslash,IUPhandle_t	niup: k_ybackslash(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
k_yasterisk=	niup.html#k_yasterisk=,IUPhandle_t,proc(PIhandle,cint)	niup: k_yasterisk=(control: IUPhandle_t;\n             cb: proc (ih: PIhandle; c: cint): cint {.cdecl.})	
k_yasterisk	niup.html#k_yasterisk,IUPhandle_t	niup: k_yasterisk(control: IUPhandle_t): proc (ih: PIhandle; c: cint): cint {.cdecl.}	
